begin log

TOOL_EXEC_HOURS
---------------------------------------------------------------------
Tool Execution Hours so far: .098

1 row selected.


DEFINE _DATE           = "2020-11-06T11:28:08" (CHAR)
DEFINE _CONNECT_IDENTIFIER = "PRD1" (CHAR)
DEFINE _USER           = "SYS" (CHAR)
DEFINE _PRIVILEGE      = "AS SYSDBA" (CHAR)
DEFINE _SQLPLUS_RELEASE = "1201000200" (CHAR)
DEFINE _EDITOR         = "ed" (CHAR)
DEFINE _O_VERSION      = "Oracle Database 12c EE Extreme Perf Release 12.1.0.2.0 - 64bit Production
With the Partitioning, Real Application Clusters, Automatic Storage Management, Oracle Label Security,
OLAP, Advanced Analytics and Real Application Testing options" (CHAR)
DEFINE _O_RELEASE      = "1201000200" (CHAR)
DEFINE ASH_VALIDATION  = "" (CHAR)
DEFINE V_DOLLAR        = "V$" (CHAR)
DEFINE MY_SID          = "5432" (CHAR)
DEFINE LICENSE_PACK    = "T" (CHAR)
DEFINE DIAGNOSTICS_PACK = "Y" (CHAR)
DEFINE SKIP_DIAGNOSTICS = "" (CHAR)
DEFINE TUNING_PACK     = "Y" (CHAR)
DEFINE SKIP_TUNING     = "" (CHAR)
DEFINE CUSTOM_CONFIG_FILENAME = "null" (CHAR)
DEFINE EDB360_ESTIMATED_HRS = "1" (CHAR)
DEFINE ASH_DATE_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS" (CHAR)
DEFINE MY_SPOOL_FILENAME = "awr_ash_pre_check_PRD.txt" (CHAR)
DEFINE ASH_EDB360_DAYS = "31" (CHAR)
DEFINE ASH_FTS_ON_EDB360 = "250" (CHAR)
DEFINE ASH_DATABASE_BLOCK_SIZE = "8192" (CHAR)
DEFINE NUMBER_OF_INSTANCES =                    2 (NUMBER)
DEFINE THIS_DBID       =           2109323688 (NUMBER)
DEFINE ASH_MIN_SNAP_ID = "0" (CHAR)
DEFINE ASH_MAX_SNAP_ID = "0" (CHAR)
DEFINE LAST_PURGE_TIME = "2020-09-18T00:28:18" (CHAR)
DEFINE DAYS_SINCE_PURGE = "49.5" (CHAR)
DEFINE ASH_LAST_ANALYZED = "2020-09-19T06:58:17" (CHAR)
DEFINE ASH_CBO_STATS_AGE_DAYS = "48.2" (CHAR)
DEFINE PERCENT_OF_INSERTS = "" (CHAR)
DEFINE ASH_SIZE_GB     = "2.6 GBs" (CHAR)
DEFINE LAST_DDL_TIME   = "2020-09-18T21:40:39" (CHAR)
DEFINE SEG_LAST_DDL_TIME = "2020-09-18T21:40:39" (CHAR)
DEFINE LAST_DDL_AGE_DAYS = "48.6" (CHAR)
DEFINE ASH_FTS_SECONDS = "122" (CHAR)
DEFINE ASH_DAYS_OF_HISTORY = "92.8" (CHAR)
DEFINE ASH_MED_SAMPLE_DATE = "2020-07-08T03:20:17" (CHAR)
DEFINE ASH_MEDIAN_AGE_DAYS = "121.3" (CHAR)
DEFINE IGNORE_THIS     =                    0 (NUMBER)
DEFINE EDB360_FTS_SECONDS = "1" (CHAR)
DEFINE _RC             = "10" (CHAR)
DEFINE EDB360_SECTIONS = "" (CHAR)
DEFINE SQL_TRACE_LEVEL = "1" (CHAR)
DEFINE EDB360_CONF_DAYS = "31" (CHAR)
DEFINE EDB360_CONF_DATE_FROM = "YYYY-MM-DD" (CHAR)
DEFINE EDB360_CONF_DATE_TO = "YYYY-MM-DD" (CHAR)
DEFINE EDB360_CONF_WORK_TIME_FROM = "0730" (CHAR)
DEFINE EDB360_CONF_WORK_TIME_TO = "1930" (CHAR)
DEFINE EDB360_CONF_WORK_DAY_FROM = "2" (CHAR)
DEFINE EDB360_CONF_WORK_DAY_TO = "6" (CHAR)
DEFINE EDB360_CONF_MAX_HOURS = "24" (CHAR)
DEFINE EDB360_CHART_WIDTH = "809px" (CHAR)
DEFINE EDB360_CONF_INCL_DBNAME_INDEX = "N" (CHAR)
DEFINE EDB360_CONF_INCL_DBNAME_FILE = "N" (CHAR)
DEFINE EDB360_CONF_INCL_ASH_MEM = "N" (CHAR)
DEFINE EDB360_CONF_INCL_SQL_MON = "N" (CHAR)
DEFINE EDB360_CONF_INCL_STAT_MEM = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_PX_MEM = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_SEGMENTS = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_SOURCE = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_METADATA = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_EADAM = "Y" (CHAR)
DEFINE EDB360_EADAM_ROW_LIMIT = "10000000" (CHAR)
DEFINE TOOL_REPO_USER  = "" (CHAR)
DEFINE EDB360_OUTPUT_DIRECTORY = "" (CHAR)
DEFINE EDB360_MOVE_DIRECTORY = "" (CHAR)
DEFINE SKIP_ESP_AND_ESCP = "" (CHAR)
DEFINE EDB360_CONFIG_DBID = "" (CHAR)
DEFINE EDB360_HOST_NAME_SEPARATOR = "" (CHAR)
DEFINE EDB360_HOST_NAME_POSITION = "" (CHAR)
DEFINE EDB360_HOST_NAME_OCCURRENCE = "" (CHAR)
DEFINE EDB360_CONF_INCL_HTML = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_XML = "N" (CHAR)
DEFINE EDB360_CONF_INCL_TEXT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_CSV = "N" (CHAR)
DEFINE EDB360_CONF_INCL_LINE = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_PIE = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_BAR = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_PERFHUB = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_AWR_RPT = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_AWR_DIFF_RPT = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_AWR_RANGE_RPT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_ADDM_RPT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_ASH_RPT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_ASH_ANALY_RPT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_TKPROF = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_PLOT_AWR = "N" (CHAR)
DEFINE EDB360_CONF_SERIES_SELECTION = "N" (CHAR)
DEFINE EDB360_MAX_WORK_DAYS_PEAKS = "3" (CHAR)
DEFINE EDB360_MIN_WORK_DAYS_PEAKS = "1" (CHAR)
DEFINE EDB360_MAX_HISTORY_PEAKS = "3" (CHAR)
DEFINE EDB360_MED_HISTORY = "1" (CHAR)
DEFINE EDB360_MAX_5WD_PEAKS = "3" (CHAR)
DEFINE EDB360_MIN_5WD_PEAKS = "1" (CHAR)
DEFINE EDB360_MAX_7D_PEAKS = "3" (CHAR)
DEFINE EDB360_MED_7D   = "1" (CHAR)
DEFINE EDB360_CONF_TOP_SQL = "16" (CHAR)
DEFINE EDB360_CONF_TOP_CUR = "2" (CHAR)
DEFINE EDB360_CONF_TOP_SIG = "2" (CHAR)
DEFINE EDB360_CONF_PLANX_TOP = "16" (CHAR)
DEFINE EDB360_CONF_SQLMON_TOP = "0" (CHAR)
DEFINE EDB360_CONF_SQLASH_TOP = "0" (CHAR)
DEFINE EDB360_CONF_SQLHC_TOP = "0" (CHAR)
DEFINE EDB360_CONF_SQLD360_TOP = "8" (CHAR)
DEFINE EDB360_CONF_SQLD360_TOP_TC = "0" (CHAR)
DEFINE TOOL_PREFIX_1   = "dba_hist#" (CHAR)
DEFINE TOOL_PREFIX_2   = "dba#" (CHAR)
DEFINE TOOL_PREFIX_3   = "gv#" (CHAR)
DEFINE TOOL_PREFIX_4   = "v#" (CHAR)
DEFINE EDB360_CONF_TOOL_PAGE = "<a href="http://carlos-sierra.net/edb360-an-oracle-database-360-degree-view/" target="_blank">" (CHAR)
DEFINE EDB360_CONF_ALL_PAGES_ICON = "<a href="http://carlos-sierra.net/edb360-an-oracle-database-360-degree-view/" target="_blank"><img src="database.jpg" alt="eDB360" height="33" width="52" /></a>" (CHAR)
DEFINE EDB360_CONF_ALL_PAGES_LOGO = "" (CHAR)
DEFINE EDB360_CONF_GOOGLE_CHARTS = "<script type="text/javascript" src="https://www.google.com/jsapi"></script>" (CHAR)
DEFINE EDB360_VYYNN    = "v192" (CHAR)
DEFINE EDB360_VRSN     = "v192 (2019-03-23)" (CHAR)
DEFINE EDB360_COPYRIGHT = " (c) 2019" (CHAR)
DEFINE EDB360_BYPASS   = "" (CHAR)
DEFINE AWR_HIST_PREFIX = "DBA_HIST_" (CHAR)
DEFINE AWR_OBJECT_PREFIX = "dba_hist_" (CHAR)
DEFINE DVA_VIEW_PREFIX = "DBA_" (CHAR)
DEFINE DVA_OBJECT_PREFIX = "dba_" (CHAR)
DEFINE GV_VIEW_PREFIX  = "GV$" (CHAR)
DEFINE GV_OBJECT_PREFIX = "gv$" (CHAR)
DEFINE V_VIEW_PREFIX   = "V$" (CHAR)
DEFINE V_OBJECT_PREFIX = "v$" (CHAR)
DEFINE EDB360_DBID     = "2109323688" (CHAR)
DEFINE HISTORY_DAYS    = "31" (CHAR)
DEFINE EDB360_DATE_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS" (CHAR)
DEFINE EDB360_TIMESTAMP_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS.FF" (CHAR)
DEFINE EDB360_TIMESTAMP_TZ_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS.FFTZH:TZM" (CHAR)
DEFINE EDB360_DATE_FROM = "2020-10-06T11:22:16" (CHAR)
DEFINE EDB360_DATE_TO  = "2020-11-06T11:22:16" (CHAR)
DEFINE HIST_WORK_DAYS  = "23" (CHAR)
DEFINE SKIP_EXTRAS     = "" (CHAR)
DEFINE EDB360_0G       = "edb360_0g_" (CHAR)
DEFINE EDB360_1A       = "edb360_1a_" (CHAR)
DEFINE EDB360_1B       = "edb360_1b_" (CHAR)
DEFINE EDB360_1C       = "edb360_1c_" (CHAR)
DEFINE EDB360_1D       = "edb360_1d_" (CHAR)
DEFINE EDB360_1E       = "edb360_1e_" (CHAR)
DEFINE EDB360_1F       = "edb360_1f_" (CHAR)
DEFINE EDB360_1G       = "edb360_1g_" (CHAR)
DEFINE EDB360_2A       = "edb360_2a_" (CHAR)
DEFINE EDB360_2B       = "edb360_2b_" (CHAR)
DEFINE EDB360_2C       = "edb360_2c_" (CHAR)
DEFINE EDB360_2D       = "edb360_2d_" (CHAR)
DEFINE EDB360_2E       = "edb360_2e_" (CHAR)
DEFINE EDB360_3A       = "edb360_3a_" (CHAR)
DEFINE EDB360_3B       = "edb360_3b_" (CHAR)
DEFINE EDB360_3C       = "edb360_3c_" (CHAR)
DEFINE EDB360_3D       = "edb360_3d_" (CHAR)
DEFINE EDB360_3E       = "edb360_3e_" (CHAR)
DEFINE EDB360_3F       = "edb360_3f_" (CHAR)
DEFINE EDB360_3G       = "edb360_3g_" (CHAR)
DEFINE EDB360_3H       = "edb360_3h_" (CHAR)
DEFINE EDB360_3I       = "edb360_3i_" (CHAR)
DEFINE EDB360_3J       = "edb360_3j_" (CHAR)
DEFINE EDB360_4A       = "edb360_4a_" (CHAR)
DEFINE EDB360_4B       = "edb360_4b_" (CHAR)
DEFINE EDB360_4C       = "edb360_4c_" (CHAR)
DEFINE EDB360_4D       = "edb360_4d_" (CHAR)
DEFINE EDB360_4E       = "edb360_4e_" (CHAR)
DEFINE EDB360_4F       = "edb360_4f_" (CHAR)
DEFINE EDB360_4G       = "edb360_4g_" (CHAR)
DEFINE EDB360_4H       = "edb360_4h_" (CHAR)
DEFINE EDB360_4I       = "edb360_4i_" (CHAR)
DEFINE EDB360_4J       = "edb360_4j_" (CHAR)
DEFINE EDB360_4K       = "edb360_4k_" (CHAR)
DEFINE EDB360_4L       = "edb360_4l_" (CHAR)
DEFINE EDB360_5A       = "edb360_5a_" (CHAR)
DEFINE EDB360_5B       = "edb360_5b_" (CHAR)
DEFINE EDB360_5C       = "edb360_5c_" (CHAR)
DEFINE EDB360_5D       = "edb360_5d_" (CHAR)
DEFINE EDB360_5E       = "edb360_5e_" (CHAR)
DEFINE EDB360_5F       = "edb360_5f_" (CHAR)
DEFINE EDB360_5G       = "edb360_5g_" (CHAR)
DEFINE EDB360_6A       = "edb360_6a_" (CHAR)
DEFINE EDB360_6B       = "edb360_6b_" (CHAR)
DEFINE EDB360_6C       = "edb360_6c_" (CHAR)
DEFINE EDB360_6D       = "edb360_6d_" (CHAR)
DEFINE EDB360_6E       = "edb360_6e_" (CHAR)
DEFINE EDB360_6F       = "edb360_6f_" (CHAR)
DEFINE EDB360_6G       = "edb360_6g_" (CHAR)
DEFINE EDB360_6H       = "edb360_6h_" (CHAR)
DEFINE EDB360_6I       = "edb360_6i_" (CHAR)
DEFINE EDB360_6J       = "edb360_6j_" (CHAR)
DEFINE EDB360_6K       = "edb360_6k_" (CHAR)
DEFINE EDB360_6L       = "edb360_6l_" (CHAR)
DEFINE EDB360_6M       = "edb360_6m_" (CHAR)
DEFINE EDB360_6N       = "edb360_6n_" (CHAR)
DEFINE EDB360_7A       = "edb360_7a_" (CHAR)
DEFINE EDB360_7B       = "edb360_7b_" (CHAR)
DEFINE EDB360_7C       = "edb360_7c_" (CHAR)
DEFINE EDB360_PREFIX   = "edb360" (CHAR)
DEFINE ECR_COLLECTION_KEY = "PRD1219183590" (CHAR)
DEFINE SKIP_SCRIPT     = "sql/edb360_0f_skip_script.sql " (CHAR)
DEFINE EDB360_CON_ID   = "4" (CHAR)
DEFINE EDB360_PDB_NAME = "FRSTPROD" (CHAR)
DEFINE EDB360_DBMOD    = "323688" (CHAR)
DEFINE CONNECT_INSTANCE_NUMBER = "1" (CHAR)
DEFINE DATABASE_NAME_SHORT = "prd" (CHAR)
DEFINE HOST_NAME_SHORT = "aupp-hroradb-f9exx1" (CHAR)
DEFINE HOST_NAME_SUFFIX = "" (CHAR)
DEFINE ESP_HOST_NAME_SHORT = "aupp-hroradb-f9exx1" (CHAR)
DEFINE HOST_HASH       = "742967" (CHAR)
DEFINE ESP_COLLECTION_YYYYMMDD = "20201106" (CHAR)
DEFINE MAIN_TABLE      = "" (CHAR)
DEFINE TITLE           = "" (CHAR)
DEFINE TITLE_NO_SPACES = "" (CHAR)
DEFINE TITLE_SUFFIX    = "" (CHAR)
DEFINE EDB360_FILE_TIME = "20201106_1122" (CHAR)
DEFINE COMMON_EDB360_PREFIX = "edb360_323688" (CHAR)
DEFINE EDB360_MAIN_REPORT = "00001_edb360_323688_index" (CHAR)
DEFINE EDB360_LOG      = "00002_edb360_323688_log" (CHAR)
DEFINE EDB360_LOG2     = "00003_edb360_323688_log2" (CHAR)
DEFINE EDB360_LOG3     = "00004_edb360_323688_log3" (CHAR)
DEFINE EDB360_TKPROF   = "00005_edb360_323688_tkprof" (CHAR)
DEFINE EDB360_MAIN_FILENAME = "edb360_323688_742967" (CHAR)
DEFINE EDB360_ZIP_FILENAME = "edb360_323688_742967_20201106_1122" (CHAR)
DEFINE EDB360_TRACEFILE_IDENTIFIER = "edb360_323688" (CHAR)
DEFINE EDB360_TAR_FILENAME = "00008_edb360_323688_742967_20201106_1122" (CHAR)
DEFINE EDB360_MV_HOST_COMMAND = "" (CHAR)
DEFINE DB_VERS_OFE     = "12.1.0.2" (CHAR)
DEFINE SKIP_AWR        = "" (CHAR)
DEFINE SKIP_STATSPACK  = "--skip--" (CHAR)
DEFINE ESP_DBNAME_SHORT = "prd" (CHAR)
DEFINE ESCP_MAX_DAYS   = "365" (CHAR)
DEFINE ESCP_DATE_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS" (CHAR)
DEFINE ESCP_HOST_NAME_SHORT = "aupp-hroradb-f9exx1" (CHAR)
DEFINE ESCP_DBNAME_SHORT = "prd" (CHAR)
DEFINE ESCP_COLLECTION_YYYYMMDD_HHMI = "20201106_1122" (CHAR)
DEFINE ESCP_COLLECTION_DAYS = "8" (CHAR)
DEFINE ESCP_THIS_DBID  = "2109323688" (CHAR)
DEFINE ESCP_THIS_INST_NUM = "1" (CHAR)
DEFINE ESCP_MIN_SNAP_ID = "4578" (CHAR)
DEFINE MAX_DAYS        = "365" (CHAR)
DEFINE INCLUDE_IC      = "Y" (CHAR)
DEFINE INCLUDE_NETW    = "Y" (CHAR)
DEFINE ESP_COLLECTION_YYYYMMDD_HHMI = "20201106_1128" (CHAR)
DEFINE COLLECTION_DAYS = "8" (CHAR)
DEFINE SKIP_ON_10G     = "" (CHAR)
DEFINE ECR_SQ_FACT_HINTS = "MATERIALIZE NO_MERGE" (CHAR)
DEFINE ECR_DATE_FORMAT = "YYYY-MM-DD/HH24:MI:SS" (CHAR)
DEFINE ECR_DBID        = "2109323688" (CHAR)
DEFINE ECR_INSTANCE_NUMBER = "1" (CHAR)
DEFINE ECR_MIN_SNAP_ID = "4578" (CHAR)
DEFINE ECR_COLLECTION_HOST = "aupp-hroradb-f9exx1" (CHAR)
DEFINE USE_ON_10G      = "--" (CHAR)
DEFINE DB_VERSION      = "12.1.0.2.0" (CHAR)
DEFINE SKIP_10G_COLUMN = "" (CHAR)
DEFINE SKIP_10G_SCRIPT = "" (CHAR)
DEFINE SKIP_11G_COLUMN = "" (CHAR)
DEFINE SKIP_11G_SCRIPT = "" (CHAR)
DEFINE SKIP_11R1_COLUMN = "" (CHAR)
DEFINE SKIP_11R1_SCRIPT = "" (CHAR)
DEFINE SKIP_NON_REPO_COLUMN = "" (CHAR)
DEFINE SKIP_NON_REPO_SCRIPT = "" (CHAR)
DEFINE SKIP_12C_COLUMN = " -- skip 12c " (CHAR)
DEFINE SKIP_12C_SCRIPT = " echo skip 12c " (CHAR)
DEFINE SKIP_12R2_COLUMN = "" (CHAR)
DEFINE SKIP_12R2_SCRIPT = "" (CHAR)
DEFINE SKIP_18C_COLUMN = "" (CHAR)
DEFINE SKIP_18C_SCRIPT = "" (CHAR)
DEFINE SKIP_19C_COLUMN = "" (CHAR)
DEFINE SKIP_19C_SCRIPT = "" (CHAR)
DEFINE AVG_CPU_COUNT   = "16" (CHAR)
DEFINE SUM_CPU_COUNT   = "32" (CHAR)
DEFINE AVG_CORE_COUNT  = "16" (CHAR)
DEFINE AVG_THREAD_COUNT = "16" (CHAR)
DEFINE CPU_LOAD_THRESHOLD = "32" (CHAR)
DEFINE HOSTS_COUNT     = "2" (CHAR)
DEFINE CORES_THREADS_HOSTS = "cores:16(avg) threads:16(avg) hosts:2(avg)" (CHAR)
DEFINE DATABASE_BLOCK_SIZE = "8192" (CHAR)
DEFINE TOOL_SYSDATE    = "20201106112807" (CHAR)
DEFINE BETWEEN_DATES   = ", between 2020-10-06T11:22:16 and 2020-11-06T11:22:16" (CHAR)
DEFINE MINIMUM_SNAP_ID = "3473" (CHAR)
DEFINE MAXIMUM_SNAP_ID = "4962" (CHAR)
DEFINE INST1_PRESENT   = "1" (CHAR)
DEFINE INST2_PRESENT   = "2" (CHAR)
DEFINE INST3_PRESENT   = "" (CHAR)
DEFINE INST4_PRESENT   = "" (CHAR)
DEFINE INST5_PRESENT   = "" (CHAR)
DEFINE INST6_PRESENT   = "" (CHAR)
DEFINE INST7_PRESENT   = "" (CHAR)
DEFINE INST8_PRESENT   = "" (CHAR)
DEFINE IS_SINGLE_INSTANCE = "" (CHAR)
DEFINE SKIP_INST1      = "" (CHAR)
DEFINE SKIP_INST2      = "" (CHAR)
DEFINE SKIP_INST3      = "-- skip inst3" (CHAR)
DEFINE SKIP_INST4      = "-- skip inst4" (CHAR)
DEFINE SKIP_INST5      = "-- skip inst5" (CHAR)
DEFINE SKIP_INST6      = "-- skip inst6" (CHAR)
DEFINE SKIP_INST7      = "-- skip inst7" (CHAR)
DEFINE SKIP_INST8      = "-- skip inst8" (CHAR)
DEFINE CHART_SETUP_DRIVER = "99800_edb360_323688_chart_setup_driver1.sql" (CHAR)
DEFINE EDB360_EADAM_SNAPS = "-666" (CHAR)
DEFINE EBS_RELEASE     = "" (CHAR)
DEFINE EBS_SYSTEM_NAME = "" (CHAR)
DEFINE SIEBEL_SCHEMA   = "NOT_A_SIEBEL_DB" (CHAR)
DEFINE SIEBEL_APP_VER  = "" (CHAR)
DEFINE PSFT_SCHEMA     = "NOT_A_PSFT_DB" (CHAR)
DEFINE PSFT_TOOLS_REL  = "" (CHAR)
DEFINE EDB360_SKIP_HTML = "" (CHAR)
DEFINE EDB360_SKIP_XML = " echo skip xml " (CHAR)
DEFINE EDB360_SKIP_TEXT = " echo skip text " (CHAR)
DEFINE EDB360_SKIP_CSV = " echo skip csv " (CHAR)
DEFINE EDB360_SKIP_LINE = "" (CHAR)
DEFINE EDB360_SKIP_PIE = "" (CHAR)
DEFINE EDB360_SKIP_BAR = "" (CHAR)
DEFINE EDB360_SKIP_METADATA = "" (CHAR)
DEFINE EDB360_SKIP_ASH_MEM = " echo skip ash mem " (CHAR)
DEFINE EDB360_SKIP_SQL_MON = " echo skip sql mon " (CHAR)
DEFINE EDB360_SKIP_STAT_MEM = "" (CHAR)
DEFINE EDB360_SKIP_PX_MEM = "" (CHAR)
DEFINE TOP_LEVEL_HINTS = " NO_MERGE " (CHAR)
DEFINE SQ_FACT_HINTS   = " MATERIALIZE NO_MERGE " (CHAR)
DEFINE DS_HINT         = " DYNAMIC_SAMPLING(4) " (CHAR)
DEFINE ASH_HINTS1      = " FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt) " (CHAR)
DEFINE ASH_HINTS2      = " FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt) " (CHAR)
DEFINE ASH_HINTS3      = " USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt) " (CHAR)
DEFINE DEF_MAX_ROWS    = "10000" (CHAR)
DEFINE MAX_ROWS        = "1e4" (CHAR)
DEFINE EXCLUSION_LIST  = "('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','ORDSYS','OUTLN','OWBSYS')" (CHAR)
DEFINE EXCLUSION_LIST2 = "('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')" (CHAR)
DEFINE SKIP_HTML       = "" (CHAR)
DEFINE SKIP_TEXT       = "" (CHAR)
DEFINE SKIP_CSV        = "" (CHAR)
DEFINE SKIP_LCH        = "Y" (CHAR)
DEFINE SKIP_LCH2       = "Y" (CHAR)
DEFINE SKIP_PCH        = "Y" (CHAR)
DEFINE SKIP_BCH        = "Y" (CHAR)
DEFINE SKIP_ALL        = "" (CHAR)
DEFINE ABSTRACT        = "" (CHAR)
DEFINE ABSTRACT2       = "" (CHAR)
DEFINE FOOT            = "" (CHAR)
DEFINE ABSTRACT_UOM    = "Memory is accounted as power of two (binary) while storage and network traffic as power of ten (decimal). <br />" (CHAR)
DEFINE CHARTYPE        = "" (CHAR)
DEFINE STACKED         = "" (CHAR)
DEFINE HAXIS           = " 12.1.0.2.0 cores:16(avg) threads:16(avg) hosts:2(avg)" (CHAR)
DEFINE VAXIS           = "" (CHAR)
DEFINE VBASELINE       = "" (CHAR)
DEFINE BAR_HEIGHT      = "65%" (CHAR)
DEFINE TIT_01          = "" (CHAR)
DEFINE TIT_02          = "" (CHAR)
DEFINE TIT_03          = "" (CHAR)
DEFINE TIT_04          = "" (CHAR)
DEFINE TIT_05          = "" (CHAR)
DEFINE TIT_06          = "" (CHAR)
DEFINE TIT_07          = "" (CHAR)
DEFINE TIT_08          = "" (CHAR)
DEFINE TIT_09          = "" (CHAR)
DEFINE TIT_10          = "" (CHAR)
DEFINE TIT_11          = "" (CHAR)
DEFINE TIT_12          = "" (CHAR)
DEFINE TIT_13          = "" (CHAR)
DEFINE TIT_14          = "" (CHAR)
DEFINE TIT_15          = "" (CHAR)
DEFINE CONT_01         = "-1" (CHAR)
DEFINE CONT_02         = "-1" (CHAR)
DEFINE CONT_03         = "-1" (CHAR)
DEFINE CONT_04         = "-1" (CHAR)
DEFINE CONT_05         = "-1" (CHAR)
DEFINE CONT_06         = "-1" (CHAR)
DEFINE CONT_07         = "-1" (CHAR)
DEFINE CONT_08         = "-1" (CHAR)
DEFINE CONT_09         = "-1" (CHAR)
DEFINE CONT_10         = "-1" (CHAR)
DEFINE CONT_11         = "-1" (CHAR)
DEFINE CONT_12         = "-1" (CHAR)
DEFINE CONT_13         = "-1" (CHAR)
DEFINE CONT_14         = "-1" (CHAR)
DEFINE CONT_15         = "-1" (CHAR)
DEFINE WAIT_CLASS_01   = "" (CHAR)
DEFINE EVENT_NAME_01   = "" (CHAR)
DEFINE WAIT_CLASS_02   = "" (CHAR)
DEFINE EVENT_NAME_02   = "" (CHAR)
DEFINE WAIT_CLASS_03   = "" (CHAR)
DEFINE EVENT_NAME_03   = "" (CHAR)
DEFINE WAIT_CLASS_04   = "" (CHAR)
DEFINE EVENT_NAME_04   = "" (CHAR)
DEFINE WAIT_CLASS_05   = "" (CHAR)
DEFINE EVENT_NAME_05   = "" (CHAR)
DEFINE WAIT_CLASS_06   = "" (CHAR)
DEFINE EVENT_NAME_06   = "" (CHAR)
DEFINE WAIT_CLASS_07   = "" (CHAR)
DEFINE EVENT_NAME_07   = "" (CHAR)
DEFINE WAIT_CLASS_08   = "" (CHAR)
DEFINE EVENT_NAME_08   = "" (CHAR)
DEFINE WAIT_CLASS_09   = "" (CHAR)
DEFINE EVENT_NAME_09   = "" (CHAR)
DEFINE WAIT_CLASS_10   = "" (CHAR)
DEFINE EVENT_NAME_10   = "" (CHAR)
DEFINE WAIT_CLASS_11   = "" (CHAR)
DEFINE EVENT_NAME_11   = "" (CHAR)
DEFINE WAIT_CLASS_12   = "" (CHAR)
DEFINE EVENT_NAME_12   = "" (CHAR)
DEFINE EXADATA         = "" (CHAR)
DEFINE MAX_COL_NUMBER  = "1" (CHAR)
DEFINE COLUMN_NUMBER   = "1" (CHAR)
DEFINE RECOVERY        = "& recovery" (CHAR)
DEFINE TOTAL_HOURS     = "" (CHAR)
DEFINE EDB360_TIME_STAMP = "2020-11-06T11:28:08" (CHAR)
DEFINE REPORT_SEQUENCE = "1" (CHAR)
DEFINE CURRENT_TIME    = "" (CHAR)
DEFINE EXACT_MATCHING_SIGNATURE = "" (CHAR)
DEFINE FORCE_MATCHING_SIGNATURE = "" (CHAR)
DEFINE WAIT_CLASS_COLORS = " CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' THEN '0252D7' WHEN 'System I/O' THEN '1E96DD' " (CHAR)
DEFINE WAIT_CLASS_COLORS2 = " WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05' WHEN 'Configuration' THEN '594611'  " (CHAR)
DEFINE WAIT_CLASS_COLORS3 = " WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0' " (CHAR)
DEFINE WAIT_CLASS_COLORS4 = " WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END " (CHAR)
DEFINE SERIES_01       = "" (CHAR)
DEFINE SERIES_02       = "" (CHAR)
DEFINE SERIES_03       = "" (CHAR)
DEFINE SERIES_04       = "" (CHAR)
DEFINE SERIES_05       = "" (CHAR)
DEFINE SERIES_06       = "" (CHAR)
DEFINE SERIES_07       = "" (CHAR)
DEFINE SERIES_08       = "" (CHAR)
DEFINE SERIES_09       = "" (CHAR)
DEFINE SERIES_10       = "" (CHAR)
DEFINE SERIES_11       = "" (CHAR)
DEFINE SERIES_12       = "" (CHAR)
DEFINE SERIES_13       = "" (CHAR)
DEFINE SERIES_14       = "" (CHAR)
DEFINE SERIES_15       = "" (CHAR)
DEFINE SKIP_LCHP       = "--skip--" (CHAR)
DEFINE EDB360_UDUMP_PATH = "/u02/app/oracle/diag/rdbms/prd_iad3vt/PRD1/trace/" (CHAR)
DEFINE EDB360_SPID     = "274417" (CHAR)
Parameters
old   2:   FROM &&v_object_prefix.spparameter
new   2:   FROM v$spparameter
FAMILY                                                                           SID                                      NAME                                     TYPE        VALUE                                              DISPLAY_VALUE                                      ISSPEC              ORDINAL               CON_ID
-------------------------------------------------------------------------------- ---------------------------------------- ---------------------------------------- ----------- -------------------------------------------------- -------------------------------------------------- ------ -------------------- --------------------
                                                                                 *                                        cursor_sharing                           string      FORCE                                              FORCE                                              TRUE                      1                    4
                                                                                 *                                        nls_date_format                          string      MM/DD/YYYY HH24:MI                                 MM/DD/YYYY HH24:MI                                 TRUE                      1                    4
                                                                                 *                                        open_cursors                             integer     65535                                              65535                                              TRUE                      1                    4
                                                                                 *                                        optimizer_index_caching                  integer     90                                                 90                                                 TRUE                      1                    4
                                                                                 *                                        optimizer_index_cost_adj                 integer     1                                                  1                                                  TRUE                      1                    4
                                                                                 *                                        parallel_force_local                     boolean     TRUE                                               TRUE                                               TRUE                      1                    4
                                                                                 *                                        sessions                                 integer     3096                                               3096                                               TRUE                      1                    4
                                                                                 *                                        smtp_out_server                          string      192.168.121.140:25                                 192.168.121.140:25                                 TRUE                      1                    4

8 rows selected.

NAME_COL_PLUS_SHOW_PARAM                                                         TYPE        VALUE_COL_PLUS_SHOW_PARAM
-------------------------------------------------------------------------------- ----------- ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DBFIPS_140                                                                       boolean     FALSE
O7_DICTIONARY_ACCESSIBILITY                                                      boolean     FALSE
_always_semi_join                                                                string      CHOOSE
_and_pruning_enabled                                                             boolean     TRUE
_bct_public_dba_buffer_size                                                      big integer 16777200
_enable_NUMA_support                                                             boolean     FALSE
_gby_hash_aggregation_enabled                                                    boolean     FALSE
_hash_join_enabled                                                               boolean     TRUE
_optim_peek_user_binds                                                           boolean     TRUE
_optimizer_aggr_groupby_elim                                                     boolean     FALSE
_optimizer_dsdir_usage_control                                                   integer     0
_optimizer_order_by_elimination_enabled                                          boolean     FALSE
_optimizer_skip_scan_enabled                                                     boolean     TRUE
_optimizer_sortmerge_join_enabled                                                boolean     TRUE
_parallel_adaptive_max_users                                                     integer     2
_serial_direct_read                                                              string      ALWAYS
_small_table_threshold                                                           integer     1001
_smm_auto_max_io_size                                                            integer     1024
_sql_plan_directive_mgmt_control                                                 integer     0
_subquery_pruning_enabled                                                        boolean     TRUE
active_instance_count                                                            integer
allow_group_access_to_sga                                                        boolean     FALSE
aq_tm_processes                                                                  integer     1
archive_lag_target                                                               integer     0
asm_diskgroups                                                                   string
asm_diskstring                                                                   string
asm_power_limit                                                                  integer     1
asm_preferred_read_failure_groups                                                string
audit_file_dest                                                                  string      /u02/app/oracle/product/12.1.0/dbhome_3/rdbms/audit
audit_sys_operations                                                             boolean     TRUE
audit_syslog_level                                                               string
audit_trail                                                                      string      DB
awr_snapshot_time_offset                                                         integer     0
background_core_dump                                                             string      partial
background_dump_dest                                                             string      /u02/app/oracle/product/12.1.0/dbhome_3/rdbms/log
backup_tape_io_slaves                                                            boolean     FALSE
bitmap_merge_area_size                                                           integer     1048576
blank_trimming                                                                   boolean     FALSE
buffer_pool_keep                                                                 string
buffer_pool_recycle                                                              string
cell_offload_compaction                                                          string      ADAPTIVE
cell_offload_decryption                                                          boolean     TRUE
cell_offload_parameters                                                          string
cell_offload_plan_display                                                        string      AUTO
cell_offload_processing                                                          boolean     TRUE
cell_offloadgroup_name                                                           string
circuits                                                                         integer
client_result_cache_lag                                                          big integer 3000
client_result_cache_size                                                         big integer 0
clonedb                                                                          boolean     FALSE
cluster_database                                                                 boolean     TRUE
cluster_database_instances                                                       integer     2
cluster_interconnects                                                            string      192.168.132.26:192.168.132.27
commit_logging                                                                   string
commit_point_strength                                                            integer     1
commit_wait                                                                      string
commit_write                                                                     string
common_user_prefix                                                               string      C##
compatible                                                                       string      12.1.0.2.0
connection_brokers                                                               string      ((TYPE=DEDICATED)(BROKERS=1)), ((TYPE=EMON)(BROKERS=1))
control_file_record_keep_time                                                    integer     39
control_files                                                                    string      +DATAC1/PRD_iad3vt/CONTROLFILE/control.ctl
control_management_pack_access                                                   string      DIAGNOSTIC+TUNING
core_dump_dest                                                                   string      /u02/app/oracle/diag/rdbms/prd_iad3vt/PRD1/cdump
cpu_count                                                                        integer     16
create_bitmap_area_size                                                          integer     8388608
create_stored_outlines                                                           string
cursor_bind_capture_destination                                                  string      memory+disk
cursor_sharing                                                                   string      EXACT
cursor_space_for_time                                                            boolean     FALSE
db_16k_cache_size                                                                big integer 0
db_2k_cache_size                                                                 big integer 0
db_32k_cache_size                                                                big integer 0
db_4k_cache_size                                                                 big integer 0
db_8k_cache_size                                                                 big integer 0
db_big_table_cache_percent_target                                                string      0
db_block_buffers                                                                 integer     0
db_block_checking                                                                string      OFF
db_block_checksum                                                                string      TYPICAL
db_block_size                                                                    integer     8192
db_cache_advice                                                                  string      ON
db_cache_size                                                                    big integer 0
db_create_file_dest                                                              string      +DATAC1
db_create_online_log_dest_1                                                      string      +DATAC1
db_create_online_log_dest_2                                                      string
db_create_online_log_dest_3                                                      string
db_create_online_log_dest_4                                                      string
db_create_online_log_dest_5                                                      string
db_domain                                                                        string
db_file_multiblock_read_count                                                    integer     128
db_file_name_convert                                                             string      +DATAC1/PRD_PHX2XR, +DATAC1/PRD_IAD3VT
db_files                                                                         integer     1024
db_flash_cache_file                                                              string
db_flash_cache_size                                                              big integer 0
db_flashback_retention_target                                                    integer     1440
db_index_compression_inheritance                                                 string      NONE
db_keep_cache_size                                                               big integer 0
db_lost_write_protect                                                            string      typical
db_name                                                                          string      PRD
db_performance_profile                                                           string
db_recovery_file_dest                                                            string      +RECOC1
db_recovery_file_dest_size                                                       big integer 28910G
db_recycle_cache_size                                                            big integer 0
db_securefile                                                                    string      PREFERRED
db_ultra_safe                                                                    string      OFF
db_unique_name                                                                   string      PRD_iad3vt
db_unrecoverable_scn_tracking                                                    boolean     TRUE
db_writer_processes                                                              integer     2
dbwr_io_slaves                                                                   integer     0
ddl_lock_timeout                                                                 integer     0
deferred_segment_creation                                                        boolean     TRUE
dg_broker_config_file1                                                           string      +DATAC1/PRD_IAD3VT/DGCONFIG/dr1prd.dat
dg_broker_config_file2                                                           string      +DATAC1/PRD_IAD3VT/DGCONFIG/dr2prd.dat
dg_broker_start                                                                  boolean     FALSE
diagnostic_dest                                                                  string      /u02/app/oracle
disk_asynch_io                                                                   boolean     TRUE
dispatchers                                                                      string
distributed_lock_timeout                                                         integer     360
dml_locks                                                                        integer     27172
dnfs_batch_size                                                                  integer     4096
dst_upgrade_insert_conv                                                          boolean     TRUE
enable_ddl_logging                                                               boolean     TRUE
enable_goldengate_replication                                                    boolean     FALSE
enable_pluggable_database                                                        boolean     TRUE
encrypt_new_tablespaces                                                          string      ALWAYS
event                                                                            string
exafusion_enabled                                                                integer     0
exclude_seed_cdb_view                                                            boolean     TRUE
fal_client                                                                       string      PRDPRIM
fal_server                                                                       string      PSDSTBY
fast_start_io_target                                                             integer     0
fast_start_mttr_target                                                           integer     300
fast_start_parallel_rollback                                                     string      LOW
file_mapping                                                                     boolean     FALSE
fileio_network_adapters                                                          string
filesystemio_options                                                             string      setall
fixed_date                                                                       string
gcs_server_processes                                                             integer     2
global_context_pool_size                                                         string
global_names                                                                     boolean     TRUE
global_txn_processes                                                             integer     1
hash_area_size                                                                   integer     131072
heat_map                                                                         string      OFF
hi_shared_memory_address                                                         integer     0
hs_autoregister                                                                  boolean     TRUE
ifile                                                                            file
inmemory_clause_default                                                          string
inmemory_force                                                                   string      DEFAULT
inmemory_max_populate_servers                                                    integer     8
inmemory_query                                                                   string      ENABLE
inmemory_size                                                                    big integer 1536M
inmemory_trickle_repopulate_servers_percent                                      integer     1
instance_groups                                                                  string
instance_name                                                                    string      PRD1
instance_number                                                                  integer     1
instance_type                                                                    string      RDBMS
instant_restore                                                                  boolean     FALSE
java_jit_enabled                                                                 boolean     TRUE
java_max_sessionspace_size                                                       integer     0
java_pool_size                                                                   big integer 0
java_restrict                                                                    string      none
java_soft_sessionspace_limit                                                     integer     0
job_queue_processes                                                              integer     1000
large_pool_size                                                                  big integer 0
ldap_directory_access                                                            string      NONE
ldap_directory_sysauth                                                           string      no
license_max_sessions                                                             integer     0
license_max_users                                                                integer     0
license_sessions_warning                                                         integer     0
listener_networks                                                                string
local_listener                                                                   string       (ADDRESS=(PROTOCOL=TCP)(HOST=10.21.32.4)(PORT=1521)), (ADDRESS=(PROTOCOL=TCPS)(HOST=10.21.32.4)(PORT=2484))
lock_name_space                                                                  string
lock_sga                                                                         boolean     FALSE
log_archive_config                                                               string      DG_CONFIG=(PRD_IAD3VT,PRD_PHX2XR,CLSTD_UNIQ)
log_archive_dest                                                                 string
log_archive_dest_1                                                               string      location=USE_DB_RECOVERY_FILE_DEST
log_archive_dest_10                                                              string
log_archive_dest_11                                                              string
log_archive_dest_12                                                              string
log_archive_dest_13                                                              string
log_archive_dest_14                                                              string
log_archive_dest_15                                                              string
log_archive_dest_16                                                              string
log_archive_dest_17                                                              string
log_archive_dest_18                                                              string
log_archive_dest_19                                                              string
log_archive_dest_2                                                               string      SERVICE=PSDSTBY LGWR ASYNC REGISTER VALID_FOR=(online_logfile,primary_role) REOPEN=60 DB_UNIQUE_NAME=PRD_PHX2XR
log_archive_dest_20                                                              string
log_archive_dest_21                                                              string
log_archive_dest_22                                                              string
log_archive_dest_23                                                              string
log_archive_dest_24                                                              string
log_archive_dest_25                                                              string
log_archive_dest_26                                                              string
log_archive_dest_27                                                              string
log_archive_dest_28                                                              string
log_archive_dest_29                                                              string
log_archive_dest_3                                                               string      SERVICE=CLSTD ARCH DB_UNIQUE_NAME=CLSTD_UNIQ
log_archive_dest_30                                                              string
log_archive_dest_31                                                              string
log_archive_dest_4                                                               string
log_archive_dest_5                                                               string
log_archive_dest_6                                                               string
log_archive_dest_7                                                               string
log_archive_dest_8                                                               string
log_archive_dest_9                                                               string
log_archive_dest_state_1                                                         string      enable
log_archive_dest_state_10                                                        string      enable
log_archive_dest_state_11                                                        string      enable
log_archive_dest_state_12                                                        string      enable
log_archive_dest_state_13                                                        string      enable
log_archive_dest_state_14                                                        string      enable
log_archive_dest_state_15                                                        string      enable
log_archive_dest_state_16                                                        string      enable
log_archive_dest_state_17                                                        string      enable
log_archive_dest_state_18                                                        string      enable
log_archive_dest_state_19                                                        string      enable
log_archive_dest_state_2                                                         string      ENABLE
log_archive_dest_state_20                                                        string      enable
log_archive_dest_state_21                                                        string      enable
log_archive_dest_state_22                                                        string      enable
log_archive_dest_state_23                                                        string      enable
log_archive_dest_state_24                                                        string      enable
log_archive_dest_state_25                                                        string      enable
log_archive_dest_state_26                                                        string      enable
log_archive_dest_state_27                                                        string      enable
log_archive_dest_state_28                                                        string      enable
log_archive_dest_state_29                                                        string      enable
log_archive_dest_state_3                                                         string      enable
log_archive_dest_state_30                                                        string      enable
log_archive_dest_state_31                                                        string      enable
log_archive_dest_state_4                                                         string      enable
log_archive_dest_state_5                                                         string      enable
log_archive_dest_state_6                                                         string      enable
log_archive_dest_state_7                                                         string      enable
log_archive_dest_state_8                                                         string      enable
log_archive_dest_state_9                                                         string      enable
log_archive_duplex_dest                                                          string
log_archive_format                                                               string      %t_%s_%r.dbf
log_archive_max_processes                                                        integer     4
log_archive_min_succeed_dest                                                     integer     1
log_archive_start                                                                boolean     TRUE
log_archive_trace                                                                integer     8191
log_buffer                                                                       big integer 64M
log_checkpoint_interval                                                          integer     0
log_checkpoint_timeout                                                           integer     1800
log_checkpoints_to_alert                                                         boolean     FALSE
log_file_name_convert                                                            string      +DATAC1/PRD_PHX2XR, +DATAC1/PRD_IAD3VT
max_dispatchers                                                                  integer
max_dump_file_size                                                               string      1G
max_enabled_roles                                                                integer     150
max_shared_servers                                                               integer
max_string_size                                                                  string      STANDARD
memory_max_target                                                                big integer 0
memory_target                                                                    big integer 0
nls_calendar                                                                     string
nls_comp                                                                         string      BINARY
nls_currency                                                                     string
nls_date_format                                                                  string      YYYY-MM-DD"T"HH24:MI:SS
nls_date_language                                                                string
nls_dual_currency                                                                string
nls_iso_currency                                                                 string
nls_language                                                                     string      AMERICAN
nls_length_semantics                                                             string      BYTE
nls_nchar_conv_excp                                                              string      FALSE
nls_numeric_characters                                                           string      .,
nls_sort                                                                         string      BINARY
nls_territory                                                                    string      AMERICA
nls_time_format                                                                  string
nls_time_tz_format                                                               string
nls_timestamp_format                                                             string      YYYY-MM-DD"T"HH24:MI:SS.FF
nls_timestamp_tz_format                                                          string      YYYY-MM-DD"T"HH24:MI:SS.FFTZH:TZM
noncdb_compatible                                                                boolean     FALSE
object_cache_max_size_percent                                                    integer     10
object_cache_optimal_size                                                        integer     102400
olap_page_pool_size                                                              big integer 0
open_cursors                                                                     integer     65535
open_links                                                                       integer     4
open_links_per_instance                                                          integer     4
optimizer_adaptive_features                                                      boolean     TRUE
optimizer_adaptive_plans                                                         boolean     TRUE
optimizer_adaptive_reporting_only                                                boolean     FALSE
optimizer_adaptive_statistics                                                    boolean     TRUE
optimizer_capture_sql_plan_baselines                                             boolean     FALSE
optimizer_dynamic_sampling                                                       integer     0
optimizer_features_enable                                                        string      12.1.0.2
optimizer_index_caching                                                          integer     0
optimizer_index_cost_adj                                                         integer     100
optimizer_inmemory_aware                                                         boolean     TRUE
optimizer_mode                                                                   string      ALL_ROWS
optimizer_secure_view_merging                                                    boolean     TRUE
optimizer_use_invisible_indexes                                                  boolean     FALSE
optimizer_use_pending_statistics                                                 boolean     FALSE
optimizer_use_sql_plan_baselines                                                 boolean     TRUE
os_authent_prefix                                                                string
os_roles                                                                         boolean     FALSE
parallel_adaptive_multi_user                                                     boolean     FALSE
parallel_automatic_tuning                                                        boolean     FALSE
parallel_degree_level                                                            integer     100
parallel_degree_limit                                                            string      CPU
parallel_degree_policy                                                           string      MANUAL
parallel_execution_message_size                                                  integer     16384
parallel_force_local                                                             boolean     TRUE
parallel_instance_group                                                          string
parallel_io_cap_enabled                                                          boolean     FALSE
parallel_max_servers                                                             integer     160
parallel_min_percent                                                             integer     0
parallel_min_servers                                                             integer     32
parallel_min_time_threshold                                                      string      AUTO
parallel_server                                                                  boolean     TRUE
parallel_server_instances                                                        integer     2
parallel_servers_target                                                          integer     64
parallel_threads_per_cpu                                                         integer     1
pdb_file_name_convert                                                            string
pdb_lockdown                                                                     string
pdb_os_credential                                                                string
permit_92_wrap_format                                                            boolean     TRUE
pga_aggregate_limit                                                              big integer 140G
pga_aggregate_target                                                             big integer 70G
plscope_settings                                                                 string      IDENTIFIERS:NONE
plsql_ccflags                                                                    string
plsql_code_type                                                                  string      INTERPRETED
plsql_debug                                                                      boolean     FALSE
plsql_optimize_level                                                             integer     2
plsql_v2_compatibility                                                           boolean     FALSE
plsql_warnings                                                                   string      DISABLE:ALL
pre_page_sga                                                                     boolean     FALSE
processes                                                                        integer     4096
processor_group_name                                                             string
query_rewrite_enabled                                                            string      TRUE
query_rewrite_integrity                                                          string      enforced
rdbms_server_dn                                                                  string
read_only_open_delayed                                                           boolean     FALSE
recovery_parallelism                                                             integer     0
recyclebin                                                                       string      on
redo_transport_user                                                              string
remote_dependencies_mode                                                         string      TIMESTAMP
remote_listener                                                                  string      aupp-hroradb-f9exx-scan.hlthedgexap.pvthlthedgeprod.oraclevcn.com:1521
remote_login_passwordfile                                                        string      EXCLUSIVE
remote_os_authent                                                                boolean     FALSE
remote_os_roles                                                                  boolean     FALSE
replication_dependency_tracking                                                  boolean     TRUE
resource_limit                                                                   boolean     TRUE
resource_manager_cpu_allocation                                                  integer     16
resource_manager_plan                                                            string
result_cache_max_result                                                          integer     5
result_cache_max_size                                                            big integer 1G
result_cache_mode                                                                string      MANUAL
result_cache_remote_expiration                                                   integer     0
resumable_timeout                                                                integer     0
rollback_segments                                                                string
sec_case_sensitive_logon                                                         boolean     TRUE
sec_max_failed_login_attempts                                                    integer     3
sec_protocol_error_further_action                                                string      DROP,3
sec_protocol_error_trace_action                                                  string      TRACE
sec_return_server_release_banner                                                 boolean     FALSE
serial_reuse                                                                     string      disable
service_names                                                                    string      PRD_iad3vt
session_cached_cursors                                                           integer     50
session_max_open_files                                                           integer     10
sessions                                                                         integer     3096
sga_max_size                                                                     big integer 200G
sga_target                                                                       big integer 200G
shadow_core_dump                                                                 string      PARTIAL
shared_memory_address                                                            integer     0
shared_pool_reserved_size                                                        big integer 1G
shared_pool_size                                                                 big integer 0
shared_server_sessions                                                           integer
shared_servers                                                                   integer     0
skip_unusable_indexes                                                            boolean     TRUE
smtp_out_server                                                                  string      192.168.121.140:25
sort_area_retained_size                                                          integer     0
sort_area_size                                                                   integer     65536
spatial_vector_acceleration                                                      boolean     FALSE
spfile                                                                           string      +DATAC1/PRD_iad3vt/spfileprd.ora
sql92_security                                                                   boolean     TRUE
sql_trace                                                                        boolean     FALSE
sqltune_category                                                                 string      DEFAULT
standby_archive_dest                                                             string      ?/dbs/arch
standby_file_management                                                          string      AUTO
standby_pdb_source_file_dblink                                                   string
standby_pdb_source_file_directory                                                string
star_transformation_enabled                                                      string      FALSE
statistics_level                                                                 string      TYPICAL
streams_pool_size                                                                big integer 0
tape_asynch_io                                                                   boolean     TRUE
temp_undo_enabled                                                                boolean     FALSE
thread                                                                           integer     1
threaded_execution                                                               boolean     FALSE
timed_os_statistics                                                              integer     0
timed_statistics                                                                 boolean     TRUE
trace_enabled                                                                    boolean     TRUE
tracefile_identifier                                                             string      edb360_323688
transactions                                                                     integer     6793
transactions_per_rollback_segment                                                integer     5
undo_management                                                                  string      AUTO
undo_retention                                                                   integer     900
undo_tablespace                                                                  string      UNDOTBS1
unified_audit_sga_queue_size                                                     integer     1048576
use_dedicated_broker                                                             boolean     FALSE
use_indirect_data_buffers                                                        boolean     FALSE
use_large_pages                                                                  string      ONLY
user_dump_dest                                                                   string      /u02/app/oracle/product/12.1.0/dbhome_3/rdbms/log
utl_file_dir                                                                     string
workarea_size_policy                                                             string      AUTO
xml_db_events                                                                    string      enable
TOOL_EXEC_HOURS
---------------------------------------------------------------------
Tool Execution Hours so far: .098

1 row selected.

Elapsed Hours so far:    0.098

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:09 1a "Database Configuration"
11:28:09 System Under Observation

WITH /* 1a.1 */
 rac AS (SELECT /*+  MATERIALIZE NO_MERGE  */ COUNT(*) instances, CASE COUNT(*) WHEN 1 THEN 'Single-
instance' ELSE COUNT(*)||'-node RAC cluster' END db_type FROM gv$instance),
hrac AS (SELECT /*+  MATERIALIZE NO_MERGE  */ CASE 2 WHEN 1 THEN ' (historically Single-instance in
AWR)' ELSE ' (historicly 2-node RAC cluster in AWR)' END db_type
           FROM rac WHERE TO_CHAR(RAC.instances)<>2),
mem AS (SELECT /*+  MATERIALIZE NO_MERGE  */ SUM(value) target FROM gv$system_parameter2 WHERE name
= 'memory_target'),
sga AS (SELECT /*+  MATERIALIZE NO_MERGE  */ SUM(value) target FROM gv$system_parameter2 WHERE name
= 'sga_target'),
pga AS (SELECT /*+  MATERIALIZE NO_MERGE  */ SUM(value) target FROM gv$system_parameter2 WHERE name
= 'pga_aggregate_target'),
db_block AS (SELECT /*+  MATERIALIZE NO_MERGE  */ value bytes FROM v$system_parameter2 WHERE name =
'db_block_size'),
db AS (SELECT /*+  MATERIALIZE NO_MERGE  */ name, platform_name FROM v$database),
 pdbs AS (SELECT /*+  MATERIALIZE NO_MERGE  */ * FROM v$pdbs), -- need 12c flag
inst AS (SELECT /*+  MATERIALIZE NO_MERGE  */ host_name, version db_version FROM v$instance),
data AS (SELECT /*+  MATERIALIZE NO_MERGE  */ SUM(bytes) bytes, COUNT(*) files, COUNT(DISTINCT ts#)
tablespaces FROM v$datafile),
temp AS (SELECT /*+  MATERIALIZE NO_MERGE  */ SUM(bytes) bytes FROM v$tempfile),
log AS (SELECT /*+  MATERIALIZE NO_MERGE  */ SUM(bytes) * MAX(members) bytes FROM v$log),
control AS (SELECT /*+  MATERIALIZE NO_MERGE  */ SUM(block_size * file_size_blks) bytes FROM v$contr
olfile),
 cell AS (SELECT /*+  MATERIALIZE NO_MERGE  */ COUNT(DISTINCT cell_name) cnt FROM v$cell_state),
core AS (SELECT /*+  MATERIALIZE NO_MERGE  */ SUM(value) cnt FROM gv$osstat WHERE stat_name = 'NUM_C
PU_CORES'),
cpu AS (SELECT /*+  MATERIALIZE NO_MERGE  */ SUM(value) cnt FROM gv$osstat WHERE stat_name = 'NUM_CP
US'),
pmem AS (SELECT /*+  MATERIALIZE NO_MERGE  */ SUM(value) bytes FROM gv$osstat WHERE stat_name = 'PHY
SICAL_MEMORY_BYTES')
SELECT /*+  NO_MERGE  */ /* 1a.1 */
       'Database name:' system_item, db.name system_value FROM db
UNION ALL
 SELECT '    pdb:'||name, 'Open Mode:'||open_mode FROM pdbs -- need 12c flag
  UNION ALL
SELECT 'Oracle Database version:', inst.db_version FROM inst
 UNION ALL
SELECT 'Database block size:', TRIM(TO_CHAR(db_block.bytes / POWER(2,10), '90'))||' KB' FROM db_bloc
k
 UNION ALL
SELECT 'Database size:', TRIM(TO_CHAR(ROUND((data.bytes + temp.bytes + log.bytes + control.bytes) /
POWER(10,12), 3), '999,999,990.000'))||' TB'
  FROM db, data, temp, log, control
 UNION ALL
SELECT 'Datafiles:', data.files||' (on '||data.tablespaces||' tablespaces)' FROM data
 UNION ALL
SELECT 'Instance configuration:', rac.db_type||(select hrac.db_type FROM hrac ) FROM rac
 UNION ALL
SELECT 'Database memory:',
CASE WHEN mem.target > 0 THEN 'MEMORY '||TRIM(TO_CHAR(ROUND(mem.target / POWER(2,30), 1), '999,990.0
'))||' GB, ' END||
CASE WHEN sga.target > 0 THEN 'SGA '   ||TRIM(TO_CHAR(ROUND(sga.target / POWER(2,30), 1), '999,990.0
'))||' GB, ' END||
CASE WHEN pga.target > 0 THEN 'PGA '   ||TRIM(TO_CHAR(ROUND(pga.target / POWER(2,30), 1), '999,990.0
'))||' GB, ' END||
CASE WHEN mem.target > 0 THEN 'AMM' ELSE CASE WHEN sga.target > 0 THEN 'ASMM' ELSE 'MANUAL' END END
  FROM mem, sga, pga
 UNION ALL
 SELECT 'Hardware:', CASE WHEN cell.cnt > 0 THEN 'Engineered System '||
 CASE WHEN 'Intel(R) Xeon(R) Platinum 8270CL CPU @ 2.70GHz' LIKE '%5675%' THEN 'X2-2 ' END||
 CASE WHEN 'Intel(R) Xeon(R) Platinum 8270CL CPU @ 2.70GHz' LIKE '%2690%' THEN 'X3-2 ' END||
 CASE WHEN 'Intel(R) Xeon(R) Platinum 8270CL CPU @ 2.70GHz' LIKE '%2697%' THEN 'X4-2 ' END||
 CASE WHEN 'Intel(R) Xeon(R) Platinum 8270CL CPU @ 2.70GHz' LIKE '%2699%' THEN 'X5-2 or X-6 ' END||
 CASE WHEN 'Intel(R) Xeon(R) Platinum 8270CL CPU @ 2.70GHz' LIKE '%8160%' THEN 'X7-2 ' END||
 CASE WHEN 'Intel(R) Xeon(R) Platinum 8270CL CPU @ 2.70GHz' LIKE '%8870%' THEN 'X3-8 ' END||
 CASE WHEN 'Intel(R) Xeon(R) Platinum 8270CL CPU @ 2.70GHz' LIKE '%8895%' THEN 'X4-8 or X5-8 ' END||

 'with '||cell.cnt||' storage servers'
 ELSE 'Unknown' END FROM cell
  UNION ALL
SELECT 'Processor:', 'Intel(R) Xeon(R) Platinum 8270CL CPU @ 2.70GHz' FROM DUAL
 UNION ALL
SELECT 'Physical CPUs:', core.cnt||' cores'||CASE WHEN rac.instances > 0 THEN ', on '||rac.db_type E
ND FROM rac, core
 UNION ALL
SELECT 'Oracle CPUs:', cpu.cnt||' CPUs (threads)'||CASE WHEN rac.instances > 0 THEN ', on '||rac.db_
type END FROM rac, cpu
 UNION ALL
SELECT 'Physical RAM:', TRIM(TO_CHAR(ROUND(pmem.bytes / POWER(2,30), 1), '999,990.0'))||' GB'||CASE
WHEN rac.instances > 0 THEN ', on '||rac.db_type END FROM rac, pmem
 UNION ALL
SELECT 'Operating system:', db.platform_name FROM db

11:28:09 1a.1
Elapsed Hours so far:    0.098
Elapsed Hours so far: .098

Elapsed: 00:00:00.00

11:28:09 1a "00009_edb360_323688_1a_1_system_under_observation.html"
Elapsed Hours so far:    0.098

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:10 1a "Database Configuration"
11:28:10 Load Profile - Per Sec

WITH
by_snap AS (
SELECT /*+  NO_MERGE  */ /* 1a.2 */
       snap_id,
       metric_unit,
       metric_id,
       metric_name,
       SUM(maxval) maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2
   AND metric_name LIKE '%er Sec%'
 GROUP BY
       snap_id,
       metric_unit,
       metric_id,
       metric_name
),
by_metric_name AS (
SELECT /*+  NO_MERGE  */ /* 1a.2 */
       metric_unit,
       metric_id,
       metric_name,
       MAX(maxval) maxval_max,
       AVG(maxval) maxval_avg,
       MEDIAN(maxval) maxval_median,
       PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY maxval) maxval_99th_perc,
       PERCENTILE_DISC(0.98) WITHIN GROUP (ORDER BY maxval) maxval_98th_perc,
       PERCENTILE_DISC(0.97) WITHIN GROUP (ORDER BY maxval) maxval_97th_perc,
       PERCENTILE_DISC(0.96) WITHIN GROUP (ORDER BY maxval) maxval_96th_perc,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY maxval) maxval_95th_perc,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY maxval) maxval_90th_perc,
       PERCENTILE_DISC(0.85) WITHIN GROUP (ORDER BY maxval) maxval_85th_perc,
       PERCENTILE_DISC(0.80) WITHIN GROUP (ORDER BY maxval) maxval_80th_perc,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY maxval) maxval_75th_perc
  FROM by_snap
 GROUP BY
       metric_unit,
       metric_id,
       metric_name
)
SELECT /*+  NO_MERGE  */ /* 1a.2 */
       metric_name,
       ROUND(maxval_max, 6 - LENGTH(ROUND(maxval_max * 1000))) maxval_max,
       ROUND(maxval_avg, 6 - LENGTH(ROUND(maxval_avg * 1000))) maxval_avg,
       ROUND(maxval_median, 6 - LENGTH(ROUND(maxval_median * 1000))) maxval_median,
       metric_unit,
       ROUND(maxval_99th_perc, 6 - LENGTH(ROUND(maxval_99th_perc * 1000))) maxval_99th_perc,
       ROUND(maxval_98th_perc, 6 - LENGTH(ROUND(maxval_98th_perc * 1000))) maxval_98th_perc,
       ROUND(maxval_97th_perc, 6 - LENGTH(ROUND(maxval_97th_perc * 1000))) maxval_97th_perc,
       ROUND(maxval_96th_perc, 6 - LENGTH(ROUND(maxval_96th_perc * 1000))) maxval_96th_perc,
       ROUND(maxval_95th_perc, 6 - LENGTH(ROUND(maxval_95th_perc * 1000))) maxval_95th_perc,
       ROUND(maxval_90th_perc, 6 - LENGTH(ROUND(maxval_90th_perc * 1000))) maxval_90th_perc,
       ROUND(maxval_85th_perc, 6 - LENGTH(ROUND(maxval_85th_perc * 1000))) maxval_85th_perc,
       ROUND(maxval_80th_perc, 6 - LENGTH(ROUND(maxval_80th_perc * 1000))) maxval_80th_perc,
       ROUND(maxval_75th_perc, 6 - LENGTH(ROUND(maxval_75th_perc * 1000))) maxval_75th_perc
  FROM by_metric_name
 ORDER BY
       metric_id

11:28:10 1a.2
Elapsed Hours so far:    0.098
Elapsed Hours so far: .098

Elapsed: 00:00:00.00

11:28:10 1a "00010_edb360_323688_1a_2_load_profile_per_sec.html"
Elapsed Hours so far:    0.099

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:12 1a "Database Configuration"
11:28:12 Load Profile - Per Txn

WITH
by_snap AS (
SELECT /*+  NO_MERGE  */ /* 1a.2 */
       snap_id,
       metric_unit,
       metric_id,
       metric_name,
       MAX(maxval) maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2
   AND metric_name LIKE '%Per Txn%'
 GROUP BY
       snap_id,
       metric_unit,
       metric_id,
       metric_name
),
by_metric_name AS (
SELECT /*+  NO_MERGE  */ /* 1a.2 */
       metric_unit,
       metric_id,
       metric_name,
       MAX(maxval) maxval_max,
       AVG(maxval) maxval_avg,
       MEDIAN(maxval) maxval_median,
       PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY maxval) maxval_99th_perc,
       PERCENTILE_DISC(0.98) WITHIN GROUP (ORDER BY maxval) maxval_98th_perc,
       PERCENTILE_DISC(0.97) WITHIN GROUP (ORDER BY maxval) maxval_97th_perc,
       PERCENTILE_DISC(0.96) WITHIN GROUP (ORDER BY maxval) maxval_96th_perc,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY maxval) maxval_95th_perc,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY maxval) maxval_90th_perc,
       PERCENTILE_DISC(0.85) WITHIN GROUP (ORDER BY maxval) maxval_85th_perc,
       PERCENTILE_DISC(0.80) WITHIN GROUP (ORDER BY maxval) maxval_80th_perc,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY maxval) maxval_75th_perc
  FROM by_snap
 GROUP BY
       metric_unit,
       metric_id,
       metric_name
)
SELECT /*+  NO_MERGE  */ /* 1a.2 */
       metric_name,
       ROUND(maxval_max, 6 - LENGTH(ROUND(maxval_max * 1000))) maxval_max,
       ROUND(maxval_avg, 6 - LENGTH(ROUND(maxval_avg * 1000))) maxval_avg,
       ROUND(maxval_median, 6 - LENGTH(ROUND(maxval_median * 1000))) maxval_median,
       metric_unit,
       ROUND(maxval_99th_perc, 6 - LENGTH(ROUND(maxval_99th_perc * 1000))) maxval_99th_perc,
       ROUND(maxval_98th_perc, 6 - LENGTH(ROUND(maxval_98th_perc * 1000))) maxval_98th_perc,
       ROUND(maxval_97th_perc, 6 - LENGTH(ROUND(maxval_97th_perc * 1000))) maxval_97th_perc,
       ROUND(maxval_96th_perc, 6 - LENGTH(ROUND(maxval_96th_perc * 1000))) maxval_96th_perc,
       ROUND(maxval_95th_perc, 6 - LENGTH(ROUND(maxval_95th_perc * 1000))) maxval_95th_perc,
       ROUND(maxval_90th_perc, 6 - LENGTH(ROUND(maxval_90th_perc * 1000))) maxval_90th_perc,
       ROUND(maxval_85th_perc, 6 - LENGTH(ROUND(maxval_85th_perc * 1000))) maxval_85th_perc,
       ROUND(maxval_80th_perc, 6 - LENGTH(ROUND(maxval_80th_perc * 1000))) maxval_80th_perc,
       ROUND(maxval_75th_perc, 6 - LENGTH(ROUND(maxval_75th_perc * 1000))) maxval_75th_perc
  FROM by_metric_name
 ORDER BY
       metric_id

11:28:12 1a.3
Elapsed Hours so far:    0.099
Elapsed Hours so far: .099

Elapsed: 00:00:00.00

11:28:12 1a "00011_edb360_323688_1a_3_load_profile_per_txn.html"
Elapsed Hours so far:    0.099

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:13 1a "Database Configuration"
11:28:13 Load Profile - Count

WITH
by_snap AS (
SELECT /*+  NO_MERGE  */ /* 1a.2 */
       snap_id,
       metric_unit,
       metric_id,
       metric_name,
       SUM(maxval) maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2
   AND metric_name LIKE '%Count'
 GROUP BY
       snap_id,
       metric_unit,
       metric_id,
       metric_name
),
by_metric_name AS (
SELECT /*+  NO_MERGE  */ /* 1a.2 */
       metric_unit,
       metric_id,
       metric_name,
       MAX(maxval) maxval_max,
       AVG(maxval) maxval_avg,
       MEDIAN(maxval) maxval_median,
       PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY maxval) maxval_99th_perc,
       PERCENTILE_DISC(0.98) WITHIN GROUP (ORDER BY maxval) maxval_98th_perc,
       PERCENTILE_DISC(0.97) WITHIN GROUP (ORDER BY maxval) maxval_97th_perc,
       PERCENTILE_DISC(0.96) WITHIN GROUP (ORDER BY maxval) maxval_96th_perc,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY maxval) maxval_95th_perc,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY maxval) maxval_90th_perc,
       PERCENTILE_DISC(0.85) WITHIN GROUP (ORDER BY maxval) maxval_85th_perc,
       PERCENTILE_DISC(0.80) WITHIN GROUP (ORDER BY maxval) maxval_80th_perc,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY maxval) maxval_75th_perc
  FROM by_snap
 GROUP BY
       metric_unit,
       metric_id,
       metric_name
)
SELECT /*+  NO_MERGE  */ /* 1a.2 */
       metric_name,
       ROUND(maxval_max, 6 - LENGTH(ROUND(maxval_max * 1000))) maxval_max,
       ROUND(maxval_avg, 6 - LENGTH(ROUND(maxval_avg * 1000))) maxval_avg,
       ROUND(maxval_median, 6 - LENGTH(ROUND(maxval_median * 1000))) maxval_median,
       metric_unit,
       ROUND(maxval_99th_perc, 6 - LENGTH(ROUND(maxval_99th_perc * 1000))) maxval_99th_perc,
       ROUND(maxval_98th_perc, 6 - LENGTH(ROUND(maxval_98th_perc * 1000))) maxval_98th_perc,
       ROUND(maxval_97th_perc, 6 - LENGTH(ROUND(maxval_97th_perc * 1000))) maxval_97th_perc,
       ROUND(maxval_96th_perc, 6 - LENGTH(ROUND(maxval_96th_perc * 1000))) maxval_96th_perc,
       ROUND(maxval_95th_perc, 6 - LENGTH(ROUND(maxval_95th_perc * 1000))) maxval_95th_perc,
       ROUND(maxval_90th_perc, 6 - LENGTH(ROUND(maxval_90th_perc * 1000))) maxval_90th_perc,
       ROUND(maxval_85th_perc, 6 - LENGTH(ROUND(maxval_85th_perc * 1000))) maxval_85th_perc,
       ROUND(maxval_80th_perc, 6 - LENGTH(ROUND(maxval_80th_perc * 1000))) maxval_80th_perc,
       ROUND(maxval_75th_perc, 6 - LENGTH(ROUND(maxval_75th_perc * 1000))) maxval_75th_perc
  FROM by_metric_name
 ORDER BY
       metric_id

11:28:13 1a.4
Elapsed Hours so far:    0.099
Elapsed Hours so far: .099

Elapsed: 00:00:00.00

11:28:13 1a "00012_edb360_323688_1a_4_load_profile_count.html"
Elapsed Hours so far:    0.099

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:13 1a "Database Configuration"
11:28:13 Identification

SELECT /*+  NO_MERGE  */ /* 1a.5 */
       d.dbid,
       d.name dbname,
       d.db_unique_name,
       d.platform_name,
       i.version,
       i.inst_id,
       i.instance_number,
       i.instance_name,
       LOWER(SUBSTR(i.host_name||'.', 1, INSTR(i.host_name||'.', '.') - 1)) host_name,
           LPAD(ORA_HASH(
       LOWER(SUBSTR(i.host_name||'.', 1, INSTR(i.host_name||'.', '.') - 1))
           ,999999),6,'6') host_hv,
       p.value cpu_count,
       '' ebs_release,
       '' ebs_system_name,
       'NOT_A_SIEBEL_DB' siebel_schema,
       '' siebel_app_ver,
       'NOT_A_PSFT_DB' psft_schema,
       '' psft_tools_rel
  FROM v$database d,
       gv$instance i,
       gv$system_parameter2 p
 WHERE p.inst_id = i.inst_id
   AND p.name = 'cpu_count'

11:28:13 1a.5
Elapsed Hours so far:    0.099
Elapsed Hours so far: .099

Elapsed: 00:00:00.00

11:28:13 1a "00013_edb360_323688_1a_5_identification.html"
Elapsed Hours so far:    0.099

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:13 1a "Database Configuration"
11:28:13 Version

SELECT /*+  NO_MERGE  */ /* 1a.6 */
       *
  FROM v$version

11:28:13 1a.6
Elapsed Hours so far:    0.099
Elapsed Hours so far: .099

Elapsed: 00:00:00.00

11:28:13 1a "00014_edb360_323688_1a_6_version.html"
Elapsed Hours so far:    0.099

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:13 1a "Database Configuration"
11:28:13 Options

SELECT /*+  NO_MERGE  */ /* 1a.7 */
       *
  FROM v$option

11:28:13 1a.7
Elapsed Hours so far:    0.099
Elapsed Hours so far: .099

Elapsed: 00:00:00.00

11:28:13 1a "00015_edb360_323688_1a_7_options.html"
Elapsed Hours so far:    0.099

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:13 1a "Database Configuration"
11:28:13 Database

SELECT /*+  NO_MERGE  */ /* 1a.8 */
       *
  FROM v$database

11:28:13 1a.8
Elapsed Hours so far:    0.099
Elapsed Hours so far: .099

Elapsed: 00:00:00.00

11:28:13 1a "00016_edb360_323688_1a_8_database.html"
Elapsed Hours so far:    0.099

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:14 1a "Database Configuration"
11:28:14 Instance

SELECT /*+  NO_MERGE  */ /* 1a.9 */
       *
  FROM gv$instance
 ORDER BY
       inst_id

11:28:14 1a.9
Elapsed Hours so far:    0.099
Elapsed Hours so far: .099

Elapsed: 00:00:00.01

11:28:14 1a "00017_edb360_323688_1a_9_instance.html"
Elapsed Hours so far:    0.099

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:14 1a "Database Configuration"
11:28:14 Pluggable Databases

SELECT pdb1.*, pdb2.open_mode, pdb2.restricted, pdb2.open_time, pdb2.total_size, pdb2.block_size, pd
b2.recovery_status
FROM  dba_pdbs pdb1 join v$pdbs pdb2
  on pdb1.con_id=pdb2.con_id
ORDER BY pdb1.con_id

11:28:14 1a.10
Elapsed Hours so far:    0.099
Elapsed Hours so far: .099

Elapsed: 00:00:00.00

11:28:14 1a "00018_edb360_323688_1a_10_pluggable_databases.html"
Elapsed Hours so far:    0.099

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:14 1a "Database Configuration"
11:28:14 Pluggable Databases Saved States

SELECT *
FROM  dba_pdb_saved_states
ORDER BY 1

11:28:14 1a.11
Elapsed Hours so far:    0.099
Elapsed Hours so far: .099

Elapsed: 00:00:00.00

11:28:14 1a "00019_edb360_323688_1a_11_pluggable_databases_saved_states.html"
Elapsed Hours so far:    0.099

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:14 1a "Database Configuration"
11:28:14 Database and Instance History

SELECT /*+  NO_MERGE  */ /* 1a.12 */
       dbid,
       instance_number,
       startup_time,
       version,
       db_name,
       instance_name,
       host_name
       --platform_name not avail on 10g
  FROM dba_hist_database_instance
 ORDER BY
       dbid,
       instance_number,
       startup_time

11:28:14 1a.12
Elapsed Hours so far:    0.099
Elapsed Hours so far: .099

Elapsed: 00:00:00.00

11:28:14 1a "00020_edb360_323688_1a_12_database_and_instance_history.html"
Elapsed Hours so far:    0.099

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:14 1a "Database Configuration"
11:28:14 Instance Recovery

SELECT /*+  NO_MERGE  */ /* 1a.13 */
       *
  FROM gv$instance_recovery
 ORDER BY
       inst_id

11:28:14 1a.13
Elapsed Hours so far:    0.099
Elapsed Hours so far: .099

Elapsed: 00:00:00.00

11:28:14 1a "00021_edb360_323688_1a_13_instance_recovery.html"
Elapsed Hours so far:    0.100

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:14 1a "Database Configuration"
11:28:14 Database Properties

SELECT /*+  NO_MERGE  */ /* 1a.14 */
       *
  FROM database_properties

11:28:14 1a.14
Elapsed Hours so far:    0.100
Elapsed Hours so far: .1

Elapsed: 00:00:00.01

11:28:14 1a "00022_edb360_323688_1a_14_database_properties.html"
Elapsed Hours so far:    0.100

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:14 1a "Database Configuration"
11:28:14 Registry

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 1a.15 */
       *
  FROM dba_registry
 ORDER BY
       comp_id

11:28:14 1a.15
Elapsed Hours so far:    0.100
Elapsed Hours so far: .1

Elapsed: 00:00:00.00

11:28:14 1a "00023_edb360_323688_1a_15_registry.html"
Elapsed Hours so far:    0.100

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:15 1a "Database Configuration"
11:28:15 Registry SQL Patch

SELECT /*+  NO_MERGE  */ /* 1a.16 */
       *
  FROM dba_registry_sqlpatch
 ORDER BY
       1

11:28:15 1a.16
Elapsed Hours so far:    0.100
Elapsed Hours so far: .1

Elapsed: 00:00:00.00

11:28:15 1a "00024_edb360_323688_1a_16_registry_sql_patch.html"
Elapsed Hours so far:    0.100

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:15 1a "Database Configuration"
11:28:15 Registry History

SELECT /*+  NO_MERGE  */ /* 1a.17 */
       *
  FROM dba_registry_history
 ORDER BY
       1

11:28:15 1a.17
Elapsed Hours so far:    0.100
Elapsed Hours so far: .1

Elapsed: 00:00:00.01

11:28:15 1a "00025_edb360_323688_1a_17_registry_history.html"
Elapsed Hours so far:    0.100

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:15 1a "Database Configuration"
11:28:15 Registry Hierarchy

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 1a.18 */
       *
  FROM dba_registry_hierarchy
 ORDER BY
       1, 2, 3

11:28:15 1a.18
Elapsed Hours so far:    0.100
Elapsed Hours so far: .1

Elapsed: 00:00:00.00

11:28:15 1a "00026_edb360_323688_1a_18_registry_hierarchy.html"
Elapsed Hours so far:    0.100

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:15 1a "Database Configuration"
11:28:15 Feature Usage Statistics

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 1a.19 */
       *
  FROM dba_feature_usage_statistics
 ORDER BY
       name,
       version

11:28:15 1a.19
Elapsed Hours so far:    0.100
Elapsed Hours so far: .1

Elapsed: 00:00:00.00

11:28:15 1a "00027_edb360_323688_1a_19_feature_usage_statistics.html"
Elapsed Hours so far:    0.100

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:15 1a "Database Configuration"
11:28:15 License

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 1a.20 */
       *
  FROM gv$license
 ORDER BY
       inst_id

11:28:15 1a.20
Elapsed Hours so far:    0.100
Elapsed Hours so far: .1

Elapsed: 00:00:00.01

11:28:15 1a "00028_edb360_323688_1a_20_license.html"
Elapsed Hours so far:    0.100

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:15 1a "Database Configuration"
11:28:15 Resource Limit

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 1a.21 */
       *
  FROM gv$resource_limit
 ORDER BY
       resource_name,
       inst_id

11:28:15 1a.21
Elapsed Hours so far:    0.100
Elapsed Hours so far: .1

Elapsed: 00:00:00.00

11:28:15 1a "00029_edb360_323688_1a_21_resource_limit.html"
Elapsed Hours so far:    0.100

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:15 1a "Database Configuration"
11:28:15 HWM Statistics

SELECT /*+  NO_MERGE  */ /* 1a.22 */
       *
  FROM dba_high_water_mark_statistics
 ORDER BY
       dbid,
       name

11:28:15 1a.22
Elapsed Hours so far:    0.100
Elapsed Hours so far: .1

Elapsed: 00:00:00.00

11:28:15 1a "00030_edb360_323688_1a_22_hwm_statistics.html"
Elapsed Hours so far:    0.100

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:15 1a "Database Configuration"
11:28:15 Database Links

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 1a.23 */
       *
  FROM dba_db_links
 ORDER BY
       owner,
       db_link

11:28:15 1a.23
Elapsed Hours so far:    0.100
Elapsed Hours so far: .1

Elapsed: 00:00:00.00

11:28:15 1a "00031_edb360_323688_1a_23_database_links.html"
Elapsed Hours so far:    0.100

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:16 1a "Database Configuration"
11:28:16 Application Schemas

SELECT /*+  NO_MERGE  */ /* 1a.24 */
       owner, SUM(num_rows) num_rows, SUM(blocks) blocks, COUNT(*) tables
  FROM dba_tables
 WHERE owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 GROUP BY
       owner
HAVING SUM(num_rows) > 0
 ORDER BY
       2 DESC

11:28:16 1a.24
Elapsed Hours so far:    0.100
Elapsed Hours so far: .1

Elapsed: 00:00:00.00

11:28:16 1a "00032_edb360_323688_1a_24_application_schemas.html"
Elapsed Hours so far:    0.100

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:16 1a "Database Configuration"
11:28:16 Application Schema Objects

SELECT /*+  NO_MERGE  */ /* 1a.25 */
       owner,
       SUM(CASE object_type WHEN 'TABLE' THEN 1 ELSE 0 END) tables,
       SUM(CASE object_type WHEN 'TABLE PARTITION' THEN 1 ELSE 0 END) table_partitions,
       SUM(CASE object_type WHEN 'TABLE SUBPARTITION' THEN 1 ELSE 0 END) table_subpartitions,
       SUM(CASE object_type WHEN 'INDEX' THEN 1 ELSE 0 END) indexes,
       SUM(CASE object_type WHEN 'INDEX PARTITION' THEN 1 ELSE 0 END) index_partitions,
       SUM(CASE object_type WHEN 'INDEX SUBPARTITION' THEN 1 ELSE 0 END) index_subpartitions,
       SUM(CASE object_type WHEN 'VIEW' THEN 1 ELSE 0 END) views,
       SUM(CASE object_type WHEN 'MATERIALIZED VIEW' THEN 1 ELSE 0 END) materialized_views,
       SUM(CASE object_type WHEN 'TRIGGER' THEN 1 ELSE 0 END) triggers,
       SUM(CASE object_type WHEN 'PACKAGE' THEN 1 ELSE 0 END) packages,
       SUM(CASE object_type WHEN 'PROCEDURE' THEN 1 ELSE 0 END) procedures,
       SUM(CASE object_type WHEN 'FUNCTION' THEN 1 ELSE 0 END) functions,
       SUM(CASE object_type WHEN 'LIBRARY' THEN 1 ELSE 0 END) libraries,
       SUM(CASE object_type WHEN 'SYNONYM' THEN 1 ELSE 0 END) synonyms,
       SUM(CASE object_type WHEN 'TYPE' THEN 1 ELSE 0 END) types,
       SUM(CASE object_type WHEN 'SEQUENCE' THEN 1 ELSE 0 END) sequences
  FROM dba_objects
 WHERE owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND object_type IN ('TABLE', 'TABLE PARTITION', 'TABLE SUBPARTITION', 'INDEX', 'INDEX PARTITION',
 'INDEX SUBPARTITION', 'VIEW',
                       'MATERIALIZED VIEW', 'TRIGGER', 'PACKAGE', 'PROCEDURE', 'FUNCTION', 'LIBRARY'
, 'SYNONYM', 'TYPE', 'SEQUENCE')
 GROUP BY
       owner
 ORDER BY
       owner

11:28:16 1a.25
Elapsed Hours so far:    0.100
Elapsed Hours so far: .1

Elapsed: 00:00:00.00

11:28:16 1a "00033_edb360_323688_1a_25_application_schema_objects.html"
Elapsed Hours so far:    0.100

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:17 1a "Database Configuration"
11:28:17 Modified Parameters

SELECT /*+  NO_MERGE  */ /* 1a.26 */
       *
  FROM gv$system_parameter2
 WHERE ismodified = 'MODIFIED'
 ORDER BY
       name,
       inst_id,
       ordinal

11:28:17 1a.26
Elapsed Hours so far:    0.100
Elapsed Hours so far: .1

Elapsed: 00:00:00.00

11:28:17 1a "00034_edb360_323688_1a_26_modified_parameters.html"
Elapsed Hours so far:    0.100

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:17 1a "Database Configuration"
11:28:17 Non-default Parameters

SELECT /*+  NO_MERGE  */ /* 1a.27 */
       *
  FROM gv$system_parameter2
 WHERE isdefault = 'FALSE'
 ORDER BY
       name,
       inst_id,
       ordinal

11:28:17 1a.27
Elapsed Hours so far:    0.100
Elapsed Hours so far: .1

Elapsed: 00:00:00.00

11:28:17 1a "00035_edb360_323688_1a_27_nondefault_parameters.html"
Elapsed Hours so far:    0.100

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:17 1a "Database Configuration"
11:28:17 All Parameters

SELECT /*+  NO_MERGE  */ /* 1a.28 */
       *
  FROM gv$system_parameter2
 ORDER BY
       name,
       inst_id,
       ordinal

11:28:17 1a.28
Elapsed Hours so far:    0.100
Elapsed Hours so far: .1

Elapsed: 00:00:00.00

11:28:17 1a "00036_edb360_323688_1a_28_all_parameters.html"
Elapsed Hours so far:    0.100

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:17 1a "Database Configuration"
11:28:17 Parameter File

SELECT /*+  NO_MERGE  */ /* 1a.29 */
       *
  FROM v$spparameter
 WHERE isspecified = 'TRUE'
 ORDER BY
       name,
       sid,
       ordinal

11:28:17 1a.29
Elapsed Hours so far:    0.100
Elapsed Hours so far: .1

Elapsed: 00:00:00.00

11:28:17 1a "00037_edb360_323688_1a_29_parameter_file.html"
Elapsed Hours so far:    0.100

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:17 1a "Database Configuration"
11:28:17 PDB Parameter File

SELECT /*+  NO_MERGE  */ /* 1a.30 */
         pdb.pdb_id
       , pdb.pdb_name
       --, SUBSTR(pst.inst_name, 1, 9) db_name
       , UPPER(spf.db_uniq_name) db_unique_name
       , spf.sid
       , spf.name
       , spf.value$ value
       --, spf.pdb_uid
       --, pst.pdb_guid
  FROM pdb_spfile$ spf,
       pdbstate$ pst,
       dba_pdbs pdb
 WHERE pst.pdb_uid = spf.pdb_uid
   AND pdb.guid = pst.pdb_guid
 ORDER BY
       1, 2, 3, 4, 5

11:28:17 1a.30
Elapsed Hours so far:    0.100
Elapsed Hours so far: .1

Elapsed: 00:00:00.00

11:28:17 1a "00038_edb360_323688_1a_30_pdb_parameter_file.html"
Elapsed Hours so far:    0.100

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:17 1a "Database Configuration"
11:28:17 System Parameters Change Log

WITH
all_parameters AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 1a.31 */
       snap_id,
       dbid,
       con_id,
       instance_number,
       parameter_name,
       value,
       isdefault,
       ismodified,
       lag(value) OVER (PARTITION BY dbid,
       con_id,
       instance_number, parameter_hash ORDER BY snap_id) prior_value
  FROM dba_hist_parameter
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
)
SELECT /*+  NO_MERGE  */ /* 1a.31 */
       TO_CHAR(s.begin_interval_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(s.end_interval_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
       p.snap_id,
       p.con_id,
       --p.dbid,
       p.instance_number,
       p.parameter_name,
       p.value,
       p.isdefault,
       p.ismodified,
       p.prior_value
  FROM all_parameters p,
       dba_hist_snapshot s
 WHERE p.value != p.prior_value
   AND s.snap_id = p.snap_id
   AND s.dbid = p.dbid
   AND s.instance_number = p.instance_number
 ORDER BY
       s.begin_interval_time DESC,
       --p.dbid,
       p.instance_number,
       p.parameter_name

11:28:17 1a.31
Elapsed Hours so far:    0.100
Elapsed Hours so far: .1

Elapsed: 00:00:00.00

11:28:17 1a "00039_edb360_323688_1a_31_system_parameters_change_log.html"
Elapsed Hours so far:    0.101

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:20 1a "Database Configuration"
11:28:20 Memory Configuration

WITH
system_parameter AS (
SELECT inst_id,
       name,
       value
  FROM gv$system_parameter2
 WHERE name IN
( 'memory_max_target'
, 'memory_target'
, 'pga_aggregate_target'
, 'sga_max_size'
, 'sga_target'
, 'db_cache_size'
, 'shared_pool_size'
, 'shared_pool_reserved_size'
, 'large_pool_size'
, 'java_pool_size'
, 'streams_pool_size'
, 'result_cache_max_size'
, 'db_keep_cache_size'
, 'db_recycle_cache_size'
, 'db_32k_cache_size'
, 'db_16k_cache_size'
, 'db_8k_cache_size'
, 'db_4k_cache_size'
, 'db_2k_cache_size'
)),
spparameter_inst AS (
SELECT i.inst_id,
       p.name,
       p.display_value
  FROM v$spparameter p,
       gv$instance i
 WHERE p.isspecified = 'TRUE'
   AND p.sid <> '*'
   AND i.instance_name = p.sid
),
spparameter_all AS (
SELECT p.name,
       p.display_value
  FROM v$spparameter p
 WHERE p.isspecified = 'TRUE'
   AND p.sid = '*'
)
SELECT s.name,
       s.inst_id,
       CASE WHEN i.name IS NOT NULL THEN TO_CHAR(i.inst_id) ELSE (CASE WHEN a.name IS NOT NULL THEN
'*' END) END spfile_sid,
       NVL(i.display_value, a.display_value) spfile_value,
       CASE s.value WHEN '0' THEN '0' ELSE TRIM(TO_CHAR(ROUND(TO_NUMBER(s.value)/POWER(2,30),3),'999
0.000'))||'G' END current_gb,
       NULL recommended_gb
  FROM system_parameter s,
       spparameter_inst i,
       spparameter_all  a
 WHERE i.inst_id(+) = s.inst_id
   AND i.name(+)    = s.name
   AND a.name(+)    = s.name
 ORDER BY
       CASE s.name
       WHEN 'memory_max_target'         THEN  1
       WHEN 'memory_target'             THEN  2
       WHEN 'pga_aggregate_target'      THEN  3
       WHEN 'sga_max_size'              THEN  4
       WHEN 'sga_target'                THEN  5
       WHEN 'db_cache_size'             THEN  6
       WHEN 'shared_pool_size'          THEN  7
       WHEN 'shared_pool_reserved_size' THEN  8
       WHEN 'large_pool_size'           THEN  9
       WHEN 'java_pool_size'            THEN 10
       WHEN 'streams_pool_size'         THEN 11
       WHEN 'result_cache_max_size'     THEN 12
       WHEN 'db_keep_cache_size'        THEN 13
       WHEN 'db_recycle_cache_size'     THEN 14
       WHEN 'db_32k_cache_size'         THEN 15
       WHEN 'db_16k_cache_size'         THEN 16
       WHEN 'db_8k_cache_size'          THEN 17
       WHEN 'db_4k_cache_size'          THEN 18
       WHEN 'db_2k_cache_size'          THEN 19
       END,
       s.inst_id

11:28:20 1a.32
Elapsed Hours so far:    0.101
Elapsed Hours so far: .101

Elapsed: 00:00:00.01

11:28:20 1a "00040_edb360_323688_1a_32_memory_configuration.html"
Elapsed Hours so far:    0.101

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:20 1b "Security"
11:28:20 Users

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 1b.33 */
       *
  FROM dba_users
 ORDER BY username

11:28:20 1b.33
Elapsed Hours so far:    0.101
Elapsed Hours so far: .101

Elapsed: 00:00:00.00

11:28:20 1b "00041_edb360_323688_1b_33_users.html"
Elapsed Hours so far:    0.101

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:20 1b "Security"
11:28:20 Profiles

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 1b.34 */
       *
  FROM dba_profiles
 ORDER BY profile

11:28:20 1b.34
Elapsed Hours so far:    0.101
Elapsed Hours so far: .101

Elapsed: 00:00:00.00

11:28:20 1b "00042_edb360_323688_1b_34_profiles.html"
Elapsed Hours so far:    0.101

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:20 1b "Security"
11:28:20 Users With Sensitive Roles Granted

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 1b.35 */
       p.* from dba_role_privs p
where (p.granted_role in
('AQ_ADMINISTRATOR_ROLE','DELETE_CATALOG_ROLE','DBA','DM_CATALOG_ROLE','EXECUTE_CATALOG_ROLE',
'EXP_FULL_DATABASE','GATHER_SYSTEM_STATISTICS','HS_ADMIN_ROLE','IMP_FULL_DATABASE',
   'JAVASYSPRIV','JAVA_ADMIN','JAVA_DEPLOY','LOGSTDBY_ADMINISTRATOR',
   'OEM_MONITOR','OLAP_DBA','RECOVERY_CATALOG_OWNER','SCHEDULER_ADMIN',
   'SELECT_CATALOG_ROLE','WM_ADMIN_ROLE','XDBADMIN','RESOURCE')
    or p.granted_role like '%ANY%')
   and p.grantee not in ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS
','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGIN
S','ORDSYS','OUTLN','OWBSYS')
   and p.grantee not in ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRC
ANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   and p.grantee in (select username from dba_users)
order by p.grantee, p.granted_role

11:28:20 1b.35
Elapsed Hours so far:    0.101
Elapsed Hours so far: .101

Elapsed: 00:00:00.01

11:28:20 1b "00043_edb360_323688_1b_35_users_with_sensitive_roles_granted.html"
Elapsed Hours so far:    0.101

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:21 1b "Security"
11:28:21 Users With Inappropriate Tablespaces Granted

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 1b.36 */
       * from dba_users u
where (default_tablespace in ('SYSAUX','SYSTEM') or
temporary_tablespace not in
   (select tablespace_name
   from dba_tablespaces
   where contents = 'TEMPORARY'
   and status = 'ONLINE'))
and NVL((SELECT COUNT(*)
         FROM dba_tablespace_groups g, dba_tablespaces t
         WHERE g.group_name = u.temporary_tablespace
         AND t.tablespace_name = g.tablespace_name
         AND t.contents IN ('PERMANENT', 'UNDO')), 0) != 0
and username not in ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
and username not in ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
order by username

11:28:21 1b.36
Elapsed Hours so far:    0.101
Elapsed Hours so far: .101

Elapsed: 00:00:00.00

11:28:21 1b "00044_edb360_323688_1b_36_users_with_inappropriate_tablespaces_granted.html"
Elapsed Hours so far:    0.101

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:21 1b "Security"
11:28:21 Proxy Users

-- provided by Simon Pane
SELECT /*+  NO_MERGE  */ /* 1b.37 */ *
  FROM proxy_users
 ORDER BY client

11:28:21 1b.37
Elapsed Hours so far:    0.101
Elapsed Hours so far: .101

Elapsed: 00:00:00.00

11:28:21 1b "00045_edb360_323688_1b_37_proxy_users.html"
Elapsed Hours so far:    0.101

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:21 1b "Security"
11:28:21 Profile Password Verification Functions

-- provided by Simon Pane
WITH
expanded_profiles AS (
SELECT /*+  NO_MERGE  */
       profile,
       limit,
       CONNECT_BY_ROOT limit top_limit,
       level nest_level
  FROM (SELECT profile, limit FROM dba_profiles WHERE resource_name = 'PASSWORD_VERIFY_FUNCTION')
CONNECT BY PRIOR profile = limit
),
users_with_profile AS (
SELECT /*+  NO_MERGE  */
       profile,
       count(*) cnt
  FROM dba_users
 GROUP BY profile
)
SELECT /*+  NO_MERGE  */ /* 1b.38 */
       p.profile,
       DECODE(nest_level,2,'DEFAULT ('||top_limit||')',top_limit) profile_limit_setting,
       DECODE(top_limit,'NULL',' ',NVL2(object_name,owner||'.'||object_name,'** FUNCTION NOT FOUND *
*')) verification_function,
       last_ddl_time,
       status,
       NVL(TO_CHAR(u.cnt),'<NONE>') assigned_users
  FROM dba_objects o,
       expanded_profiles p,
       users_with_profile u
 WHERE p.top_limit = o.object_name (+)
   AND p.profile = u.profile (+)
   AND NOT (limit = 'DEFAULT' AND top_limit = 'DEFAULT')
 ORDER BY 1,2

11:28:21 1b.38
Elapsed Hours so far:    0.101
Elapsed Hours so far: .101

Elapsed: 00:00:00.00

11:28:21 1b "00046_edb360_323688_1b_38_profile_password_verification_functions.html"
Elapsed Hours so far:    0.102

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:28:24 1b "Security"
11:28:24 Users with CREATE SESSION privilege

-- provided by Simon Pane
SELECT /*+  NO_MERGE  */ /* 1b.39 */ DISTINCT
       u.NAME "SCHEMA", d.account_status
  FROM SYS.user$ u, dba_users d
 WHERE u.NAME = d.username
   AND d.account_status NOT LIKE '%LOCKED%'
   AND u.type# = 1
   AND u.NAME != 'SYS'
   AND u.NAME != 'SYSTEM'
   AND u.user# IN (
              SELECT     grantee#
                    FROM SYS.sysauth$
              CONNECT BY PRIOR grantee# = privilege#
              START WITH privilege# =
                                     (SELECT PRIVILEGE
                                        FROM SYS.system_privilege_map
                                       WHERE NAME = 'CREATE SESSION'))
   AND u.NAME IN (SELECT DISTINCT owner
                    FROM dba_objects
                   WHERE object_type != 'SYNONYM')
ORDER BY 1

11:28:24 1b.39
Elapsed Hours so far:    0.102
Elapsed Hours so far: .102

Elapsed: 00:00:00.00

11:28:24 1b "00047_edb360_323688_1b_39_users_with_create_session_privilege.html"
Elapsed Hours so far:    0.117

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:19 1b "Security"
11:29:19 Roles (not default)

-- by berx
select /*+  NO_MERGE  */ /* 1b.40 */
* from   dba_roles
where  role not in (SELECT ROLE FROM dba_roles WHERE ORACLE_MAINTAINED='Y')

11:29:19 1b.40
Elapsed Hours so far:    0.117
Elapsed Hours so far: .117

Elapsed: 00:00:00.00

11:29:19 1b "00048_edb360_323688_1b_40_roles_not_default.html"
Elapsed Hours so far:    0.117

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:19 1b "Security"
11:29:19 Role Privileges (not default)

-- by berx
select  /*+  NO_MERGE  */ /* 1b.41 */
*  from   dba_role_privs
where  1=1
  AND GRANTED_ROLE not in (SELECT ROLE FROM dba_roles WHERE ORACLE_MAINTAINED='Y')

11:29:19 1b.41
Elapsed Hours so far:    0.117
Elapsed Hours so far: .117

Elapsed: 00:00:00.00

11:29:19 1b "00049_edb360_323688_1b_41_role_privileges_not_default.html"
Elapsed Hours so far:    0.117

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:19 1b "Security"
11:29:19 System Grants (not default)

-- by berx
select  /*+  NO_MERGE  */ /* 1b.42 */
*  from   dba_sys_privs
where  1=1
  AND GRANTEE not in (SELECT ROLE FROM dba_roles WHERE ORACLE_MAINTAINED='Y')
  AND GRANTEE not in (SELECT USERNAME FROM dba_users WHERE ORACLE_MAINTAINED='Y')

11:29:19 1b.42
Elapsed Hours so far:    0.117
Elapsed Hours so far: .117

Elapsed: 00:00:00.00

11:29:19 1b "00050_edb360_323688_1b_42_system_grants_not_default.html"
Elapsed Hours so far:    0.118

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:19 1c "Auditing"
11:29:19 Default Object Auditing Options

SELECT /*+  NO_MERGE  */ /* 1c.43 */
       *
  FROM all_def_audit_opts

11:29:19 1c.43
Elapsed Hours so far:    0.118
Elapsed Hours so far: .118

Elapsed: 00:00:00.00

11:29:20 1c "00051_edb360_323688_1c_43_default_object_auditing_options.html"
Elapsed Hours so far:    0.118

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:20 1c "Auditing"
11:29:20 Object Auditing Options

SELECT /*+  NO_MERGE  */ /* 1c.44 */
       o.*
  FROM dba_obj_audit_opts o
 --WHERE (o.alt,o.aud,o.com,o.del,o.gra,o.ind,o.ins,o.loc,o.ren,o.sel,o.upd,o.ref,o.exe,o.fbk,o.rea)
 NOT IN
 --      (SELECT d.alt,d.aud,d.com,d.del,d.gra,d.ind,d.ins,d.loc,d.ren,d.sel,d.upd,d.ref,d.exe,d.fbk
,d.rea FROM all_def_audit_opts d)
 ORDER BY
       1, 2

11:29:20 1c.44
Elapsed Hours so far:    0.118
Elapsed Hours so far: .118

Elapsed: 00:00:00.00

11:29:20 1c "00052_edb360_323688_1c_44_object_auditing_options.html"
Elapsed Hours so far:    0.118

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:20 1c "Auditing"
11:29:20 Statement Auditing Options

SELECT /*+  NO_MERGE  */ /* 1c.45 */
       *
  FROM dba_stmt_audit_opts
 ORDER BY
       1 NULLS FIRST, 2 NULLS FIRST

11:29:20 1c.45
Elapsed Hours so far:    0.118
Elapsed Hours so far: .118

Elapsed: 00:00:00.00

11:29:20 1c "00053_edb360_323688_1c_45_statement_auditing_options.html"
Elapsed Hours so far:    0.118

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:20 1c "Auditing"
11:29:20 System Privileges Auditing Options

SELECT /*+  NO_MERGE  */ /* 1c.46 */
       *
  FROM dba_priv_audit_opts
 ORDER BY
       1 NULLS FIRST, 2 NULLS FIRST

11:29:20 1c.46
Elapsed Hours so far:    0.118
Elapsed Hours so far: .118

Elapsed: 00:00:00.00

11:29:20 1c "00054_edb360_323688_1c_46_system_privileges_auditing_options.html"
Elapsed Hours so far:    0.118

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:20 1c "Auditing"
11:29:20 Audit related Initialization Parameters

-- provided by Simon Pane
SELECT /*+  NO_MERGE  */ /* 1c.47 */
       inst_id, name "PARAMETER", value, isdefault, ismodified
  FROM gv$system_parameter2
 WHERE name LIKE '%audit%'
 ORDER BY 2,1,3

11:29:20 1c.47
Elapsed Hours so far:    0.118
Elapsed Hours so far: .118

Elapsed: 00:00:00.00

11:29:20 1c "00055_edb360_323688_1c_47_audit_related_initialization_parameters.html"
Elapsed Hours so far:    0.118

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:20 1c "Auditing"
11:29:20 Unified Auditing

-- provided by Simon Pane
SELECT /*+  NO_MERGE  */ /* 1c.48 */
       value "Unified Auditing"
  FROM v$option
 WHERE parameter = 'Unified Auditing'

11:29:20 1c.48
Elapsed Hours so far:    0.118
Elapsed Hours so far: .118

Elapsed: 00:00:00.00

11:29:20 1c "00056_edb360_323688_1c_48_unified_auditing.html"
Elapsed Hours so far:    0.118

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:20 1c "Auditing"
11:29:20 Audit Configuration

-- provided by Simon Pane
SELECT /*+  NO_MERGE  */ /* 1c.49 */
       *
  FROM dba_audit_mgmt_config_params
 ORDER BY 1,2

11:29:20 1c.49
Elapsed Hours so far:    0.118
Elapsed Hours so far: .118

Elapsed: 00:00:00.00

11:29:20 1c "00057_edb360_323688_1c_49_audit_configuration.html"
Elapsed Hours so far:    0.118

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:21 1c "Auditing"
11:29:21 Audit Trail Locations

-- provided by Simon Pane
SELECT /*+  NO_MERGE  */ /* 1c.50 */
       SUBSTR(owner||'.'||table_name,1,30) audit_trail, tablespace_name
  FROM dba_tables
 --WHERE table_name IN ('AUD$','AUDIT$','FGA$','FGA_LOG$')
 WHERE table_name IN ('AUD$','FGA_LOG$')
    OR table_name IN ('UNIFIED_AUDIT_TRAIL','CDB_UNIFIED_AUDIT_TRAIL','V_$UNIFIED_AUDIT_TRAIL','GV_$
UNIFIED_AUDIT_TRAIL') -- 12c UAT
 ORDER BY 1,2

11:29:21 1c.50
Elapsed Hours so far:    0.118
Elapsed Hours so far: .118

Elapsed: 00:00:00.00

11:29:21 1c "00058_edb360_323688_1c_50_audit_trail_locations.html"
Elapsed Hours so far:    0.118

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:21 1c "Auditing"
11:29:21 Object Level Privileges (Audit Trail)

-- provided by Simon Pane
SELECT /*+  NO_MERGE  */ /* 1c.51 */
       owner || '.' || table_name "TABLE", grantee, privilege, grantable
  FROM dba_tab_privs
 WHERE (   table_name IN ('AUD$','AUDIT$','FGA$','FGA_LOG$')
        OR table_name IN ('UNIFIED_AUDIT_TRAIL','CDB_UNIFIED_AUDIT_TRAIL','V_$UNIFIED_AUDIT_TRAIL','
GV_$UNIFIED_AUDIT_TRAIL') -- 12c UAT
       )
   AND grantee NOT IN ('SYS','SYSTEM','DBA','AUDIT_ADMIN','AUDIT_VIEWER')
   AND owner IN ('SYS','SYSTEM')
 ORDER BY table_name, owner, grantee, privilege

11:29:21 1c.51
Elapsed Hours so far:    0.118
Elapsed Hours so far: .118

Elapsed: 00:00:00.00

11:29:21 1c "00059_edb360_323688_1c_51_object_level_privileges_audit_trail.html"
Elapsed Hours so far:    0.118

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:21 1d "Memory"
11:29:21 SGA

SELECT /*+ RESULT_CACHE */
       inst_id,
       name,
       value,
       CASE
       WHEN value > POWER(2,50) THEN ROUND(value/POWER(2,50),1)||' P'
       WHEN value > POWER(2,40) THEN ROUND(value/POWER(2,40),1)||' T'
       WHEN value > POWER(2,30) THEN ROUND(value/POWER(2,30),1)||' G'
       WHEN value > POWER(2,20) THEN ROUND(value/POWER(2,20),1)||' M'
       WHEN value > POWER(2,10) THEN ROUND(value/POWER(2,10),1)||' K'
       ELSE value||' B' END approx
  FROM gv$sga
 ORDER BY
       name,
       inst_id

11:29:21 1d.52
Elapsed Hours so far:    0.118
Elapsed Hours so far: .118

Elapsed: 00:00:00.00

11:29:21 1d "00060_edb360_323688_1d_52_sga.html"
Elapsed Hours so far:    0.118

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:21 1d "Memory"
11:29:21 SGA Info

SELECT /*+  NO_MERGE  */ /* 1d.53 */
       inst_id,
       name,
       bytes,
       CASE
       WHEN bytes > POWER(2,50) THEN ROUND(bytes/POWER(2,50),1)||' P'
       WHEN bytes > POWER(2,40) THEN ROUND(bytes/POWER(2,40),1)||' T'
       WHEN bytes > POWER(2,30) THEN ROUND(bytes/POWER(2,30),1)||' G'
       WHEN bytes > POWER(2,20) THEN ROUND(bytes/POWER(2,20),1)||' M'
       WHEN bytes > POWER(2,10) THEN ROUND(bytes/POWER(2,10),1)||' K'
       ELSE bytes||' B' END approx,
       resizeable
  FROM gv$sgainfo
 ORDER BY
       name,
       inst_id

11:29:21 1d.53
Elapsed Hours so far:    0.118
Elapsed Hours so far: .118

Elapsed: 00:00:00.00

11:29:21 1d "00061_edb360_323688_1d_53_sga_info.html"
Elapsed Hours so far:    0.118

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:21 1d "Memory"
11:29:21 SGA Stat

SELECT /*+  NO_MERGE  */ /* 1d.54 */
       pool,
       name,
       inst_id,
       bytes,
       CASE
       WHEN bytes > POWER(2,50) THEN ROUND(bytes/POWER(2,50),1)||' P'
       WHEN bytes > POWER(2,40) THEN ROUND(bytes/POWER(2,40),1)||' T'
       WHEN bytes > POWER(2,30) THEN ROUND(bytes/POWER(2,30),1)||' G'
       WHEN bytes > POWER(2,20) THEN ROUND(bytes/POWER(2,20),1)||' M'
       WHEN bytes > POWER(2,10) THEN ROUND(bytes/POWER(2,10),1)||' K'
       ELSE bytes||' B' END approx
  FROM gv$sgastat
 ORDER BY
       pool NULLS FIRST,
       name,
       inst_id

11:29:21 1d.54
Elapsed Hours so far:    0.118
Elapsed Hours so far: .118

Elapsed: 00:00:00.00

11:29:21 1d "00062_edb360_323688_1d_54_sga_stat.html"
Elapsed Hours so far:    0.118

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:22 1d "Memory"
11:29:22 PGA Stat

SELECT /*+  NO_MERGE  */ /* 1d.55 */
       inst_id,
       name,
       value,
       unit,
       CASE unit WHEN 'bytes' THEN
       CASE
       WHEN value > POWER(2,50) THEN ROUND(value/POWER(2,50),1)||' P'
       WHEN value > POWER(2,40) THEN ROUND(value/POWER(2,40),1)||' T'
       WHEN value > POWER(2,30) THEN ROUND(value/POWER(2,30),1)||' G'
       WHEN value > POWER(2,20) THEN ROUND(value/POWER(2,20),1)||' M'
       WHEN value > POWER(2,10) THEN ROUND(value/POWER(2,10),1)||' K'
       ELSE value||' B' END
       END approx
  FROM gv$pgastat
 ORDER BY
       name,
       inst_id

11:29:22 1d.55
Elapsed Hours so far:    0.118
Elapsed Hours so far: .118

Elapsed: 00:00:00.01

11:29:22 1d "00063_edb360_323688_1d_55_pga_stat.html"
Elapsed Hours so far:    0.118

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:22 1d "Memory"
11:29:22 Memory Dynamic Components

-- requested by Rodrigo Righetti
SELECT /*+  NO_MERGE  */ /* 1d.56 */
       *
  FROM gv$memory_dynamic_components


11:29:22 1d.56
Elapsed Hours so far:    0.118
Elapsed Hours so far: .118

Elapsed: 00:00:00.00

11:29:22 1d "00064_edb360_323688_1d_56_memory_dynamic_components.html"
Elapsed Hours so far:    0.118

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:22 1d "Memory"
11:29:22 Memory Target Advice

-- requested by Rodrigo Righetti
SELECT /*+  NO_MERGE  */ /* 1d.57 */
       *
  FROM gv$memory_target_advice


11:29:22 1d.57
Elapsed Hours so far:    0.118
Elapsed Hours so far: .118

Elapsed: 00:00:00.00

11:29:22 1d "00065_edb360_323688_1d_57_memory_target_advice.html"
Elapsed Hours so far:    0.118

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:22 1d "Memory"
11:29:22 SGA Target Advice

-- requested by Rodrigo Righetti
SELECT /*+  NO_MERGE  */ /* 1d.58 */
       *
  FROM gv$sga_target_advice


11:29:22 1d.58
Elapsed Hours so far:    0.118
Elapsed Hours so far: .118

Elapsed: 00:00:00.00

11:29:22 1d "00066_edb360_323688_1d_58_sga_target_advice.html"
Elapsed Hours so far:    0.118

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:22 1d "Memory"
11:29:22 PGA Target Advice

-- requested by Rodrigo Righetti
SELECT /*+  NO_MERGE  */ /* 1d.59 */
       *
  FROM gv$pga_target_advice


11:29:22 1d.59
Elapsed Hours so far:    0.118
Elapsed Hours so far: .118

Elapsed: 00:00:00.00

11:29:22 1d "00067_edb360_323688_1d_59_pga_target_advice.html"
Elapsed Hours so far:    0.118

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:22 1d "Memory"
11:29:22 SQL Workarea Histogram

-- requested by Dimas Chbane, expanded by Abel Macias
-- replaced V dollar view with historic
WITH
totals AS (
  SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */
         /* 1d.60 */
        con_id,
        INSTANCE_NUMBER,
        LOW_OPTIMAL_SIZE lnum,
        HIGH_OPTIMAL_SIZE+1 hnum,
        SUM(OPTIMAL_EXECUTIONS) optimal ,
        SUM(ONEPASS_EXECUTIONS) onepass ,
        SUM(MULTIPASSES_EXECUTIONS) multipasses,
        SUM(TOTAL_EXECUTIONS) totex
   FROM DBA_HIST_SQL_WORKAREA_HSTGRM
  WHERE snap_id BETWEEN 3473 AND 4962
    AND dbid = 2109323688
  GROUP BY
        con_id,
        INSTANCE_NUMBER,
        LOW_OPTIMAL_SIZE,
        HIGH_OPTIMAL_SIZE
    )
SELECT /*+  NO_MERGE  */ /* 1d.60 */
  con_id,
  INSTANCE_NUMBER,
  (case when lnum between 1024           and 1024*1024-1                then to_char(round(lnum /102
4),'9999') ||' Kb'
        when lnum between 1024*1024      and 1024*1024*1024-1           then to_char(round(lnum /102
4/1024),'9999') ||' Mb'
        when lnum between 1024*1024*1024 and 1024*1024*1024*1024-1      then to_char(round(lnum /102
4/1024/1024),'9999') ||' Gb'
        when lnum between 1024*1024*1024 and 1024*1024*1024*1024*1024-1 then to_char(round(lnum /102
4/1024/1024/1024),'9999') ||' Tb'
   else to_char(lnum) end) LOW_OPTIMAL_SIZE,
  (case when hnum between 1024           and 1024*1024-1                then to_char(round(hnum /102
4),'9999') ||' Kb'
        when hnum between 1024*1024      and 1024*1024*1024-1           then to_char(round(hnum /102
4/1024),'9999') ||' Mb'
        when hnum between 1024*1024*1024 and 1024*1024*1024*1024-1      then to_char(round(hnum /102
4/1024/1024),'9999') ||' Gb'
        when hnum between 1024*1024*1024 and 1024*1024*1024*1024*1024-1 then to_char(round(hnum /102
4/1024/1024/1024),'9999') ||' Tb'
   else to_char(hnum) end) HIGH_OPTIMAL_SIZE,
  optimal OPTIMAL_EXECUTIONS,
  onepass ONEPASS_EXECUTIONS,
  multipasses MULTIPASSES_EXECUTIONS,
  totex TOTAL_EXECUTIONS
FROM totals
ORDER BY con_id,
         INSTANCE_NUMBER,
         lnum

11:29:22 1d.60
Elapsed Hours so far:    0.118
Elapsed Hours so far: .118

Elapsed: 00:00:00.00

11:29:22 1d "00068_edb360_323688_1d_60_sql_workarea_histogram.html"
Elapsed Hours so far:    0.119

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:23 1d "Memory"
11:29:23 Memory Resize Operations

-- requested by Rodrigo Righetti
SELECT /*+  NO_MERGE  */ /* 1d.61 */
       *
  FROM gv$memory_resize_ops
 ORDER BY
       inst_id,
       start_time DESC,
       component

11:29:23 1d.61
Elapsed Hours so far:    0.119
Elapsed Hours so far: .119

Elapsed: 00:00:00.00

11:29:23 1d "00069_edb360_323688_1d_61_memory_resize_operations.html"
Elapsed Hours so far:    0.119

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:23 1d "Memory"
11:29:23 Memory Current Resize Operations

-- requested by Rodrigo Righetti
SELECT /*+  NO_MERGE  */ /* 1d.62 */
       *
  FROM gv$memory_current_resize_ops
 ORDER BY
       inst_id,
       start_time DESC,
       component

11:29:23 1d.62
Elapsed Hours so far:    0.119
Elapsed Hours so far: .119

Elapsed: 00:00:00.00

11:29:23 1d "00070_edb360_323688_1d_62_memory_current_resize_operations.html"
Elapsed Hours so far:    0.119

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:23 1d "Memory"
11:29:23 Memory Resize Operations Hist

-- requested by Rodrigo Righetti
SELECT /*+  NO_MERGE  */ /* 1d.63 */
       *
  FROM dba_hist_memory_resize_ops
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 ORDER BY
       instance_number,
       start_time DESC,
       component

11:29:23 1d.63
Elapsed Hours so far:    0.119
Elapsed Hours so far: .119

Elapsed: 00:00:00.00

11:29:23 1d "00071_edb360_323688_1d_63_memory_resize_operations_hist.html"
Elapsed Hours so far:    0.119

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:24 1d "Memory"
11:29:24 Memory Target Advice Hist

-- requested by Rodrigo Righetti
SELECT /*+  NO_MERGE  */ /* 1d.64 */
       *
  FROM dba_hist_memory_target_advice
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 ORDER BY
       instance_number,
       snap_id DESC,
       memory_size,
       memory_size_factor

11:29:24 1d.64
Elapsed Hours so far:    0.119
Elapsed Hours so far: .119

Elapsed: 00:00:00.00

11:29:24 1d "00072_edb360_323688_1d_64_memory_target_advice_hist.html"
Elapsed Hours so far:    0.119

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:24 1e "Resources (as per AWR and MEM)"
11:29:24 CPU Demand Percentiles (AWR)

WITH
cpu_per_inst_and_sample AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 1e.65 */
       h.snap_id,
       h.dbid,
       h.instance_number,
       h.sample_id,
       COUNT(*) aas_on_cpu_and_resmgr,
       SUM(CASE h.session_state WHEN 'ON CPU' THEN 1 ELSE 0 END) aas_on_cpu,
       SUM(CASE h.event WHEN 'resmgr:cpu quantum' THEN 1 ELSE 0 END) aas_resmgr_cpu_quantum,
       MIN(s.begin_interval_time) begin_interval_time,
       MAX(s.end_interval_time) end_interval_time
  FROM dba_hist_active_sess_history h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND (h.session_state = 'ON CPU' OR h.event = 'resmgr:cpu quantum')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
 GROUP BY
       h.snap_id,
       h.dbid,
       h.instance_number,
       h.sample_id
),
cpu_per_db_and_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.65 */
       dbid,
       instance_number,
       MIN(begin_interval_time)                                               begin_interval_time,
       MAX(end_interval_time)                                                 end_interval_time,
       COUNT(DISTINCT snap_id)                                                snap_shots,
       MAX(aas_on_cpu_and_resmgr)                                             aas_on_cpu_and_resmgr_
max,
       MAX(aas_on_cpu)                                                        aas_on_cpu_max,
       MAX(aas_resmgr_cpu_quantum)                                            aas_resmgr_cpu_quantum
_max,
       PERCENTILE_DISC(0.9999) WITHIN GROUP (ORDER BY aas_on_cpu_and_resmgr)  aas_on_cpu_and_resmgr_
9999,
       PERCENTILE_DISC(0.9999) WITHIN GROUP (ORDER BY aas_on_cpu)             aas_on_cpu_9999,
       PERCENTILE_DISC(0.9999) WITHIN GROUP (ORDER BY aas_resmgr_cpu_quantum) aas_resmgr_cpu_quantum
_9999,
       PERCENTILE_DISC(0.9990) WITHIN GROUP (ORDER BY aas_on_cpu_and_resmgr)  aas_on_cpu_and_resmgr_
999,
       PERCENTILE_DISC(0.9990) WITHIN GROUP (ORDER BY aas_on_cpu)             aas_on_cpu_999,
       PERCENTILE_DISC(0.9990) WITHIN GROUP (ORDER BY aas_resmgr_cpu_quantum) aas_resmgr_cpu_quantum
_999,
       PERCENTILE_DISC(0.9900) WITHIN GROUP (ORDER BY aas_on_cpu_and_resmgr)  aas_on_cpu_and_resmgr_
99,
       PERCENTILE_DISC(0.9900) WITHIN GROUP (ORDER BY aas_on_cpu)             aas_on_cpu_99,
       PERCENTILE_DISC(0.9900) WITHIN GROUP (ORDER BY aas_resmgr_cpu_quantum) aas_resmgr_cpu_quantum
_99,
       PERCENTILE_DISC(0.9700) WITHIN GROUP (ORDER BY aas_on_cpu_and_resmgr)  aas_on_cpu_and_resmgr_
97,
       PERCENTILE_DISC(0.9700) WITHIN GROUP (ORDER BY aas_on_cpu)             aas_on_cpu_97,
       PERCENTILE_DISC(0.9700) WITHIN GROUP (ORDER BY aas_resmgr_cpu_quantum) aas_resmgr_cpu_quantum
_97,
       PERCENTILE_DISC(0.9500) WITHIN GROUP (ORDER BY aas_on_cpu_and_resmgr)  aas_on_cpu_and_resmgr_
95,
       PERCENTILE_DISC(0.9500) WITHIN GROUP (ORDER BY aas_on_cpu)             aas_on_cpu_95,
       PERCENTILE_DISC(0.9500) WITHIN GROUP (ORDER BY aas_resmgr_cpu_quantum) aas_resmgr_cpu_quantum
_95,
       PERCENTILE_DISC(0.9000) WITHIN GROUP (ORDER BY aas_on_cpu_and_resmgr)  aas_on_cpu_and_resmgr_
90,
       PERCENTILE_DISC(0.9000) WITHIN GROUP (ORDER BY aas_on_cpu)             aas_on_cpu_90,
       PERCENTILE_DISC(0.9000) WITHIN GROUP (ORDER BY aas_resmgr_cpu_quantum) aas_resmgr_cpu_quantum
_90,
       PERCENTILE_DISC(0.7500) WITHIN GROUP (ORDER BY aas_on_cpu_and_resmgr)  aas_on_cpu_and_resmgr_
75,
       PERCENTILE_DISC(0.7500) WITHIN GROUP (ORDER BY aas_on_cpu)             aas_on_cpu_75,
       PERCENTILE_DISC(0.7500) WITHIN GROUP (ORDER BY aas_resmgr_cpu_quantum) aas_resmgr_cpu_quantum
_75,
       MEDIAN(aas_on_cpu_and_resmgr)                                          aas_on_cpu_and_resmgr_
med,
       MEDIAN(aas_on_cpu)                                                     aas_on_cpu_med,
       MEDIAN(aas_resmgr_cpu_quantum)                                         aas_resmgr_cpu_quantum
_med,
       ROUND(AVG(aas_on_cpu_and_resmgr), 1)                                   aas_on_cpu_and_resmgr_
avg,
       ROUND(AVG(aas_on_cpu), 1)                                              aas_on_cpu_avg,
       ROUND(AVG(aas_resmgr_cpu_quantum), 1)                                  aas_resmgr_cpu_quantum
_avg
  FROM cpu_per_inst_and_sample
 GROUP BY
       dbid,
       instance_number
),
cpu_per_inst_and_perc AS (
SELECT dbid, 01 order_by, 'Maximum or peak' metric, instance_number, aas_on_cpu_max  on_cpu, aas_on_
cpu_and_resmgr_max  on_cpu_and_resmgr, aas_resmgr_cpu_quantum_max  resmgr_cpu_quantum, begin_interva
l_time, end_interval_time, snap_shots FROM cpu_per_db_and_inst
UNION ALL
SELECT dbid, 02 order_by, '99.99th percntl' metric, instance_number, aas_on_cpu_9999 on_cpu, aas_on_
cpu_and_resmgr_9999 on_cpu_and_resmgr, aas_resmgr_cpu_quantum_9999 resmgr_cpu_quantum, begin_interva
l_time, end_interval_time, snap_shots FROM cpu_per_db_and_inst
UNION ALL
SELECT dbid, 03 order_by, '99.9th percentl' metric, instance_number, aas_on_cpu_999  on_cpu, aas_on_
cpu_and_resmgr_999  on_cpu_and_resmgr, aas_resmgr_cpu_quantum_999  resmgr_cpu_quantum, begin_interva
l_time, end_interval_time, snap_shots FROM cpu_per_db_and_inst
UNION ALL
SELECT dbid, 04 order_by, '99th percentile' metric, instance_number, aas_on_cpu_99   on_cpu, aas_on_
cpu_and_resmgr_99   on_cpu_and_resmgr, aas_resmgr_cpu_quantum_99   resmgr_cpu_quantum, begin_interva
l_time, end_interval_time, snap_shots FROM cpu_per_db_and_inst
UNION ALL
SELECT dbid, 05 order_by, '97th percentile' metric, instance_number, aas_on_cpu_97   on_cpu, aas_on_
cpu_and_resmgr_97   on_cpu_and_resmgr, aas_resmgr_cpu_quantum_97   resmgr_cpu_quantum, begin_interva
l_time, end_interval_time, snap_shots FROM cpu_per_db_and_inst
UNION ALL
SELECT dbid, 06 order_by, '95th percentile' metric, instance_number, aas_on_cpu_95   on_cpu, aas_on_
cpu_and_resmgr_95   on_cpu_and_resmgr, aas_resmgr_cpu_quantum_95   resmgr_cpu_quantum, begin_interva
l_time, end_interval_time, snap_shots FROM cpu_per_db_and_inst
UNION ALL
SELECT dbid, 07 order_by, '90th percentile' metric, instance_number, aas_on_cpu_90   on_cpu, aas_on_
cpu_and_resmgr_90   on_cpu_and_resmgr, aas_resmgr_cpu_quantum_90   resmgr_cpu_quantum, begin_interva
l_time, end_interval_time, snap_shots FROM cpu_per_db_and_inst
UNION ALL
SELECT dbid, 08 order_by, '75th percentile' metric, instance_number, aas_on_cpu_75   on_cpu, aas_on_
cpu_and_resmgr_75   on_cpu_and_resmgr, aas_resmgr_cpu_quantum_75   resmgr_cpu_quantum, begin_interva
l_time, end_interval_time, snap_shots FROM cpu_per_db_and_inst
UNION ALL
SELECT dbid, 09 order_by, 'Median'          metric, instance_number, aas_on_cpu_med  on_cpu, aas_on_
cpu_and_resmgr_med  on_cpu_and_resmgr, aas_resmgr_cpu_quantum_med  resmgr_cpu_quantum, begin_interva
l_time, end_interval_time, snap_shots FROM cpu_per_db_and_inst
UNION ALL
SELECT dbid, 10 order_by, 'Average'         metric, instance_number, aas_on_cpu_avg  on_cpu, aas_on_
cpu_and_resmgr_avg  on_cpu_and_resmgr, aas_resmgr_cpu_quantum_avg  resmgr_cpu_quantum, begin_interva
l_time, end_interval_time, snap_shots FROM cpu_per_db_and_inst
),
cpu_per_db_and_perc AS (
SELECT dbid,
       order_by,
       metric,
       TO_NUMBER(NULL) instance_number,
       SUM(on_cpu) on_cpu,
       SUM(on_cpu_and_resmgr) on_cpu_and_resmgr,
       SUM(resmgr_cpu_quantum) resmgr_cpu_quantum,
       MIN(begin_interval_time) begin_interval_time,
       MAX(end_interval_time) end_interval_time,
       SUM(snap_shots) snap_shots
  FROM cpu_per_inst_and_perc
 GROUP BY
       dbid,
       order_by,
       metric
)
SELECT dbid,
       order_by,
       metric,
       instance_number,
       on_cpu,
       on_cpu_and_resmgr,
       resmgr_cpu_quantum,
       TO_CHAR(CAST(begin_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') begin_interval_time,
       TO_CHAR(CAST(end_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') end_interval_time,
       snap_shots,
       ROUND(CAST(end_interval_time AS DATE) - CAST(begin_interval_time AS DATE), 1) days,
       ROUND(snap_shots / (CAST(end_interval_time AS DATE) - CAST(begin_interval_time AS DATE)), 1)
avg_snaps_per_day
  FROM cpu_per_inst_and_perc
 UNION ALL
SELECT dbid,
       order_by,
       metric,
       instance_number,
       on_cpu,
       on_cpu_and_resmgr,
       resmgr_cpu_quantum,
       TO_CHAR(CAST(begin_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') begin_interval_time,
       TO_CHAR(CAST(end_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') end_interval_time,
       snap_shots,
       ROUND(CAST(end_interval_time AS DATE) - CAST(begin_interval_time AS DATE), 1) days,
       ROUND(snap_shots / (CAST(end_interval_time AS DATE) - CAST(begin_interval_time AS DATE)), 1)
avg_snaps_per_day
  FROM cpu_per_db_and_perc
 ORDER BY
       dbid,
       order_by,
       instance_number NULLS LAST

11:29:24 1e.65
Elapsed Hours so far:    0.119
Elapsed Hours so far: .119

Elapsed: 00:00:00.01

11:29:24 1e "00073_edb360_323688_1e_65_cpu_demand_percentiles_awr.html"
Elapsed Hours so far:    0.124

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:41 1e "Resources (as per AWR and MEM)"
11:29:41 CPU Demand Series (Peak) for Cluster

WITH
cpu_per_inst_and_sample AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 1e.66 */
       snap_id,
       0 instance_number,
       MIN(sample_time-numtoDSinterval(extract(second from sample_time),'second')+numtoDSinterval(ro
und(extract(second from sample_time)/10)*10,'second')) sample_time,
       SUM(CASE session_state WHEN 'ON CPU' THEN 1 ELSE 0 END) on_cpu,
       SUM(CASE event WHEN 'resmgr:cpu quantum' THEN 1 ELSE 0 END) resmgr,
       COUNT(*) on_cpu_and_resmgr
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = instance_number
   AND (session_state = 'ON CPU' OR event = 'resmgr:cpu quantum')
 GROUP BY
       snap_id,
       0,
       (sample_time-numtoDSinterval(extract(second from sample_time),'second')+numtoDSinterval(round
(extract(second from sample_time)/10)*10,'second'))
),
cpu_per_inst_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.66 */
       snap_id,
       0 instance_number,
       MIN(sample_time) min_sample_time,
       MAX(sample_time) max_sample_time,
       MAX(on_cpu) on_cpu,
       MAX(resmgr) resmgr,
       MAX(on_cpu_and_resmgr) on_cpu_and_resmgr
  FROM cpu_per_inst_and_sample
 GROUP BY
       snap_id,
       0
)
SELECT snap_id,
       TO_CHAR(MIN(min_sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(max_sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(on_cpu_and_resmgr) on_cpu_and_resmgr,
       SUM(on_cpu) on_cpu,
       SUM(resmgr) resmgr,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM cpu_per_inst_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:29:41 1e.66
Elapsed Hours so far:    0.124
Elapsed Hours so far: .124

Elapsed: 00:00:00.00

11:29:42 1e "00074_edb360_323688_1e_66_cpu_demand_series_peak_for_cluster.html"
11:29:45 1e "00075_edb360_323688_1e_66_cpu_demand_series_peak_for_cluster_line_chart.html"
Elapsed Hours so far:    0.125

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:46 1e "Resources (as per AWR and MEM)"
11:29:46 CPU Demand Series (Peak) for Instance 1

WITH
cpu_per_inst_and_sample AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 1e.66 */
       snap_id,
       instance_number instance_number,
       MIN(sample_time-numtoDSinterval(extract(second from sample_time),'second')+numtoDSinterval(ro
und(extract(second from sample_time)/10)*10,'second')) sample_time,
       SUM(CASE session_state WHEN 'ON CPU' THEN 1 ELSE 0 END) on_cpu,
       SUM(CASE event WHEN 'resmgr:cpu quantum' THEN 1 ELSE 0 END) resmgr,
       COUNT(*) on_cpu_and_resmgr
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 1
   AND (session_state = 'ON CPU' OR event = 'resmgr:cpu quantum')
 GROUP BY
       snap_id,
       instance_number,
       (sample_time-numtoDSinterval(extract(second from sample_time),'second')+numtoDSinterval(round
(extract(second from sample_time)/10)*10,'second'))
),
cpu_per_inst_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.66 */
       snap_id,
       instance_number instance_number,
       MIN(sample_time) min_sample_time,
       MAX(sample_time) max_sample_time,
       MAX(on_cpu) on_cpu,
       MAX(resmgr) resmgr,
       MAX(on_cpu_and_resmgr) on_cpu_and_resmgr
  FROM cpu_per_inst_and_sample
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(min_sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(max_sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(on_cpu_and_resmgr) on_cpu_and_resmgr,
       SUM(on_cpu) on_cpu,
       SUM(resmgr) resmgr,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM cpu_per_inst_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:29:46 1e.67
Elapsed Hours so far:    0.125
Elapsed Hours so far: .125

Elapsed: 00:00:00.00

11:29:46 1e "00076_edb360_323688_1e_67_cpu_demand_series_peak_for_instance_1.html"
11:29:48 1e "00077_edb360_323688_1e_67_cpu_demand_series_peak_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.126

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:49 1e "Resources (as per AWR and MEM)"
11:29:49 CPU Demand Series (Peak) for Instance 2

WITH
cpu_per_inst_and_sample AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 1e.66 */
       snap_id,
       instance_number instance_number,
       MIN(sample_time-numtoDSinterval(extract(second from sample_time),'second')+numtoDSinterval(ro
und(extract(second from sample_time)/10)*10,'second')) sample_time,
       SUM(CASE session_state WHEN 'ON CPU' THEN 1 ELSE 0 END) on_cpu,
       SUM(CASE event WHEN 'resmgr:cpu quantum' THEN 1 ELSE 0 END) resmgr,
       COUNT(*) on_cpu_and_resmgr
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 2
   AND (session_state = 'ON CPU' OR event = 'resmgr:cpu quantum')
 GROUP BY
       snap_id,
       instance_number,
       (sample_time-numtoDSinterval(extract(second from sample_time),'second')+numtoDSinterval(round
(extract(second from sample_time)/10)*10,'second'))
),
cpu_per_inst_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.66 */
       snap_id,
       instance_number instance_number,
       MIN(sample_time) min_sample_time,
       MAX(sample_time) max_sample_time,
       MAX(on_cpu) on_cpu,
       MAX(resmgr) resmgr,
       MAX(on_cpu_and_resmgr) on_cpu_and_resmgr
  FROM cpu_per_inst_and_sample
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(min_sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(max_sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(on_cpu_and_resmgr) on_cpu_and_resmgr,
       SUM(on_cpu) on_cpu,
       SUM(resmgr) resmgr,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM cpu_per_inst_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:29:49 1e.68
Elapsed Hours so far:    0.126
Elapsed Hours so far: .126

Elapsed: 00:00:00.00

11:29:49 1e "00078_edb360_323688_1e_68_cpu_demand_series_peak_for_instance_2.html"
11:29:51 1e "00079_edb360_323688_1e_68_cpu_demand_series_peak_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.127

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:29:53 1e "Resources (as per AWR and MEM)"
11:29:53 CPU Demand Series (Percentile) for Cluster

WITH
cpu_per_inst_and_sample AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 1e.69 */
       snap_id,
       0 instance_number,
       MIN(sample_time-numtoDSinterval(extract(second from sample_time),'second')+numtoDSinterval(ro
und(extract(second from sample_time)/10)*10,'second')) sample_time,
       COUNT(*) on_cpu
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = instance_number
   AND session_state = 'ON CPU'
 GROUP BY
       snap_id,
       0,
       (sample_time-numtoDSinterval(extract(second from sample_time),'second')+numtoDSinterval(round
(extract(second from sample_time)/10)*10,'second'))
),
cpu_per_inst_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.69 */
       snap_id,
       0 instance_number,
       MIN(sample_time) min_sample_time,
       MAX(sample_time) max_sample_time,
       MAX(on_cpu)                                          on_cpu_max,
       PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY on_cpu) on_cpu_99p,
       PERCENTILE_DISC(0.97) WITHIN GROUP (ORDER BY on_cpu) on_cpu_97p,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY on_cpu) on_cpu_95p,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY on_cpu) on_cpu_90p,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY on_cpu) on_cpu_75p,
       ROUND(MEDIAN(on_cpu), 1)                             on_cpu_med,
       ROUND(AVG(on_cpu), 1)                                on_cpu_avg
  FROM cpu_per_inst_and_sample
 GROUP BY
       snap_id,
       0
)
SELECT snap_id,
       TO_CHAR(MIN(min_sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(max_sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(on_cpu_max) on_cpu_max,
       SUM(on_cpu_99p) on_cpu_99p,
       SUM(on_cpu_97p) on_cpu_97p,
       SUM(on_cpu_95p) on_cpu_95p,
       SUM(on_cpu_90p) on_cpu_90p,
       SUM(on_cpu_75p) on_cpu_75p,
       SUM(on_cpu_med) on_cpu_med,
       SUM(on_cpu_avg) on_cpu_avg,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM cpu_per_inst_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:29:53 1e.69
Elapsed Hours so far:    0.127
Elapsed Hours so far: .127

Elapsed: 00:00:00.00

11:29:53 1e "00080_edb360_323688_1e_69_cpu_demand_series_percentile_for_cluster.html"
11:30:00 1e "00081_edb360_323688_1e_69_cpu_demand_series_percentile_for_cluster_line_chart.html"
Elapsed Hours so far:    0.129

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:30:01 1e "Resources (as per AWR and MEM)"
11:30:01 CPU Demand Series (Percentile) for Instance 1

WITH
cpu_per_inst_and_sample AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 1e.69 */
       snap_id,
       instance_number instance_number,
       MIN(sample_time-numtoDSinterval(extract(second from sample_time),'second')+numtoDSinterval(ro
und(extract(second from sample_time)/10)*10,'second')) sample_time,
       COUNT(*) on_cpu
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 1
   AND session_state = 'ON CPU'
 GROUP BY
       snap_id,
       instance_number,
       (sample_time-numtoDSinterval(extract(second from sample_time),'second')+numtoDSinterval(round
(extract(second from sample_time)/10)*10,'second'))
),
cpu_per_inst_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.69 */
       snap_id,
       instance_number instance_number,
       MIN(sample_time) min_sample_time,
       MAX(sample_time) max_sample_time,
       MAX(on_cpu)                                          on_cpu_max,
       PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY on_cpu) on_cpu_99p,
       PERCENTILE_DISC(0.97) WITHIN GROUP (ORDER BY on_cpu) on_cpu_97p,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY on_cpu) on_cpu_95p,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY on_cpu) on_cpu_90p,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY on_cpu) on_cpu_75p,
       ROUND(MEDIAN(on_cpu), 1)                             on_cpu_med,
       ROUND(AVG(on_cpu), 1)                                on_cpu_avg
  FROM cpu_per_inst_and_sample
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(min_sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(max_sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(on_cpu_max) on_cpu_max,
       SUM(on_cpu_99p) on_cpu_99p,
       SUM(on_cpu_97p) on_cpu_97p,
       SUM(on_cpu_95p) on_cpu_95p,
       SUM(on_cpu_90p) on_cpu_90p,
       SUM(on_cpu_75p) on_cpu_75p,
       SUM(on_cpu_med) on_cpu_med,
       SUM(on_cpu_avg) on_cpu_avg,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM cpu_per_inst_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:30:01 1e.70
Elapsed Hours so far:    0.129
Elapsed Hours so far: .129

Elapsed: 00:00:00.00

11:30:01 1e "00082_edb360_323688_1e_70_cpu_demand_series_percentile_for_instance_1.html"
11:30:08 1e "00083_edb360_323688_1e_70_cpu_demand_series_percentile_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.131

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:30:09 1e "Resources (as per AWR and MEM)"
11:30:09 CPU Demand Series (Percentile) for Instance 2

WITH
cpu_per_inst_and_sample AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 1e.69 */
       snap_id,
       instance_number instance_number,
       MIN(sample_time-numtoDSinterval(extract(second from sample_time),'second')+numtoDSinterval(ro
und(extract(second from sample_time)/10)*10,'second')) sample_time,
       COUNT(*) on_cpu
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 2
   AND session_state = 'ON CPU'
 GROUP BY
       snap_id,
       instance_number,
       (sample_time-numtoDSinterval(extract(second from sample_time),'second')+numtoDSinterval(round
(extract(second from sample_time)/10)*10,'second'))
),
cpu_per_inst_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.69 */
       snap_id,
       instance_number instance_number,
       MIN(sample_time) min_sample_time,
       MAX(sample_time) max_sample_time,
       MAX(on_cpu)                                          on_cpu_max,
       PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY on_cpu) on_cpu_99p,
       PERCENTILE_DISC(0.97) WITHIN GROUP (ORDER BY on_cpu) on_cpu_97p,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY on_cpu) on_cpu_95p,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY on_cpu) on_cpu_90p,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY on_cpu) on_cpu_75p,
       ROUND(MEDIAN(on_cpu), 1)                             on_cpu_med,
       ROUND(AVG(on_cpu), 1)                                on_cpu_avg
  FROM cpu_per_inst_and_sample
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(min_sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(max_sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(on_cpu_max) on_cpu_max,
       SUM(on_cpu_99p) on_cpu_99p,
       SUM(on_cpu_97p) on_cpu_97p,
       SUM(on_cpu_95p) on_cpu_95p,
       SUM(on_cpu_90p) on_cpu_90p,
       SUM(on_cpu_75p) on_cpu_75p,
       SUM(on_cpu_med) on_cpu_med,
       SUM(on_cpu_avg) on_cpu_avg,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM cpu_per_inst_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:30:09 1e.71
Elapsed Hours so far:    0.131
Elapsed Hours so far: .131

Elapsed: 00:00:00.00

11:30:09 1e "00084_edb360_323688_1e_71_cpu_demand_series_percentile_for_instance_2.html"
11:30:11 1e "00085_edb360_323688_1e_71_cpu_demand_series_percentile_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.132

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:30:12 1e "Resources (as per AWR and MEM)"
11:30:12 Memory Size Percentiles (AWR)

WITH mem_per_inst_and_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 1e.72 */
       s.snap_id,
       s.dbid,
       s.instance_number,
       SUM(g.value) sga_bytes,
       MAX(p.value) pga_bytes,
       SUM(g.value) + MAX(p.value) mem_bytes,
       MIN(s.begin_interval_time) begin_interval_time,
       MAX(s.end_interval_time) end_interval_time
  FROM dba_hist_snapshot s,
       dba_hist_sga g,
       dba_hist_pgastat p
 WHERE s.snap_id BETWEEN 3473 AND 4962
   AND s.dbid = 2109323688
   AND g.snap_id = s.snap_id
   AND g.dbid = s.dbid
   AND g.instance_number = s.instance_number
   AND p.snap_id = s.snap_id
   AND p.dbid = s.dbid
   AND p.instance_number = s.instance_number
   AND p.name = 'total PGA allocated'
 GROUP BY
       s.snap_id,
       s.dbid,
       s.instance_number
),
mem_per_db_and_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.72 */
       dbid,
       instance_number,
       MIN(begin_interval_time)                                begin_interval_time,
       MAX(end_interval_time)                                  end_interval_time,
       COUNT(DISTINCT snap_id)                                 snap_shots,
       MAX(mem_bytes)                                          mem_bytes_max,
       MAX(sga_bytes)                                          sga_bytes_max,
       MAX(pga_bytes)                                          pga_bytes_max,
       PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY mem_bytes) mem_bytes_99,
       PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY sga_bytes) sga_bytes_99,
       PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY pga_bytes) pga_bytes_99,
       PERCENTILE_DISC(0.97) WITHIN GROUP (ORDER BY mem_bytes) mem_bytes_97,
       PERCENTILE_DISC(0.97) WITHIN GROUP (ORDER BY sga_bytes) sga_bytes_97,
       PERCENTILE_DISC(0.97) WITHIN GROUP (ORDER BY pga_bytes) pga_bytes_97,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY mem_bytes) mem_bytes_95,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY sga_bytes) sga_bytes_95,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY pga_bytes) pga_bytes_95,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY mem_bytes) mem_bytes_90,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY sga_bytes) sga_bytes_90,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY pga_bytes) pga_bytes_90,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY mem_bytes) mem_bytes_75,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY sga_bytes) sga_bytes_75,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY pga_bytes) pga_bytes_75,
       MEDIAN(mem_bytes)                                       mem_bytes_med,
       MEDIAN(sga_bytes)                                       sga_bytes_med,
       MEDIAN(pga_bytes)                                       pga_bytes_med,
       ROUND(AVG(mem_bytes), 1)                                mem_bytes_avg,
       ROUND(AVG(sga_bytes), 1)                                sga_bytes_avg,
       ROUND(AVG(pga_bytes), 1)                                pga_bytes_avg
  FROM mem_per_inst_and_snap
 GROUP BY
       dbid,
       instance_number
),
mem_per_inst_and_perc AS (
SELECT dbid, 01 order_by, 'Maximum or peak' metric, instance_number, mem_bytes_max mem_bytes, sga_by
tes_max sga_bytes, pga_bytes_max pga_bytes, begin_interval_time, end_interval_time, snap_shots FROM
mem_per_db_and_inst
 UNION ALL
SELECT dbid, 02 order_by, '99th percentile' metric, instance_number, mem_bytes_99  mem_bytes, sga_by
tes_99  sga_bytes, pga_bytes_99  pga_bytes, begin_interval_time, end_interval_time, snap_shots FROM
mem_per_db_and_inst
 UNION ALL
SELECT dbid, 03 order_by, '97th percentile' metric, instance_number, mem_bytes_97  mem_bytes, sga_by
tes_97  sga_bytes, pga_bytes_97  pga_bytes, begin_interval_time, end_interval_time, snap_shots FROM
mem_per_db_and_inst
 UNION ALL
SELECT dbid, 04 order_by, '95th percentile' metric, instance_number, mem_bytes_95  mem_bytes, sga_by
tes_95  sga_bytes, pga_bytes_95  pga_bytes, begin_interval_time, end_interval_time, snap_shots FROM
mem_per_db_and_inst
 UNION ALL
SELECT dbid, 05 order_by, '90th percentile' metric, instance_number, mem_bytes_90  mem_bytes, sga_by
tes_90  sga_bytes, pga_bytes_90  pga_bytes, begin_interval_time, end_interval_time, snap_shots FROM
mem_per_db_and_inst
 UNION ALL
SELECT dbid, 06 order_by, '75th percentile' metric, instance_number, mem_bytes_75  mem_bytes, sga_by
tes_75  sga_bytes, pga_bytes_75  pga_bytes, begin_interval_time, end_interval_time, snap_shots FROM
mem_per_db_and_inst
 UNION ALL
SELECT dbid, 07 order_by, 'Median'          metric, instance_number, mem_bytes_med mem_bytes, sga_by
tes_med sga_bytes, pga_bytes_med pga_bytes, begin_interval_time, end_interval_time, snap_shots FROM
mem_per_db_and_inst
 UNION ALL
SELECT dbid, 08 order_by, 'Average'         metric, instance_number, mem_bytes_avg mem_bytes, sga_by
tes_avg sga_bytes, pga_bytes_avg pga_bytes, begin_interval_time, end_interval_time, snap_shots FROM
mem_per_db_and_inst
),
mem_per_db_and_perc AS (
SELECT dbid,
       order_by,
       metric,
       TO_NUMBER(NULL) instance_number,
       SUM(mem_bytes) mem_bytes,
       SUM(sga_bytes) sga_bytes,
       SUM(pga_bytes) pga_bytes,
       MIN(begin_interval_time) begin_interval_time,
       MAX(end_interval_time) end_interval_time,
       SUM(snap_shots) snap_shots
  FROM mem_per_inst_and_perc
 GROUP BY
       dbid,
       order_by,
       metric
)
SELECT dbid,
       order_by,
       metric,
       instance_number,
       ROUND(mem_bytes / POWER(2,30), 1) mem_gb,
       ROUND(sga_bytes / POWER(2,30), 1) sga_gb,
       ROUND(pga_bytes / POWER(2,30), 1) pga_gb,
       TO_CHAR(CAST(begin_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') begin_interval_time,
       TO_CHAR(CAST(end_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') end_interval_time,
       snap_shots,
       ROUND(CAST(end_interval_time AS DATE) - CAST(begin_interval_time AS DATE), 1) days,
       ROUND(snap_shots / (CAST(end_interval_time AS DATE) - CAST(begin_interval_time AS DATE)), 1)
avg_snaps_per_day
  FROM mem_per_inst_and_perc
 UNION ALL
SELECT dbid,
       order_by,
       metric,
       instance_number,
       ROUND(mem_bytes / POWER(2,30), 1) mem_gb,
       ROUND(sga_bytes / POWER(2,30), 1) sga_gb,
       ROUND(pga_bytes / POWER(2,30), 1) pga_gb,
       TO_CHAR(CAST(begin_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') begin_interval_time,
       TO_CHAR(CAST(end_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') end_interval_time,
       snap_shots,
       ROUND(CAST(end_interval_time AS DATE) - CAST(begin_interval_time AS DATE), 1) days,
       ROUND(snap_shots / (CAST(end_interval_time AS DATE) - CAST(begin_interval_time AS DATE)), 1)
avg_snaps_per_day
  FROM mem_per_db_and_perc
 ORDER BY
       dbid,
       order_by,
       instance_number NULLS LAST

11:30:12 1e.72
Elapsed Hours so far:    0.132
Elapsed Hours so far: .132

Elapsed: 00:00:00.00

11:30:12 1e "00086_edb360_323688_1e_72_memory_size_percentiles_awr.html"
Elapsed Hours so far:    0.133

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:30:14 1e "Resources (as per AWR and MEM)"
11:30:14 Memory Size (MEM)

WITH
par AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.73 */
       d.dbid,
       d.name db_name,
       i.inst_id,
       /* LOWER(SUBSTR(i.host_name||'.', 1, INSTR(i.host_name||'.', '.') - 1)) */
       LPAD(ORA_HASH(SYS_CONTEXT('USERENV', 'SERVER_HOST'),999999),6,'6') host_name,
       i.instance_number,
       i.instance_name,
       SUM(CASE p.name WHEN 'memory_target' THEN TO_NUMBER(value) END) memory_target,
       SUM(CASE p.name WHEN 'memory_max_target' THEN TO_NUMBER(value) END) memory_max_target,
       SUM(CASE p.name WHEN 'sga_target' THEN TO_NUMBER(value) END) sga_target,
       SUM(CASE p.name WHEN 'sga_max_size' THEN TO_NUMBER(value) END) sga_max_size,
       SUM(CASE p.name WHEN 'pga_aggregate_target' THEN TO_NUMBER(value) END) pga_aggregate_target
  FROM gv$instance i,
       gv$database d,
       gv$system_parameter2 p
 WHERE d.inst_id = i.inst_id
   AND p.inst_id = i.inst_id
   AND p.name IN ('memory_target', 'memory_max_target', 'sga_target', 'sga_max_size', 'pga_aggregate
_target')
 GROUP BY
       d.dbid,
       d.name,
       i.inst_id,
       i.host_name,
       i.instance_number,
       i.instance_name
),
sga_max AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.73 */
       inst_id,
       bytes
  FROM gv$sgainfo
 WHERE name = 'Maximum SGA Size'
),
pga_max AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.73 */
       inst_id,
       value bytes
  FROM gv$pgastat
 WHERE name = 'maximum PGA allocated'
),
pga AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.73 */
       par.dbid,
       par.db_name,
       par.inst_id,
       par.host_name,
       par.instance_number,
       par.instance_name,
       par.pga_aggregate_target,
       pga_max.bytes max_bytes,
       GREATEST(NVL(par.pga_aggregate_target, 0), NVL(pga_max.bytes, 0)) bytes
  FROM par,
       pga_max
 WHERE par.inst_id = pga_max.inst_id
),
amm AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.73 */
       par.dbid,
       par.db_name,
       par.inst_id,
       par.host_name,
       par.instance_number,
       par.instance_name,
       par.memory_target,
       par.memory_max_target,
       GREATEST(NVL(par.memory_target, 0), NVL(par.memory_max_target, 0)) + (6 * POWER(2,20)) bytes
  FROM par
),
asmm AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.73 */
       par.dbid,
       par.db_name,
       par.inst_id,
       par.host_name,
       par.instance_number,
       par.instance_name,
       par.sga_target,
       par.sga_max_size,
       pga.bytes pga_bytes,
       GREATEST(NVL(sga_target, 0), NVL(sga_max_size, 0)) + NVL(pga.bytes, 0) + (6 * POWER(2,20)) by
tes
  FROM par,
       pga
 WHERE par.inst_id = pga.inst_id
),
no_mm AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.73 */
       pga.dbid,
       pga.db_name,
       pga.inst_id,
       pga.host_name,
       pga.instance_number,
       pga.instance_name,
       sga_max.bytes max_sga,
       pga.bytes max_pga,
       pga.pga_aggregate_target,
       sga_max.bytes + pga.bytes + (5 * POWER(2,20)) bytes
  FROM sga_max,
       pga
 WHERE sga_max.inst_id = pga.inst_id
),
them_all AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.73 */
       amm.dbid,
       amm.db_name,
       amm.inst_id,
       amm.host_name,
       amm.instance_number,
       amm.instance_name,
       GREATEST(NVL(amm.bytes, 0), NVL(asmm.bytes, 0), NVL(no_mm.bytes, 0)) bytes,
       amm.memory_target,
       amm.memory_max_target,
       asmm.sga_target,
       asmm.sga_max_size,
       no_mm.max_sga,
       no_mm.pga_aggregate_target,
       no_mm.max_pga
  FROM amm,
       asmm,
       no_mm
 WHERE asmm.inst_id = amm.inst_id
   AND no_mm.inst_id = amm.inst_id
 ORDER BY
       amm.inst_id
)
SELECT dbid,
       db_name,
       host_name,
       instance_number,
       instance_name,
       bytes total_required,
       ROUND(bytes/POWER(2,30),3) total_required_gb,
       memory_target,
       ROUND(memory_target/POWER(2,30),3) memory_target_gb,
       memory_max_target,
       ROUND(memory_max_target/POWER(2,30),3) memory_max_target_gb,
       sga_target,
       ROUND(sga_target/POWER(2,30),3) sga_target_gb,
       sga_max_size,
       ROUND(sga_max_size/POWER(2,30),3) sga_max_size_gb,
       max_sga max_sga_alloc,
       ROUND(max_sga/POWER(2,30),3) max_sga_alloc_gb,
       pga_aggregate_target,
       ROUND(pga_aggregate_target/POWER(2,30),3) pga_aggregate_target_gb,
       max_pga max_pga_alloc,
       ROUND(max_pga/POWER(2,30),3) max_pga_alloc_gb
  FROM them_all
 UNION ALL
SELECT TO_NUMBER(NULL) dbid,
       NULL db_name,
       NULL host_name,
       -1 instance_number,
       NULL instance_name,
       SUM(bytes) total_required,
       ROUND(SUM(bytes)/POWER(2,30),3) total_required_gb,
       SUM(memory_target) memory_target,
       ROUND(SUM(memory_target)/POWER(2,30),3) memory_target_gb,
       SUM(memory_max_target) memory_max_target,
       ROUND(SUM(memory_max_target)/POWER(2,30),3) memory_max_target_gb,
       SUM(sga_target) sga_target,
       ROUND(SUM(sga_target)/POWER(2,30),3) sga_target_gb,
       SUM(sga_max_size) sga_max_size,
       ROUND(SUM(sga_max_size)/POWER(2,30),3) sga_max_size_gb,
       SUM(max_sga) max_sga_alloc,
       ROUND(SUM(max_sga)/POWER(2,30),3) max_sga_alloc_gb,
       SUM(pga_aggregate_target) pga_aggregate_target,
       ROUND(SUM(pga_aggregate_target)/POWER(2,30),3) pga_aggregate_target_gb,
       SUM(max_pga) max_pga_alloc,
       ROUND(SUM(max_pga)/POWER(2,30),3) max_pga_alloc_gb
  FROM them_all

11:30:14 1e.73
Elapsed Hours so far:    0.133
Elapsed Hours so far: .133

Elapsed: 00:00:00.00

11:30:14 1e "00087_edb360_323688_1e_73_memory_size_mem.html"
Elapsed Hours so far:    0.133

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:30:14 1e "Resources (as per AWR and MEM)"
11:30:14 Memory Size (AWR)

WITH
max_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.74 */
       MAX(snap_id) snap_id,
       dbid,
       instance_number,
       parameter_name
  FROM dba_hist_parameter
 WHERE parameter_name IN ('memory_target', 'memory_max_target', 'sga_target', 'sga_max_size', 'pga_a
ggregate_target')
   AND (snap_id, dbid, instance_number) IN (SELECT s.snap_id, s.dbid, s.instance_number FROM dba_his
t_snapshot s)
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       dbid,
       instance_number,
       parameter_name
),
last_value AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.74 */
       s.snap_id,
       s.dbid,
       s.instance_number,
       s.parameter_name,
       p.value
  FROM max_snap s,
       dba_hist_parameter p
 WHERE p.snap_id = s.snap_id
   AND p.dbid = s.dbid
   AND p.instance_number = s.instance_number
   AND p.parameter_name = s.parameter_name
   AND p.snap_id BETWEEN 3473 AND 4962
   AND p.dbid = 2109323688
),
last_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.74 */
       p.snap_id,
       p.dbid,
       p.instance_number,
       p.parameter_name,
       p.value,
       s.startup_time
  FROM last_value p,
       dba_hist_snapshot s
 WHERE s.snap_id = p.snap_id
   AND s.dbid = p.dbid
   AND s.instance_number = p.instance_number
   AND s.snap_id BETWEEN 3473 AND 4962
   AND s.dbid = 2109323688
),
par AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.74 */
       p.dbid,
       di.db_name,
       /* LOWER(SUBSTR(di.host_name||'.', 1, INSTR(di.host_name||'.', '.') - 1)) */
       LPAD(ORA_HASH(SYS_CONTEXT('USERENV', 'SERVER_HOST'),999999),6,'6') host_name,
       p.instance_number,
       di.instance_name,
       SUM(CASE p.parameter_name WHEN 'memory_target' THEN TO_NUMBER(p.value) ELSE 0 END) memory_tar
get,
       SUM(CASE p.parameter_name WHEN 'memory_max_target' THEN TO_NUMBER(p.value) ELSE 0 END) memory
_max_target,
       SUM(CASE p.parameter_name WHEN 'sga_target' THEN TO_NUMBER(p.value) ELSE 0 END) sga_target,
       SUM(CASE p.parameter_name WHEN 'sga_max_size' THEN TO_NUMBER(p.value) ELSE 0 END) sga_max_siz
e,
       SUM(CASE p.parameter_name WHEN 'pga_aggregate_target' THEN TO_NUMBER(p.value) ELSE 0 END) pga
_aggregate_target
  FROM last_snap p,
       dba_hist_database_instance di
 WHERE di.dbid = p.dbid
   AND di.instance_number = p.instance_number
   AND di.startup_time = p.startup_time
   AND di.dbid = 2109323688
 GROUP BY
       p.dbid,
       di.db_name,
       di.host_name,
       p.instance_number,
       di.instance_name
),
sgainfo AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.74 */
       snap_id,
       dbid,
       instance_number,
       SUM(value) sga_size
  FROM dba_hist_sga
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sga_max AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.74 */
       dbid,
       instance_number,
       MAX(sga_size) bytes
  FROM sgainfo
 GROUP BY
       dbid,
       instance_number
),
pga_max AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.74 */
       dbid,
       instance_number,
       MAX(value) bytes
  FROM dba_hist_pgastat
 WHERE name = 'maximum PGA allocated'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       dbid,
       instance_number
),
pga AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.74 */
       par.dbid,
       par.db_name,
       par.host_name,
       par.instance_number,
       par.instance_name,
       par.pga_aggregate_target,
       pga_max.bytes max_bytes,
       GREATEST(NVL(par.pga_aggregate_target, 0), NVL(pga_max.bytes, 0)) bytes
  FROM pga_max,
       par
 WHERE par.dbid = pga_max.dbid
   AND par.instance_number = pga_max.instance_number
),
amm AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.74 */
       par.dbid,
       par.db_name,
       par.host_name,
       par.instance_number,
       par.instance_name,
       par.memory_target,
       par.memory_max_target,
       GREATEST(NVL(par.memory_target, 0), NVL(par.memory_max_target, 0)) + (6 * POWER(2,20)) bytes
  FROM par
),
asmm AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.74 */
       par.dbid,
       par.db_name,
       par.host_name,
       par.instance_number,
       par.instance_name,
       par.sga_target,
       par.sga_max_size,
       pga.bytes pga_bytes,
       GREATEST(NVL(sga_target, 0), NVL(sga_max_size, 0)) + NVL(pga.bytes, 0) + (6 * POWER(2,20)) by
tes
  FROM pga,
       par
 WHERE par.dbid = pga.dbid
   AND par.instance_number = pga.instance_number
),
no_mm AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.74 */
       pga.dbid,
       pga.db_name,
       /* LOWER(SUBSTR(pga.host_name||'.', 1, INSTR(pga.host_name||'.', '.') - 1)) */
       LPAD(ORA_HASH(SYS_CONTEXT('USERENV', 'SERVER_HOST'),999999),6,'6') host_name,
       pga.instance_number,
       pga.instance_name,
       sga_max.bytes max_sga,
       pga.bytes max_pga,
       pga.pga_aggregate_target,
       sga_max.bytes + pga.bytes + (5 * POWER(2,20)) bytes
  FROM pga,
       sga_max
 WHERE sga_max.dbid = pga.dbid
   AND sga_max.instance_number = pga.instance_number
),
them_all AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.74 */
       amm.dbid,
       amm.db_name,
       amm.host_name,
       amm.instance_number,
       amm.instance_name,
       GREATEST(NVL(amm.bytes, 0), NVL(asmm.bytes, 0), NVL(no_mm.bytes, 0)) bytes,
       amm.memory_target,
       amm.memory_max_target,
       asmm.sga_target,
       asmm.sga_max_size,
       no_mm.max_sga,
       no_mm.pga_aggregate_target,
       no_mm.max_pga
  FROM amm,
       asmm,
       no_mm
 WHERE asmm.instance_number = amm.instance_number
   AND asmm.dbid = amm.dbid
   AND no_mm.instance_number = amm.instance_number
   AND no_mm.dbid = amm.dbid
 ORDER BY
       amm.dbid,
       amm.instance_number
)
SELECT dbid,
       db_name,
       host_name,
       instance_number,
       instance_name,
       bytes total_required,
       ROUND(bytes/POWER(2,30),3) total_required_gb,
       memory_target,
       ROUND(memory_target/POWER(2,30),3) memory_target_gb,
       memory_max_target,
       ROUND(memory_max_target/POWER(2,30),3) memory_max_target_gb,
       sga_target,
       ROUND(sga_target/POWER(2,30),3) sga_target_gb,
       sga_max_size,
       ROUND(sga_max_size/POWER(2,30),3) sga_max_size_gb,
       max_sga max_sga_alloc,
       ROUND(max_sga/POWER(2,30),3) max_sga_alloc_gb,
       pga_aggregate_target,
       ROUND(pga_aggregate_target/POWER(2,30),3) pga_aggregate_target_gb,
       max_pga max_pga_alloc,
       ROUND(max_pga/POWER(2,30),3) max_pga_alloc_gb
  FROM them_all
 UNION ALL
SELECT TO_NUMBER(NULL) dbid,
       NULL db_name,
       NULL host_name,
       -1 instance_number,
       NULL instance_name,
       SUM(bytes) total_required,
       ROUND(SUM(bytes)/POWER(2,30),3) total_required_gb,
       SUM(memory_target) memory_target,
       ROUND(SUM(memory_target)/POWER(2,30),3) memory_target_gb,
       SUM(memory_max_target) memory_max_target,
       ROUND(SUM(memory_max_target)/POWER(2,30),3) memory_max_target_gb,
       SUM(sga_target) sga_target,
       ROUND(SUM(sga_target)/POWER(2,30),3) sga_target_gb,
       SUM(sga_max_size) sga_max_size,
       ROUND(SUM(sga_max_size)/POWER(2,30),3) sga_max_size_gb,
       SUM(max_sga) max_sga_alloc,
       ROUND(SUM(max_sga)/POWER(2,30),3) max_sga_alloc_gb,
       SUM(pga_aggregate_target) pga_aggregate_target,
       ROUND(SUM(pga_aggregate_target)/POWER(2,30),3) pga_aggregate_target_gb,
       SUM(max_pga) max_pga_alloc,
       ROUND(SUM(max_pga)/POWER(2,30),3) max_pga_alloc_gb
  FROM them_all

11:30:14 1e.74
Elapsed Hours so far:    0.133
Elapsed Hours so far: .133

Elapsed: 00:00:00.00

11:30:14 1e "00088_edb360_323688_1e_74_memory_size_awr.html"
Elapsed Hours so far:    0.133

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:30:15 1e "Resources (as per AWR and MEM)"
11:30:15 Memory Size Series for Cluster

WITH
vm AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.75 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       SUM(CASE WHEN h1.stat_name = 'VM_IN_BYTES'  AND h1.value > h0.value THEN h1.value - h0.value
ELSE 0 END) in_bytes,
       SUM(CASE WHEN h1.stat_name = 'VM_OUT_BYTES' AND h1.value > h0.value THEN h1.value - h0.value
ELSE 0 END) out_bytes
  FROM dba_hist_osstat h0,
       dba_hist_osstat h1
 WHERE h1.stat_name IN ('VM_IN_BYTES', 'VM_OUT_BYTES')
   AND h1.snap_id BETWEEN 3473 AND 4962
   AND h1.dbid = 2109323688
   AND h1.instance_number = h1.instance_number
   AND h0.snap_id = h1.snap_id - 1
   AND h0.dbid = h1.dbid
   AND h0.instance_number = h1.instance_number
   AND h0.stat_name = h1.stat_name
   AND h0.snap_id BETWEEN 3473 AND 4962
   AND h0.dbid = 2109323688
 GROUP BY
       h1.snap_id,
       h1.dbid,
       h1.instance_number
),
sga AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.75 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       SUM(h1.value) bytes
  FROM dba_hist_sga h1
 WHERE h1.snap_id BETWEEN 3473 AND 4962
   AND h1.dbid = 2109323688
   AND h1.instance_number = h1.instance_number
 GROUP BY
       h1.snap_id,
       h1.dbid,
       h1.instance_number
),
pga AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.75 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       SUM(h1.value) bytes
  FROM dba_hist_pgastat h1
 WHERE h1.name = 'total PGA allocated'
   AND h1.snap_id BETWEEN 3473 AND 4962
   AND h1.dbid = 2109323688
   AND h1.instance_number = h1.instance_number
 GROUP BY
       h1.snap_id,
       h1.dbid,
       h1.instance_number
),
mem AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.75 */
       snp.snap_id,
       snp.dbid,
       snp.instance_number,
       snp.begin_interval_time,
       snp.end_interval_time,
       ROUND((CAST(snp.end_interval_time AS DATE) - CAST(snp.begin_interval_time AS DATE)) * 24 * 60
 * 60) interval_secs,
       NVL(vm.in_bytes, 0) vm_in_bytes,
       NVL(vm.out_bytes, 0) vm_out_bytes,
       NVL(sga.bytes, 0) sga_bytes,
       NVL(pga.bytes, 0) pga_bytes,
       NVL(sga.bytes, 0) + NVL(pga.bytes, 0) mem_bytes
  FROM dba_hist_snapshot snp,
       vm, sga, pga
 WHERE snp.snap_id BETWEEN 3473 AND 4962
   AND snp.dbid = 2109323688
   AND snp.end_interval_time > (snp.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
   AND vm.snap_id(+) = snp.snap_id
   AND vm.dbid(+) = snp.dbid
   AND vm.instance_number(+) = snp.instance_number
   AND sga.snap_id(+) = snp.snap_id
   AND sga.dbid(+) = snp.dbid
   AND sga.instance_number(+) = snp.instance_number
   AND pga.snap_id(+) = snp.snap_id
   AND pga.dbid(+) = snp.dbid
   AND pga.instance_number(+) = snp.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(mem_bytes)/POWER(2,30),3) mem_gb,
       ROUND(SUM(sga_bytes)/POWER(2,30),3) sga_gb,
       ROUND(SUM(pga_bytes)/POWER(2,30),3) pga_gb,
       ROUND(SUM(vm_in_bytes)/POWER(2,30),3) vm_in_gb,
       ROUND(SUM(vm_out_bytes)/POWER(2,30),3) vm_out_gb,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM mem
 WHERE mem_bytes > 0
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:30:15 1e.75
Elapsed Hours so far:    0.133
Elapsed Hours so far: .133

Elapsed: 00:00:00.00

11:30:15 1e "00089_edb360_323688_1e_75_memory_size_series_for_cluster.html"
11:30:15 1e "00090_edb360_323688_1e_75_memory_size_series_for_cluster_line_chart.html"
Elapsed Hours so far:    0.133

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:30:16 1e "Resources (as per AWR and MEM)"
11:30:16 Memory Size Series for Instance 1

WITH
vm AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.75 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       SUM(CASE WHEN h1.stat_name = 'VM_IN_BYTES'  AND h1.value > h0.value THEN h1.value - h0.value
ELSE 0 END) in_bytes,
       SUM(CASE WHEN h1.stat_name = 'VM_OUT_BYTES' AND h1.value > h0.value THEN h1.value - h0.value
ELSE 0 END) out_bytes
  FROM dba_hist_osstat h0,
       dba_hist_osstat h1
 WHERE h1.stat_name IN ('VM_IN_BYTES', 'VM_OUT_BYTES')
   AND h1.snap_id BETWEEN 3473 AND 4962
   AND h1.dbid = 2109323688
   AND h1.instance_number = 1
   AND h0.snap_id = h1.snap_id - 1
   AND h0.dbid = h1.dbid
   AND h0.instance_number = h1.instance_number
   AND h0.stat_name = h1.stat_name
   AND h0.snap_id BETWEEN 3473 AND 4962
   AND h0.dbid = 2109323688
 GROUP BY
       h1.snap_id,
       h1.dbid,
       h1.instance_number
),
sga AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.75 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       SUM(h1.value) bytes
  FROM dba_hist_sga h1
 WHERE h1.snap_id BETWEEN 3473 AND 4962
   AND h1.dbid = 2109323688
   AND h1.instance_number = 1
 GROUP BY
       h1.snap_id,
       h1.dbid,
       h1.instance_number
),
pga AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.75 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       SUM(h1.value) bytes
  FROM dba_hist_pgastat h1
 WHERE h1.name = 'total PGA allocated'
   AND h1.snap_id BETWEEN 3473 AND 4962
   AND h1.dbid = 2109323688
   AND h1.instance_number = 1
 GROUP BY
       h1.snap_id,
       h1.dbid,
       h1.instance_number
),
mem AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.75 */
       snp.snap_id,
       snp.dbid,
       snp.instance_number,
       snp.begin_interval_time,
       snp.end_interval_time,
       ROUND((CAST(snp.end_interval_time AS DATE) - CAST(snp.begin_interval_time AS DATE)) * 24 * 60
 * 60) interval_secs,
       NVL(vm.in_bytes, 0) vm_in_bytes,
       NVL(vm.out_bytes, 0) vm_out_bytes,
       NVL(sga.bytes, 0) sga_bytes,
       NVL(pga.bytes, 0) pga_bytes,
       NVL(sga.bytes, 0) + NVL(pga.bytes, 0) mem_bytes
  FROM dba_hist_snapshot snp,
       vm, sga, pga
 WHERE snp.snap_id BETWEEN 3473 AND 4962
   AND snp.dbid = 2109323688
   AND snp.end_interval_time > (snp.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
   AND vm.snap_id(+) = snp.snap_id
   AND vm.dbid(+) = snp.dbid
   AND vm.instance_number(+) = snp.instance_number
   AND sga.snap_id(+) = snp.snap_id
   AND sga.dbid(+) = snp.dbid
   AND sga.instance_number(+) = snp.instance_number
   AND pga.snap_id(+) = snp.snap_id
   AND pga.dbid(+) = snp.dbid
   AND pga.instance_number(+) = snp.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(mem_bytes)/POWER(2,30),3) mem_gb,
       ROUND(SUM(sga_bytes)/POWER(2,30),3) sga_gb,
       ROUND(SUM(pga_bytes)/POWER(2,30),3) pga_gb,
       ROUND(SUM(vm_in_bytes)/POWER(2,30),3) vm_in_gb,
       ROUND(SUM(vm_out_bytes)/POWER(2,30),3) vm_out_gb,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM mem
 WHERE mem_bytes > 0
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:30:16 1e.76
Elapsed Hours so far:    0.133
Elapsed Hours so far: .133

Elapsed: 00:00:00.00

11:30:16 1e "00091_edb360_323688_1e_76_memory_size_series_for_instance_1.html"
11:30:16 1e "00092_edb360_323688_1e_76_memory_size_series_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.133

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:30:16 1e "Resources (as per AWR and MEM)"
11:30:16 Memory Size Series for Instance 2

WITH
vm AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.75 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       SUM(CASE WHEN h1.stat_name = 'VM_IN_BYTES'  AND h1.value > h0.value THEN h1.value - h0.value
ELSE 0 END) in_bytes,
       SUM(CASE WHEN h1.stat_name = 'VM_OUT_BYTES' AND h1.value > h0.value THEN h1.value - h0.value
ELSE 0 END) out_bytes
  FROM dba_hist_osstat h0,
       dba_hist_osstat h1
 WHERE h1.stat_name IN ('VM_IN_BYTES', 'VM_OUT_BYTES')
   AND h1.snap_id BETWEEN 3473 AND 4962
   AND h1.dbid = 2109323688
   AND h1.instance_number = 2
   AND h0.snap_id = h1.snap_id - 1
   AND h0.dbid = h1.dbid
   AND h0.instance_number = h1.instance_number
   AND h0.stat_name = h1.stat_name
   AND h0.snap_id BETWEEN 3473 AND 4962
   AND h0.dbid = 2109323688
 GROUP BY
       h1.snap_id,
       h1.dbid,
       h1.instance_number
),
sga AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.75 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       SUM(h1.value) bytes
  FROM dba_hist_sga h1
 WHERE h1.snap_id BETWEEN 3473 AND 4962
   AND h1.dbid = 2109323688
   AND h1.instance_number = 2
 GROUP BY
       h1.snap_id,
       h1.dbid,
       h1.instance_number
),
pga AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.75 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       SUM(h1.value) bytes
  FROM dba_hist_pgastat h1
 WHERE h1.name = 'total PGA allocated'
   AND h1.snap_id BETWEEN 3473 AND 4962
   AND h1.dbid = 2109323688
   AND h1.instance_number = 2
 GROUP BY
       h1.snap_id,
       h1.dbid,
       h1.instance_number
),
mem AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.75 */
       snp.snap_id,
       snp.dbid,
       snp.instance_number,
       snp.begin_interval_time,
       snp.end_interval_time,
       ROUND((CAST(snp.end_interval_time AS DATE) - CAST(snp.begin_interval_time AS DATE)) * 24 * 60
 * 60) interval_secs,
       NVL(vm.in_bytes, 0) vm_in_bytes,
       NVL(vm.out_bytes, 0) vm_out_bytes,
       NVL(sga.bytes, 0) sga_bytes,
       NVL(pga.bytes, 0) pga_bytes,
       NVL(sga.bytes, 0) + NVL(pga.bytes, 0) mem_bytes
  FROM dba_hist_snapshot snp,
       vm, sga, pga
 WHERE snp.snap_id BETWEEN 3473 AND 4962
   AND snp.dbid = 2109323688
   AND snp.end_interval_time > (snp.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
   AND vm.snap_id(+) = snp.snap_id
   AND vm.dbid(+) = snp.dbid
   AND vm.instance_number(+) = snp.instance_number
   AND sga.snap_id(+) = snp.snap_id
   AND sga.dbid(+) = snp.dbid
   AND sga.instance_number(+) = snp.instance_number
   AND pga.snap_id(+) = snp.snap_id
   AND pga.dbid(+) = snp.dbid
   AND pga.instance_number(+) = snp.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(mem_bytes)/POWER(2,30),3) mem_gb,
       ROUND(SUM(sga_bytes)/POWER(2,30),3) sga_gb,
       ROUND(SUM(pga_bytes)/POWER(2,30),3) pga_gb,
       ROUND(SUM(vm_in_bytes)/POWER(2,30),3) vm_in_gb,
       ROUND(SUM(vm_out_bytes)/POWER(2,30),3) vm_out_gb,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM mem
 WHERE mem_bytes > 0
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:30:16 1e.77
Elapsed Hours so far:    0.133
Elapsed Hours so far: .133

Elapsed: 00:00:00.01

11:30:16 1e "00093_edb360_323688_1e_77_memory_size_series_for_instance_2.html"
11:30:17 1e "00094_edb360_323688_1e_77_memory_size_series_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.134

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:30:17 1e "Resources (as per AWR and MEM)"
11:30:17 Database Size on Disk

WITH
sizes AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.78 */
       'Data' file_type,
       SUM(bytes) bytes
  FROM v$datafile
 UNION ALL
SELECT 'Temp' file_type,
       SUM(bytes) bytes
  FROM v$tempfile
 UNION ALL
SELECT 'Log' file_type,
       SUM(bytes) * MAX(members) bytes
  FROM v$log
 UNION ALL
SELECT 'Control' file_type,
       SUM(block_size * file_size_blks) bytes
  FROM v$controlfile
),
dbsize AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.78 */
       'Total' file_type,
       SUM(bytes) bytes
  FROM sizes
)
SELECT d.dbid,
       d.name db_name,
       s.file_type,
       s.bytes,
       ROUND(s.bytes/POWER(10,9),3) gb,
       CASE
       WHEN s.bytes > POWER(10,15) THEN ROUND(s.bytes/POWER(10,15),3)||' P'
       WHEN s.bytes > POWER(10,12) THEN ROUND(s.bytes/POWER(10,12),3)||' T'
       WHEN s.bytes > POWER(10,9) THEN ROUND(s.bytes/POWER(10,9),3)||' G'
       WHEN s.bytes > POWER(10,6) THEN ROUND(s.bytes/POWER(10,6),3)||' M'
       WHEN s.bytes > POWER(10,3) THEN ROUND(s.bytes/POWER(10,3),3)||' K'
       WHEN s.bytes > 0 THEN s.bytes||' B' END display
  FROM v$database d,
       sizes s
 UNION ALL
SELECT d.dbid,
       d.name db_name,
       s.file_type,
       s.bytes,
       ROUND(s.bytes/POWER(10,9),3) gb,
       CASE
       WHEN s.bytes > POWER(10,15) THEN ROUND(s.bytes/POWER(10,15),3)||' P'
       WHEN s.bytes > POWER(10,12) THEN ROUND(s.bytes/POWER(10,12),3)||' T'
       WHEN s.bytes > POWER(10,9) THEN ROUND(s.bytes/POWER(10,9),3)||' G'
       WHEN s.bytes > POWER(10,6) THEN ROUND(s.bytes/POWER(10,6),3)||' M'
       WHEN s.bytes > POWER(10,3) THEN ROUND(s.bytes/POWER(10,3),3)||' K'
       WHEN s.bytes > 0 THEN s.bytes||' B' END display
  FROM v$database d,
       dbsize s

11:30:17 1e.78
Elapsed Hours so far:    0.134
Elapsed Hours so far: .134

Elapsed: 00:00:00.00

11:30:17 1e "00095_edb360_323688_1e_78_database_size_on_disk.html"
Elapsed Hours so far:    0.134

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:30:17 1e "Resources (as per AWR and MEM)"
11:30:17 Tablespace Size Series

WITH
ts_per_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.79 */
       us.snap_id,
       MIN(sn.begin_interval_time) begin_interval_time,
       MIN(sn.end_interval_time) end_interval_time,
       SUM(us.tablespace_size * ts.block_size) all_tablespaces_bytes,
       SUM(CASE ts.contents WHEN 'PERMANENT' THEN us.tablespace_size * ts.block_size ELSE 0 END) per
m_tablespaces_bytes,
       SUM(CASE ts.contents WHEN 'UNDO'      THEN us.tablespace_size * ts.block_size ELSE 0 END) und
o_tablespaces_bytes,
       SUM(CASE ts.contents WHEN 'TEMPORARY' THEN us.tablespace_size * ts.block_size ELSE 0 END) tem
p_tablespaces_bytes
  FROM dba_hist_tbspc_space_usage us,
       dba_hist_snapshot sn,
       v$tablespace vt,
       dba_tablespaces ts
 WHERE us.snap_id BETWEEN 3473 AND 4962
   AND us.dbid = 2109323688
   AND sn.snap_id = us.snap_id
   AND sn.dbid = us.dbid
   AND sn.instance_number = 1
   AND vt.ts# = us.tablespace_id
   AND ts.tablespace_name = vt.name
 GROUP BY
       us.snap_id
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(MAX(all_tablespaces_bytes) / POWER(10,9), 3),
       ROUND(MAX(perm_tablespaces_bytes) / POWER(10,9), 3),
       ROUND(MAX(undo_tablespaces_bytes) / POWER(10,9), 3),
       ROUND(MAX(temp_tablespaces_bytes) / POWER(10,9), 3),
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM ts_per_snap_id
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:30:17 1e.79
Elapsed Hours so far:    0.134
Elapsed Hours so far: .134

Elapsed: 00:00:00.00

11:30:17 1e "00096_edb360_323688_1e_79_tablespace_size_series.html"
11:30:19 1e "00097_edb360_323688_1e_79_tablespace_size_series_line_chart.html"
Elapsed Hours so far:    0.134

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:30:20 1e "Resources (as per AWR and MEM)"
11:30:20 IOPS and MBPS Percentiles

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.80 */
       h.snap_id,
       h.dbid,
       h.instance_number,
       SUM(CASE WHEN h.stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN h.stat_name IN ('physical write total IO requests', 'redo writes') THEN value E
LSE 0 END) w_reqs,
       SUM(CASE WHEN h.stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN h.stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 EN
D) w_bytes
  FROM dba_hist_sysstat h
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('physical read total IO requests', 'physical write total IO requests', 'redo
writes', 'physical read total bytes', 'physical write total bytes', 'redo size')
 GROUP BY
       h.snap_id,
       h.dbid,
       h.instance_number
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.80 */
       h1.dbid,
       h1.instance_number,
       h1.snap_id,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec,
       CAST(s1.begin_interval_time AS DATE) begin_interval_time,
       CAST(s1.end_interval_time AS DATE) end_interval_time
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.dbid = s0.dbid
   AND s1.instance_number = s0.instance_number
   AND s1.startup_time = s0.startup_time
),
io_per_snap_id AS (
SELECT dbid,
       snap_id,
       SUM(r_reqs) r_reqs,
       SUM(w_reqs) w_reqs,
       SUM(r_bytes) r_bytes,
       SUM(w_bytes) w_bytes,
       AVG(elapsed_sec) elapsed_sec,
       MIN(begin_interval_time) begin_interval_time,
       MAX(end_interval_time) end_interval_time
  FROM io_per_inst_and_snap_id
 GROUP BY
       dbid,
       snap_id
),
io_per_inst AS (
SELECT dbid,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MAX(end_interval_time) end_interval_time,
       COUNT(DISTINCT snap_id) snap_shots,
       ROUND(100 * SUM(r_reqs) / (SUM(r_reqs) + SUM(w_reqs)), 1) r_reqs_perc,
       ROUND(100 * SUM(w_reqs) / (SUM(r_reqs) + SUM(w_reqs)), 1) w_reqs_perc,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops_peak,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops_peak,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops_peak,
       ROUND(PERCENTILE_DISC(0.999) WITHIN GROUP (ORDER BY (r_reqs + w_reqs) / elapsed_sec)) rw_iops
_999,
       ROUND(PERCENTILE_DISC(0.999) WITHIN GROUP (ORDER BY r_reqs / elapsed_sec)) r_iops_999,
       ROUND(PERCENTILE_DISC(0.999) WITHIN GROUP (ORDER BY w_reqs / elapsed_sec)) w_iops_999,
       ROUND(PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY (r_reqs + w_reqs) / elapsed_sec)) rw_iops_
99,
       ROUND(PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY r_reqs / elapsed_sec)) r_iops_99,
       ROUND(PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY w_reqs / elapsed_sec)) w_iops_99,
       ROUND(PERCENTILE_DISC(0.97) WITHIN GROUP (ORDER BY (r_reqs + w_reqs) / elapsed_sec)) rw_iops_
97,
       ROUND(PERCENTILE_DISC(0.97) WITHIN GROUP (ORDER BY r_reqs / elapsed_sec)) r_iops_97,
       ROUND(PERCENTILE_DISC(0.97) WITHIN GROUP (ORDER BY w_reqs / elapsed_sec)) w_iops_97,
       ROUND(PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY (r_reqs + w_reqs) / elapsed_sec)) rw_iops_
95,
       ROUND(PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY r_reqs / elapsed_sec)) r_iops_95,
       ROUND(PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY w_reqs / elapsed_sec)) w_iops_95,
       ROUND(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY (r_reqs + w_reqs) / elapsed_sec)) rw_iops_
90,
       ROUND(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY r_reqs / elapsed_sec)) r_iops_90,
       ROUND(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY w_reqs / elapsed_sec)) w_iops_90,
       ROUND(PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY (r_reqs + w_reqs) / elapsed_sec)) rw_iops_
75,
       ROUND(PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY r_reqs / elapsed_sec)) r_iops_75,
       ROUND(PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY w_reqs / elapsed_sec)) w_iops_75,
       ROUND(MEDIAN((r_reqs + w_reqs) / elapsed_sec)) rw_iops_med,
       ROUND(MEDIAN(r_reqs / elapsed_sec)) r_iops_med,
       ROUND(MEDIAN(w_reqs / elapsed_sec)) w_iops_med,
       ROUND(AVG((r_reqs + w_reqs) / elapsed_sec)) rw_iops_avg,
       ROUND(AVG(r_reqs / elapsed_sec)) r_iops_avg,
       ROUND(AVG(w_reqs / elapsed_sec)) w_iops_avg,
       ROUND(100 * SUM(r_bytes) / (SUM(r_bytes) + SUM(w_bytes)), 1) r_bytes_perc,
       ROUND(100 * SUM(w_bytes) / (SUM(r_bytes) + SUM(w_bytes)), 1) w_bytes_perc,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec)) rw_mbps_peak,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec)) r_mbps_peak,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec)) w_mbps_peak,
       ROUND(PERCENTILE_DISC(0.999) WITHIN GROUP (ORDER BY (r_bytes + w_bytes) / POWER(10,6) / elaps
ed_sec)) rw_mbps_999,
       ROUND(PERCENTILE_DISC(0.999) WITHIN GROUP (ORDER BY r_bytes / POWER(10,6) / elapsed_sec)) r_m
bps_999,
       ROUND(PERCENTILE_DISC(0.999) WITHIN GROUP (ORDER BY w_bytes / POWER(10,6) / elapsed_sec)) w_m
bps_999,
       ROUND(PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY (r_bytes + w_bytes) / POWER(10,6) / elapse
d_sec)) rw_mbps_99,
       ROUND(PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY r_bytes / POWER(10,6) / elapsed_sec)) r_mb
ps_99,
       ROUND(PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY w_bytes / POWER(10,6) / elapsed_sec)) w_mb
ps_99,
       ROUND(PERCENTILE_DISC(0.97) WITHIN GROUP (ORDER BY (r_bytes + w_bytes) / POWER(10,6) / elapse
d_sec)) rw_mbps_97,
       ROUND(PERCENTILE_DISC(0.97) WITHIN GROUP (ORDER BY r_bytes / POWER(10,6) / elapsed_sec)) r_mb
ps_97,
       ROUND(PERCENTILE_DISC(0.97) WITHIN GROUP (ORDER BY w_bytes / POWER(10,6) / elapsed_sec)) w_mb
ps_97,
       ROUND(PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY (r_bytes + w_bytes) / POWER(10,6) / elapse
d_sec)) rw_mbps_95,
       ROUND(PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY r_bytes / POWER(10,6) / elapsed_sec)) r_mb
ps_95,
       ROUND(PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY w_bytes / POWER(10,6) / elapsed_sec)) w_mb
ps_95,
       ROUND(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY (r_bytes + w_bytes) / POWER(10,6) / elapse
d_sec)) rw_mbps_90,
       ROUND(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY r_bytes / POWER(10,6) / elapsed_sec)) r_mb
ps_90,
       ROUND(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY w_bytes / POWER(10,6) / elapsed_sec)) w_mb
ps_90,
       ROUND(PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY (r_bytes + w_bytes) / POWER(10,6) / elapse
d_sec)) rw_mbps_75,
       ROUND(PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY r_bytes / POWER(10,6) / elapsed_sec)) r_mb
ps_75,
       ROUND(PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY w_bytes / POWER(10,6) / elapsed_sec)) w_mb
ps_75,
       ROUND(MEDIAN((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec)) rw_mbps_med,
       ROUND(MEDIAN(r_bytes / POWER(10,6) / elapsed_sec)) r_mbps_med,
       ROUND(MEDIAN(w_bytes / POWER(10,6) / elapsed_sec)) w_mbps_med,
       ROUND(AVG((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec)) rw_mbps_avg,
       ROUND(AVG(r_bytes / POWER(10,6) / elapsed_sec)) r_mbps_avg,
       ROUND(AVG(w_bytes / POWER(10,6) / elapsed_sec)) w_mbps_avg
  FROM io_per_inst_and_snap_id
 WHERE elapsed_sec > 60 -- ignore snaps too close
 GROUP BY
       dbid,
       instance_number
),
io_per_cluster AS ( -- combined
SELECT dbid,
       TO_NUMBER(NULL) instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MAX(end_interval_time) end_interval_time,
       COUNT(DISTINCT snap_id) snap_shots,
       ROUND(100 * SUM(r_reqs) / (SUM(r_reqs) + SUM(w_reqs)), 1) r_reqs_perc,
       ROUND(100 * SUM(w_reqs) / (SUM(r_reqs) + SUM(w_reqs)), 1) w_reqs_perc,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops_peak,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops_peak,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops_peak,
       ROUND(PERCENTILE_DISC(0.999) WITHIN GROUP (ORDER BY (r_reqs + w_reqs) / elapsed_sec)) rw_iops
_999,
       ROUND(PERCENTILE_DISC(0.999) WITHIN GROUP (ORDER BY r_reqs / elapsed_sec)) r_iops_999,
       ROUND(PERCENTILE_DISC(0.999) WITHIN GROUP (ORDER BY w_reqs / elapsed_sec)) w_iops_999,
       ROUND(PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY (r_reqs + w_reqs) / elapsed_sec)) rw_iops_
99,
       ROUND(PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY r_reqs / elapsed_sec)) r_iops_99,
       ROUND(PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY w_reqs / elapsed_sec)) w_iops_99,
       ROUND(PERCENTILE_DISC(0.97) WITHIN GROUP (ORDER BY (r_reqs + w_reqs) / elapsed_sec)) rw_iops_
97,
       ROUND(PERCENTILE_DISC(0.97) WITHIN GROUP (ORDER BY r_reqs / elapsed_sec)) r_iops_97,
       ROUND(PERCENTILE_DISC(0.97) WITHIN GROUP (ORDER BY w_reqs / elapsed_sec)) w_iops_97,
       ROUND(PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY (r_reqs + w_reqs) / elapsed_sec)) rw_iops_
95,
       ROUND(PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY r_reqs / elapsed_sec)) r_iops_95,
       ROUND(PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY w_reqs / elapsed_sec)) w_iops_95,
       ROUND(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY (r_reqs + w_reqs) / elapsed_sec)) rw_iops_
90,
       ROUND(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY r_reqs / elapsed_sec)) r_iops_90,
       ROUND(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY w_reqs / elapsed_sec)) w_iops_90,
       ROUND(PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY (r_reqs + w_reqs) / elapsed_sec)) rw_iops_
75,
       ROUND(PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY r_reqs / elapsed_sec)) r_iops_75,
       ROUND(PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY w_reqs / elapsed_sec)) w_iops_75,
       ROUND(MEDIAN((r_reqs + w_reqs) / elapsed_sec)) rw_iops_med,
       ROUND(MEDIAN(r_reqs / elapsed_sec)) r_iops_med,
       ROUND(MEDIAN(w_reqs / elapsed_sec)) w_iops_med,
       ROUND(AVG((r_reqs + w_reqs) / elapsed_sec)) rw_iops_avg,
       ROUND(AVG(r_reqs / elapsed_sec)) r_iops_avg,
       ROUND(AVG(w_reqs / elapsed_sec)) w_iops_avg,
       ROUND(100 * SUM(r_bytes) / (SUM(r_bytes) + SUM(w_bytes)), 1) r_bytes_perc,
       ROUND(100 * SUM(w_bytes) / (SUM(r_bytes) + SUM(w_bytes)), 1) w_bytes_perc,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec)) rw_mbps_peak,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec)) r_mbps_peak,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec)) w_mbps_peak,
       ROUND(PERCENTILE_DISC(0.999) WITHIN GROUP (ORDER BY (r_bytes + w_bytes) / POWER(10,6) / elaps
ed_sec)) rw_mbps_999,
       ROUND(PERCENTILE_DISC(0.999) WITHIN GROUP (ORDER BY r_bytes / POWER(10,6) / elapsed_sec)) r_m
bps_999,
       ROUND(PERCENTILE_DISC(0.999) WITHIN GROUP (ORDER BY w_bytes / POWER(10,6) / elapsed_sec)) w_m
bps_999,
       ROUND(PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY (r_bytes + w_bytes) / POWER(10,6) / elapse
d_sec)) rw_mbps_99,
       ROUND(PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY r_bytes / POWER(10,6) / elapsed_sec)) r_mb
ps_99,
       ROUND(PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY w_bytes / POWER(10,6) / elapsed_sec)) w_mb
ps_99,
       ROUND(PERCENTILE_DISC(0.97) WITHIN GROUP (ORDER BY (r_bytes + w_bytes) / POWER(10,6) / elapse
d_sec)) rw_mbps_97,
       ROUND(PERCENTILE_DISC(0.97) WITHIN GROUP (ORDER BY r_bytes / POWER(10,6) / elapsed_sec)) r_mb
ps_97,
       ROUND(PERCENTILE_DISC(0.97) WITHIN GROUP (ORDER BY w_bytes / POWER(10,6) / elapsed_sec)) w_mb
ps_97,
       ROUND(PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY (r_bytes + w_bytes) / POWER(10,6) / elapse
d_sec)) rw_mbps_95,
       ROUND(PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY r_bytes / POWER(10,6) / elapsed_sec)) r_mb
ps_95,
       ROUND(PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY w_bytes / POWER(10,6) / elapsed_sec)) w_mb
ps_95,
       ROUND(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY (r_bytes + w_bytes) / POWER(10,6) / elapse
d_sec)) rw_mbps_90,
       ROUND(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY r_bytes / POWER(10,6) / elapsed_sec)) r_mb
ps_90,
       ROUND(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY w_bytes / POWER(10,6) / elapsed_sec)) w_mb
ps_90,
       ROUND(PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY (r_bytes + w_bytes) / POWER(10,6) / elapse
d_sec)) rw_mbps_75,
       ROUND(PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY r_bytes / POWER(10,6) / elapsed_sec)) r_mb
ps_75,
       ROUND(PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY w_bytes / POWER(10,6) / elapsed_sec)) w_mb
ps_75,
       ROUND(MEDIAN((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec)) rw_mbps_med,
       ROUND(MEDIAN(r_bytes / POWER(10,6) / elapsed_sec)) r_mbps_med,
       ROUND(MEDIAN(w_bytes / POWER(10,6) / elapsed_sec)) w_mbps_med,
       ROUND(AVG((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec)) rw_mbps_avg,
       ROUND(AVG(r_bytes / POWER(10,6) / elapsed_sec)) r_mbps_avg,
       ROUND(AVG(w_bytes / POWER(10,6) / elapsed_sec)) w_mbps_avg
  FROM io_per_snap_id
 WHERE elapsed_sec > 60 -- ignore snaps too close
 GROUP BY
       dbid
),
io_per_inst_or_cluster AS (
SELECT dbid, 01 order_by, 'Maximum or peak' metric, instance_number, rw_iops_peak rw_iops, r_iops_pe
ak r_iops, w_iops_peak w_iops, rw_mbps_peak rw_mbps, r_mbps_peak r_mbps, w_mbps_peak w_mbps, begin_i
nterval_time, end_interval_time, snap_shots FROM io_per_inst
 UNION ALL
SELECT dbid, 02 order_by, '99.9th percentl' metric, instance_number, rw_iops_999 rw_iops,  r_iops_99
9 r_iops,  w_iops_999 w_iops,  rw_mbps_999 rw_mbps,  r_mbps_999 r_mbps,  w_mbps_999 w_mbps,  begin_i
nterval_time, end_interval_time, snap_shots FROM io_per_inst
 UNION ALL
SELECT dbid, 03 order_by, '99th percentile' metric, instance_number, rw_iops_99 rw_iops,   r_iops_99
 r_iops,   w_iops_99 w_iops,   rw_mbps_99 rw_mbps,   r_mbps_99 r_mbps,   w_mbps_99 w_mbps,   begin_i
nterval_time, end_interval_time, snap_shots FROM io_per_inst
 UNION ALL
SELECT dbid, 04 order_by, '97th percentile' metric, instance_number, rw_iops_97 rw_iops,   r_iops_97
 r_iops,   w_iops_97 w_iops,   rw_mbps_97 rw_mbps,   r_mbps_97 r_mbps,   w_mbps_97 w_mbps,   begin_i
nterval_time, end_interval_time, snap_shots FROM io_per_inst
 UNION ALL
SELECT dbid, 05 order_by, '95th percentile' metric, instance_number, rw_iops_95 rw_iops,   r_iops_95
 r_iops,   w_iops_95 w_iops,   rw_mbps_95 rw_mbps,   r_mbps_95 r_mbps,   w_mbps_95 w_mbps,   begin_i
nterval_time, end_interval_time, snap_shots FROM io_per_inst
 UNION ALL
SELECT dbid, 06 order_by, '90th percentile' metric, instance_number, rw_iops_90 rw_iops,   r_iops_90
 r_iops,   w_iops_90 w_iops,   rw_mbps_90 rw_mbps,   r_mbps_90 r_mbps,   w_mbps_90 w_mbps,   begin_i
nterval_time, end_interval_time, snap_shots FROM io_per_inst
 UNION ALL
SELECT dbid, 07 order_by, '75th percentile' metric, instance_number, rw_iops_75 rw_iops,   r_iops_75
 r_iops,   w_iops_75 w_iops,   rw_mbps_75 rw_mbps,   r_mbps_75 r_mbps,   w_mbps_75 w_mbps,   begin_i
nterval_time, end_interval_time, snap_shots FROM io_per_inst
 UNION ALL
SELECT dbid, 08 order_by, 'Median'          metric, instance_number, rw_iops_med rw_iops,  r_iops_me
d r_iops,  w_iops_med w_iops,  rw_mbps_med rw_mbps,  r_mbps_med r_mbps,  w_mbps_med w_mbps,  begin_i
nterval_time, end_interval_time, snap_shots FROM io_per_inst
 UNION ALL
SELECT dbid, 09 order_by, 'Average'         metric, instance_number, rw_iops_avg rw_iops,  r_iops_av
g r_iops,  w_iops_avg w_iops,  rw_mbps_avg rw_mbps,  r_mbps_avg r_mbps,  w_mbps_avg w_mbps,  begin_i
nterval_time, end_interval_time, snap_shots FROM io_per_inst
 UNION ALL
SELECT dbid, 01 order_by, 'Maximum or peak' metric, instance_number, rw_iops_peak rw_iops, r_iops_pe
ak r_iops, w_iops_peak w_iops, rw_mbps_peak rw_mbps, r_mbps_peak r_mbps, w_mbps_peak w_mbps, begin_i
nterval_time, end_interval_time, snap_shots FROM io_per_cluster
 UNION ALL
SELECT dbid, 02 order_by, '99.9th percentl' metric, instance_number, rw_iops_999 rw_iops,  r_iops_99
9 r_iops,  w_iops_999 w_iops,  rw_mbps_999 rw_mbps,  r_mbps_999 r_mbps,  w_mbps_999 w_mbps,  begin_i
nterval_time, end_interval_time, snap_shots FROM io_per_cluster
 UNION ALL
SELECT dbid, 03 order_by, '99th percentile' metric, instance_number, rw_iops_99 rw_iops,   r_iops_99
 r_iops,   w_iops_99 w_iops,   rw_mbps_99 rw_mbps,   r_mbps_99 r_mbps,   w_mbps_99 w_mbps,   begin_i
nterval_time, end_interval_time, snap_shots FROM io_per_cluster
 UNION ALL
SELECT dbid, 04 order_by, '97th percentile' metric, instance_number, rw_iops_97 rw_iops,   r_iops_97
 r_iops,   w_iops_97 w_iops,   rw_mbps_97 rw_mbps,   r_mbps_97 r_mbps,   w_mbps_97 w_mbps,   begin_i
nterval_time, end_interval_time, snap_shots FROM io_per_cluster
 UNION ALL
SELECT dbid, 05 order_by, '95th percentile' metric, instance_number, rw_iops_95 rw_iops,   r_iops_95
 r_iops,   w_iops_95 w_iops,   rw_mbps_95 rw_mbps,   r_mbps_95 r_mbps,   w_mbps_95 w_mbps,   begin_i
nterval_time, end_interval_time, snap_shots FROM io_per_cluster
 UNION ALL
SELECT dbid, 06 order_by, '90th percentile' metric, instance_number, rw_iops_90 rw_iops,   r_iops_90
 r_iops,   w_iops_90 w_iops,   rw_mbps_90 rw_mbps,   r_mbps_90 r_mbps,   w_mbps_90 w_mbps,   begin_i
nterval_time, end_interval_time, snap_shots FROM io_per_cluster
 UNION ALL
SELECT dbid, 07 order_by, '75th percentile' metric, instance_number, rw_iops_75 rw_iops,   r_iops_75
 r_iops,   w_iops_75 w_iops,   rw_mbps_75 rw_mbps,   r_mbps_75 r_mbps,   w_mbps_75 w_mbps,   begin_i
nterval_time, end_interval_time, snap_shots FROM io_per_cluster
 UNION ALL
SELECT dbid, 08 order_by, 'Median'          metric, instance_number, rw_iops_med rw_iops,  r_iops_me
d r_iops,  w_iops_med w_iops,  rw_mbps_med rw_mbps,  r_mbps_med r_mbps,  w_mbps_med w_mbps,  begin_i
nterval_time, end_interval_time, snap_shots FROM io_per_cluster
 UNION ALL
SELECT dbid, 09 order_by, 'Average'         metric, instance_number, rw_iops_avg rw_iops,  r_iops_av
g r_iops,  w_iops_avg w_iops,  rw_mbps_avg rw_mbps,  r_mbps_avg r_mbps,  w_mbps_avg w_mbps,  begin_i
nterval_time, end_interval_time, snap_shots FROM io_per_cluster
)
SELECT dbid,
       metric,
       instance_number,
       rw_iops,
       r_iops,
       w_iops,
       rw_mbps,
       r_mbps,
       w_mbps,
       TO_CHAR(CAST(begin_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') begin_interval_time,
       TO_CHAR(CAST(end_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') end_interval_time,
       snap_shots,
       ROUND(CAST(end_interval_time AS DATE) - CAST(begin_interval_time AS DATE), 1) days,
       ROUND(snap_shots / (CAST(end_interval_time AS DATE) - CAST(begin_interval_time AS DATE)), 1)
avg_snaps_per_day
  FROM io_per_inst_or_cluster
 ORDER BY
       dbid,
       order_by,
       instance_number NULLS LAST

11:30:20 1e.80
Elapsed Hours so far:    0.134
Elapsed Hours so far: .134

Elapsed: 00:00:00.00

11:30:20 1e "00098_edb360_323688_1e_80_iops_and_mbps_percentiles.html"
Elapsed Hours so far:    0.137

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:30:29 1e "Resources (as per AWR and MEM)"
11:30:29 IOPS Series for Cluster

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.81 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = instance_number
   AND stat_name IN ('physical read total IO requests', 'physical write total IO requests', 'redo wr
ites', 'physical read total bytes', 'physical write total bytes', 'redo size')
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.81 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.81 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(rw_iops) rw_iops,
       SUM(r_iops) r_iops,
       SUM(w_iops) w_iops,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:30:29 1e.81
Elapsed Hours so far:    0.137
Elapsed Hours so far: .137

Elapsed: 00:00:00.01

11:30:29 1e "00099_edb360_323688_1e_81_iops_series_for_cluster.html"
11:30:34 1e "00100_edb360_323688_1e_81_iops_series_for_cluster_line_chart.html"
Elapsed Hours so far:    0.140

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:30:39 1e "Resources (as per AWR and MEM)"
11:30:39 IOPS Series for Instance 1

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.81 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 1
   AND stat_name IN ('physical read total IO requests', 'physical write total IO requests', 'redo wr
ites', 'physical read total bytes', 'physical write total bytes', 'redo size')
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.81 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.81 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(rw_iops) rw_iops,
       SUM(r_iops) r_iops,
       SUM(w_iops) w_iops,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:30:39 1e.82
Elapsed Hours so far:    0.140
Elapsed Hours so far: .14

Elapsed: 00:00:00.00

11:30:39 1e "00101_edb360_323688_1e_82_iops_series_for_instance_1.html"
11:30:42 1e "00102_edb360_323688_1e_82_iops_series_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.141

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:30:44 1e "Resources (as per AWR and MEM)"
11:30:44 IOPS Series for Instance 2

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.81 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 2
   AND stat_name IN ('physical read total IO requests', 'physical write total IO requests', 'redo wr
ites', 'physical read total bytes', 'physical write total bytes', 'redo size')
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.81 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.81 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(rw_iops) rw_iops,
       SUM(r_iops) r_iops,
       SUM(w_iops) w_iops,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:30:44 1e.83
Elapsed Hours so far:    0.141
Elapsed Hours so far: .141

Elapsed: 00:00:00.01

11:30:44 1e "00103_edb360_323688_1e_83_iops_series_for_instance_2.html"
11:30:47 1e "00104_edb360_323688_1e_83_iops_series_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.143

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:30:50 1e "Resources (as per AWR and MEM)"
11:30:50 MBPS Series for Cluster

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.81 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = instance_number
   AND stat_name IN ('physical read total IO requests', 'physical write total IO requests', 'redo wr
ites', 'physical read total bytes', 'physical write total bytes', 'redo size')
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.81 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.81 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(rw_mbps) rw_mbps,
       SUM(r_mbps) r_mbps,
       SUM(w_mbps) w_mbps,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:30:50 1e.84
Elapsed Hours so far:    0.143
Elapsed Hours so far: .143

Elapsed: 00:00:00.00

11:30:50 1e "00105_edb360_323688_1e_84_mbps_series_for_cluster.html"
11:30:56 1e "00106_edb360_323688_1e_84_mbps_series_for_cluster_line_chart.html"
Elapsed Hours so far:    0.146

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:31:01 1e "Resources (as per AWR and MEM)"
11:31:01 MBPS Series for Instance 1

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.81 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 1
   AND stat_name IN ('physical read total IO requests', 'physical write total IO requests', 'redo wr
ites', 'physical read total bytes', 'physical write total bytes', 'redo size')
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.81 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.81 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(rw_mbps) rw_mbps,
       SUM(r_mbps) r_mbps,
       SUM(w_mbps) w_mbps,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:31:01 1e.85
Elapsed Hours so far:    0.146
Elapsed Hours so far: .146

Elapsed: 00:00:00.00

11:31:01 1e "00107_edb360_323688_1e_85_mbps_series_for_instance_1.html"
11:31:03 1e "00108_edb360_323688_1e_85_mbps_series_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.147

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:31:06 1e "Resources (as per AWR and MEM)"
11:31:06 MBPS Series for Instance 2

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.81 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 2
   AND stat_name IN ('physical read total IO requests', 'physical write total IO requests', 'redo wr
ites', 'physical read total bytes', 'physical write total bytes', 'redo size')
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.81 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.81 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(rw_mbps) rw_mbps,
       SUM(r_mbps) r_mbps,
       SUM(w_mbps) w_mbps,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:31:06 1e.86
Elapsed Hours so far:    0.147
Elapsed Hours so far: .147

Elapsed: 00:00:00.00

11:31:06 1e "00109_edb360_323688_1e_86_mbps_series_for_instance_2.html"
11:31:09 1e "00110_edb360_323688_1e_86_mbps_series_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.149

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:31:12 1e "Resources (as per AWR and MEM)"
11:31:12 R-IOPS Series for Cluster

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read bytes' THEN value ELSE 0 END) r_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical read IO requests' THEN value ELSE 0 END) r_IO_requests,
       SUM(CASE WHEN stat_name = 'physical read requests optimized' THEN value ELSE 0 END) r_request
s_optimized,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_total_bytes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_total_IO
_requests,
       SUM(CASE WHEN stat_name = 'physical read total multi block requests' THEN value ELSE 0 END) r
_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical reads' THEN value ELSE 0 END) reads,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads direct' THEN value ELSE 0 END) r_direct,
       SUM(CASE WHEN stat_name = 'physical reads direct (lob)' THEN value ELSE 0 END) r_direct_lob,
       SUM(CASE WHEN stat_name = 'physical reads direct temporary tablespace' THEN value ELSE 0 END)
 r_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical reads for flashback new' THEN value ELSE 0 END) r_for_fla
shback_new,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup,
       SUM(CASE WHEN stat_name = 'physical write bytes' THEN value ELSE 0 END) w_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical write IO requests' THEN value ELSE 0 END) w_IO_requests,
       SUM(CASE WHEN stat_name = 'physical write total bytes' THEN value ELSE 0 END) w_total_bytes,
       SUM(CASE WHEN stat_name = 'physical write total IO requests' THEN value ELSE 0 END) w_total_I
O_requests,
       SUM(CASE WHEN stat_name = 'physical write total multi block requests' THEN value ELSE 0 END)
w_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical writes' THEN value ELSE 0 END) writes,
       SUM(CASE WHEN stat_name = 'physical writes direct' THEN value ELSE 0 END) w_direct,
       SUM(CASE WHEN stat_name = 'physical writes direct (lob)' THEN value ELSE 0 END) w_direct_lob,

       SUM(CASE WHEN stat_name = 'physical writes direct temporary tablespace' THEN value ELSE 0 END
) w_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical writes from cache' THEN value ELSE 0 END) w_from_cache,
       SUM(CASE WHEN stat_name = 'physical writes non checkpoint' THEN value ELSE 0 END) w_non_check
point,
       SUM(CASE WHEN stat_name = 'redo size' THEN value ELSE 0 END) redo_size,
       SUM(CASE WHEN stat_name = 'redo writes' THEN value ELSE 0 END) redo_writes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = instance_number
   AND stat_name IN (
   'physical read bytes',
   'physical read flash cache hits',
   'physical read IO requests',
   'physical read requests optimized',
   'physical read total bytes', /* r_bytes */
   'physical read total IO requests', /* r_reqs */
   'physical read total multi block requests',
   'physical reads',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads direct',
   'physical reads direct (lob)',
   'physical reads direct temporary tablespace',
   'physical reads for flashback new',
   'physical reads prefetch warmup',
   'physical write bytes',
   'physical write IO requests',
   'physical write total bytes', /* w_bytes */
   'physical write total IO requests', /* w_reqs */
   'physical write total multi block requests',
   'physical writes',
   'physical writes direct',
   'physical writes direct (lob)',
   'physical writes direct temporary tablespace',
   'physical writes from cache',
   'physical writes non checkpoint',
   'redo size', /* w_bytes */
   'redo writes') /* w_reqs */
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_appl_bytes - h0.r_appl_bytes) r_appl_bytes,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_IO_requests - h0.r_IO_requests) r_IO_requests,
       (h1.r_requests_optimized - h0.r_requests_optimized) r_requests_optimized,
       (h1.r_total_bytes - h0.r_total_bytes) r_total_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) r_total_IO_requests,
       (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests) r_total_multi_block_reque
sts,
       (h1.reads - h0.reads) reads,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_direct - h0.r_direct) r_direct,
       (h1.r_direct_lob - h0.r_direct_lob) r_direct_lob,
       (h1.r_direct_temporary_tablespace - h0.r_direct_temporary_tablespace) r_direct_temporary_tabl
espace,
       (h1.r_for_flashback_new - h0.r_for_flashback_new) r_for_flashback_new,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       (h1.w_appl_bytes - h0.w_appl_bytes) w_appl_bytes,
       (h1.w_IO_requests - h0.w_IO_requests) w_IO_requests,
       (h1.w_total_bytes - h0.w_total_bytes) w_total_bytes,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) w_total_IO_requests,
       (h1.w_total_multi_block_requests - h0.w_total_multi_block_requests) w_total_multi_block_reque
sts,
       (h1.writes - h0.writes) writes,
       (h1.w_direct - h0.w_direct) w_direct,
       (h1.w_direct_lob - h0.w_direct_lob) w_direct_lob,
       (h1.w_direct_temporary_tablespace - h0.w_direct_temporary_tablespace) w_direct_temporary_tabl
espace,
       (h1.w_from_cache - h0.w_from_cache) w_from_cache,
       (h1.w_non_checkpoint - h0.w_non_checkpoint) w_non_checkpoint,
       (h1.redo_size - h0.redo_size) redo_size,
       (h1.redo_writes - h0.redo_writes) redo_writes,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests - h0.r_t
otal_multi_block_requests) r_total_single_block_requests,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) - (h1.w_total_multi_block_requests - h0.w_t
otal_multi_block_requests) w_total_single_block_requests,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests
 - h0.r_total_multi_block_requests))) r_total_bytes_single_block_req,
       (h1.r_total_bytes - h0.r_total_bytes) - (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requ
ests) - (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests))) r_total_bytes_multi_bl
ock_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(reads / elapsed_sec)) reads_ps,
       ROUND(MAX(writes / elapsed_sec)) writes_ps,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec)) r_flash_cache_hits_ps,
       ROUND(MAX(r_IO_requests / elapsed_sec)) r_appl_iops,
       ROUND(MAX(r_requests_optimized / elapsed_sec)) r_requests_optimized_iops,
       ROUND(MAX(r_total_IO_requests / elapsed_sec)) r_total_iops,
       ROUND(MAX(r_total_multi_block_requests / elapsed_sec)) r_total_multi_block_iops,
       ROUND(MAX(r_cache / elapsed_sec)) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec)) r_cache_prefetch_ps,
       ROUND(MAX(r_direct / elapsed_sec)) r_direct_ps,
       ROUND(MAX(r_direct_lob / elapsed_sec)) r_direct_lob_ps,
       ROUND(MAX(r_direct_temporary_tablespace / elapsed_sec)) r_direct_temp_tablespace_ps,
       ROUND(MAX(r_for_flashback_new / elapsed_sec)) r_for_flashback_new_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec)) r_prefetch_warmup_ps,
       ROUND(MAX(w_IO_requests / elapsed_sec)) w_appl_iops,
       ROUND(MAX(w_total_IO_requests / elapsed_sec)) w_total_iops,
       ROUND(MAX(w_total_multi_block_requests / elapsed_sec)) w_total_multi_block_iops,
       ROUND(MAX(w_direct / elapsed_sec)) w_direct_ps,
       ROUND(MAX(w_direct_lob / elapsed_sec)) w_direct_lob_ps,
       ROUND(MAX(w_direct_temporary_tablespace / elapsed_sec)) w_direct_temp_tablespace_ps,
       ROUND(MAX(w_from_cache / elapsed_sec)) w_from_cache_ps,
       ROUND(MAX(w_non_checkpoint / elapsed_sec)) w_non_checkpoint_ps,
       ROUND(MAX(redo_writes / elapsed_sec)) w_redo_iops,
       ROUND(MAX(r_total_single_block_requests / elapsed_sec)) r_total_single_block_iops,
       ROUND(MAX(w_total_single_block_requests / elapsed_sec)) w_total_single_block_iops,
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX(r_total_bytes / POWER(10,6) / elapsed_sec), 3) r_total_mbps,
       ROUND(MAX(r_appl_bytes / POWER(10,6) / elapsed_sec), 3) r_appl_mbps,
       ROUND(MAX(w_total_bytes / POWER(10,6) / elapsed_sec), 3) w_total_mbps,
       ROUND(MAX(w_appl_bytes / POWER(10,6) / elapsed_sec), 3) w_appl_mbps,
       ROUND(MAX(redo_size / POWER(10,6) / elapsed_sec), 3) redo_size_mbps,
       ROUND(MAX(r_total_bytes_single_block_req / POWER(10,6) / elapsed_sec), 3) r_total_single_bloc
k_mbps,
       ROUND(MAX(r_total_bytes_multi_block_req / POWER(10,6) / elapsed_sec), 3) r_total_multi_block_
mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_buffered_multi_block_req / GREATEST(r_total_mu
lti_block_requests, 1)) / POWER(10,6) / elapsed_sec), 3) r_buffered_multi_block_mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_direct / GREATEST(r_total_multi_block_requests
, 1)) / POWER(10,6) / elapsed_sec), 3) r_direct_multi_block_mbps,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(r_iops) r_iops,
       SUM(r_total_iops) total_IO_requests,
       SUM(r_total_single_block_iops) total_single_block_requests,
       SUM(r_total_multi_block_iops) total_multi_block_requests,
       SUM(r_requests_optimized_iops) requests_optimized,
       SUM(r_appl_iops) appl_IO_requests,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:31:12 1e.87
Elapsed Hours so far:    0.149
Elapsed Hours so far: .149

Elapsed: 00:00:00.00

11:31:12 1e "00111_edb360_323688_1e_87_riops_series_for_cluster.html"
11:31:37 1e "00112_edb360_323688_1e_87_riops_series_for_cluster_line_chart.html"
Elapsed Hours so far:    0.161

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:31:56 1e "Resources (as per AWR and MEM)"
11:31:56 R-IOPS Series for Instance 1

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read bytes' THEN value ELSE 0 END) r_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical read IO requests' THEN value ELSE 0 END) r_IO_requests,
       SUM(CASE WHEN stat_name = 'physical read requests optimized' THEN value ELSE 0 END) r_request
s_optimized,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_total_bytes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_total_IO
_requests,
       SUM(CASE WHEN stat_name = 'physical read total multi block requests' THEN value ELSE 0 END) r
_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical reads' THEN value ELSE 0 END) reads,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads direct' THEN value ELSE 0 END) r_direct,
       SUM(CASE WHEN stat_name = 'physical reads direct (lob)' THEN value ELSE 0 END) r_direct_lob,
       SUM(CASE WHEN stat_name = 'physical reads direct temporary tablespace' THEN value ELSE 0 END)
 r_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical reads for flashback new' THEN value ELSE 0 END) r_for_fla
shback_new,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup,
       SUM(CASE WHEN stat_name = 'physical write bytes' THEN value ELSE 0 END) w_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical write IO requests' THEN value ELSE 0 END) w_IO_requests,
       SUM(CASE WHEN stat_name = 'physical write total bytes' THEN value ELSE 0 END) w_total_bytes,
       SUM(CASE WHEN stat_name = 'physical write total IO requests' THEN value ELSE 0 END) w_total_I
O_requests,
       SUM(CASE WHEN stat_name = 'physical write total multi block requests' THEN value ELSE 0 END)
w_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical writes' THEN value ELSE 0 END) writes,
       SUM(CASE WHEN stat_name = 'physical writes direct' THEN value ELSE 0 END) w_direct,
       SUM(CASE WHEN stat_name = 'physical writes direct (lob)' THEN value ELSE 0 END) w_direct_lob,

       SUM(CASE WHEN stat_name = 'physical writes direct temporary tablespace' THEN value ELSE 0 END
) w_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical writes from cache' THEN value ELSE 0 END) w_from_cache,
       SUM(CASE WHEN stat_name = 'physical writes non checkpoint' THEN value ELSE 0 END) w_non_check
point,
       SUM(CASE WHEN stat_name = 'redo size' THEN value ELSE 0 END) redo_size,
       SUM(CASE WHEN stat_name = 'redo writes' THEN value ELSE 0 END) redo_writes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 1
   AND stat_name IN (
   'physical read bytes',
   'physical read flash cache hits',
   'physical read IO requests',
   'physical read requests optimized',
   'physical read total bytes', /* r_bytes */
   'physical read total IO requests', /* r_reqs */
   'physical read total multi block requests',
   'physical reads',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads direct',
   'physical reads direct (lob)',
   'physical reads direct temporary tablespace',
   'physical reads for flashback new',
   'physical reads prefetch warmup',
   'physical write bytes',
   'physical write IO requests',
   'physical write total bytes', /* w_bytes */
   'physical write total IO requests', /* w_reqs */
   'physical write total multi block requests',
   'physical writes',
   'physical writes direct',
   'physical writes direct (lob)',
   'physical writes direct temporary tablespace',
   'physical writes from cache',
   'physical writes non checkpoint',
   'redo size', /* w_bytes */
   'redo writes') /* w_reqs */
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_appl_bytes - h0.r_appl_bytes) r_appl_bytes,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_IO_requests - h0.r_IO_requests) r_IO_requests,
       (h1.r_requests_optimized - h0.r_requests_optimized) r_requests_optimized,
       (h1.r_total_bytes - h0.r_total_bytes) r_total_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) r_total_IO_requests,
       (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests) r_total_multi_block_reque
sts,
       (h1.reads - h0.reads) reads,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_direct - h0.r_direct) r_direct,
       (h1.r_direct_lob - h0.r_direct_lob) r_direct_lob,
       (h1.r_direct_temporary_tablespace - h0.r_direct_temporary_tablespace) r_direct_temporary_tabl
espace,
       (h1.r_for_flashback_new - h0.r_for_flashback_new) r_for_flashback_new,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       (h1.w_appl_bytes - h0.w_appl_bytes) w_appl_bytes,
       (h1.w_IO_requests - h0.w_IO_requests) w_IO_requests,
       (h1.w_total_bytes - h0.w_total_bytes) w_total_bytes,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) w_total_IO_requests,
       (h1.w_total_multi_block_requests - h0.w_total_multi_block_requests) w_total_multi_block_reque
sts,
       (h1.writes - h0.writes) writes,
       (h1.w_direct - h0.w_direct) w_direct,
       (h1.w_direct_lob - h0.w_direct_lob) w_direct_lob,
       (h1.w_direct_temporary_tablespace - h0.w_direct_temporary_tablespace) w_direct_temporary_tabl
espace,
       (h1.w_from_cache - h0.w_from_cache) w_from_cache,
       (h1.w_non_checkpoint - h0.w_non_checkpoint) w_non_checkpoint,
       (h1.redo_size - h0.redo_size) redo_size,
       (h1.redo_writes - h0.redo_writes) redo_writes,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests - h0.r_t
otal_multi_block_requests) r_total_single_block_requests,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) - (h1.w_total_multi_block_requests - h0.w_t
otal_multi_block_requests) w_total_single_block_requests,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests
 - h0.r_total_multi_block_requests))) r_total_bytes_single_block_req,
       (h1.r_total_bytes - h0.r_total_bytes) - (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requ
ests) - (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests))) r_total_bytes_multi_bl
ock_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(reads / elapsed_sec)) reads_ps,
       ROUND(MAX(writes / elapsed_sec)) writes_ps,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec)) r_flash_cache_hits_ps,
       ROUND(MAX(r_IO_requests / elapsed_sec)) r_appl_iops,
       ROUND(MAX(r_requests_optimized / elapsed_sec)) r_requests_optimized_iops,
       ROUND(MAX(r_total_IO_requests / elapsed_sec)) r_total_iops,
       ROUND(MAX(r_total_multi_block_requests / elapsed_sec)) r_total_multi_block_iops,
       ROUND(MAX(r_cache / elapsed_sec)) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec)) r_cache_prefetch_ps,
       ROUND(MAX(r_direct / elapsed_sec)) r_direct_ps,
       ROUND(MAX(r_direct_lob / elapsed_sec)) r_direct_lob_ps,
       ROUND(MAX(r_direct_temporary_tablespace / elapsed_sec)) r_direct_temp_tablespace_ps,
       ROUND(MAX(r_for_flashback_new / elapsed_sec)) r_for_flashback_new_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec)) r_prefetch_warmup_ps,
       ROUND(MAX(w_IO_requests / elapsed_sec)) w_appl_iops,
       ROUND(MAX(w_total_IO_requests / elapsed_sec)) w_total_iops,
       ROUND(MAX(w_total_multi_block_requests / elapsed_sec)) w_total_multi_block_iops,
       ROUND(MAX(w_direct / elapsed_sec)) w_direct_ps,
       ROUND(MAX(w_direct_lob / elapsed_sec)) w_direct_lob_ps,
       ROUND(MAX(w_direct_temporary_tablespace / elapsed_sec)) w_direct_temp_tablespace_ps,
       ROUND(MAX(w_from_cache / elapsed_sec)) w_from_cache_ps,
       ROUND(MAX(w_non_checkpoint / elapsed_sec)) w_non_checkpoint_ps,
       ROUND(MAX(redo_writes / elapsed_sec)) w_redo_iops,
       ROUND(MAX(r_total_single_block_requests / elapsed_sec)) r_total_single_block_iops,
       ROUND(MAX(w_total_single_block_requests / elapsed_sec)) w_total_single_block_iops,
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX(r_total_bytes / POWER(10,6) / elapsed_sec), 3) r_total_mbps,
       ROUND(MAX(r_appl_bytes / POWER(10,6) / elapsed_sec), 3) r_appl_mbps,
       ROUND(MAX(w_total_bytes / POWER(10,6) / elapsed_sec), 3) w_total_mbps,
       ROUND(MAX(w_appl_bytes / POWER(10,6) / elapsed_sec), 3) w_appl_mbps,
       ROUND(MAX(redo_size / POWER(10,6) / elapsed_sec), 3) redo_size_mbps,
       ROUND(MAX(r_total_bytes_single_block_req / POWER(10,6) / elapsed_sec), 3) r_total_single_bloc
k_mbps,
       ROUND(MAX(r_total_bytes_multi_block_req / POWER(10,6) / elapsed_sec), 3) r_total_multi_block_
mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_buffered_multi_block_req / GREATEST(r_total_mu
lti_block_requests, 1)) / POWER(10,6) / elapsed_sec), 3) r_buffered_multi_block_mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_direct / GREATEST(r_total_multi_block_requests
, 1)) / POWER(10,6) / elapsed_sec), 3) r_direct_multi_block_mbps,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(r_iops) r_iops,
       SUM(r_total_iops) total_IO_requests,
       SUM(r_total_single_block_iops) total_single_block_requests,
       SUM(r_total_multi_block_iops) total_multi_block_requests,
       SUM(r_requests_optimized_iops) requests_optimized,
       SUM(r_appl_iops) appl_IO_requests,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:31:56 1e.88
Elapsed Hours so far:    0.161
Elapsed Hours so far: .161

Elapsed: 00:00:00.00

11:31:56 1e "00113_edb360_323688_1e_88_riops_series_for_instance_1.html"
11:32:06 1e "00114_edb360_323688_1e_88_riops_series_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.166

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:32:15 1e "Resources (as per AWR and MEM)"
11:32:15 R-IOPS Series for Instance 2

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read bytes' THEN value ELSE 0 END) r_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical read IO requests' THEN value ELSE 0 END) r_IO_requests,
       SUM(CASE WHEN stat_name = 'physical read requests optimized' THEN value ELSE 0 END) r_request
s_optimized,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_total_bytes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_total_IO
_requests,
       SUM(CASE WHEN stat_name = 'physical read total multi block requests' THEN value ELSE 0 END) r
_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical reads' THEN value ELSE 0 END) reads,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads direct' THEN value ELSE 0 END) r_direct,
       SUM(CASE WHEN stat_name = 'physical reads direct (lob)' THEN value ELSE 0 END) r_direct_lob,
       SUM(CASE WHEN stat_name = 'physical reads direct temporary tablespace' THEN value ELSE 0 END)
 r_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical reads for flashback new' THEN value ELSE 0 END) r_for_fla
shback_new,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup,
       SUM(CASE WHEN stat_name = 'physical write bytes' THEN value ELSE 0 END) w_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical write IO requests' THEN value ELSE 0 END) w_IO_requests,
       SUM(CASE WHEN stat_name = 'physical write total bytes' THEN value ELSE 0 END) w_total_bytes,
       SUM(CASE WHEN stat_name = 'physical write total IO requests' THEN value ELSE 0 END) w_total_I
O_requests,
       SUM(CASE WHEN stat_name = 'physical write total multi block requests' THEN value ELSE 0 END)
w_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical writes' THEN value ELSE 0 END) writes,
       SUM(CASE WHEN stat_name = 'physical writes direct' THEN value ELSE 0 END) w_direct,
       SUM(CASE WHEN stat_name = 'physical writes direct (lob)' THEN value ELSE 0 END) w_direct_lob,

       SUM(CASE WHEN stat_name = 'physical writes direct temporary tablespace' THEN value ELSE 0 END
) w_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical writes from cache' THEN value ELSE 0 END) w_from_cache,
       SUM(CASE WHEN stat_name = 'physical writes non checkpoint' THEN value ELSE 0 END) w_non_check
point,
       SUM(CASE WHEN stat_name = 'redo size' THEN value ELSE 0 END) redo_size,
       SUM(CASE WHEN stat_name = 'redo writes' THEN value ELSE 0 END) redo_writes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 2
   AND stat_name IN (
   'physical read bytes',
   'physical read flash cache hits',
   'physical read IO requests',
   'physical read requests optimized',
   'physical read total bytes', /* r_bytes */
   'physical read total IO requests', /* r_reqs */
   'physical read total multi block requests',
   'physical reads',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads direct',
   'physical reads direct (lob)',
   'physical reads direct temporary tablespace',
   'physical reads for flashback new',
   'physical reads prefetch warmup',
   'physical write bytes',
   'physical write IO requests',
   'physical write total bytes', /* w_bytes */
   'physical write total IO requests', /* w_reqs */
   'physical write total multi block requests',
   'physical writes',
   'physical writes direct',
   'physical writes direct (lob)',
   'physical writes direct temporary tablespace',
   'physical writes from cache',
   'physical writes non checkpoint',
   'redo size', /* w_bytes */
   'redo writes') /* w_reqs */
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_appl_bytes - h0.r_appl_bytes) r_appl_bytes,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_IO_requests - h0.r_IO_requests) r_IO_requests,
       (h1.r_requests_optimized - h0.r_requests_optimized) r_requests_optimized,
       (h1.r_total_bytes - h0.r_total_bytes) r_total_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) r_total_IO_requests,
       (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests) r_total_multi_block_reque
sts,
       (h1.reads - h0.reads) reads,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_direct - h0.r_direct) r_direct,
       (h1.r_direct_lob - h0.r_direct_lob) r_direct_lob,
       (h1.r_direct_temporary_tablespace - h0.r_direct_temporary_tablespace) r_direct_temporary_tabl
espace,
       (h1.r_for_flashback_new - h0.r_for_flashback_new) r_for_flashback_new,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       (h1.w_appl_bytes - h0.w_appl_bytes) w_appl_bytes,
       (h1.w_IO_requests - h0.w_IO_requests) w_IO_requests,
       (h1.w_total_bytes - h0.w_total_bytes) w_total_bytes,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) w_total_IO_requests,
       (h1.w_total_multi_block_requests - h0.w_total_multi_block_requests) w_total_multi_block_reque
sts,
       (h1.writes - h0.writes) writes,
       (h1.w_direct - h0.w_direct) w_direct,
       (h1.w_direct_lob - h0.w_direct_lob) w_direct_lob,
       (h1.w_direct_temporary_tablespace - h0.w_direct_temporary_tablespace) w_direct_temporary_tabl
espace,
       (h1.w_from_cache - h0.w_from_cache) w_from_cache,
       (h1.w_non_checkpoint - h0.w_non_checkpoint) w_non_checkpoint,
       (h1.redo_size - h0.redo_size) redo_size,
       (h1.redo_writes - h0.redo_writes) redo_writes,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests - h0.r_t
otal_multi_block_requests) r_total_single_block_requests,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) - (h1.w_total_multi_block_requests - h0.w_t
otal_multi_block_requests) w_total_single_block_requests,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests
 - h0.r_total_multi_block_requests))) r_total_bytes_single_block_req,
       (h1.r_total_bytes - h0.r_total_bytes) - (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requ
ests) - (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests))) r_total_bytes_multi_bl
ock_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(reads / elapsed_sec)) reads_ps,
       ROUND(MAX(writes / elapsed_sec)) writes_ps,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec)) r_flash_cache_hits_ps,
       ROUND(MAX(r_IO_requests / elapsed_sec)) r_appl_iops,
       ROUND(MAX(r_requests_optimized / elapsed_sec)) r_requests_optimized_iops,
       ROUND(MAX(r_total_IO_requests / elapsed_sec)) r_total_iops,
       ROUND(MAX(r_total_multi_block_requests / elapsed_sec)) r_total_multi_block_iops,
       ROUND(MAX(r_cache / elapsed_sec)) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec)) r_cache_prefetch_ps,
       ROUND(MAX(r_direct / elapsed_sec)) r_direct_ps,
       ROUND(MAX(r_direct_lob / elapsed_sec)) r_direct_lob_ps,
       ROUND(MAX(r_direct_temporary_tablespace / elapsed_sec)) r_direct_temp_tablespace_ps,
       ROUND(MAX(r_for_flashback_new / elapsed_sec)) r_for_flashback_new_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec)) r_prefetch_warmup_ps,
       ROUND(MAX(w_IO_requests / elapsed_sec)) w_appl_iops,
       ROUND(MAX(w_total_IO_requests / elapsed_sec)) w_total_iops,
       ROUND(MAX(w_total_multi_block_requests / elapsed_sec)) w_total_multi_block_iops,
       ROUND(MAX(w_direct / elapsed_sec)) w_direct_ps,
       ROUND(MAX(w_direct_lob / elapsed_sec)) w_direct_lob_ps,
       ROUND(MAX(w_direct_temporary_tablespace / elapsed_sec)) w_direct_temp_tablespace_ps,
       ROUND(MAX(w_from_cache / elapsed_sec)) w_from_cache_ps,
       ROUND(MAX(w_non_checkpoint / elapsed_sec)) w_non_checkpoint_ps,
       ROUND(MAX(redo_writes / elapsed_sec)) w_redo_iops,
       ROUND(MAX(r_total_single_block_requests / elapsed_sec)) r_total_single_block_iops,
       ROUND(MAX(w_total_single_block_requests / elapsed_sec)) w_total_single_block_iops,
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX(r_total_bytes / POWER(10,6) / elapsed_sec), 3) r_total_mbps,
       ROUND(MAX(r_appl_bytes / POWER(10,6) / elapsed_sec), 3) r_appl_mbps,
       ROUND(MAX(w_total_bytes / POWER(10,6) / elapsed_sec), 3) w_total_mbps,
       ROUND(MAX(w_appl_bytes / POWER(10,6) / elapsed_sec), 3) w_appl_mbps,
       ROUND(MAX(redo_size / POWER(10,6) / elapsed_sec), 3) redo_size_mbps,
       ROUND(MAX(r_total_bytes_single_block_req / POWER(10,6) / elapsed_sec), 3) r_total_single_bloc
k_mbps,
       ROUND(MAX(r_total_bytes_multi_block_req / POWER(10,6) / elapsed_sec), 3) r_total_multi_block_
mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_buffered_multi_block_req / GREATEST(r_total_mu
lti_block_requests, 1)) / POWER(10,6) / elapsed_sec), 3) r_buffered_multi_block_mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_direct / GREATEST(r_total_multi_block_requests
, 1)) / POWER(10,6) / elapsed_sec), 3) r_direct_multi_block_mbps,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(r_iops) r_iops,
       SUM(r_total_iops) total_IO_requests,
       SUM(r_total_single_block_iops) total_single_block_requests,
       SUM(r_total_multi_block_iops) total_multi_block_requests,
       SUM(r_requests_optimized_iops) requests_optimized,
       SUM(r_appl_iops) appl_IO_requests,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:32:15 1e.89
Elapsed Hours so far:    0.166
Elapsed Hours so far: .166

Elapsed: 00:00:00.01

11:32:15 1e "00115_edb360_323688_1e_89_riops_series_for_instance_2.html"
11:32:24 1e "00116_edb360_323688_1e_89_riops_series_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.172

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:32:33 1e "Resources (as per AWR and MEM)"
11:32:33 Reads (per second) Series for Cluster

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read bytes' THEN value ELSE 0 END) r_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical read IO requests' THEN value ELSE 0 END) r_IO_requests,
       SUM(CASE WHEN stat_name = 'physical read requests optimized' THEN value ELSE 0 END) r_request
s_optimized,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_total_bytes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_total_IO
_requests,
       SUM(CASE WHEN stat_name = 'physical read total multi block requests' THEN value ELSE 0 END) r
_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical reads' THEN value ELSE 0 END) reads,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads direct' THEN value ELSE 0 END) r_direct,
       SUM(CASE WHEN stat_name = 'physical reads direct (lob)' THEN value ELSE 0 END) r_direct_lob,
       SUM(CASE WHEN stat_name = 'physical reads direct temporary tablespace' THEN value ELSE 0 END)
 r_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical reads for flashback new' THEN value ELSE 0 END) r_for_fla
shback_new,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup,
       SUM(CASE WHEN stat_name = 'physical write bytes' THEN value ELSE 0 END) w_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical write IO requests' THEN value ELSE 0 END) w_IO_requests,
       SUM(CASE WHEN stat_name = 'physical write total bytes' THEN value ELSE 0 END) w_total_bytes,
       SUM(CASE WHEN stat_name = 'physical write total IO requests' THEN value ELSE 0 END) w_total_I
O_requests,
       SUM(CASE WHEN stat_name = 'physical write total multi block requests' THEN value ELSE 0 END)
w_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical writes' THEN value ELSE 0 END) writes,
       SUM(CASE WHEN stat_name = 'physical writes direct' THEN value ELSE 0 END) w_direct,
       SUM(CASE WHEN stat_name = 'physical writes direct (lob)' THEN value ELSE 0 END) w_direct_lob,

       SUM(CASE WHEN stat_name = 'physical writes direct temporary tablespace' THEN value ELSE 0 END
) w_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical writes from cache' THEN value ELSE 0 END) w_from_cache,
       SUM(CASE WHEN stat_name = 'physical writes non checkpoint' THEN value ELSE 0 END) w_non_check
point,
       SUM(CASE WHEN stat_name = 'redo size' THEN value ELSE 0 END) redo_size,
       SUM(CASE WHEN stat_name = 'redo writes' THEN value ELSE 0 END) redo_writes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = instance_number
   AND stat_name IN (
   'physical read bytes',
   'physical read flash cache hits',
   'physical read IO requests',
   'physical read requests optimized',
   'physical read total bytes', /* r_bytes */
   'physical read total IO requests', /* r_reqs */
   'physical read total multi block requests',
   'physical reads',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads direct',
   'physical reads direct (lob)',
   'physical reads direct temporary tablespace',
   'physical reads for flashback new',
   'physical reads prefetch warmup',
   'physical write bytes',
   'physical write IO requests',
   'physical write total bytes', /* w_bytes */
   'physical write total IO requests', /* w_reqs */
   'physical write total multi block requests',
   'physical writes',
   'physical writes direct',
   'physical writes direct (lob)',
   'physical writes direct temporary tablespace',
   'physical writes from cache',
   'physical writes non checkpoint',
   'redo size', /* w_bytes */
   'redo writes') /* w_reqs */
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_appl_bytes - h0.r_appl_bytes) r_appl_bytes,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_IO_requests - h0.r_IO_requests) r_IO_requests,
       (h1.r_requests_optimized - h0.r_requests_optimized) r_requests_optimized,
       (h1.r_total_bytes - h0.r_total_bytes) r_total_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) r_total_IO_requests,
       (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests) r_total_multi_block_reque
sts,
       (h1.reads - h0.reads) reads,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_direct - h0.r_direct) r_direct,
       (h1.r_direct_lob - h0.r_direct_lob) r_direct_lob,
       (h1.r_direct_temporary_tablespace - h0.r_direct_temporary_tablespace) r_direct_temporary_tabl
espace,
       (h1.r_for_flashback_new - h0.r_for_flashback_new) r_for_flashback_new,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       (h1.w_appl_bytes - h0.w_appl_bytes) w_appl_bytes,
       (h1.w_IO_requests - h0.w_IO_requests) w_IO_requests,
       (h1.w_total_bytes - h0.w_total_bytes) w_total_bytes,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) w_total_IO_requests,
       (h1.w_total_multi_block_requests - h0.w_total_multi_block_requests) w_total_multi_block_reque
sts,
       (h1.writes - h0.writes) writes,
       (h1.w_direct - h0.w_direct) w_direct,
       (h1.w_direct_lob - h0.w_direct_lob) w_direct_lob,
       (h1.w_direct_temporary_tablespace - h0.w_direct_temporary_tablespace) w_direct_temporary_tabl
espace,
       (h1.w_from_cache - h0.w_from_cache) w_from_cache,
       (h1.w_non_checkpoint - h0.w_non_checkpoint) w_non_checkpoint,
       (h1.redo_size - h0.redo_size) redo_size,
       (h1.redo_writes - h0.redo_writes) redo_writes,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests - h0.r_t
otal_multi_block_requests) r_total_single_block_requests,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) - (h1.w_total_multi_block_requests - h0.w_t
otal_multi_block_requests) w_total_single_block_requests,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests
 - h0.r_total_multi_block_requests))) r_total_bytes_single_block_req,
       (h1.r_total_bytes - h0.r_total_bytes) - (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requ
ests) - (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests))) r_total_bytes_multi_bl
ock_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(reads / elapsed_sec)) reads_ps,
       ROUND(MAX(writes / elapsed_sec)) writes_ps,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec)) r_flash_cache_hits_ps,
       ROUND(MAX(r_IO_requests / elapsed_sec)) r_appl_iops,
       ROUND(MAX(r_requests_optimized / elapsed_sec)) r_requests_optimized_iops,
       ROUND(MAX(r_total_IO_requests / elapsed_sec)) r_total_iops,
       ROUND(MAX(r_total_multi_block_requests / elapsed_sec)) r_total_multi_block_iops,
       ROUND(MAX(r_cache / elapsed_sec)) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec)) r_cache_prefetch_ps,
       ROUND(MAX(r_direct / elapsed_sec)) r_direct_ps,
       ROUND(MAX(r_direct_lob / elapsed_sec)) r_direct_lob_ps,
       ROUND(MAX(r_direct_temporary_tablespace / elapsed_sec)) r_direct_temp_tablespace_ps,
       ROUND(MAX(r_for_flashback_new / elapsed_sec)) r_for_flashback_new_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec)) r_prefetch_warmup_ps,
       ROUND(MAX(w_IO_requests / elapsed_sec)) w_appl_iops,
       ROUND(MAX(w_total_IO_requests / elapsed_sec)) w_total_iops,
       ROUND(MAX(w_total_multi_block_requests / elapsed_sec)) w_total_multi_block_iops,
       ROUND(MAX(w_direct / elapsed_sec)) w_direct_ps,
       ROUND(MAX(w_direct_lob / elapsed_sec)) w_direct_lob_ps,
       ROUND(MAX(w_direct_temporary_tablespace / elapsed_sec)) w_direct_temp_tablespace_ps,
       ROUND(MAX(w_from_cache / elapsed_sec)) w_from_cache_ps,
       ROUND(MAX(w_non_checkpoint / elapsed_sec)) w_non_checkpoint_ps,
       ROUND(MAX(redo_writes / elapsed_sec)) w_redo_iops,
       ROUND(MAX(r_total_single_block_requests / elapsed_sec)) r_total_single_block_iops,
       ROUND(MAX(w_total_single_block_requests / elapsed_sec)) w_total_single_block_iops,
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX(r_total_bytes / POWER(10,6) / elapsed_sec), 3) r_total_mbps,
       ROUND(MAX(r_appl_bytes / POWER(10,6) / elapsed_sec), 3) r_appl_mbps,
       ROUND(MAX(w_total_bytes / POWER(10,6) / elapsed_sec), 3) w_total_mbps,
       ROUND(MAX(w_appl_bytes / POWER(10,6) / elapsed_sec), 3) w_appl_mbps,
       ROUND(MAX(redo_size / POWER(10,6) / elapsed_sec), 3) redo_size_mbps,
       ROUND(MAX(r_total_bytes_single_block_req / POWER(10,6) / elapsed_sec), 3) r_total_single_bloc
k_mbps,
       ROUND(MAX(r_total_bytes_multi_block_req / POWER(10,6) / elapsed_sec), 3) r_total_multi_block_
mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_buffered_multi_block_req / GREATEST(r_total_mu
lti_block_requests, 1)) / POWER(10,6) / elapsed_sec), 3) r_buffered_multi_block_mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_direct / GREATEST(r_total_multi_block_requests
, 1)) / POWER(10,6) / elapsed_sec), 3) r_direct_multi_block_mbps,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(reads_ps) reads,
       SUM(r_direct_ps) direct,
       SUM(r_direct_lob_ps) direct_lob,
       SUM(r_direct_temp_tablespace_ps) direct_temporary_tablespace,
       SUM(r_cache_ps) cache,
       SUM(r_cache_prefetch_ps) cache_prefetch,
       SUM(r_flash_cache_hits_ps) flash_cache_hits,
       SUM(r_for_flashback_new_ps) for_flashback_new,
       SUM(r_prefetch_warmup_ps) prefetch_warmup,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:32:33 1e.90
Elapsed Hours so far:    0.172
Elapsed Hours so far: .172

Elapsed: 00:00:00.00

11:32:34 1e "00117_edb360_323688_1e_90_reads_per_second_series_for_cluster.html"
11:32:51 1e "00118_edb360_323688_1e_90_reads_per_second_series_for_cluster_line_chart.html"
Elapsed Hours so far:    0.181

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:33:09 1e "Resources (as per AWR and MEM)"
11:33:09 Reads (per second) Series for Instance 1

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read bytes' THEN value ELSE 0 END) r_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical read IO requests' THEN value ELSE 0 END) r_IO_requests,
       SUM(CASE WHEN stat_name = 'physical read requests optimized' THEN value ELSE 0 END) r_request
s_optimized,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_total_bytes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_total_IO
_requests,
       SUM(CASE WHEN stat_name = 'physical read total multi block requests' THEN value ELSE 0 END) r
_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical reads' THEN value ELSE 0 END) reads,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads direct' THEN value ELSE 0 END) r_direct,
       SUM(CASE WHEN stat_name = 'physical reads direct (lob)' THEN value ELSE 0 END) r_direct_lob,
       SUM(CASE WHEN stat_name = 'physical reads direct temporary tablespace' THEN value ELSE 0 END)
 r_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical reads for flashback new' THEN value ELSE 0 END) r_for_fla
shback_new,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup,
       SUM(CASE WHEN stat_name = 'physical write bytes' THEN value ELSE 0 END) w_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical write IO requests' THEN value ELSE 0 END) w_IO_requests,
       SUM(CASE WHEN stat_name = 'physical write total bytes' THEN value ELSE 0 END) w_total_bytes,
       SUM(CASE WHEN stat_name = 'physical write total IO requests' THEN value ELSE 0 END) w_total_I
O_requests,
       SUM(CASE WHEN stat_name = 'physical write total multi block requests' THEN value ELSE 0 END)
w_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical writes' THEN value ELSE 0 END) writes,
       SUM(CASE WHEN stat_name = 'physical writes direct' THEN value ELSE 0 END) w_direct,
       SUM(CASE WHEN stat_name = 'physical writes direct (lob)' THEN value ELSE 0 END) w_direct_lob,

       SUM(CASE WHEN stat_name = 'physical writes direct temporary tablespace' THEN value ELSE 0 END
) w_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical writes from cache' THEN value ELSE 0 END) w_from_cache,
       SUM(CASE WHEN stat_name = 'physical writes non checkpoint' THEN value ELSE 0 END) w_non_check
point,
       SUM(CASE WHEN stat_name = 'redo size' THEN value ELSE 0 END) redo_size,
       SUM(CASE WHEN stat_name = 'redo writes' THEN value ELSE 0 END) redo_writes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 1
   AND stat_name IN (
   'physical read bytes',
   'physical read flash cache hits',
   'physical read IO requests',
   'physical read requests optimized',
   'physical read total bytes', /* r_bytes */
   'physical read total IO requests', /* r_reqs */
   'physical read total multi block requests',
   'physical reads',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads direct',
   'physical reads direct (lob)',
   'physical reads direct temporary tablespace',
   'physical reads for flashback new',
   'physical reads prefetch warmup',
   'physical write bytes',
   'physical write IO requests',
   'physical write total bytes', /* w_bytes */
   'physical write total IO requests', /* w_reqs */
   'physical write total multi block requests',
   'physical writes',
   'physical writes direct',
   'physical writes direct (lob)',
   'physical writes direct temporary tablespace',
   'physical writes from cache',
   'physical writes non checkpoint',
   'redo size', /* w_bytes */
   'redo writes') /* w_reqs */
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_appl_bytes - h0.r_appl_bytes) r_appl_bytes,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_IO_requests - h0.r_IO_requests) r_IO_requests,
       (h1.r_requests_optimized - h0.r_requests_optimized) r_requests_optimized,
       (h1.r_total_bytes - h0.r_total_bytes) r_total_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) r_total_IO_requests,
       (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests) r_total_multi_block_reque
sts,
       (h1.reads - h0.reads) reads,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_direct - h0.r_direct) r_direct,
       (h1.r_direct_lob - h0.r_direct_lob) r_direct_lob,
       (h1.r_direct_temporary_tablespace - h0.r_direct_temporary_tablespace) r_direct_temporary_tabl
espace,
       (h1.r_for_flashback_new - h0.r_for_flashback_new) r_for_flashback_new,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       (h1.w_appl_bytes - h0.w_appl_bytes) w_appl_bytes,
       (h1.w_IO_requests - h0.w_IO_requests) w_IO_requests,
       (h1.w_total_bytes - h0.w_total_bytes) w_total_bytes,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) w_total_IO_requests,
       (h1.w_total_multi_block_requests - h0.w_total_multi_block_requests) w_total_multi_block_reque
sts,
       (h1.writes - h0.writes) writes,
       (h1.w_direct - h0.w_direct) w_direct,
       (h1.w_direct_lob - h0.w_direct_lob) w_direct_lob,
       (h1.w_direct_temporary_tablespace - h0.w_direct_temporary_tablespace) w_direct_temporary_tabl
espace,
       (h1.w_from_cache - h0.w_from_cache) w_from_cache,
       (h1.w_non_checkpoint - h0.w_non_checkpoint) w_non_checkpoint,
       (h1.redo_size - h0.redo_size) redo_size,
       (h1.redo_writes - h0.redo_writes) redo_writes,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests - h0.r_t
otal_multi_block_requests) r_total_single_block_requests,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) - (h1.w_total_multi_block_requests - h0.w_t
otal_multi_block_requests) w_total_single_block_requests,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests
 - h0.r_total_multi_block_requests))) r_total_bytes_single_block_req,
       (h1.r_total_bytes - h0.r_total_bytes) - (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requ
ests) - (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests))) r_total_bytes_multi_bl
ock_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(reads / elapsed_sec)) reads_ps,
       ROUND(MAX(writes / elapsed_sec)) writes_ps,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec)) r_flash_cache_hits_ps,
       ROUND(MAX(r_IO_requests / elapsed_sec)) r_appl_iops,
       ROUND(MAX(r_requests_optimized / elapsed_sec)) r_requests_optimized_iops,
       ROUND(MAX(r_total_IO_requests / elapsed_sec)) r_total_iops,
       ROUND(MAX(r_total_multi_block_requests / elapsed_sec)) r_total_multi_block_iops,
       ROUND(MAX(r_cache / elapsed_sec)) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec)) r_cache_prefetch_ps,
       ROUND(MAX(r_direct / elapsed_sec)) r_direct_ps,
       ROUND(MAX(r_direct_lob / elapsed_sec)) r_direct_lob_ps,
       ROUND(MAX(r_direct_temporary_tablespace / elapsed_sec)) r_direct_temp_tablespace_ps,
       ROUND(MAX(r_for_flashback_new / elapsed_sec)) r_for_flashback_new_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec)) r_prefetch_warmup_ps,
       ROUND(MAX(w_IO_requests / elapsed_sec)) w_appl_iops,
       ROUND(MAX(w_total_IO_requests / elapsed_sec)) w_total_iops,
       ROUND(MAX(w_total_multi_block_requests / elapsed_sec)) w_total_multi_block_iops,
       ROUND(MAX(w_direct / elapsed_sec)) w_direct_ps,
       ROUND(MAX(w_direct_lob / elapsed_sec)) w_direct_lob_ps,
       ROUND(MAX(w_direct_temporary_tablespace / elapsed_sec)) w_direct_temp_tablespace_ps,
       ROUND(MAX(w_from_cache / elapsed_sec)) w_from_cache_ps,
       ROUND(MAX(w_non_checkpoint / elapsed_sec)) w_non_checkpoint_ps,
       ROUND(MAX(redo_writes / elapsed_sec)) w_redo_iops,
       ROUND(MAX(r_total_single_block_requests / elapsed_sec)) r_total_single_block_iops,
       ROUND(MAX(w_total_single_block_requests / elapsed_sec)) w_total_single_block_iops,
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX(r_total_bytes / POWER(10,6) / elapsed_sec), 3) r_total_mbps,
       ROUND(MAX(r_appl_bytes / POWER(10,6) / elapsed_sec), 3) r_appl_mbps,
       ROUND(MAX(w_total_bytes / POWER(10,6) / elapsed_sec), 3) w_total_mbps,
       ROUND(MAX(w_appl_bytes / POWER(10,6) / elapsed_sec), 3) w_appl_mbps,
       ROUND(MAX(redo_size / POWER(10,6) / elapsed_sec), 3) redo_size_mbps,
       ROUND(MAX(r_total_bytes_single_block_req / POWER(10,6) / elapsed_sec), 3) r_total_single_bloc
k_mbps,
       ROUND(MAX(r_total_bytes_multi_block_req / POWER(10,6) / elapsed_sec), 3) r_total_multi_block_
mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_buffered_multi_block_req / GREATEST(r_total_mu
lti_block_requests, 1)) / POWER(10,6) / elapsed_sec), 3) r_buffered_multi_block_mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_direct / GREATEST(r_total_multi_block_requests
, 1)) / POWER(10,6) / elapsed_sec), 3) r_direct_multi_block_mbps,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(reads_ps) reads,
       SUM(r_direct_ps) direct,
       SUM(r_direct_lob_ps) direct_lob,
       SUM(r_direct_temp_tablespace_ps) direct_temporary_tablespace,
       SUM(r_cache_ps) cache,
       SUM(r_cache_prefetch_ps) cache_prefetch,
       SUM(r_flash_cache_hits_ps) flash_cache_hits,
       SUM(r_for_flashback_new_ps) for_flashback_new,
       SUM(r_prefetch_warmup_ps) prefetch_warmup,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:33:09 1e.91
Elapsed Hours so far:    0.181
Elapsed Hours so far: .181

Elapsed: 00:00:00.00

11:33:09 1e "00119_edb360_323688_1e_91_reads_per_second_series_for_instance_1.html"
11:33:18 1e "00120_edb360_323688_1e_91_reads_per_second_series_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.186

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:33:27 1e "Resources (as per AWR and MEM)"
11:33:27 Reads (per second) Series for Instance 2

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read bytes' THEN value ELSE 0 END) r_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical read IO requests' THEN value ELSE 0 END) r_IO_requests,
       SUM(CASE WHEN stat_name = 'physical read requests optimized' THEN value ELSE 0 END) r_request
s_optimized,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_total_bytes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_total_IO
_requests,
       SUM(CASE WHEN stat_name = 'physical read total multi block requests' THEN value ELSE 0 END) r
_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical reads' THEN value ELSE 0 END) reads,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads direct' THEN value ELSE 0 END) r_direct,
       SUM(CASE WHEN stat_name = 'physical reads direct (lob)' THEN value ELSE 0 END) r_direct_lob,
       SUM(CASE WHEN stat_name = 'physical reads direct temporary tablespace' THEN value ELSE 0 END)
 r_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical reads for flashback new' THEN value ELSE 0 END) r_for_fla
shback_new,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup,
       SUM(CASE WHEN stat_name = 'physical write bytes' THEN value ELSE 0 END) w_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical write IO requests' THEN value ELSE 0 END) w_IO_requests,
       SUM(CASE WHEN stat_name = 'physical write total bytes' THEN value ELSE 0 END) w_total_bytes,
       SUM(CASE WHEN stat_name = 'physical write total IO requests' THEN value ELSE 0 END) w_total_I
O_requests,
       SUM(CASE WHEN stat_name = 'physical write total multi block requests' THEN value ELSE 0 END)
w_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical writes' THEN value ELSE 0 END) writes,
       SUM(CASE WHEN stat_name = 'physical writes direct' THEN value ELSE 0 END) w_direct,
       SUM(CASE WHEN stat_name = 'physical writes direct (lob)' THEN value ELSE 0 END) w_direct_lob,

       SUM(CASE WHEN stat_name = 'physical writes direct temporary tablespace' THEN value ELSE 0 END
) w_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical writes from cache' THEN value ELSE 0 END) w_from_cache,
       SUM(CASE WHEN stat_name = 'physical writes non checkpoint' THEN value ELSE 0 END) w_non_check
point,
       SUM(CASE WHEN stat_name = 'redo size' THEN value ELSE 0 END) redo_size,
       SUM(CASE WHEN stat_name = 'redo writes' THEN value ELSE 0 END) redo_writes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 2
   AND stat_name IN (
   'physical read bytes',
   'physical read flash cache hits',
   'physical read IO requests',
   'physical read requests optimized',
   'physical read total bytes', /* r_bytes */
   'physical read total IO requests', /* r_reqs */
   'physical read total multi block requests',
   'physical reads',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads direct',
   'physical reads direct (lob)',
   'physical reads direct temporary tablespace',
   'physical reads for flashback new',
   'physical reads prefetch warmup',
   'physical write bytes',
   'physical write IO requests',
   'physical write total bytes', /* w_bytes */
   'physical write total IO requests', /* w_reqs */
   'physical write total multi block requests',
   'physical writes',
   'physical writes direct',
   'physical writes direct (lob)',
   'physical writes direct temporary tablespace',
   'physical writes from cache',
   'physical writes non checkpoint',
   'redo size', /* w_bytes */
   'redo writes') /* w_reqs */
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_appl_bytes - h0.r_appl_bytes) r_appl_bytes,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_IO_requests - h0.r_IO_requests) r_IO_requests,
       (h1.r_requests_optimized - h0.r_requests_optimized) r_requests_optimized,
       (h1.r_total_bytes - h0.r_total_bytes) r_total_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) r_total_IO_requests,
       (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests) r_total_multi_block_reque
sts,
       (h1.reads - h0.reads) reads,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_direct - h0.r_direct) r_direct,
       (h1.r_direct_lob - h0.r_direct_lob) r_direct_lob,
       (h1.r_direct_temporary_tablespace - h0.r_direct_temporary_tablespace) r_direct_temporary_tabl
espace,
       (h1.r_for_flashback_new - h0.r_for_flashback_new) r_for_flashback_new,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       (h1.w_appl_bytes - h0.w_appl_bytes) w_appl_bytes,
       (h1.w_IO_requests - h0.w_IO_requests) w_IO_requests,
       (h1.w_total_bytes - h0.w_total_bytes) w_total_bytes,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) w_total_IO_requests,
       (h1.w_total_multi_block_requests - h0.w_total_multi_block_requests) w_total_multi_block_reque
sts,
       (h1.writes - h0.writes) writes,
       (h1.w_direct - h0.w_direct) w_direct,
       (h1.w_direct_lob - h0.w_direct_lob) w_direct_lob,
       (h1.w_direct_temporary_tablespace - h0.w_direct_temporary_tablespace) w_direct_temporary_tabl
espace,
       (h1.w_from_cache - h0.w_from_cache) w_from_cache,
       (h1.w_non_checkpoint - h0.w_non_checkpoint) w_non_checkpoint,
       (h1.redo_size - h0.redo_size) redo_size,
       (h1.redo_writes - h0.redo_writes) redo_writes,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests - h0.r_t
otal_multi_block_requests) r_total_single_block_requests,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) - (h1.w_total_multi_block_requests - h0.w_t
otal_multi_block_requests) w_total_single_block_requests,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests
 - h0.r_total_multi_block_requests))) r_total_bytes_single_block_req,
       (h1.r_total_bytes - h0.r_total_bytes) - (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requ
ests) - (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests))) r_total_bytes_multi_bl
ock_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(reads / elapsed_sec)) reads_ps,
       ROUND(MAX(writes / elapsed_sec)) writes_ps,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec)) r_flash_cache_hits_ps,
       ROUND(MAX(r_IO_requests / elapsed_sec)) r_appl_iops,
       ROUND(MAX(r_requests_optimized / elapsed_sec)) r_requests_optimized_iops,
       ROUND(MAX(r_total_IO_requests / elapsed_sec)) r_total_iops,
       ROUND(MAX(r_total_multi_block_requests / elapsed_sec)) r_total_multi_block_iops,
       ROUND(MAX(r_cache / elapsed_sec)) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec)) r_cache_prefetch_ps,
       ROUND(MAX(r_direct / elapsed_sec)) r_direct_ps,
       ROUND(MAX(r_direct_lob / elapsed_sec)) r_direct_lob_ps,
       ROUND(MAX(r_direct_temporary_tablespace / elapsed_sec)) r_direct_temp_tablespace_ps,
       ROUND(MAX(r_for_flashback_new / elapsed_sec)) r_for_flashback_new_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec)) r_prefetch_warmup_ps,
       ROUND(MAX(w_IO_requests / elapsed_sec)) w_appl_iops,
       ROUND(MAX(w_total_IO_requests / elapsed_sec)) w_total_iops,
       ROUND(MAX(w_total_multi_block_requests / elapsed_sec)) w_total_multi_block_iops,
       ROUND(MAX(w_direct / elapsed_sec)) w_direct_ps,
       ROUND(MAX(w_direct_lob / elapsed_sec)) w_direct_lob_ps,
       ROUND(MAX(w_direct_temporary_tablespace / elapsed_sec)) w_direct_temp_tablespace_ps,
       ROUND(MAX(w_from_cache / elapsed_sec)) w_from_cache_ps,
       ROUND(MAX(w_non_checkpoint / elapsed_sec)) w_non_checkpoint_ps,
       ROUND(MAX(redo_writes / elapsed_sec)) w_redo_iops,
       ROUND(MAX(r_total_single_block_requests / elapsed_sec)) r_total_single_block_iops,
       ROUND(MAX(w_total_single_block_requests / elapsed_sec)) w_total_single_block_iops,
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX(r_total_bytes / POWER(10,6) / elapsed_sec), 3) r_total_mbps,
       ROUND(MAX(r_appl_bytes / POWER(10,6) / elapsed_sec), 3) r_appl_mbps,
       ROUND(MAX(w_total_bytes / POWER(10,6) / elapsed_sec), 3) w_total_mbps,
       ROUND(MAX(w_appl_bytes / POWER(10,6) / elapsed_sec), 3) w_appl_mbps,
       ROUND(MAX(redo_size / POWER(10,6) / elapsed_sec), 3) redo_size_mbps,
       ROUND(MAX(r_total_bytes_single_block_req / POWER(10,6) / elapsed_sec), 3) r_total_single_bloc
k_mbps,
       ROUND(MAX(r_total_bytes_multi_block_req / POWER(10,6) / elapsed_sec), 3) r_total_multi_block_
mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_buffered_multi_block_req / GREATEST(r_total_mu
lti_block_requests, 1)) / POWER(10,6) / elapsed_sec), 3) r_buffered_multi_block_mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_direct / GREATEST(r_total_multi_block_requests
, 1)) / POWER(10,6) / elapsed_sec), 3) r_direct_multi_block_mbps,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(reads_ps) reads,
       SUM(r_direct_ps) direct,
       SUM(r_direct_lob_ps) direct_lob,
       SUM(r_direct_temp_tablespace_ps) direct_temporary_tablespace,
       SUM(r_cache_ps) cache,
       SUM(r_cache_prefetch_ps) cache_prefetch,
       SUM(r_flash_cache_hits_ps) flash_cache_hits,
       SUM(r_for_flashback_new_ps) for_flashback_new,
       SUM(r_prefetch_warmup_ps) prefetch_warmup,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:33:27 1e.92
Elapsed Hours so far:    0.186
Elapsed Hours so far: .186

Elapsed: 00:00:00.00

11:33:27 1e "00121_edb360_323688_1e_92_reads_per_second_series_for_instance_2.html"
11:33:35 1e "00122_edb360_323688_1e_92_reads_per_second_series_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.191

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:33:44 1e "Resources (as per AWR and MEM)"
11:33:44 R-MBPS Series for Cluster

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read bytes' THEN value ELSE 0 END) r_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical read IO requests' THEN value ELSE 0 END) r_IO_requests,
       SUM(CASE WHEN stat_name = 'physical read requests optimized' THEN value ELSE 0 END) r_request
s_optimized,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_total_bytes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_total_IO
_requests,
       SUM(CASE WHEN stat_name = 'physical read total multi block requests' THEN value ELSE 0 END) r
_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical reads' THEN value ELSE 0 END) reads,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads direct' THEN value ELSE 0 END) r_direct,
       SUM(CASE WHEN stat_name = 'physical reads direct (lob)' THEN value ELSE 0 END) r_direct_lob,
       SUM(CASE WHEN stat_name = 'physical reads direct temporary tablespace' THEN value ELSE 0 END)
 r_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical reads for flashback new' THEN value ELSE 0 END) r_for_fla
shback_new,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup,
       SUM(CASE WHEN stat_name = 'physical write bytes' THEN value ELSE 0 END) w_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical write IO requests' THEN value ELSE 0 END) w_IO_requests,
       SUM(CASE WHEN stat_name = 'physical write total bytes' THEN value ELSE 0 END) w_total_bytes,
       SUM(CASE WHEN stat_name = 'physical write total IO requests' THEN value ELSE 0 END) w_total_I
O_requests,
       SUM(CASE WHEN stat_name = 'physical write total multi block requests' THEN value ELSE 0 END)
w_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical writes' THEN value ELSE 0 END) writes,
       SUM(CASE WHEN stat_name = 'physical writes direct' THEN value ELSE 0 END) w_direct,
       SUM(CASE WHEN stat_name = 'physical writes direct (lob)' THEN value ELSE 0 END) w_direct_lob,

       SUM(CASE WHEN stat_name = 'physical writes direct temporary tablespace' THEN value ELSE 0 END
) w_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical writes from cache' THEN value ELSE 0 END) w_from_cache,
       SUM(CASE WHEN stat_name = 'physical writes non checkpoint' THEN value ELSE 0 END) w_non_check
point,
       SUM(CASE WHEN stat_name = 'redo size' THEN value ELSE 0 END) redo_size,
       SUM(CASE WHEN stat_name = 'redo writes' THEN value ELSE 0 END) redo_writes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = instance_number
   AND stat_name IN (
   'physical read bytes',
   'physical read flash cache hits',
   'physical read IO requests',
   'physical read requests optimized',
   'physical read total bytes', /* r_bytes */
   'physical read total IO requests', /* r_reqs */
   'physical read total multi block requests',
   'physical reads',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads direct',
   'physical reads direct (lob)',
   'physical reads direct temporary tablespace',
   'physical reads for flashback new',
   'physical reads prefetch warmup',
   'physical write bytes',
   'physical write IO requests',
   'physical write total bytes', /* w_bytes */
   'physical write total IO requests', /* w_reqs */
   'physical write total multi block requests',
   'physical writes',
   'physical writes direct',
   'physical writes direct (lob)',
   'physical writes direct temporary tablespace',
   'physical writes from cache',
   'physical writes non checkpoint',
   'redo size', /* w_bytes */
   'redo writes') /* w_reqs */
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_appl_bytes - h0.r_appl_bytes) r_appl_bytes,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_IO_requests - h0.r_IO_requests) r_IO_requests,
       (h1.r_requests_optimized - h0.r_requests_optimized) r_requests_optimized,
       (h1.r_total_bytes - h0.r_total_bytes) r_total_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) r_total_IO_requests,
       (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests) r_total_multi_block_reque
sts,
       (h1.reads - h0.reads) reads,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_direct - h0.r_direct) r_direct,
       (h1.r_direct_lob - h0.r_direct_lob) r_direct_lob,
       (h1.r_direct_temporary_tablespace - h0.r_direct_temporary_tablespace) r_direct_temporary_tabl
espace,
       (h1.r_for_flashback_new - h0.r_for_flashback_new) r_for_flashback_new,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       (h1.w_appl_bytes - h0.w_appl_bytes) w_appl_bytes,
       (h1.w_IO_requests - h0.w_IO_requests) w_IO_requests,
       (h1.w_total_bytes - h0.w_total_bytes) w_total_bytes,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) w_total_IO_requests,
       (h1.w_total_multi_block_requests - h0.w_total_multi_block_requests) w_total_multi_block_reque
sts,
       (h1.writes - h0.writes) writes,
       (h1.w_direct - h0.w_direct) w_direct,
       (h1.w_direct_lob - h0.w_direct_lob) w_direct_lob,
       (h1.w_direct_temporary_tablespace - h0.w_direct_temporary_tablespace) w_direct_temporary_tabl
espace,
       (h1.w_from_cache - h0.w_from_cache) w_from_cache,
       (h1.w_non_checkpoint - h0.w_non_checkpoint) w_non_checkpoint,
       (h1.redo_size - h0.redo_size) redo_size,
       (h1.redo_writes - h0.redo_writes) redo_writes,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests - h0.r_t
otal_multi_block_requests) r_total_single_block_requests,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) - (h1.w_total_multi_block_requests - h0.w_t
otal_multi_block_requests) w_total_single_block_requests,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests
 - h0.r_total_multi_block_requests))) r_total_bytes_single_block_req,
       (h1.r_total_bytes - h0.r_total_bytes) - (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requ
ests) - (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests))) r_total_bytes_multi_bl
ock_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(reads / elapsed_sec)) reads_ps,
       ROUND(MAX(writes / elapsed_sec)) writes_ps,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec)) r_flash_cache_hits_ps,
       ROUND(MAX(r_IO_requests / elapsed_sec)) r_appl_iops,
       ROUND(MAX(r_requests_optimized / elapsed_sec)) r_requests_optimized_iops,
       ROUND(MAX(r_total_IO_requests / elapsed_sec)) r_total_iops,
       ROUND(MAX(r_total_multi_block_requests / elapsed_sec)) r_total_multi_block_iops,
       ROUND(MAX(r_cache / elapsed_sec)) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec)) r_cache_prefetch_ps,
       ROUND(MAX(r_direct / elapsed_sec)) r_direct_ps,
       ROUND(MAX(r_direct_lob / elapsed_sec)) r_direct_lob_ps,
       ROUND(MAX(r_direct_temporary_tablespace / elapsed_sec)) r_direct_temp_tablespace_ps,
       ROUND(MAX(r_for_flashback_new / elapsed_sec)) r_for_flashback_new_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec)) r_prefetch_warmup_ps,
       ROUND(MAX(w_IO_requests / elapsed_sec)) w_appl_iops,
       ROUND(MAX(w_total_IO_requests / elapsed_sec)) w_total_iops,
       ROUND(MAX(w_total_multi_block_requests / elapsed_sec)) w_total_multi_block_iops,
       ROUND(MAX(w_direct / elapsed_sec)) w_direct_ps,
       ROUND(MAX(w_direct_lob / elapsed_sec)) w_direct_lob_ps,
       ROUND(MAX(w_direct_temporary_tablespace / elapsed_sec)) w_direct_temp_tablespace_ps,
       ROUND(MAX(w_from_cache / elapsed_sec)) w_from_cache_ps,
       ROUND(MAX(w_non_checkpoint / elapsed_sec)) w_non_checkpoint_ps,
       ROUND(MAX(redo_writes / elapsed_sec)) w_redo_iops,
       ROUND(MAX(r_total_single_block_requests / elapsed_sec)) r_total_single_block_iops,
       ROUND(MAX(w_total_single_block_requests / elapsed_sec)) w_total_single_block_iops,
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX(r_total_bytes / POWER(10,6) / elapsed_sec), 3) r_total_mbps,
       ROUND(MAX(r_appl_bytes / POWER(10,6) / elapsed_sec), 3) r_appl_mbps,
       ROUND(MAX(w_total_bytes / POWER(10,6) / elapsed_sec), 3) w_total_mbps,
       ROUND(MAX(w_appl_bytes / POWER(10,6) / elapsed_sec), 3) w_appl_mbps,
       ROUND(MAX(redo_size / POWER(10,6) / elapsed_sec), 3) redo_size_mbps,
       ROUND(MAX(r_total_bytes_single_block_req / POWER(10,6) / elapsed_sec), 3) r_total_single_bloc
k_mbps,
       ROUND(MAX(r_total_bytes_multi_block_req / POWER(10,6) / elapsed_sec), 3) r_total_multi_block_
mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_buffered_multi_block_req / GREATEST(r_total_mu
lti_block_requests, 1)) / POWER(10,6) / elapsed_sec), 3) r_buffered_multi_block_mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_direct / GREATEST(r_total_multi_block_requests
, 1)) / POWER(10,6) / elapsed_sec), 3) r_direct_multi_block_mbps,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(r_mbps) r_mbps,
       SUM(r_total_mbps) total_mbps,
       SUM(r_total_single_block_mbps) total_single_block_mbps,
       SUM(r_total_multi_block_mbps) total_multi_block_mbps,
       SUM(r_appl_mbps) appl_mbps,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:33:44 1e.93
Elapsed Hours so far:    0.191
Elapsed Hours so far: .191

Elapsed: 00:00:00.00

11:33:44 1e "00123_edb360_323688_1e_93_rmbps_series_for_cluster.html"
11:34:02 1e "00124_edb360_323688_1e_93_rmbps_series_for_cluster_line_chart.html"
Elapsed Hours so far:    0.204

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:34:30 1e "Resources (as per AWR and MEM)"
11:34:30 R-MBPS Series for Instance 1

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read bytes' THEN value ELSE 0 END) r_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical read IO requests' THEN value ELSE 0 END) r_IO_requests,
       SUM(CASE WHEN stat_name = 'physical read requests optimized' THEN value ELSE 0 END) r_request
s_optimized,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_total_bytes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_total_IO
_requests,
       SUM(CASE WHEN stat_name = 'physical read total multi block requests' THEN value ELSE 0 END) r
_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical reads' THEN value ELSE 0 END) reads,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads direct' THEN value ELSE 0 END) r_direct,
       SUM(CASE WHEN stat_name = 'physical reads direct (lob)' THEN value ELSE 0 END) r_direct_lob,
       SUM(CASE WHEN stat_name = 'physical reads direct temporary tablespace' THEN value ELSE 0 END)
 r_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical reads for flashback new' THEN value ELSE 0 END) r_for_fla
shback_new,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup,
       SUM(CASE WHEN stat_name = 'physical write bytes' THEN value ELSE 0 END) w_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical write IO requests' THEN value ELSE 0 END) w_IO_requests,
       SUM(CASE WHEN stat_name = 'physical write total bytes' THEN value ELSE 0 END) w_total_bytes,
       SUM(CASE WHEN stat_name = 'physical write total IO requests' THEN value ELSE 0 END) w_total_I
O_requests,
       SUM(CASE WHEN stat_name = 'physical write total multi block requests' THEN value ELSE 0 END)
w_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical writes' THEN value ELSE 0 END) writes,
       SUM(CASE WHEN stat_name = 'physical writes direct' THEN value ELSE 0 END) w_direct,
       SUM(CASE WHEN stat_name = 'physical writes direct (lob)' THEN value ELSE 0 END) w_direct_lob,

       SUM(CASE WHEN stat_name = 'physical writes direct temporary tablespace' THEN value ELSE 0 END
) w_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical writes from cache' THEN value ELSE 0 END) w_from_cache,
       SUM(CASE WHEN stat_name = 'physical writes non checkpoint' THEN value ELSE 0 END) w_non_check
point,
       SUM(CASE WHEN stat_name = 'redo size' THEN value ELSE 0 END) redo_size,
       SUM(CASE WHEN stat_name = 'redo writes' THEN value ELSE 0 END) redo_writes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 1
   AND stat_name IN (
   'physical read bytes',
   'physical read flash cache hits',
   'physical read IO requests',
   'physical read requests optimized',
   'physical read total bytes', /* r_bytes */
   'physical read total IO requests', /* r_reqs */
   'physical read total multi block requests',
   'physical reads',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads direct',
   'physical reads direct (lob)',
   'physical reads direct temporary tablespace',
   'physical reads for flashback new',
   'physical reads prefetch warmup',
   'physical write bytes',
   'physical write IO requests',
   'physical write total bytes', /* w_bytes */
   'physical write total IO requests', /* w_reqs */
   'physical write total multi block requests',
   'physical writes',
   'physical writes direct',
   'physical writes direct (lob)',
   'physical writes direct temporary tablespace',
   'physical writes from cache',
   'physical writes non checkpoint',
   'redo size', /* w_bytes */
   'redo writes') /* w_reqs */
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_appl_bytes - h0.r_appl_bytes) r_appl_bytes,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_IO_requests - h0.r_IO_requests) r_IO_requests,
       (h1.r_requests_optimized - h0.r_requests_optimized) r_requests_optimized,
       (h1.r_total_bytes - h0.r_total_bytes) r_total_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) r_total_IO_requests,
       (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests) r_total_multi_block_reque
sts,
       (h1.reads - h0.reads) reads,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_direct - h0.r_direct) r_direct,
       (h1.r_direct_lob - h0.r_direct_lob) r_direct_lob,
       (h1.r_direct_temporary_tablespace - h0.r_direct_temporary_tablespace) r_direct_temporary_tabl
espace,
       (h1.r_for_flashback_new - h0.r_for_flashback_new) r_for_flashback_new,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       (h1.w_appl_bytes - h0.w_appl_bytes) w_appl_bytes,
       (h1.w_IO_requests - h0.w_IO_requests) w_IO_requests,
       (h1.w_total_bytes - h0.w_total_bytes) w_total_bytes,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) w_total_IO_requests,
       (h1.w_total_multi_block_requests - h0.w_total_multi_block_requests) w_total_multi_block_reque
sts,
       (h1.writes - h0.writes) writes,
       (h1.w_direct - h0.w_direct) w_direct,
       (h1.w_direct_lob - h0.w_direct_lob) w_direct_lob,
       (h1.w_direct_temporary_tablespace - h0.w_direct_temporary_tablespace) w_direct_temporary_tabl
espace,
       (h1.w_from_cache - h0.w_from_cache) w_from_cache,
       (h1.w_non_checkpoint - h0.w_non_checkpoint) w_non_checkpoint,
       (h1.redo_size - h0.redo_size) redo_size,
       (h1.redo_writes - h0.redo_writes) redo_writes,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests - h0.r_t
otal_multi_block_requests) r_total_single_block_requests,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) - (h1.w_total_multi_block_requests - h0.w_t
otal_multi_block_requests) w_total_single_block_requests,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests
 - h0.r_total_multi_block_requests))) r_total_bytes_single_block_req,
       (h1.r_total_bytes - h0.r_total_bytes) - (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requ
ests) - (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests))) r_total_bytes_multi_bl
ock_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(reads / elapsed_sec)) reads_ps,
       ROUND(MAX(writes / elapsed_sec)) writes_ps,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec)) r_flash_cache_hits_ps,
       ROUND(MAX(r_IO_requests / elapsed_sec)) r_appl_iops,
       ROUND(MAX(r_requests_optimized / elapsed_sec)) r_requests_optimized_iops,
       ROUND(MAX(r_total_IO_requests / elapsed_sec)) r_total_iops,
       ROUND(MAX(r_total_multi_block_requests / elapsed_sec)) r_total_multi_block_iops,
       ROUND(MAX(r_cache / elapsed_sec)) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec)) r_cache_prefetch_ps,
       ROUND(MAX(r_direct / elapsed_sec)) r_direct_ps,
       ROUND(MAX(r_direct_lob / elapsed_sec)) r_direct_lob_ps,
       ROUND(MAX(r_direct_temporary_tablespace / elapsed_sec)) r_direct_temp_tablespace_ps,
       ROUND(MAX(r_for_flashback_new / elapsed_sec)) r_for_flashback_new_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec)) r_prefetch_warmup_ps,
       ROUND(MAX(w_IO_requests / elapsed_sec)) w_appl_iops,
       ROUND(MAX(w_total_IO_requests / elapsed_sec)) w_total_iops,
       ROUND(MAX(w_total_multi_block_requests / elapsed_sec)) w_total_multi_block_iops,
       ROUND(MAX(w_direct / elapsed_sec)) w_direct_ps,
       ROUND(MAX(w_direct_lob / elapsed_sec)) w_direct_lob_ps,
       ROUND(MAX(w_direct_temporary_tablespace / elapsed_sec)) w_direct_temp_tablespace_ps,
       ROUND(MAX(w_from_cache / elapsed_sec)) w_from_cache_ps,
       ROUND(MAX(w_non_checkpoint / elapsed_sec)) w_non_checkpoint_ps,
       ROUND(MAX(redo_writes / elapsed_sec)) w_redo_iops,
       ROUND(MAX(r_total_single_block_requests / elapsed_sec)) r_total_single_block_iops,
       ROUND(MAX(w_total_single_block_requests / elapsed_sec)) w_total_single_block_iops,
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX(r_total_bytes / POWER(10,6) / elapsed_sec), 3) r_total_mbps,
       ROUND(MAX(r_appl_bytes / POWER(10,6) / elapsed_sec), 3) r_appl_mbps,
       ROUND(MAX(w_total_bytes / POWER(10,6) / elapsed_sec), 3) w_total_mbps,
       ROUND(MAX(w_appl_bytes / POWER(10,6) / elapsed_sec), 3) w_appl_mbps,
       ROUND(MAX(redo_size / POWER(10,6) / elapsed_sec), 3) redo_size_mbps,
       ROUND(MAX(r_total_bytes_single_block_req / POWER(10,6) / elapsed_sec), 3) r_total_single_bloc
k_mbps,
       ROUND(MAX(r_total_bytes_multi_block_req / POWER(10,6) / elapsed_sec), 3) r_total_multi_block_
mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_buffered_multi_block_req / GREATEST(r_total_mu
lti_block_requests, 1)) / POWER(10,6) / elapsed_sec), 3) r_buffered_multi_block_mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_direct / GREATEST(r_total_multi_block_requests
, 1)) / POWER(10,6) / elapsed_sec), 3) r_direct_multi_block_mbps,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(r_mbps) r_mbps,
       SUM(r_total_mbps) total_mbps,
       SUM(r_total_single_block_mbps) total_single_block_mbps,
       SUM(r_total_multi_block_mbps) total_multi_block_mbps,
       SUM(r_appl_mbps) appl_mbps,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:34:30 1e.94
Elapsed Hours so far:    0.204
Elapsed Hours so far: .204

Elapsed: 00:00:00.00

11:34:30 1e "00125_edb360_323688_1e_94_rmbps_series_for_instance_1.html"
11:34:41 1e "00126_edb360_323688_1e_94_rmbps_series_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.210

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:34:52 1e "Resources (as per AWR and MEM)"
11:34:52 R-MBPS Series for Instance 2

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read bytes' THEN value ELSE 0 END) r_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical read IO requests' THEN value ELSE 0 END) r_IO_requests,
       SUM(CASE WHEN stat_name = 'physical read requests optimized' THEN value ELSE 0 END) r_request
s_optimized,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_total_bytes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_total_IO
_requests,
       SUM(CASE WHEN stat_name = 'physical read total multi block requests' THEN value ELSE 0 END) r
_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical reads' THEN value ELSE 0 END) reads,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads direct' THEN value ELSE 0 END) r_direct,
       SUM(CASE WHEN stat_name = 'physical reads direct (lob)' THEN value ELSE 0 END) r_direct_lob,
       SUM(CASE WHEN stat_name = 'physical reads direct temporary tablespace' THEN value ELSE 0 END)
 r_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical reads for flashback new' THEN value ELSE 0 END) r_for_fla
shback_new,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup,
       SUM(CASE WHEN stat_name = 'physical write bytes' THEN value ELSE 0 END) w_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical write IO requests' THEN value ELSE 0 END) w_IO_requests,
       SUM(CASE WHEN stat_name = 'physical write total bytes' THEN value ELSE 0 END) w_total_bytes,
       SUM(CASE WHEN stat_name = 'physical write total IO requests' THEN value ELSE 0 END) w_total_I
O_requests,
       SUM(CASE WHEN stat_name = 'physical write total multi block requests' THEN value ELSE 0 END)
w_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical writes' THEN value ELSE 0 END) writes,
       SUM(CASE WHEN stat_name = 'physical writes direct' THEN value ELSE 0 END) w_direct,
       SUM(CASE WHEN stat_name = 'physical writes direct (lob)' THEN value ELSE 0 END) w_direct_lob,

       SUM(CASE WHEN stat_name = 'physical writes direct temporary tablespace' THEN value ELSE 0 END
) w_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical writes from cache' THEN value ELSE 0 END) w_from_cache,
       SUM(CASE WHEN stat_name = 'physical writes non checkpoint' THEN value ELSE 0 END) w_non_check
point,
       SUM(CASE WHEN stat_name = 'redo size' THEN value ELSE 0 END) redo_size,
       SUM(CASE WHEN stat_name = 'redo writes' THEN value ELSE 0 END) redo_writes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 2
   AND stat_name IN (
   'physical read bytes',
   'physical read flash cache hits',
   'physical read IO requests',
   'physical read requests optimized',
   'physical read total bytes', /* r_bytes */
   'physical read total IO requests', /* r_reqs */
   'physical read total multi block requests',
   'physical reads',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads direct',
   'physical reads direct (lob)',
   'physical reads direct temporary tablespace',
   'physical reads for flashback new',
   'physical reads prefetch warmup',
   'physical write bytes',
   'physical write IO requests',
   'physical write total bytes', /* w_bytes */
   'physical write total IO requests', /* w_reqs */
   'physical write total multi block requests',
   'physical writes',
   'physical writes direct',
   'physical writes direct (lob)',
   'physical writes direct temporary tablespace',
   'physical writes from cache',
   'physical writes non checkpoint',
   'redo size', /* w_bytes */
   'redo writes') /* w_reqs */
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_appl_bytes - h0.r_appl_bytes) r_appl_bytes,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_IO_requests - h0.r_IO_requests) r_IO_requests,
       (h1.r_requests_optimized - h0.r_requests_optimized) r_requests_optimized,
       (h1.r_total_bytes - h0.r_total_bytes) r_total_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) r_total_IO_requests,
       (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests) r_total_multi_block_reque
sts,
       (h1.reads - h0.reads) reads,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_direct - h0.r_direct) r_direct,
       (h1.r_direct_lob - h0.r_direct_lob) r_direct_lob,
       (h1.r_direct_temporary_tablespace - h0.r_direct_temporary_tablespace) r_direct_temporary_tabl
espace,
       (h1.r_for_flashback_new - h0.r_for_flashback_new) r_for_flashback_new,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       (h1.w_appl_bytes - h0.w_appl_bytes) w_appl_bytes,
       (h1.w_IO_requests - h0.w_IO_requests) w_IO_requests,
       (h1.w_total_bytes - h0.w_total_bytes) w_total_bytes,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) w_total_IO_requests,
       (h1.w_total_multi_block_requests - h0.w_total_multi_block_requests) w_total_multi_block_reque
sts,
       (h1.writes - h0.writes) writes,
       (h1.w_direct - h0.w_direct) w_direct,
       (h1.w_direct_lob - h0.w_direct_lob) w_direct_lob,
       (h1.w_direct_temporary_tablespace - h0.w_direct_temporary_tablespace) w_direct_temporary_tabl
espace,
       (h1.w_from_cache - h0.w_from_cache) w_from_cache,
       (h1.w_non_checkpoint - h0.w_non_checkpoint) w_non_checkpoint,
       (h1.redo_size - h0.redo_size) redo_size,
       (h1.redo_writes - h0.redo_writes) redo_writes,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests - h0.r_t
otal_multi_block_requests) r_total_single_block_requests,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) - (h1.w_total_multi_block_requests - h0.w_t
otal_multi_block_requests) w_total_single_block_requests,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests
 - h0.r_total_multi_block_requests))) r_total_bytes_single_block_req,
       (h1.r_total_bytes - h0.r_total_bytes) - (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requ
ests) - (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests))) r_total_bytes_multi_bl
ock_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(reads / elapsed_sec)) reads_ps,
       ROUND(MAX(writes / elapsed_sec)) writes_ps,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec)) r_flash_cache_hits_ps,
       ROUND(MAX(r_IO_requests / elapsed_sec)) r_appl_iops,
       ROUND(MAX(r_requests_optimized / elapsed_sec)) r_requests_optimized_iops,
       ROUND(MAX(r_total_IO_requests / elapsed_sec)) r_total_iops,
       ROUND(MAX(r_total_multi_block_requests / elapsed_sec)) r_total_multi_block_iops,
       ROUND(MAX(r_cache / elapsed_sec)) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec)) r_cache_prefetch_ps,
       ROUND(MAX(r_direct / elapsed_sec)) r_direct_ps,
       ROUND(MAX(r_direct_lob / elapsed_sec)) r_direct_lob_ps,
       ROUND(MAX(r_direct_temporary_tablespace / elapsed_sec)) r_direct_temp_tablespace_ps,
       ROUND(MAX(r_for_flashback_new / elapsed_sec)) r_for_flashback_new_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec)) r_prefetch_warmup_ps,
       ROUND(MAX(w_IO_requests / elapsed_sec)) w_appl_iops,
       ROUND(MAX(w_total_IO_requests / elapsed_sec)) w_total_iops,
       ROUND(MAX(w_total_multi_block_requests / elapsed_sec)) w_total_multi_block_iops,
       ROUND(MAX(w_direct / elapsed_sec)) w_direct_ps,
       ROUND(MAX(w_direct_lob / elapsed_sec)) w_direct_lob_ps,
       ROUND(MAX(w_direct_temporary_tablespace / elapsed_sec)) w_direct_temp_tablespace_ps,
       ROUND(MAX(w_from_cache / elapsed_sec)) w_from_cache_ps,
       ROUND(MAX(w_non_checkpoint / elapsed_sec)) w_non_checkpoint_ps,
       ROUND(MAX(redo_writes / elapsed_sec)) w_redo_iops,
       ROUND(MAX(r_total_single_block_requests / elapsed_sec)) r_total_single_block_iops,
       ROUND(MAX(w_total_single_block_requests / elapsed_sec)) w_total_single_block_iops,
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX(r_total_bytes / POWER(10,6) / elapsed_sec), 3) r_total_mbps,
       ROUND(MAX(r_appl_bytes / POWER(10,6) / elapsed_sec), 3) r_appl_mbps,
       ROUND(MAX(w_total_bytes / POWER(10,6) / elapsed_sec), 3) w_total_mbps,
       ROUND(MAX(w_appl_bytes / POWER(10,6) / elapsed_sec), 3) w_appl_mbps,
       ROUND(MAX(redo_size / POWER(10,6) / elapsed_sec), 3) redo_size_mbps,
       ROUND(MAX(r_total_bytes_single_block_req / POWER(10,6) / elapsed_sec), 3) r_total_single_bloc
k_mbps,
       ROUND(MAX(r_total_bytes_multi_block_req / POWER(10,6) / elapsed_sec), 3) r_total_multi_block_
mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_buffered_multi_block_req / GREATEST(r_total_mu
lti_block_requests, 1)) / POWER(10,6) / elapsed_sec), 3) r_buffered_multi_block_mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_direct / GREATEST(r_total_multi_block_requests
, 1)) / POWER(10,6) / elapsed_sec), 3) r_direct_multi_block_mbps,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(r_mbps) r_mbps,
       SUM(r_total_mbps) total_mbps,
       SUM(r_total_single_block_mbps) total_single_block_mbps,
       SUM(r_total_multi_block_mbps) total_multi_block_mbps,
       SUM(r_appl_mbps) appl_mbps,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:34:52 1e.95
Elapsed Hours so far:    0.210
Elapsed Hours so far: .21

Elapsed: 00:00:00.00

11:34:52 1e "00127_edb360_323688_1e_95_rmbps_series_for_instance_2.html"
11:35:07 1e "00128_edb360_323688_1e_95_rmbps_series_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.218

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:35:20 1e "Resources (as per AWR and MEM)"
11:35:20 W-IOPS Series for Cluster

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read bytes' THEN value ELSE 0 END) r_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical read IO requests' THEN value ELSE 0 END) r_IO_requests,
       SUM(CASE WHEN stat_name = 'physical read requests optimized' THEN value ELSE 0 END) r_request
s_optimized,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_total_bytes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_total_IO
_requests,
       SUM(CASE WHEN stat_name = 'physical read total multi block requests' THEN value ELSE 0 END) r
_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical reads' THEN value ELSE 0 END) reads,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads direct' THEN value ELSE 0 END) r_direct,
       SUM(CASE WHEN stat_name = 'physical reads direct (lob)' THEN value ELSE 0 END) r_direct_lob,
       SUM(CASE WHEN stat_name = 'physical reads direct temporary tablespace' THEN value ELSE 0 END)
 r_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical reads for flashback new' THEN value ELSE 0 END) r_for_fla
shback_new,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup,
       SUM(CASE WHEN stat_name = 'physical write bytes' THEN value ELSE 0 END) w_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical write IO requests' THEN value ELSE 0 END) w_IO_requests,
       SUM(CASE WHEN stat_name = 'physical write total bytes' THEN value ELSE 0 END) w_total_bytes,
       SUM(CASE WHEN stat_name = 'physical write total IO requests' THEN value ELSE 0 END) w_total_I
O_requests,
       SUM(CASE WHEN stat_name = 'physical write total multi block requests' THEN value ELSE 0 END)
w_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical writes' THEN value ELSE 0 END) writes,
       SUM(CASE WHEN stat_name = 'physical writes direct' THEN value ELSE 0 END) w_direct,
       SUM(CASE WHEN stat_name = 'physical writes direct (lob)' THEN value ELSE 0 END) w_direct_lob,

       SUM(CASE WHEN stat_name = 'physical writes direct temporary tablespace' THEN value ELSE 0 END
) w_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical writes from cache' THEN value ELSE 0 END) w_from_cache,
       SUM(CASE WHEN stat_name = 'physical writes non checkpoint' THEN value ELSE 0 END) w_non_check
point,
       SUM(CASE WHEN stat_name = 'redo size' THEN value ELSE 0 END) redo_size,
       SUM(CASE WHEN stat_name = 'redo writes' THEN value ELSE 0 END) redo_writes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = instance_number
   AND stat_name IN (
   'physical read bytes',
   'physical read flash cache hits',
   'physical read IO requests',
   'physical read requests optimized',
   'physical read total bytes', /* r_bytes */
   'physical read total IO requests', /* r_reqs */
   'physical read total multi block requests',
   'physical reads',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads direct',
   'physical reads direct (lob)',
   'physical reads direct temporary tablespace',
   'physical reads for flashback new',
   'physical reads prefetch warmup',
   'physical write bytes',
   'physical write IO requests',
   'physical write total bytes', /* w_bytes */
   'physical write total IO requests', /* w_reqs */
   'physical write total multi block requests',
   'physical writes',
   'physical writes direct',
   'physical writes direct (lob)',
   'physical writes direct temporary tablespace',
   'physical writes from cache',
   'physical writes non checkpoint',
   'redo size', /* w_bytes */
   'redo writes') /* w_reqs */
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_appl_bytes - h0.r_appl_bytes) r_appl_bytes,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_IO_requests - h0.r_IO_requests) r_IO_requests,
       (h1.r_requests_optimized - h0.r_requests_optimized) r_requests_optimized,
       (h1.r_total_bytes - h0.r_total_bytes) r_total_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) r_total_IO_requests,
       (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests) r_total_multi_block_reque
sts,
       (h1.reads - h0.reads) reads,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_direct - h0.r_direct) r_direct,
       (h1.r_direct_lob - h0.r_direct_lob) r_direct_lob,
       (h1.r_direct_temporary_tablespace - h0.r_direct_temporary_tablespace) r_direct_temporary_tabl
espace,
       (h1.r_for_flashback_new - h0.r_for_flashback_new) r_for_flashback_new,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       (h1.w_appl_bytes - h0.w_appl_bytes) w_appl_bytes,
       (h1.w_IO_requests - h0.w_IO_requests) w_IO_requests,
       (h1.w_total_bytes - h0.w_total_bytes) w_total_bytes,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) w_total_IO_requests,
       (h1.w_total_multi_block_requests - h0.w_total_multi_block_requests) w_total_multi_block_reque
sts,
       (h1.writes - h0.writes) writes,
       (h1.w_direct - h0.w_direct) w_direct,
       (h1.w_direct_lob - h0.w_direct_lob) w_direct_lob,
       (h1.w_direct_temporary_tablespace - h0.w_direct_temporary_tablespace) w_direct_temporary_tabl
espace,
       (h1.w_from_cache - h0.w_from_cache) w_from_cache,
       (h1.w_non_checkpoint - h0.w_non_checkpoint) w_non_checkpoint,
       (h1.redo_size - h0.redo_size) redo_size,
       (h1.redo_writes - h0.redo_writes) redo_writes,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests - h0.r_t
otal_multi_block_requests) r_total_single_block_requests,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) - (h1.w_total_multi_block_requests - h0.w_t
otal_multi_block_requests) w_total_single_block_requests,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests
 - h0.r_total_multi_block_requests))) r_total_bytes_single_block_req,
       (h1.r_total_bytes - h0.r_total_bytes) - (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requ
ests) - (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests))) r_total_bytes_multi_bl
ock_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(reads / elapsed_sec)) reads_ps,
       ROUND(MAX(writes / elapsed_sec)) writes_ps,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec)) r_flash_cache_hits_ps,
       ROUND(MAX(r_IO_requests / elapsed_sec)) r_appl_iops,
       ROUND(MAX(r_requests_optimized / elapsed_sec)) r_requests_optimized_iops,
       ROUND(MAX(r_total_IO_requests / elapsed_sec)) r_total_iops,
       ROUND(MAX(r_total_multi_block_requests / elapsed_sec)) r_total_multi_block_iops,
       ROUND(MAX(r_cache / elapsed_sec)) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec)) r_cache_prefetch_ps,
       ROUND(MAX(r_direct / elapsed_sec)) r_direct_ps,
       ROUND(MAX(r_direct_lob / elapsed_sec)) r_direct_lob_ps,
       ROUND(MAX(r_direct_temporary_tablespace / elapsed_sec)) r_direct_temp_tablespace_ps,
       ROUND(MAX(r_for_flashback_new / elapsed_sec)) r_for_flashback_new_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec)) r_prefetch_warmup_ps,
       ROUND(MAX(w_IO_requests / elapsed_sec)) w_appl_iops,
       ROUND(MAX(w_total_IO_requests / elapsed_sec)) w_total_iops,
       ROUND(MAX(w_total_multi_block_requests / elapsed_sec)) w_total_multi_block_iops,
       ROUND(MAX(w_direct / elapsed_sec)) w_direct_ps,
       ROUND(MAX(w_direct_lob / elapsed_sec)) w_direct_lob_ps,
       ROUND(MAX(w_direct_temporary_tablespace / elapsed_sec)) w_direct_temp_tablespace_ps,
       ROUND(MAX(w_from_cache / elapsed_sec)) w_from_cache_ps,
       ROUND(MAX(w_non_checkpoint / elapsed_sec)) w_non_checkpoint_ps,
       ROUND(MAX(redo_writes / elapsed_sec)) w_redo_iops,
       ROUND(MAX(r_total_single_block_requests / elapsed_sec)) r_total_single_block_iops,
       ROUND(MAX(w_total_single_block_requests / elapsed_sec)) w_total_single_block_iops,
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX(r_total_bytes / POWER(10,6) / elapsed_sec), 3) r_total_mbps,
       ROUND(MAX(r_appl_bytes / POWER(10,6) / elapsed_sec), 3) r_appl_mbps,
       ROUND(MAX(w_total_bytes / POWER(10,6) / elapsed_sec), 3) w_total_mbps,
       ROUND(MAX(w_appl_bytes / POWER(10,6) / elapsed_sec), 3) w_appl_mbps,
       ROUND(MAX(redo_size / POWER(10,6) / elapsed_sec), 3) redo_size_mbps,
       ROUND(MAX(r_total_bytes_single_block_req / POWER(10,6) / elapsed_sec), 3) r_total_single_bloc
k_mbps,
       ROUND(MAX(r_total_bytes_multi_block_req / POWER(10,6) / elapsed_sec), 3) r_total_multi_block_
mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_buffered_multi_block_req / GREATEST(r_total_mu
lti_block_requests, 1)) / POWER(10,6) / elapsed_sec), 3) r_buffered_multi_block_mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_direct / GREATEST(r_total_multi_block_requests
, 1)) / POWER(10,6) / elapsed_sec), 3) r_direct_multi_block_mbps,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(w_iops) w_iops,
       SUM(w_total_iops) total_IO_requests,
       SUM(w_redo_iops) redo_writes,
       SUM(w_total_single_block_iops) total_single_block_requests,
       SUM(w_total_multi_block_iops) total_multi_block_requests,
       SUM(w_appl_iops) appl_IO_requests,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:35:20 1e.96
Elapsed Hours so far:    0.218
Elapsed Hours so far: .218

Elapsed: 00:00:00.00

11:35:20 1e "00129_edb360_323688_1e_96_wiops_series_for_cluster.html"
11:35:49 1e "00130_edb360_323688_1e_96_wiops_series_for_cluster_line_chart.html"
Elapsed Hours so far:    0.235

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:36:21 1e "Resources (as per AWR and MEM)"
11:36:21 W-IOPS Series for Instance 1

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read bytes' THEN value ELSE 0 END) r_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical read IO requests' THEN value ELSE 0 END) r_IO_requests,
       SUM(CASE WHEN stat_name = 'physical read requests optimized' THEN value ELSE 0 END) r_request
s_optimized,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_total_bytes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_total_IO
_requests,
       SUM(CASE WHEN stat_name = 'physical read total multi block requests' THEN value ELSE 0 END) r
_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical reads' THEN value ELSE 0 END) reads,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads direct' THEN value ELSE 0 END) r_direct,
       SUM(CASE WHEN stat_name = 'physical reads direct (lob)' THEN value ELSE 0 END) r_direct_lob,
       SUM(CASE WHEN stat_name = 'physical reads direct temporary tablespace' THEN value ELSE 0 END)
 r_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical reads for flashback new' THEN value ELSE 0 END) r_for_fla
shback_new,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup,
       SUM(CASE WHEN stat_name = 'physical write bytes' THEN value ELSE 0 END) w_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical write IO requests' THEN value ELSE 0 END) w_IO_requests,
       SUM(CASE WHEN stat_name = 'physical write total bytes' THEN value ELSE 0 END) w_total_bytes,
       SUM(CASE WHEN stat_name = 'physical write total IO requests' THEN value ELSE 0 END) w_total_I
O_requests,
       SUM(CASE WHEN stat_name = 'physical write total multi block requests' THEN value ELSE 0 END)
w_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical writes' THEN value ELSE 0 END) writes,
       SUM(CASE WHEN stat_name = 'physical writes direct' THEN value ELSE 0 END) w_direct,
       SUM(CASE WHEN stat_name = 'physical writes direct (lob)' THEN value ELSE 0 END) w_direct_lob,

       SUM(CASE WHEN stat_name = 'physical writes direct temporary tablespace' THEN value ELSE 0 END
) w_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical writes from cache' THEN value ELSE 0 END) w_from_cache,
       SUM(CASE WHEN stat_name = 'physical writes non checkpoint' THEN value ELSE 0 END) w_non_check
point,
       SUM(CASE WHEN stat_name = 'redo size' THEN value ELSE 0 END) redo_size,
       SUM(CASE WHEN stat_name = 'redo writes' THEN value ELSE 0 END) redo_writes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 1
   AND stat_name IN (
   'physical read bytes',
   'physical read flash cache hits',
   'physical read IO requests',
   'physical read requests optimized',
   'physical read total bytes', /* r_bytes */
   'physical read total IO requests', /* r_reqs */
   'physical read total multi block requests',
   'physical reads',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads direct',
   'physical reads direct (lob)',
   'physical reads direct temporary tablespace',
   'physical reads for flashback new',
   'physical reads prefetch warmup',
   'physical write bytes',
   'physical write IO requests',
   'physical write total bytes', /* w_bytes */
   'physical write total IO requests', /* w_reqs */
   'physical write total multi block requests',
   'physical writes',
   'physical writes direct',
   'physical writes direct (lob)',
   'physical writes direct temporary tablespace',
   'physical writes from cache',
   'physical writes non checkpoint',
   'redo size', /* w_bytes */
   'redo writes') /* w_reqs */
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_appl_bytes - h0.r_appl_bytes) r_appl_bytes,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_IO_requests - h0.r_IO_requests) r_IO_requests,
       (h1.r_requests_optimized - h0.r_requests_optimized) r_requests_optimized,
       (h1.r_total_bytes - h0.r_total_bytes) r_total_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) r_total_IO_requests,
       (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests) r_total_multi_block_reque
sts,
       (h1.reads - h0.reads) reads,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_direct - h0.r_direct) r_direct,
       (h1.r_direct_lob - h0.r_direct_lob) r_direct_lob,
       (h1.r_direct_temporary_tablespace - h0.r_direct_temporary_tablespace) r_direct_temporary_tabl
espace,
       (h1.r_for_flashback_new - h0.r_for_flashback_new) r_for_flashback_new,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       (h1.w_appl_bytes - h0.w_appl_bytes) w_appl_bytes,
       (h1.w_IO_requests - h0.w_IO_requests) w_IO_requests,
       (h1.w_total_bytes - h0.w_total_bytes) w_total_bytes,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) w_total_IO_requests,
       (h1.w_total_multi_block_requests - h0.w_total_multi_block_requests) w_total_multi_block_reque
sts,
       (h1.writes - h0.writes) writes,
       (h1.w_direct - h0.w_direct) w_direct,
       (h1.w_direct_lob - h0.w_direct_lob) w_direct_lob,
       (h1.w_direct_temporary_tablespace - h0.w_direct_temporary_tablespace) w_direct_temporary_tabl
espace,
       (h1.w_from_cache - h0.w_from_cache) w_from_cache,
       (h1.w_non_checkpoint - h0.w_non_checkpoint) w_non_checkpoint,
       (h1.redo_size - h0.redo_size) redo_size,
       (h1.redo_writes - h0.redo_writes) redo_writes,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests - h0.r_t
otal_multi_block_requests) r_total_single_block_requests,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) - (h1.w_total_multi_block_requests - h0.w_t
otal_multi_block_requests) w_total_single_block_requests,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests
 - h0.r_total_multi_block_requests))) r_total_bytes_single_block_req,
       (h1.r_total_bytes - h0.r_total_bytes) - (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requ
ests) - (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests))) r_total_bytes_multi_bl
ock_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(reads / elapsed_sec)) reads_ps,
       ROUND(MAX(writes / elapsed_sec)) writes_ps,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec)) r_flash_cache_hits_ps,
       ROUND(MAX(r_IO_requests / elapsed_sec)) r_appl_iops,
       ROUND(MAX(r_requests_optimized / elapsed_sec)) r_requests_optimized_iops,
       ROUND(MAX(r_total_IO_requests / elapsed_sec)) r_total_iops,
       ROUND(MAX(r_total_multi_block_requests / elapsed_sec)) r_total_multi_block_iops,
       ROUND(MAX(r_cache / elapsed_sec)) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec)) r_cache_prefetch_ps,
       ROUND(MAX(r_direct / elapsed_sec)) r_direct_ps,
       ROUND(MAX(r_direct_lob / elapsed_sec)) r_direct_lob_ps,
       ROUND(MAX(r_direct_temporary_tablespace / elapsed_sec)) r_direct_temp_tablespace_ps,
       ROUND(MAX(r_for_flashback_new / elapsed_sec)) r_for_flashback_new_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec)) r_prefetch_warmup_ps,
       ROUND(MAX(w_IO_requests / elapsed_sec)) w_appl_iops,
       ROUND(MAX(w_total_IO_requests / elapsed_sec)) w_total_iops,
       ROUND(MAX(w_total_multi_block_requests / elapsed_sec)) w_total_multi_block_iops,
       ROUND(MAX(w_direct / elapsed_sec)) w_direct_ps,
       ROUND(MAX(w_direct_lob / elapsed_sec)) w_direct_lob_ps,
       ROUND(MAX(w_direct_temporary_tablespace / elapsed_sec)) w_direct_temp_tablespace_ps,
       ROUND(MAX(w_from_cache / elapsed_sec)) w_from_cache_ps,
       ROUND(MAX(w_non_checkpoint / elapsed_sec)) w_non_checkpoint_ps,
       ROUND(MAX(redo_writes / elapsed_sec)) w_redo_iops,
       ROUND(MAX(r_total_single_block_requests / elapsed_sec)) r_total_single_block_iops,
       ROUND(MAX(w_total_single_block_requests / elapsed_sec)) w_total_single_block_iops,
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX(r_total_bytes / POWER(10,6) / elapsed_sec), 3) r_total_mbps,
       ROUND(MAX(r_appl_bytes / POWER(10,6) / elapsed_sec), 3) r_appl_mbps,
       ROUND(MAX(w_total_bytes / POWER(10,6) / elapsed_sec), 3) w_total_mbps,
       ROUND(MAX(w_appl_bytes / POWER(10,6) / elapsed_sec), 3) w_appl_mbps,
       ROUND(MAX(redo_size / POWER(10,6) / elapsed_sec), 3) redo_size_mbps,
       ROUND(MAX(r_total_bytes_single_block_req / POWER(10,6) / elapsed_sec), 3) r_total_single_bloc
k_mbps,
       ROUND(MAX(r_total_bytes_multi_block_req / POWER(10,6) / elapsed_sec), 3) r_total_multi_block_
mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_buffered_multi_block_req / GREATEST(r_total_mu
lti_block_requests, 1)) / POWER(10,6) / elapsed_sec), 3) r_buffered_multi_block_mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_direct / GREATEST(r_total_multi_block_requests
, 1)) / POWER(10,6) / elapsed_sec), 3) r_direct_multi_block_mbps,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(w_iops) w_iops,
       SUM(w_total_iops) total_IO_requests,
       SUM(w_redo_iops) redo_writes,
       SUM(w_total_single_block_iops) total_single_block_requests,
       SUM(w_total_multi_block_iops) total_multi_block_requests,
       SUM(w_appl_iops) appl_IO_requests,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:36:21 1e.97
Elapsed Hours so far:    0.235
Elapsed Hours so far: .235

Elapsed: 00:00:00.01

11:36:21 1e "00131_edb360_323688_1e_97_wiops_series_for_instance_1.html"
11:36:33 1e "00132_edb360_323688_1e_97_wiops_series_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.242

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:36:46 1e "Resources (as per AWR and MEM)"
11:36:46 W-IOPS Series for Instance 2

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read bytes' THEN value ELSE 0 END) r_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical read IO requests' THEN value ELSE 0 END) r_IO_requests,
       SUM(CASE WHEN stat_name = 'physical read requests optimized' THEN value ELSE 0 END) r_request
s_optimized,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_total_bytes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_total_IO
_requests,
       SUM(CASE WHEN stat_name = 'physical read total multi block requests' THEN value ELSE 0 END) r
_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical reads' THEN value ELSE 0 END) reads,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads direct' THEN value ELSE 0 END) r_direct,
       SUM(CASE WHEN stat_name = 'physical reads direct (lob)' THEN value ELSE 0 END) r_direct_lob,
       SUM(CASE WHEN stat_name = 'physical reads direct temporary tablespace' THEN value ELSE 0 END)
 r_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical reads for flashback new' THEN value ELSE 0 END) r_for_fla
shback_new,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup,
       SUM(CASE WHEN stat_name = 'physical write bytes' THEN value ELSE 0 END) w_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical write IO requests' THEN value ELSE 0 END) w_IO_requests,
       SUM(CASE WHEN stat_name = 'physical write total bytes' THEN value ELSE 0 END) w_total_bytes,
       SUM(CASE WHEN stat_name = 'physical write total IO requests' THEN value ELSE 0 END) w_total_I
O_requests,
       SUM(CASE WHEN stat_name = 'physical write total multi block requests' THEN value ELSE 0 END)
w_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical writes' THEN value ELSE 0 END) writes,
       SUM(CASE WHEN stat_name = 'physical writes direct' THEN value ELSE 0 END) w_direct,
       SUM(CASE WHEN stat_name = 'physical writes direct (lob)' THEN value ELSE 0 END) w_direct_lob,

       SUM(CASE WHEN stat_name = 'physical writes direct temporary tablespace' THEN value ELSE 0 END
) w_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical writes from cache' THEN value ELSE 0 END) w_from_cache,
       SUM(CASE WHEN stat_name = 'physical writes non checkpoint' THEN value ELSE 0 END) w_non_check
point,
       SUM(CASE WHEN stat_name = 'redo size' THEN value ELSE 0 END) redo_size,
       SUM(CASE WHEN stat_name = 'redo writes' THEN value ELSE 0 END) redo_writes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 2
   AND stat_name IN (
   'physical read bytes',
   'physical read flash cache hits',
   'physical read IO requests',
   'physical read requests optimized',
   'physical read total bytes', /* r_bytes */
   'physical read total IO requests', /* r_reqs */
   'physical read total multi block requests',
   'physical reads',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads direct',
   'physical reads direct (lob)',
   'physical reads direct temporary tablespace',
   'physical reads for flashback new',
   'physical reads prefetch warmup',
   'physical write bytes',
   'physical write IO requests',
   'physical write total bytes', /* w_bytes */
   'physical write total IO requests', /* w_reqs */
   'physical write total multi block requests',
   'physical writes',
   'physical writes direct',
   'physical writes direct (lob)',
   'physical writes direct temporary tablespace',
   'physical writes from cache',
   'physical writes non checkpoint',
   'redo size', /* w_bytes */
   'redo writes') /* w_reqs */
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_appl_bytes - h0.r_appl_bytes) r_appl_bytes,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_IO_requests - h0.r_IO_requests) r_IO_requests,
       (h1.r_requests_optimized - h0.r_requests_optimized) r_requests_optimized,
       (h1.r_total_bytes - h0.r_total_bytes) r_total_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) r_total_IO_requests,
       (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests) r_total_multi_block_reque
sts,
       (h1.reads - h0.reads) reads,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_direct - h0.r_direct) r_direct,
       (h1.r_direct_lob - h0.r_direct_lob) r_direct_lob,
       (h1.r_direct_temporary_tablespace - h0.r_direct_temporary_tablespace) r_direct_temporary_tabl
espace,
       (h1.r_for_flashback_new - h0.r_for_flashback_new) r_for_flashback_new,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       (h1.w_appl_bytes - h0.w_appl_bytes) w_appl_bytes,
       (h1.w_IO_requests - h0.w_IO_requests) w_IO_requests,
       (h1.w_total_bytes - h0.w_total_bytes) w_total_bytes,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) w_total_IO_requests,
       (h1.w_total_multi_block_requests - h0.w_total_multi_block_requests) w_total_multi_block_reque
sts,
       (h1.writes - h0.writes) writes,
       (h1.w_direct - h0.w_direct) w_direct,
       (h1.w_direct_lob - h0.w_direct_lob) w_direct_lob,
       (h1.w_direct_temporary_tablespace - h0.w_direct_temporary_tablespace) w_direct_temporary_tabl
espace,
       (h1.w_from_cache - h0.w_from_cache) w_from_cache,
       (h1.w_non_checkpoint - h0.w_non_checkpoint) w_non_checkpoint,
       (h1.redo_size - h0.redo_size) redo_size,
       (h1.redo_writes - h0.redo_writes) redo_writes,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests - h0.r_t
otal_multi_block_requests) r_total_single_block_requests,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) - (h1.w_total_multi_block_requests - h0.w_t
otal_multi_block_requests) w_total_single_block_requests,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests
 - h0.r_total_multi_block_requests))) r_total_bytes_single_block_req,
       (h1.r_total_bytes - h0.r_total_bytes) - (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requ
ests) - (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests))) r_total_bytes_multi_bl
ock_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(reads / elapsed_sec)) reads_ps,
       ROUND(MAX(writes / elapsed_sec)) writes_ps,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec)) r_flash_cache_hits_ps,
       ROUND(MAX(r_IO_requests / elapsed_sec)) r_appl_iops,
       ROUND(MAX(r_requests_optimized / elapsed_sec)) r_requests_optimized_iops,
       ROUND(MAX(r_total_IO_requests / elapsed_sec)) r_total_iops,
       ROUND(MAX(r_total_multi_block_requests / elapsed_sec)) r_total_multi_block_iops,
       ROUND(MAX(r_cache / elapsed_sec)) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec)) r_cache_prefetch_ps,
       ROUND(MAX(r_direct / elapsed_sec)) r_direct_ps,
       ROUND(MAX(r_direct_lob / elapsed_sec)) r_direct_lob_ps,
       ROUND(MAX(r_direct_temporary_tablespace / elapsed_sec)) r_direct_temp_tablespace_ps,
       ROUND(MAX(r_for_flashback_new / elapsed_sec)) r_for_flashback_new_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec)) r_prefetch_warmup_ps,
       ROUND(MAX(w_IO_requests / elapsed_sec)) w_appl_iops,
       ROUND(MAX(w_total_IO_requests / elapsed_sec)) w_total_iops,
       ROUND(MAX(w_total_multi_block_requests / elapsed_sec)) w_total_multi_block_iops,
       ROUND(MAX(w_direct / elapsed_sec)) w_direct_ps,
       ROUND(MAX(w_direct_lob / elapsed_sec)) w_direct_lob_ps,
       ROUND(MAX(w_direct_temporary_tablespace / elapsed_sec)) w_direct_temp_tablespace_ps,
       ROUND(MAX(w_from_cache / elapsed_sec)) w_from_cache_ps,
       ROUND(MAX(w_non_checkpoint / elapsed_sec)) w_non_checkpoint_ps,
       ROUND(MAX(redo_writes / elapsed_sec)) w_redo_iops,
       ROUND(MAX(r_total_single_block_requests / elapsed_sec)) r_total_single_block_iops,
       ROUND(MAX(w_total_single_block_requests / elapsed_sec)) w_total_single_block_iops,
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX(r_total_bytes / POWER(10,6) / elapsed_sec), 3) r_total_mbps,
       ROUND(MAX(r_appl_bytes / POWER(10,6) / elapsed_sec), 3) r_appl_mbps,
       ROUND(MAX(w_total_bytes / POWER(10,6) / elapsed_sec), 3) w_total_mbps,
       ROUND(MAX(w_appl_bytes / POWER(10,6) / elapsed_sec), 3) w_appl_mbps,
       ROUND(MAX(redo_size / POWER(10,6) / elapsed_sec), 3) redo_size_mbps,
       ROUND(MAX(r_total_bytes_single_block_req / POWER(10,6) / elapsed_sec), 3) r_total_single_bloc
k_mbps,
       ROUND(MAX(r_total_bytes_multi_block_req / POWER(10,6) / elapsed_sec), 3) r_total_multi_block_
mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_buffered_multi_block_req / GREATEST(r_total_mu
lti_block_requests, 1)) / POWER(10,6) / elapsed_sec), 3) r_buffered_multi_block_mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_direct / GREATEST(r_total_multi_block_requests
, 1)) / POWER(10,6) / elapsed_sec), 3) r_direct_multi_block_mbps,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(w_iops) w_iops,
       SUM(w_total_iops) total_IO_requests,
       SUM(w_redo_iops) redo_writes,
       SUM(w_total_single_block_iops) total_single_block_requests,
       SUM(w_total_multi_block_iops) total_multi_block_requests,
       SUM(w_appl_iops) appl_IO_requests,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:36:46 1e.98
Elapsed Hours so far:    0.242
Elapsed Hours so far: .242

Elapsed: 00:00:00.00

11:36:46 1e "00133_edb360_323688_1e_98_wiops_series_for_instance_2.html"
11:36:58 1e "00134_edb360_323688_1e_98_wiops_series_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.248

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:37:10 1e "Resources (as per AWR and MEM)"
11:37:10 Writes (per second) Series for Cluster

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read bytes' THEN value ELSE 0 END) r_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical read IO requests' THEN value ELSE 0 END) r_IO_requests,
       SUM(CASE WHEN stat_name = 'physical read requests optimized' THEN value ELSE 0 END) r_request
s_optimized,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_total_bytes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_total_IO
_requests,
       SUM(CASE WHEN stat_name = 'physical read total multi block requests' THEN value ELSE 0 END) r
_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical reads' THEN value ELSE 0 END) reads,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads direct' THEN value ELSE 0 END) r_direct,
       SUM(CASE WHEN stat_name = 'physical reads direct (lob)' THEN value ELSE 0 END) r_direct_lob,
       SUM(CASE WHEN stat_name = 'physical reads direct temporary tablespace' THEN value ELSE 0 END)
 r_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical reads for flashback new' THEN value ELSE 0 END) r_for_fla
shback_new,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup,
       SUM(CASE WHEN stat_name = 'physical write bytes' THEN value ELSE 0 END) w_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical write IO requests' THEN value ELSE 0 END) w_IO_requests,
       SUM(CASE WHEN stat_name = 'physical write total bytes' THEN value ELSE 0 END) w_total_bytes,
       SUM(CASE WHEN stat_name = 'physical write total IO requests' THEN value ELSE 0 END) w_total_I
O_requests,
       SUM(CASE WHEN stat_name = 'physical write total multi block requests' THEN value ELSE 0 END)
w_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical writes' THEN value ELSE 0 END) writes,
       SUM(CASE WHEN stat_name = 'physical writes direct' THEN value ELSE 0 END) w_direct,
       SUM(CASE WHEN stat_name = 'physical writes direct (lob)' THEN value ELSE 0 END) w_direct_lob,

       SUM(CASE WHEN stat_name = 'physical writes direct temporary tablespace' THEN value ELSE 0 END
) w_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical writes from cache' THEN value ELSE 0 END) w_from_cache,
       SUM(CASE WHEN stat_name = 'physical writes non checkpoint' THEN value ELSE 0 END) w_non_check
point,
       SUM(CASE WHEN stat_name = 'redo size' THEN value ELSE 0 END) redo_size,
       SUM(CASE WHEN stat_name = 'redo writes' THEN value ELSE 0 END) redo_writes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = instance_number
   AND stat_name IN (
   'physical read bytes',
   'physical read flash cache hits',
   'physical read IO requests',
   'physical read requests optimized',
   'physical read total bytes', /* r_bytes */
   'physical read total IO requests', /* r_reqs */
   'physical read total multi block requests',
   'physical reads',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads direct',
   'physical reads direct (lob)',
   'physical reads direct temporary tablespace',
   'physical reads for flashback new',
   'physical reads prefetch warmup',
   'physical write bytes',
   'physical write IO requests',
   'physical write total bytes', /* w_bytes */
   'physical write total IO requests', /* w_reqs */
   'physical write total multi block requests',
   'physical writes',
   'physical writes direct',
   'physical writes direct (lob)',
   'physical writes direct temporary tablespace',
   'physical writes from cache',
   'physical writes non checkpoint',
   'redo size', /* w_bytes */
   'redo writes') /* w_reqs */
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_appl_bytes - h0.r_appl_bytes) r_appl_bytes,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_IO_requests - h0.r_IO_requests) r_IO_requests,
       (h1.r_requests_optimized - h0.r_requests_optimized) r_requests_optimized,
       (h1.r_total_bytes - h0.r_total_bytes) r_total_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) r_total_IO_requests,
       (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests) r_total_multi_block_reque
sts,
       (h1.reads - h0.reads) reads,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_direct - h0.r_direct) r_direct,
       (h1.r_direct_lob - h0.r_direct_lob) r_direct_lob,
       (h1.r_direct_temporary_tablespace - h0.r_direct_temporary_tablespace) r_direct_temporary_tabl
espace,
       (h1.r_for_flashback_new - h0.r_for_flashback_new) r_for_flashback_new,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       (h1.w_appl_bytes - h0.w_appl_bytes) w_appl_bytes,
       (h1.w_IO_requests - h0.w_IO_requests) w_IO_requests,
       (h1.w_total_bytes - h0.w_total_bytes) w_total_bytes,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) w_total_IO_requests,
       (h1.w_total_multi_block_requests - h0.w_total_multi_block_requests) w_total_multi_block_reque
sts,
       (h1.writes - h0.writes) writes,
       (h1.w_direct - h0.w_direct) w_direct,
       (h1.w_direct_lob - h0.w_direct_lob) w_direct_lob,
       (h1.w_direct_temporary_tablespace - h0.w_direct_temporary_tablespace) w_direct_temporary_tabl
espace,
       (h1.w_from_cache - h0.w_from_cache) w_from_cache,
       (h1.w_non_checkpoint - h0.w_non_checkpoint) w_non_checkpoint,
       (h1.redo_size - h0.redo_size) redo_size,
       (h1.redo_writes - h0.redo_writes) redo_writes,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests - h0.r_t
otal_multi_block_requests) r_total_single_block_requests,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) - (h1.w_total_multi_block_requests - h0.w_t
otal_multi_block_requests) w_total_single_block_requests,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests
 - h0.r_total_multi_block_requests))) r_total_bytes_single_block_req,
       (h1.r_total_bytes - h0.r_total_bytes) - (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requ
ests) - (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests))) r_total_bytes_multi_bl
ock_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(reads / elapsed_sec)) reads_ps,
       ROUND(MAX(writes / elapsed_sec)) writes_ps,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec)) r_flash_cache_hits_ps,
       ROUND(MAX(r_IO_requests / elapsed_sec)) r_appl_iops,
       ROUND(MAX(r_requests_optimized / elapsed_sec)) r_requests_optimized_iops,
       ROUND(MAX(r_total_IO_requests / elapsed_sec)) r_total_iops,
       ROUND(MAX(r_total_multi_block_requests / elapsed_sec)) r_total_multi_block_iops,
       ROUND(MAX(r_cache / elapsed_sec)) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec)) r_cache_prefetch_ps,
       ROUND(MAX(r_direct / elapsed_sec)) r_direct_ps,
       ROUND(MAX(r_direct_lob / elapsed_sec)) r_direct_lob_ps,
       ROUND(MAX(r_direct_temporary_tablespace / elapsed_sec)) r_direct_temp_tablespace_ps,
       ROUND(MAX(r_for_flashback_new / elapsed_sec)) r_for_flashback_new_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec)) r_prefetch_warmup_ps,
       ROUND(MAX(w_IO_requests / elapsed_sec)) w_appl_iops,
       ROUND(MAX(w_total_IO_requests / elapsed_sec)) w_total_iops,
       ROUND(MAX(w_total_multi_block_requests / elapsed_sec)) w_total_multi_block_iops,
       ROUND(MAX(w_direct / elapsed_sec)) w_direct_ps,
       ROUND(MAX(w_direct_lob / elapsed_sec)) w_direct_lob_ps,
       ROUND(MAX(w_direct_temporary_tablespace / elapsed_sec)) w_direct_temp_tablespace_ps,
       ROUND(MAX(w_from_cache / elapsed_sec)) w_from_cache_ps,
       ROUND(MAX(w_non_checkpoint / elapsed_sec)) w_non_checkpoint_ps,
       ROUND(MAX(redo_writes / elapsed_sec)) w_redo_iops,
       ROUND(MAX(r_total_single_block_requests / elapsed_sec)) r_total_single_block_iops,
       ROUND(MAX(w_total_single_block_requests / elapsed_sec)) w_total_single_block_iops,
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX(r_total_bytes / POWER(10,6) / elapsed_sec), 3) r_total_mbps,
       ROUND(MAX(r_appl_bytes / POWER(10,6) / elapsed_sec), 3) r_appl_mbps,
       ROUND(MAX(w_total_bytes / POWER(10,6) / elapsed_sec), 3) w_total_mbps,
       ROUND(MAX(w_appl_bytes / POWER(10,6) / elapsed_sec), 3) w_appl_mbps,
       ROUND(MAX(redo_size / POWER(10,6) / elapsed_sec), 3) redo_size_mbps,
       ROUND(MAX(r_total_bytes_single_block_req / POWER(10,6) / elapsed_sec), 3) r_total_single_bloc
k_mbps,
       ROUND(MAX(r_total_bytes_multi_block_req / POWER(10,6) / elapsed_sec), 3) r_total_multi_block_
mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_buffered_multi_block_req / GREATEST(r_total_mu
lti_block_requests, 1)) / POWER(10,6) / elapsed_sec), 3) r_buffered_multi_block_mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_direct / GREATEST(r_total_multi_block_requests
, 1)) / POWER(10,6) / elapsed_sec), 3) r_direct_multi_block_mbps,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(writes_ps) writes,
       SUM(w_direct_ps) direct,
       SUM(w_direct_lob_ps) direct_lob,
       SUM(w_direct_temp_tablespace_ps) direct_temporary_tablespace,
       SUM(w_from_cache_ps) from_cache,
       SUM(w_non_checkpoint_ps) non_checkpoint,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:37:10 1e.99
Elapsed Hours so far:    0.248
Elapsed Hours so far: .248

Elapsed: 00:00:00.00

11:37:10 1e "00135_edb360_323688_1e_99_writes_per_second_series_for_cluster.html"
11:37:38 1e "00136_edb360_323688_1e_99_writes_per_second_series_for_cluster_line_chart.html"
Elapsed Hours so far:    0.263

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:38:05 1e "Resources (as per AWR and MEM)"
11:38:05 Writes (per second) Series for Instance 1

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read bytes' THEN value ELSE 0 END) r_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical read IO requests' THEN value ELSE 0 END) r_IO_requests,
       SUM(CASE WHEN stat_name = 'physical read requests optimized' THEN value ELSE 0 END) r_request
s_optimized,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_total_bytes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_total_IO
_requests,
       SUM(CASE WHEN stat_name = 'physical read total multi block requests' THEN value ELSE 0 END) r
_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical reads' THEN value ELSE 0 END) reads,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads direct' THEN value ELSE 0 END) r_direct,
       SUM(CASE WHEN stat_name = 'physical reads direct (lob)' THEN value ELSE 0 END) r_direct_lob,
       SUM(CASE WHEN stat_name = 'physical reads direct temporary tablespace' THEN value ELSE 0 END)
 r_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical reads for flashback new' THEN value ELSE 0 END) r_for_fla
shback_new,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup,
       SUM(CASE WHEN stat_name = 'physical write bytes' THEN value ELSE 0 END) w_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical write IO requests' THEN value ELSE 0 END) w_IO_requests,
       SUM(CASE WHEN stat_name = 'physical write total bytes' THEN value ELSE 0 END) w_total_bytes,
       SUM(CASE WHEN stat_name = 'physical write total IO requests' THEN value ELSE 0 END) w_total_I
O_requests,
       SUM(CASE WHEN stat_name = 'physical write total multi block requests' THEN value ELSE 0 END)
w_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical writes' THEN value ELSE 0 END) writes,
       SUM(CASE WHEN stat_name = 'physical writes direct' THEN value ELSE 0 END) w_direct,
       SUM(CASE WHEN stat_name = 'physical writes direct (lob)' THEN value ELSE 0 END) w_direct_lob,

       SUM(CASE WHEN stat_name = 'physical writes direct temporary tablespace' THEN value ELSE 0 END
) w_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical writes from cache' THEN value ELSE 0 END) w_from_cache,
       SUM(CASE WHEN stat_name = 'physical writes non checkpoint' THEN value ELSE 0 END) w_non_check
point,
       SUM(CASE WHEN stat_name = 'redo size' THEN value ELSE 0 END) redo_size,
       SUM(CASE WHEN stat_name = 'redo writes' THEN value ELSE 0 END) redo_writes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 1
   AND stat_name IN (
   'physical read bytes',
   'physical read flash cache hits',
   'physical read IO requests',
   'physical read requests optimized',
   'physical read total bytes', /* r_bytes */
   'physical read total IO requests', /* r_reqs */
   'physical read total multi block requests',
   'physical reads',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads direct',
   'physical reads direct (lob)',
   'physical reads direct temporary tablespace',
   'physical reads for flashback new',
   'physical reads prefetch warmup',
   'physical write bytes',
   'physical write IO requests',
   'physical write total bytes', /* w_bytes */
   'physical write total IO requests', /* w_reqs */
   'physical write total multi block requests',
   'physical writes',
   'physical writes direct',
   'physical writes direct (lob)',
   'physical writes direct temporary tablespace',
   'physical writes from cache',
   'physical writes non checkpoint',
   'redo size', /* w_bytes */
   'redo writes') /* w_reqs */
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_appl_bytes - h0.r_appl_bytes) r_appl_bytes,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_IO_requests - h0.r_IO_requests) r_IO_requests,
       (h1.r_requests_optimized - h0.r_requests_optimized) r_requests_optimized,
       (h1.r_total_bytes - h0.r_total_bytes) r_total_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) r_total_IO_requests,
       (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests) r_total_multi_block_reque
sts,
       (h1.reads - h0.reads) reads,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_direct - h0.r_direct) r_direct,
       (h1.r_direct_lob - h0.r_direct_lob) r_direct_lob,
       (h1.r_direct_temporary_tablespace - h0.r_direct_temporary_tablespace) r_direct_temporary_tabl
espace,
       (h1.r_for_flashback_new - h0.r_for_flashback_new) r_for_flashback_new,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       (h1.w_appl_bytes - h0.w_appl_bytes) w_appl_bytes,
       (h1.w_IO_requests - h0.w_IO_requests) w_IO_requests,
       (h1.w_total_bytes - h0.w_total_bytes) w_total_bytes,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) w_total_IO_requests,
       (h1.w_total_multi_block_requests - h0.w_total_multi_block_requests) w_total_multi_block_reque
sts,
       (h1.writes - h0.writes) writes,
       (h1.w_direct - h0.w_direct) w_direct,
       (h1.w_direct_lob - h0.w_direct_lob) w_direct_lob,
       (h1.w_direct_temporary_tablespace - h0.w_direct_temporary_tablespace) w_direct_temporary_tabl
espace,
       (h1.w_from_cache - h0.w_from_cache) w_from_cache,
       (h1.w_non_checkpoint - h0.w_non_checkpoint) w_non_checkpoint,
       (h1.redo_size - h0.redo_size) redo_size,
       (h1.redo_writes - h0.redo_writes) redo_writes,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests - h0.r_t
otal_multi_block_requests) r_total_single_block_requests,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) - (h1.w_total_multi_block_requests - h0.w_t
otal_multi_block_requests) w_total_single_block_requests,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests
 - h0.r_total_multi_block_requests))) r_total_bytes_single_block_req,
       (h1.r_total_bytes - h0.r_total_bytes) - (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requ
ests) - (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests))) r_total_bytes_multi_bl
ock_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(reads / elapsed_sec)) reads_ps,
       ROUND(MAX(writes / elapsed_sec)) writes_ps,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec)) r_flash_cache_hits_ps,
       ROUND(MAX(r_IO_requests / elapsed_sec)) r_appl_iops,
       ROUND(MAX(r_requests_optimized / elapsed_sec)) r_requests_optimized_iops,
       ROUND(MAX(r_total_IO_requests / elapsed_sec)) r_total_iops,
       ROUND(MAX(r_total_multi_block_requests / elapsed_sec)) r_total_multi_block_iops,
       ROUND(MAX(r_cache / elapsed_sec)) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec)) r_cache_prefetch_ps,
       ROUND(MAX(r_direct / elapsed_sec)) r_direct_ps,
       ROUND(MAX(r_direct_lob / elapsed_sec)) r_direct_lob_ps,
       ROUND(MAX(r_direct_temporary_tablespace / elapsed_sec)) r_direct_temp_tablespace_ps,
       ROUND(MAX(r_for_flashback_new / elapsed_sec)) r_for_flashback_new_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec)) r_prefetch_warmup_ps,
       ROUND(MAX(w_IO_requests / elapsed_sec)) w_appl_iops,
       ROUND(MAX(w_total_IO_requests / elapsed_sec)) w_total_iops,
       ROUND(MAX(w_total_multi_block_requests / elapsed_sec)) w_total_multi_block_iops,
       ROUND(MAX(w_direct / elapsed_sec)) w_direct_ps,
       ROUND(MAX(w_direct_lob / elapsed_sec)) w_direct_lob_ps,
       ROUND(MAX(w_direct_temporary_tablespace / elapsed_sec)) w_direct_temp_tablespace_ps,
       ROUND(MAX(w_from_cache / elapsed_sec)) w_from_cache_ps,
       ROUND(MAX(w_non_checkpoint / elapsed_sec)) w_non_checkpoint_ps,
       ROUND(MAX(redo_writes / elapsed_sec)) w_redo_iops,
       ROUND(MAX(r_total_single_block_requests / elapsed_sec)) r_total_single_block_iops,
       ROUND(MAX(w_total_single_block_requests / elapsed_sec)) w_total_single_block_iops,
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX(r_total_bytes / POWER(10,6) / elapsed_sec), 3) r_total_mbps,
       ROUND(MAX(r_appl_bytes / POWER(10,6) / elapsed_sec), 3) r_appl_mbps,
       ROUND(MAX(w_total_bytes / POWER(10,6) / elapsed_sec), 3) w_total_mbps,
       ROUND(MAX(w_appl_bytes / POWER(10,6) / elapsed_sec), 3) w_appl_mbps,
       ROUND(MAX(redo_size / POWER(10,6) / elapsed_sec), 3) redo_size_mbps,
       ROUND(MAX(r_total_bytes_single_block_req / POWER(10,6) / elapsed_sec), 3) r_total_single_bloc
k_mbps,
       ROUND(MAX(r_total_bytes_multi_block_req / POWER(10,6) / elapsed_sec), 3) r_total_multi_block_
mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_buffered_multi_block_req / GREATEST(r_total_mu
lti_block_requests, 1)) / POWER(10,6) / elapsed_sec), 3) r_buffered_multi_block_mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_direct / GREATEST(r_total_multi_block_requests
, 1)) / POWER(10,6) / elapsed_sec), 3) r_direct_multi_block_mbps,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(writes_ps) writes,
       SUM(w_direct_ps) direct,
       SUM(w_direct_lob_ps) direct_lob,
       SUM(w_direct_temp_tablespace_ps) direct_temporary_tablespace,
       SUM(w_from_cache_ps) from_cache,
       SUM(w_non_checkpoint_ps) non_checkpoint,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:38:05 1e.100
Elapsed Hours so far:    0.263
Elapsed Hours so far: .263

Elapsed: 00:00:00.00

11:38:05 1e "00137_edb360_323688_1e_100_writes_per_second_series_for_instance_1.html"
11:38:19 1e "00138_edb360_323688_1e_100_writes_per_second_series_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.271

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:38:32 1e "Resources (as per AWR and MEM)"
11:38:32 Writes (per second) Series for Instance 2

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read bytes' THEN value ELSE 0 END) r_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical read IO requests' THEN value ELSE 0 END) r_IO_requests,
       SUM(CASE WHEN stat_name = 'physical read requests optimized' THEN value ELSE 0 END) r_request
s_optimized,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_total_bytes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_total_IO
_requests,
       SUM(CASE WHEN stat_name = 'physical read total multi block requests' THEN value ELSE 0 END) r
_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical reads' THEN value ELSE 0 END) reads,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads direct' THEN value ELSE 0 END) r_direct,
       SUM(CASE WHEN stat_name = 'physical reads direct (lob)' THEN value ELSE 0 END) r_direct_lob,
       SUM(CASE WHEN stat_name = 'physical reads direct temporary tablespace' THEN value ELSE 0 END)
 r_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical reads for flashback new' THEN value ELSE 0 END) r_for_fla
shback_new,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup,
       SUM(CASE WHEN stat_name = 'physical write bytes' THEN value ELSE 0 END) w_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical write IO requests' THEN value ELSE 0 END) w_IO_requests,
       SUM(CASE WHEN stat_name = 'physical write total bytes' THEN value ELSE 0 END) w_total_bytes,
       SUM(CASE WHEN stat_name = 'physical write total IO requests' THEN value ELSE 0 END) w_total_I
O_requests,
       SUM(CASE WHEN stat_name = 'physical write total multi block requests' THEN value ELSE 0 END)
w_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical writes' THEN value ELSE 0 END) writes,
       SUM(CASE WHEN stat_name = 'physical writes direct' THEN value ELSE 0 END) w_direct,
       SUM(CASE WHEN stat_name = 'physical writes direct (lob)' THEN value ELSE 0 END) w_direct_lob,

       SUM(CASE WHEN stat_name = 'physical writes direct temporary tablespace' THEN value ELSE 0 END
) w_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical writes from cache' THEN value ELSE 0 END) w_from_cache,
       SUM(CASE WHEN stat_name = 'physical writes non checkpoint' THEN value ELSE 0 END) w_non_check
point,
       SUM(CASE WHEN stat_name = 'redo size' THEN value ELSE 0 END) redo_size,
       SUM(CASE WHEN stat_name = 'redo writes' THEN value ELSE 0 END) redo_writes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 2
   AND stat_name IN (
   'physical read bytes',
   'physical read flash cache hits',
   'physical read IO requests',
   'physical read requests optimized',
   'physical read total bytes', /* r_bytes */
   'physical read total IO requests', /* r_reqs */
   'physical read total multi block requests',
   'physical reads',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads direct',
   'physical reads direct (lob)',
   'physical reads direct temporary tablespace',
   'physical reads for flashback new',
   'physical reads prefetch warmup',
   'physical write bytes',
   'physical write IO requests',
   'physical write total bytes', /* w_bytes */
   'physical write total IO requests', /* w_reqs */
   'physical write total multi block requests',
   'physical writes',
   'physical writes direct',
   'physical writes direct (lob)',
   'physical writes direct temporary tablespace',
   'physical writes from cache',
   'physical writes non checkpoint',
   'redo size', /* w_bytes */
   'redo writes') /* w_reqs */
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_appl_bytes - h0.r_appl_bytes) r_appl_bytes,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_IO_requests - h0.r_IO_requests) r_IO_requests,
       (h1.r_requests_optimized - h0.r_requests_optimized) r_requests_optimized,
       (h1.r_total_bytes - h0.r_total_bytes) r_total_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) r_total_IO_requests,
       (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests) r_total_multi_block_reque
sts,
       (h1.reads - h0.reads) reads,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_direct - h0.r_direct) r_direct,
       (h1.r_direct_lob - h0.r_direct_lob) r_direct_lob,
       (h1.r_direct_temporary_tablespace - h0.r_direct_temporary_tablespace) r_direct_temporary_tabl
espace,
       (h1.r_for_flashback_new - h0.r_for_flashback_new) r_for_flashback_new,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       (h1.w_appl_bytes - h0.w_appl_bytes) w_appl_bytes,
       (h1.w_IO_requests - h0.w_IO_requests) w_IO_requests,
       (h1.w_total_bytes - h0.w_total_bytes) w_total_bytes,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) w_total_IO_requests,
       (h1.w_total_multi_block_requests - h0.w_total_multi_block_requests) w_total_multi_block_reque
sts,
       (h1.writes - h0.writes) writes,
       (h1.w_direct - h0.w_direct) w_direct,
       (h1.w_direct_lob - h0.w_direct_lob) w_direct_lob,
       (h1.w_direct_temporary_tablespace - h0.w_direct_temporary_tablespace) w_direct_temporary_tabl
espace,
       (h1.w_from_cache - h0.w_from_cache) w_from_cache,
       (h1.w_non_checkpoint - h0.w_non_checkpoint) w_non_checkpoint,
       (h1.redo_size - h0.redo_size) redo_size,
       (h1.redo_writes - h0.redo_writes) redo_writes,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests - h0.r_t
otal_multi_block_requests) r_total_single_block_requests,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) - (h1.w_total_multi_block_requests - h0.w_t
otal_multi_block_requests) w_total_single_block_requests,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests
 - h0.r_total_multi_block_requests))) r_total_bytes_single_block_req,
       (h1.r_total_bytes - h0.r_total_bytes) - (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requ
ests) - (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests))) r_total_bytes_multi_bl
ock_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(reads / elapsed_sec)) reads_ps,
       ROUND(MAX(writes / elapsed_sec)) writes_ps,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec)) r_flash_cache_hits_ps,
       ROUND(MAX(r_IO_requests / elapsed_sec)) r_appl_iops,
       ROUND(MAX(r_requests_optimized / elapsed_sec)) r_requests_optimized_iops,
       ROUND(MAX(r_total_IO_requests / elapsed_sec)) r_total_iops,
       ROUND(MAX(r_total_multi_block_requests / elapsed_sec)) r_total_multi_block_iops,
       ROUND(MAX(r_cache / elapsed_sec)) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec)) r_cache_prefetch_ps,
       ROUND(MAX(r_direct / elapsed_sec)) r_direct_ps,
       ROUND(MAX(r_direct_lob / elapsed_sec)) r_direct_lob_ps,
       ROUND(MAX(r_direct_temporary_tablespace / elapsed_sec)) r_direct_temp_tablespace_ps,
       ROUND(MAX(r_for_flashback_new / elapsed_sec)) r_for_flashback_new_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec)) r_prefetch_warmup_ps,
       ROUND(MAX(w_IO_requests / elapsed_sec)) w_appl_iops,
       ROUND(MAX(w_total_IO_requests / elapsed_sec)) w_total_iops,
       ROUND(MAX(w_total_multi_block_requests / elapsed_sec)) w_total_multi_block_iops,
       ROUND(MAX(w_direct / elapsed_sec)) w_direct_ps,
       ROUND(MAX(w_direct_lob / elapsed_sec)) w_direct_lob_ps,
       ROUND(MAX(w_direct_temporary_tablespace / elapsed_sec)) w_direct_temp_tablespace_ps,
       ROUND(MAX(w_from_cache / elapsed_sec)) w_from_cache_ps,
       ROUND(MAX(w_non_checkpoint / elapsed_sec)) w_non_checkpoint_ps,
       ROUND(MAX(redo_writes / elapsed_sec)) w_redo_iops,
       ROUND(MAX(r_total_single_block_requests / elapsed_sec)) r_total_single_block_iops,
       ROUND(MAX(w_total_single_block_requests / elapsed_sec)) w_total_single_block_iops,
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX(r_total_bytes / POWER(10,6) / elapsed_sec), 3) r_total_mbps,
       ROUND(MAX(r_appl_bytes / POWER(10,6) / elapsed_sec), 3) r_appl_mbps,
       ROUND(MAX(w_total_bytes / POWER(10,6) / elapsed_sec), 3) w_total_mbps,
       ROUND(MAX(w_appl_bytes / POWER(10,6) / elapsed_sec), 3) w_appl_mbps,
       ROUND(MAX(redo_size / POWER(10,6) / elapsed_sec), 3) redo_size_mbps,
       ROUND(MAX(r_total_bytes_single_block_req / POWER(10,6) / elapsed_sec), 3) r_total_single_bloc
k_mbps,
       ROUND(MAX(r_total_bytes_multi_block_req / POWER(10,6) / elapsed_sec), 3) r_total_multi_block_
mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_buffered_multi_block_req / GREATEST(r_total_mu
lti_block_requests, 1)) / POWER(10,6) / elapsed_sec), 3) r_buffered_multi_block_mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_direct / GREATEST(r_total_multi_block_requests
, 1)) / POWER(10,6) / elapsed_sec), 3) r_direct_multi_block_mbps,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(writes_ps) writes,
       SUM(w_direct_ps) direct,
       SUM(w_direct_lob_ps) direct_lob,
       SUM(w_direct_temp_tablespace_ps) direct_temporary_tablespace,
       SUM(w_from_cache_ps) from_cache,
       SUM(w_non_checkpoint_ps) non_checkpoint,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:38:32 1e.101
Elapsed Hours so far:    0.271
Elapsed Hours so far: .271

Elapsed: 00:00:00.00

11:38:33 1e "00139_edb360_323688_1e_101_writes_per_second_series_for_instance_2.html"
11:38:46 1e "00140_edb360_323688_1e_101_writes_per_second_series_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.279

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:38:59 1e "Resources (as per AWR and MEM)"
11:38:59 W-MBPS Series for Cluster

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read bytes' THEN value ELSE 0 END) r_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical read IO requests' THEN value ELSE 0 END) r_IO_requests,
       SUM(CASE WHEN stat_name = 'physical read requests optimized' THEN value ELSE 0 END) r_request
s_optimized,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_total_bytes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_total_IO
_requests,
       SUM(CASE WHEN stat_name = 'physical read total multi block requests' THEN value ELSE 0 END) r
_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical reads' THEN value ELSE 0 END) reads,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads direct' THEN value ELSE 0 END) r_direct,
       SUM(CASE WHEN stat_name = 'physical reads direct (lob)' THEN value ELSE 0 END) r_direct_lob,
       SUM(CASE WHEN stat_name = 'physical reads direct temporary tablespace' THEN value ELSE 0 END)
 r_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical reads for flashback new' THEN value ELSE 0 END) r_for_fla
shback_new,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup,
       SUM(CASE WHEN stat_name = 'physical write bytes' THEN value ELSE 0 END) w_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical write IO requests' THEN value ELSE 0 END) w_IO_requests,
       SUM(CASE WHEN stat_name = 'physical write total bytes' THEN value ELSE 0 END) w_total_bytes,
       SUM(CASE WHEN stat_name = 'physical write total IO requests' THEN value ELSE 0 END) w_total_I
O_requests,
       SUM(CASE WHEN stat_name = 'physical write total multi block requests' THEN value ELSE 0 END)
w_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical writes' THEN value ELSE 0 END) writes,
       SUM(CASE WHEN stat_name = 'physical writes direct' THEN value ELSE 0 END) w_direct,
       SUM(CASE WHEN stat_name = 'physical writes direct (lob)' THEN value ELSE 0 END) w_direct_lob,

       SUM(CASE WHEN stat_name = 'physical writes direct temporary tablespace' THEN value ELSE 0 END
) w_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical writes from cache' THEN value ELSE 0 END) w_from_cache,
       SUM(CASE WHEN stat_name = 'physical writes non checkpoint' THEN value ELSE 0 END) w_non_check
point,
       SUM(CASE WHEN stat_name = 'redo size' THEN value ELSE 0 END) redo_size,
       SUM(CASE WHEN stat_name = 'redo writes' THEN value ELSE 0 END) redo_writes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = instance_number
   AND stat_name IN (
   'physical read bytes',
   'physical read flash cache hits',
   'physical read IO requests',
   'physical read requests optimized',
   'physical read total bytes', /* r_bytes */
   'physical read total IO requests', /* r_reqs */
   'physical read total multi block requests',
   'physical reads',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads direct',
   'physical reads direct (lob)',
   'physical reads direct temporary tablespace',
   'physical reads for flashback new',
   'physical reads prefetch warmup',
   'physical write bytes',
   'physical write IO requests',
   'physical write total bytes', /* w_bytes */
   'physical write total IO requests', /* w_reqs */
   'physical write total multi block requests',
   'physical writes',
   'physical writes direct',
   'physical writes direct (lob)',
   'physical writes direct temporary tablespace',
   'physical writes from cache',
   'physical writes non checkpoint',
   'redo size', /* w_bytes */
   'redo writes') /* w_reqs */
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_appl_bytes - h0.r_appl_bytes) r_appl_bytes,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_IO_requests - h0.r_IO_requests) r_IO_requests,
       (h1.r_requests_optimized - h0.r_requests_optimized) r_requests_optimized,
       (h1.r_total_bytes - h0.r_total_bytes) r_total_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) r_total_IO_requests,
       (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests) r_total_multi_block_reque
sts,
       (h1.reads - h0.reads) reads,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_direct - h0.r_direct) r_direct,
       (h1.r_direct_lob - h0.r_direct_lob) r_direct_lob,
       (h1.r_direct_temporary_tablespace - h0.r_direct_temporary_tablespace) r_direct_temporary_tabl
espace,
       (h1.r_for_flashback_new - h0.r_for_flashback_new) r_for_flashback_new,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       (h1.w_appl_bytes - h0.w_appl_bytes) w_appl_bytes,
       (h1.w_IO_requests - h0.w_IO_requests) w_IO_requests,
       (h1.w_total_bytes - h0.w_total_bytes) w_total_bytes,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) w_total_IO_requests,
       (h1.w_total_multi_block_requests - h0.w_total_multi_block_requests) w_total_multi_block_reque
sts,
       (h1.writes - h0.writes) writes,
       (h1.w_direct - h0.w_direct) w_direct,
       (h1.w_direct_lob - h0.w_direct_lob) w_direct_lob,
       (h1.w_direct_temporary_tablespace - h0.w_direct_temporary_tablespace) w_direct_temporary_tabl
espace,
       (h1.w_from_cache - h0.w_from_cache) w_from_cache,
       (h1.w_non_checkpoint - h0.w_non_checkpoint) w_non_checkpoint,
       (h1.redo_size - h0.redo_size) redo_size,
       (h1.redo_writes - h0.redo_writes) redo_writes,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests - h0.r_t
otal_multi_block_requests) r_total_single_block_requests,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) - (h1.w_total_multi_block_requests - h0.w_t
otal_multi_block_requests) w_total_single_block_requests,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests
 - h0.r_total_multi_block_requests))) r_total_bytes_single_block_req,
       (h1.r_total_bytes - h0.r_total_bytes) - (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requ
ests) - (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests))) r_total_bytes_multi_bl
ock_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(reads / elapsed_sec)) reads_ps,
       ROUND(MAX(writes / elapsed_sec)) writes_ps,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec)) r_flash_cache_hits_ps,
       ROUND(MAX(r_IO_requests / elapsed_sec)) r_appl_iops,
       ROUND(MAX(r_requests_optimized / elapsed_sec)) r_requests_optimized_iops,
       ROUND(MAX(r_total_IO_requests / elapsed_sec)) r_total_iops,
       ROUND(MAX(r_total_multi_block_requests / elapsed_sec)) r_total_multi_block_iops,
       ROUND(MAX(r_cache / elapsed_sec)) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec)) r_cache_prefetch_ps,
       ROUND(MAX(r_direct / elapsed_sec)) r_direct_ps,
       ROUND(MAX(r_direct_lob / elapsed_sec)) r_direct_lob_ps,
       ROUND(MAX(r_direct_temporary_tablespace / elapsed_sec)) r_direct_temp_tablespace_ps,
       ROUND(MAX(r_for_flashback_new / elapsed_sec)) r_for_flashback_new_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec)) r_prefetch_warmup_ps,
       ROUND(MAX(w_IO_requests / elapsed_sec)) w_appl_iops,
       ROUND(MAX(w_total_IO_requests / elapsed_sec)) w_total_iops,
       ROUND(MAX(w_total_multi_block_requests / elapsed_sec)) w_total_multi_block_iops,
       ROUND(MAX(w_direct / elapsed_sec)) w_direct_ps,
       ROUND(MAX(w_direct_lob / elapsed_sec)) w_direct_lob_ps,
       ROUND(MAX(w_direct_temporary_tablespace / elapsed_sec)) w_direct_temp_tablespace_ps,
       ROUND(MAX(w_from_cache / elapsed_sec)) w_from_cache_ps,
       ROUND(MAX(w_non_checkpoint / elapsed_sec)) w_non_checkpoint_ps,
       ROUND(MAX(redo_writes / elapsed_sec)) w_redo_iops,
       ROUND(MAX(r_total_single_block_requests / elapsed_sec)) r_total_single_block_iops,
       ROUND(MAX(w_total_single_block_requests / elapsed_sec)) w_total_single_block_iops,
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX(r_total_bytes / POWER(10,6) / elapsed_sec), 3) r_total_mbps,
       ROUND(MAX(r_appl_bytes / POWER(10,6) / elapsed_sec), 3) r_appl_mbps,
       ROUND(MAX(w_total_bytes / POWER(10,6) / elapsed_sec), 3) w_total_mbps,
       ROUND(MAX(w_appl_bytes / POWER(10,6) / elapsed_sec), 3) w_appl_mbps,
       ROUND(MAX(redo_size / POWER(10,6) / elapsed_sec), 3) redo_size_mbps,
       ROUND(MAX(r_total_bytes_single_block_req / POWER(10,6) / elapsed_sec), 3) r_total_single_bloc
k_mbps,
       ROUND(MAX(r_total_bytes_multi_block_req / POWER(10,6) / elapsed_sec), 3) r_total_multi_block_
mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_buffered_multi_block_req / GREATEST(r_total_mu
lti_block_requests, 1)) / POWER(10,6) / elapsed_sec), 3) r_buffered_multi_block_mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_direct / GREATEST(r_total_multi_block_requests
, 1)) / POWER(10,6) / elapsed_sec), 3) r_direct_multi_block_mbps,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(w_mbps) w_mbps,
       SUM(w_total_mbps) total_mbps,
       SUM(redo_size_mbps) redo_size_mbps,
       SUM(w_appl_mbps) appl_mbps,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:38:59 1e.102
Elapsed Hours so far:    0.279
Elapsed Hours so far: .279

Elapsed: 00:00:00.00

11:38:59 1e "00141_edb360_323688_1e_102_wmbps_series_for_cluster.html"
11:39:28 1e "00142_edb360_323688_1e_102_wmbps_series_for_cluster_line_chart.html"
Elapsed Hours so far:    0.294

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:39:56 1e "Resources (as per AWR and MEM)"
11:39:56 W-MBPS Series for Instance 1

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read bytes' THEN value ELSE 0 END) r_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical read IO requests' THEN value ELSE 0 END) r_IO_requests,
       SUM(CASE WHEN stat_name = 'physical read requests optimized' THEN value ELSE 0 END) r_request
s_optimized,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_total_bytes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_total_IO
_requests,
       SUM(CASE WHEN stat_name = 'physical read total multi block requests' THEN value ELSE 0 END) r
_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical reads' THEN value ELSE 0 END) reads,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads direct' THEN value ELSE 0 END) r_direct,
       SUM(CASE WHEN stat_name = 'physical reads direct (lob)' THEN value ELSE 0 END) r_direct_lob,
       SUM(CASE WHEN stat_name = 'physical reads direct temporary tablespace' THEN value ELSE 0 END)
 r_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical reads for flashback new' THEN value ELSE 0 END) r_for_fla
shback_new,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup,
       SUM(CASE WHEN stat_name = 'physical write bytes' THEN value ELSE 0 END) w_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical write IO requests' THEN value ELSE 0 END) w_IO_requests,
       SUM(CASE WHEN stat_name = 'physical write total bytes' THEN value ELSE 0 END) w_total_bytes,
       SUM(CASE WHEN stat_name = 'physical write total IO requests' THEN value ELSE 0 END) w_total_I
O_requests,
       SUM(CASE WHEN stat_name = 'physical write total multi block requests' THEN value ELSE 0 END)
w_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical writes' THEN value ELSE 0 END) writes,
       SUM(CASE WHEN stat_name = 'physical writes direct' THEN value ELSE 0 END) w_direct,
       SUM(CASE WHEN stat_name = 'physical writes direct (lob)' THEN value ELSE 0 END) w_direct_lob,

       SUM(CASE WHEN stat_name = 'physical writes direct temporary tablespace' THEN value ELSE 0 END
) w_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical writes from cache' THEN value ELSE 0 END) w_from_cache,
       SUM(CASE WHEN stat_name = 'physical writes non checkpoint' THEN value ELSE 0 END) w_non_check
point,
       SUM(CASE WHEN stat_name = 'redo size' THEN value ELSE 0 END) redo_size,
       SUM(CASE WHEN stat_name = 'redo writes' THEN value ELSE 0 END) redo_writes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 1
   AND stat_name IN (
   'physical read bytes',
   'physical read flash cache hits',
   'physical read IO requests',
   'physical read requests optimized',
   'physical read total bytes', /* r_bytes */
   'physical read total IO requests', /* r_reqs */
   'physical read total multi block requests',
   'physical reads',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads direct',
   'physical reads direct (lob)',
   'physical reads direct temporary tablespace',
   'physical reads for flashback new',
   'physical reads prefetch warmup',
   'physical write bytes',
   'physical write IO requests',
   'physical write total bytes', /* w_bytes */
   'physical write total IO requests', /* w_reqs */
   'physical write total multi block requests',
   'physical writes',
   'physical writes direct',
   'physical writes direct (lob)',
   'physical writes direct temporary tablespace',
   'physical writes from cache',
   'physical writes non checkpoint',
   'redo size', /* w_bytes */
   'redo writes') /* w_reqs */
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_appl_bytes - h0.r_appl_bytes) r_appl_bytes,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_IO_requests - h0.r_IO_requests) r_IO_requests,
       (h1.r_requests_optimized - h0.r_requests_optimized) r_requests_optimized,
       (h1.r_total_bytes - h0.r_total_bytes) r_total_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) r_total_IO_requests,
       (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests) r_total_multi_block_reque
sts,
       (h1.reads - h0.reads) reads,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_direct - h0.r_direct) r_direct,
       (h1.r_direct_lob - h0.r_direct_lob) r_direct_lob,
       (h1.r_direct_temporary_tablespace - h0.r_direct_temporary_tablespace) r_direct_temporary_tabl
espace,
       (h1.r_for_flashback_new - h0.r_for_flashback_new) r_for_flashback_new,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       (h1.w_appl_bytes - h0.w_appl_bytes) w_appl_bytes,
       (h1.w_IO_requests - h0.w_IO_requests) w_IO_requests,
       (h1.w_total_bytes - h0.w_total_bytes) w_total_bytes,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) w_total_IO_requests,
       (h1.w_total_multi_block_requests - h0.w_total_multi_block_requests) w_total_multi_block_reque
sts,
       (h1.writes - h0.writes) writes,
       (h1.w_direct - h0.w_direct) w_direct,
       (h1.w_direct_lob - h0.w_direct_lob) w_direct_lob,
       (h1.w_direct_temporary_tablespace - h0.w_direct_temporary_tablespace) w_direct_temporary_tabl
espace,
       (h1.w_from_cache - h0.w_from_cache) w_from_cache,
       (h1.w_non_checkpoint - h0.w_non_checkpoint) w_non_checkpoint,
       (h1.redo_size - h0.redo_size) redo_size,
       (h1.redo_writes - h0.redo_writes) redo_writes,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests - h0.r_t
otal_multi_block_requests) r_total_single_block_requests,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) - (h1.w_total_multi_block_requests - h0.w_t
otal_multi_block_requests) w_total_single_block_requests,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests
 - h0.r_total_multi_block_requests))) r_total_bytes_single_block_req,
       (h1.r_total_bytes - h0.r_total_bytes) - (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requ
ests) - (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests))) r_total_bytes_multi_bl
ock_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(reads / elapsed_sec)) reads_ps,
       ROUND(MAX(writes / elapsed_sec)) writes_ps,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec)) r_flash_cache_hits_ps,
       ROUND(MAX(r_IO_requests / elapsed_sec)) r_appl_iops,
       ROUND(MAX(r_requests_optimized / elapsed_sec)) r_requests_optimized_iops,
       ROUND(MAX(r_total_IO_requests / elapsed_sec)) r_total_iops,
       ROUND(MAX(r_total_multi_block_requests / elapsed_sec)) r_total_multi_block_iops,
       ROUND(MAX(r_cache / elapsed_sec)) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec)) r_cache_prefetch_ps,
       ROUND(MAX(r_direct / elapsed_sec)) r_direct_ps,
       ROUND(MAX(r_direct_lob / elapsed_sec)) r_direct_lob_ps,
       ROUND(MAX(r_direct_temporary_tablespace / elapsed_sec)) r_direct_temp_tablespace_ps,
       ROUND(MAX(r_for_flashback_new / elapsed_sec)) r_for_flashback_new_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec)) r_prefetch_warmup_ps,
       ROUND(MAX(w_IO_requests / elapsed_sec)) w_appl_iops,
       ROUND(MAX(w_total_IO_requests / elapsed_sec)) w_total_iops,
       ROUND(MAX(w_total_multi_block_requests / elapsed_sec)) w_total_multi_block_iops,
       ROUND(MAX(w_direct / elapsed_sec)) w_direct_ps,
       ROUND(MAX(w_direct_lob / elapsed_sec)) w_direct_lob_ps,
       ROUND(MAX(w_direct_temporary_tablespace / elapsed_sec)) w_direct_temp_tablespace_ps,
       ROUND(MAX(w_from_cache / elapsed_sec)) w_from_cache_ps,
       ROUND(MAX(w_non_checkpoint / elapsed_sec)) w_non_checkpoint_ps,
       ROUND(MAX(redo_writes / elapsed_sec)) w_redo_iops,
       ROUND(MAX(r_total_single_block_requests / elapsed_sec)) r_total_single_block_iops,
       ROUND(MAX(w_total_single_block_requests / elapsed_sec)) w_total_single_block_iops,
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX(r_total_bytes / POWER(10,6) / elapsed_sec), 3) r_total_mbps,
       ROUND(MAX(r_appl_bytes / POWER(10,6) / elapsed_sec), 3) r_appl_mbps,
       ROUND(MAX(w_total_bytes / POWER(10,6) / elapsed_sec), 3) w_total_mbps,
       ROUND(MAX(w_appl_bytes / POWER(10,6) / elapsed_sec), 3) w_appl_mbps,
       ROUND(MAX(redo_size / POWER(10,6) / elapsed_sec), 3) redo_size_mbps,
       ROUND(MAX(r_total_bytes_single_block_req / POWER(10,6) / elapsed_sec), 3) r_total_single_bloc
k_mbps,
       ROUND(MAX(r_total_bytes_multi_block_req / POWER(10,6) / elapsed_sec), 3) r_total_multi_block_
mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_buffered_multi_block_req / GREATEST(r_total_mu
lti_block_requests, 1)) / POWER(10,6) / elapsed_sec), 3) r_buffered_multi_block_mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_direct / GREATEST(r_total_multi_block_requests
, 1)) / POWER(10,6) / elapsed_sec), 3) r_direct_multi_block_mbps,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(w_mbps) w_mbps,
       SUM(w_total_mbps) total_mbps,
       SUM(redo_size_mbps) redo_size_mbps,
       SUM(w_appl_mbps) appl_mbps,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:39:56 1e.103
Elapsed Hours so far:    0.294
Elapsed Hours so far: .294

Elapsed: 00:00:00.00

11:39:56 1e "00143_edb360_323688_1e_103_wmbps_series_for_instance_1.html"
11:40:09 1e "00144_edb360_323688_1e_103_wmbps_series_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.301

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:40:21 1e "Resources (as per AWR and MEM)"
11:40:21 W-MBPS Series for Instance 2

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read bytes' THEN value ELSE 0 END) r_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical read IO requests' THEN value ELSE 0 END) r_IO_requests,
       SUM(CASE WHEN stat_name = 'physical read requests optimized' THEN value ELSE 0 END) r_request
s_optimized,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_total_bytes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_total_IO
_requests,
       SUM(CASE WHEN stat_name = 'physical read total multi block requests' THEN value ELSE 0 END) r
_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical reads' THEN value ELSE 0 END) reads,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads direct' THEN value ELSE 0 END) r_direct,
       SUM(CASE WHEN stat_name = 'physical reads direct (lob)' THEN value ELSE 0 END) r_direct_lob,
       SUM(CASE WHEN stat_name = 'physical reads direct temporary tablespace' THEN value ELSE 0 END)
 r_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical reads for flashback new' THEN value ELSE 0 END) r_for_fla
shback_new,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup,
       SUM(CASE WHEN stat_name = 'physical write bytes' THEN value ELSE 0 END) w_appl_bytes,
       SUM(CASE WHEN stat_name = 'physical write IO requests' THEN value ELSE 0 END) w_IO_requests,
       SUM(CASE WHEN stat_name = 'physical write total bytes' THEN value ELSE 0 END) w_total_bytes,
       SUM(CASE WHEN stat_name = 'physical write total IO requests' THEN value ELSE 0 END) w_total_I
O_requests,
       SUM(CASE WHEN stat_name = 'physical write total multi block requests' THEN value ELSE 0 END)
w_total_multi_block_requests,
       SUM(CASE WHEN stat_name = 'physical writes' THEN value ELSE 0 END) writes,
       SUM(CASE WHEN stat_name = 'physical writes direct' THEN value ELSE 0 END) w_direct,
       SUM(CASE WHEN stat_name = 'physical writes direct (lob)' THEN value ELSE 0 END) w_direct_lob,

       SUM(CASE WHEN stat_name = 'physical writes direct temporary tablespace' THEN value ELSE 0 END
) w_direct_temporary_tablespace,
       SUM(CASE WHEN stat_name = 'physical writes from cache' THEN value ELSE 0 END) w_from_cache,
       SUM(CASE WHEN stat_name = 'physical writes non checkpoint' THEN value ELSE 0 END) w_non_check
point,
       SUM(CASE WHEN stat_name = 'redo size' THEN value ELSE 0 END) redo_size,
       SUM(CASE WHEN stat_name = 'redo writes' THEN value ELSE 0 END) redo_writes,
       SUM(CASE WHEN stat_name = 'physical read total IO requests' THEN value ELSE 0 END) r_reqs,
       SUM(CASE WHEN stat_name IN ('physical write total IO requests', 'redo writes') THEN value ELS
E 0 END) w_reqs,
       SUM(CASE WHEN stat_name = 'physical read total bytes' THEN value ELSE 0 END) r_bytes,
       SUM(CASE WHEN stat_name IN ('physical write total bytes', 'redo size') THEN value ELSE 0 END)
 w_bytes
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 2
   AND stat_name IN (
   'physical read bytes',
   'physical read flash cache hits',
   'physical read IO requests',
   'physical read requests optimized',
   'physical read total bytes', /* r_bytes */
   'physical read total IO requests', /* r_reqs */
   'physical read total multi block requests',
   'physical reads',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads direct',
   'physical reads direct (lob)',
   'physical reads direct temporary tablespace',
   'physical reads for flashback new',
   'physical reads prefetch warmup',
   'physical write bytes',
   'physical write IO requests',
   'physical write total bytes', /* w_bytes */
   'physical write total IO requests', /* w_reqs */
   'physical write total multi block requests',
   'physical writes',
   'physical writes direct',
   'physical writes direct (lob)',
   'physical writes direct temporary tablespace',
   'physical writes from cache',
   'physical writes non checkpoint',
   'redo size', /* w_bytes */
   'redo writes') /* w_reqs */
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_appl_bytes - h0.r_appl_bytes) r_appl_bytes,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_IO_requests - h0.r_IO_requests) r_IO_requests,
       (h1.r_requests_optimized - h0.r_requests_optimized) r_requests_optimized,
       (h1.r_total_bytes - h0.r_total_bytes) r_total_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) r_total_IO_requests,
       (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests) r_total_multi_block_reque
sts,
       (h1.reads - h0.reads) reads,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_direct - h0.r_direct) r_direct,
       (h1.r_direct_lob - h0.r_direct_lob) r_direct_lob,
       (h1.r_direct_temporary_tablespace - h0.r_direct_temporary_tablespace) r_direct_temporary_tabl
espace,
       (h1.r_for_flashback_new - h0.r_for_flashback_new) r_for_flashback_new,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       (h1.w_appl_bytes - h0.w_appl_bytes) w_appl_bytes,
       (h1.w_IO_requests - h0.w_IO_requests) w_IO_requests,
       (h1.w_total_bytes - h0.w_total_bytes) w_total_bytes,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) w_total_IO_requests,
       (h1.w_total_multi_block_requests - h0.w_total_multi_block_requests) w_total_multi_block_reque
sts,
       (h1.writes - h0.writes) writes,
       (h1.w_direct - h0.w_direct) w_direct,
       (h1.w_direct_lob - h0.w_direct_lob) w_direct_lob,
       (h1.w_direct_temporary_tablespace - h0.w_direct_temporary_tablespace) w_direct_temporary_tabl
espace,
       (h1.w_from_cache - h0.w_from_cache) w_from_cache,
       (h1.w_non_checkpoint - h0.w_non_checkpoint) w_non_checkpoint,
       (h1.redo_size - h0.redo_size) redo_size,
       (h1.redo_writes - h0.redo_writes) redo_writes,
       (h1.r_reqs - h0.r_reqs) r_reqs,
       (h1.w_reqs - h0.w_reqs) w_reqs,
       (h1.r_bytes - h0.r_bytes) r_bytes,
       (h1.w_bytes - h0.w_bytes) w_bytes,
       (h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests - h0.r_t
otal_multi_block_requests) r_total_single_block_requests,
       (h1.w_total_IO_requests - h0.w_total_IO_requests) - (h1.w_total_multi_block_requests - h0.w_t
otal_multi_block_requests) w_total_single_block_requests,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requests) - (h1.r_total_multi_block_requests
 - h0.r_total_multi_block_requests))) r_total_bytes_single_block_req,
       (h1.r_total_bytes - h0.r_total_bytes) - (8192 * ((h1.r_total_IO_requests - h0.r_total_IO_requ
ests) - (h1.r_total_multi_block_requests - h0.r_total_multi_block_requests))) r_total_bytes_multi_bl
ock_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1e.87 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(reads / elapsed_sec)) reads_ps,
       ROUND(MAX(writes / elapsed_sec)) writes_ps,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec)) r_flash_cache_hits_ps,
       ROUND(MAX(r_IO_requests / elapsed_sec)) r_appl_iops,
       ROUND(MAX(r_requests_optimized / elapsed_sec)) r_requests_optimized_iops,
       ROUND(MAX(r_total_IO_requests / elapsed_sec)) r_total_iops,
       ROUND(MAX(r_total_multi_block_requests / elapsed_sec)) r_total_multi_block_iops,
       ROUND(MAX(r_cache / elapsed_sec)) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec)) r_cache_prefetch_ps,
       ROUND(MAX(r_direct / elapsed_sec)) r_direct_ps,
       ROUND(MAX(r_direct_lob / elapsed_sec)) r_direct_lob_ps,
       ROUND(MAX(r_direct_temporary_tablespace / elapsed_sec)) r_direct_temp_tablespace_ps,
       ROUND(MAX(r_for_flashback_new / elapsed_sec)) r_for_flashback_new_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec)) r_prefetch_warmup_ps,
       ROUND(MAX(w_IO_requests / elapsed_sec)) w_appl_iops,
       ROUND(MAX(w_total_IO_requests / elapsed_sec)) w_total_iops,
       ROUND(MAX(w_total_multi_block_requests / elapsed_sec)) w_total_multi_block_iops,
       ROUND(MAX(w_direct / elapsed_sec)) w_direct_ps,
       ROUND(MAX(w_direct_lob / elapsed_sec)) w_direct_lob_ps,
       ROUND(MAX(w_direct_temporary_tablespace / elapsed_sec)) w_direct_temp_tablespace_ps,
       ROUND(MAX(w_from_cache / elapsed_sec)) w_from_cache_ps,
       ROUND(MAX(w_non_checkpoint / elapsed_sec)) w_non_checkpoint_ps,
       ROUND(MAX(redo_writes / elapsed_sec)) w_redo_iops,
       ROUND(MAX(r_total_single_block_requests / elapsed_sec)) r_total_single_block_iops,
       ROUND(MAX(w_total_single_block_requests / elapsed_sec)) w_total_single_block_iops,
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
       ROUND(MAX((r_reqs + w_reqs) / elapsed_sec)) rw_iops,
       ROUND(MAX(r_reqs / elapsed_sec)) r_iops,
       ROUND(MAX(w_reqs / elapsed_sec)) w_iops,
       ROUND(MAX(r_total_bytes / POWER(10,6) / elapsed_sec), 3) r_total_mbps,
       ROUND(MAX(r_appl_bytes / POWER(10,6) / elapsed_sec), 3) r_appl_mbps,
       ROUND(MAX(w_total_bytes / POWER(10,6) / elapsed_sec), 3) w_total_mbps,
       ROUND(MAX(w_appl_bytes / POWER(10,6) / elapsed_sec), 3) w_appl_mbps,
       ROUND(MAX(redo_size / POWER(10,6) / elapsed_sec), 3) redo_size_mbps,
       ROUND(MAX(r_total_bytes_single_block_req / POWER(10,6) / elapsed_sec), 3) r_total_single_bloc
k_mbps,
       ROUND(MAX(r_total_bytes_multi_block_req / POWER(10,6) / elapsed_sec), 3) r_total_multi_block_
mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_buffered_multi_block_req / GREATEST(r_total_mu
lti_block_requests, 1)) / POWER(10,6) / elapsed_sec), 3) r_buffered_multi_block_mbps,
       --ROUND(MAX(r_total_bytes_multi_block_req * (r_direct / GREATEST(r_total_multi_block_requests
, 1)) / POWER(10,6) / elapsed_sec), 3) r_direct_multi_block_mbps,
       ROUND(MAX((r_bytes + w_bytes) / POWER(10,6) / elapsed_sec), 3) rw_mbps,
       ROUND(MAX(r_bytes / POWER(10,6) / elapsed_sec), 3) r_mbps,
       ROUND(MAX(w_bytes / POWER(10,6) / elapsed_sec), 3) w_mbps
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(w_mbps) w_mbps,
       SUM(w_total_mbps) total_mbps,
       SUM(redo_size_mbps) redo_size_mbps,
       SUM(w_appl_mbps) appl_mbps,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:40:21 1e.104
Elapsed Hours so far:    0.301
Elapsed Hours so far: .301

Elapsed: 00:00:00.00

11:40:21 1e "00145_edb360_323688_1e_104_wmbps_series_for_instance_2.html"
11:40:34 1e "00146_edb360_323688_1e_104_wmbps_series_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.308

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:40:44 1f "Resources (as per Statspack)"
11:40:44 Memory Size (MEM)

WITH
par AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1f.105 */
       d.dbid,
       d.name,
       i.inst_id,
       /* LOWER(SUBSTR(i.host_name||'.', 1, INSTR(i.host_name||'.', '.') - 1)) */
       LPAD(ORA_HASH(SYS_CONTEXT('USERENV', 'SERVER_HOST'),999999),6,'6') host_name,
       i.instance_number,
       i.instance_name,
       SUM(CASE p.name WHEN 'memory_target' THEN TO_NUMBER(value) END) memory_target,
       SUM(CASE p.name WHEN 'memory_max_target' THEN TO_NUMBER(value) END) memory_max_target,
       SUM(CASE p.name WHEN 'sga_target' THEN TO_NUMBER(value) END) sga_target,
       SUM(CASE p.name WHEN 'sga_max_size' THEN TO_NUMBER(value) END) sga_max_size,
       SUM(CASE p.name WHEN 'pga_aggregate_target' THEN TO_NUMBER(value) END) pga_aggregate_target
  FROM gv$instance i,
       gv$database d,
       gv$system_parameter2 p
 WHERE d.inst_id = i.inst_id
   AND p.inst_id = i.inst_id
   AND p.name IN ('memory_target', 'memory_max_target', 'sga_target', 'sga_max_size', 'pga_aggregate
_target')
 GROUP BY
       d.dbid,
       d.name,
       i.inst_id,
       i.host_name,
       i.instance_number,
       i.instance_name
),
sga_max AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1f.105 */
       inst_id,
       bytes
  FROM gv$sgainfo
 WHERE name = 'Maximum SGA Size'
),
pga_max AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1f.105 */
       inst_id,
       value bytes
  FROM gv$pgastat
 WHERE name = 'maximum PGA allocated'
),
pga AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1f.105 */
       par.dbid,
       par.name,
       par.inst_id,
       par.host_name,
       par.instance_number,
       par.instance_name,
       par.pga_aggregate_target,
       pga_max.bytes max_bytes,
       GREATEST(par.pga_aggregate_target, pga_max.bytes) bytes
  FROM par,
       pga_max
 WHERE par.inst_id = pga_max.inst_id
),
amm AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1f.105 */
       par.dbid,
       par.name,
       par.inst_id,
       par.host_name,
       par.instance_number,
       par.instance_name,
       par.memory_target,
       par.memory_max_target,
       GREATEST(par.memory_target, par.memory_max_target) + (6 * POWER(2,20)) bytes
  FROM par
),
asmm AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1f.105 */
       par.dbid,
       par.name,
       par.inst_id,
       par.host_name,
       par.instance_number,
       par.instance_name,
       par.sga_target,
       par.sga_max_size,
       pga.bytes pga_bytes,
       GREATEST(sga_target, sga_max_size) + pga.bytes + (6 * POWER(2,20)) bytes
  FROM par,
       pga
 WHERE par.inst_id = pga.inst_id
),
no_mm AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1f.105 */
       pga.dbid,
       pga.name,
       pga.inst_id,
       pga.host_name,
       pga.instance_number,
       pga.instance_name,
       sga_max.bytes max_sga,
       pga.bytes max_pga,
       pga.pga_aggregate_target,
       sga_max.bytes + pga.bytes + (5 * POWER(2,20)) bytes
  FROM sga_max,
       pga
 WHERE sga_max.inst_id = pga.inst_id
),
them_all AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1f.105 */
       amm.dbid,
       amm.name,
       amm.inst_id,
       amm.host_name,
       amm.instance_number,
       amm.instance_name,
       GREATEST(amm.bytes, asmm.bytes, no_mm.bytes) bytes,
       amm.memory_target,
       amm.memory_max_target,
       asmm.sga_target,
       asmm.sga_max_size,
       no_mm.max_sga,
       no_mm.pga_aggregate_target,
       no_mm.max_pga
  FROM amm,
       asmm,
       no_mm
 WHERE asmm.inst_id = amm.inst_id
   AND no_mm.inst_id = amm.inst_id
 ORDER BY
       amm.inst_id
)
SELECT dbid,
       name,
       host_name,
       instance_number,
       instance_name,
       bytes required,
       CASE
       WHEN bytes > POWER(2,50) THEN ROUND(bytes/POWER(2,50),3)||' P'
       WHEN bytes > POWER(2,40) THEN ROUND(bytes/POWER(2,40),3)||' T'
       WHEN bytes > POWER(2,30) THEN ROUND(bytes/POWER(2,30),3)||' G'
       WHEN bytes > POWER(2,20) THEN ROUND(bytes/POWER(2,20),3)||' M'
       WHEN bytes > POWER(2,10) THEN ROUND(bytes/POWER(2,10),3)||' K'
       WHEN bytes > 0 THEN bytes||' B' END approx1,
       memory_target,
       CASE
       WHEN memory_target > POWER(2,50) THEN ROUND(memory_target/POWER(2,50),3)||' P'
       WHEN memory_target > POWER(2,40) THEN ROUND(memory_target/POWER(2,40),3)||' T'
       WHEN memory_target > POWER(2,30) THEN ROUND(memory_target/POWER(2,30),3)||' G'
       WHEN memory_target > POWER(2,20) THEN ROUND(memory_target/POWER(2,20),3)||' M'
       WHEN memory_target > POWER(2,10) THEN ROUND(memory_target/POWER(2,10),3)||' K'
       WHEN memory_target > 0 THEN memory_target||' B' END approx2,
       memory_max_target,
       CASE
       WHEN memory_max_target > POWER(2,50) THEN ROUND(memory_max_target/POWER(2,50),3)||' P'
       WHEN memory_max_target > POWER(2,40) THEN ROUND(memory_max_target/POWER(2,40),3)||' T'
       WHEN memory_max_target > POWER(2,30) THEN ROUND(memory_max_target/POWER(2,30),3)||' G'
       WHEN memory_max_target > POWER(2,20) THEN ROUND(memory_max_target/POWER(2,20),3)||' M'
       WHEN memory_max_target > POWER(2,10) THEN ROUND(memory_max_target/POWER(2,10),3)||' K'
       WHEN memory_max_target > 0 THEN memory_max_target||' B' END approx3,
       sga_target,
       CASE
       WHEN sga_target > POWER(2,50) THEN ROUND(sga_target/POWER(2,50),3)||' P'
       WHEN sga_target > POWER(2,40) THEN ROUND(sga_target/POWER(2,40),3)||' T'
       WHEN sga_target > POWER(2,30) THEN ROUND(sga_target/POWER(2,30),3)||' G'
       WHEN sga_target > POWER(2,20) THEN ROUND(sga_target/POWER(2,20),3)||' M'
       WHEN sga_target > POWER(2,10) THEN ROUND(sga_target/POWER(2,10),3)||' K'
       WHEN sga_target > 0 THEN sga_target||' B' END approx4,
       sga_max_size,
       CASE
       WHEN sga_max_size > POWER(2,50) THEN ROUND(sga_max_size/POWER(2,50),3)||' P'
       WHEN sga_max_size > POWER(2,40) THEN ROUND(sga_max_size/POWER(2,40),3)||' T'
       WHEN sga_max_size > POWER(2,30) THEN ROUND(sga_max_size/POWER(2,30),3)||' G'
       WHEN sga_max_size > POWER(2,20) THEN ROUND(sga_max_size/POWER(2,20),3)||' M'
       WHEN sga_max_size > POWER(2,10) THEN ROUND(sga_max_size/POWER(2,10),3)||' K'
       WHEN sga_max_size > 0 THEN sga_max_size||' B' END approx5,
       max_sga,
       CASE
       WHEN max_sga > POWER(2,50) THEN ROUND(max_sga/POWER(2,50),3)||' P'
       WHEN max_sga > POWER(2,40) THEN ROUND(max_sga/POWER(2,40),3)||' T'
       WHEN max_sga > POWER(2,30) THEN ROUND(max_sga/POWER(2,30),3)||' G'
       WHEN max_sga > POWER(2,20) THEN ROUND(max_sga/POWER(2,20),3)||' M'
       WHEN max_sga > POWER(2,10) THEN ROUND(max_sga/POWER(2,10),3)||' K'
       WHEN max_sga > 0 THEN max_sga||' B' END approx6,
       pga_aggregate_target,
       CASE
       WHEN pga_aggregate_target > POWER(2,50) THEN ROUND(pga_aggregate_target/POWER(2,50),3)||' P'
       WHEN pga_aggregate_target > POWER(2,40) THEN ROUND(pga_aggregate_target/POWER(2,40),3)||' T'
       WHEN pga_aggregate_target > POWER(2,30) THEN ROUND(pga_aggregate_target/POWER(2,30),3)||' G'
       WHEN pga_aggregate_target > POWER(2,20) THEN ROUND(pga_aggregate_target/POWER(2,20),3)||' M'
       WHEN pga_aggregate_target > POWER(2,10) THEN ROUND(pga_aggregate_target/POWER(2,10),3)||' K'
       WHEN pga_aggregate_target > 0 THEN pga_aggregate_target||' B' END approx7,
       max_pga,
       CASE
       WHEN max_pga > POWER(2,50) THEN ROUND(max_pga/POWER(2,50),3)||' P'
       WHEN max_pga > POWER(2,40) THEN ROUND(max_pga/POWER(2,40),3)||' T'
       WHEN max_pga > POWER(2,30) THEN ROUND(max_pga/POWER(2,30),3)||' G'
       WHEN max_pga > POWER(2,20) THEN ROUND(max_pga/POWER(2,20),3)||' M'
       WHEN max_pga > POWER(2,10) THEN ROUND(max_pga/POWER(2,10),3)||' K'
       WHEN max_pga > 0 THEN max_pga||' B' END approx8
  FROM them_all
 UNION ALL
SELECT TO_NUMBER(NULL) dbid,
       NULL name,
       NULL host_name,
       TO_NUMBER(NULL) instance_number,
       NULL instance_name,
       SUM(bytes) required,
       CASE
       WHEN SUM(bytes) > POWER(2,50) THEN ROUND(SUM(bytes)/POWER(2,50),3)||' P'
       WHEN SUM(bytes) > POWER(2,40) THEN ROUND(SUM(bytes)/POWER(2,40),3)||' T'
       WHEN SUM(bytes) > POWER(2,30) THEN ROUND(SUM(bytes)/POWER(2,30),3)||' G'
       WHEN SUM(bytes) > POWER(2,20) THEN ROUND(SUM(bytes)/POWER(2,20),3)||' M'
       WHEN SUM(bytes) > POWER(2,10) THEN ROUND(SUM(bytes)/POWER(2,10),3)||' K'
       WHEN SUM(bytes) > 0 THEN SUM(bytes)||' B' END approx1,
       SUM(memory_target) memory_target,
       CASE
       WHEN SUM(memory_target) > POWER(2,50) THEN ROUND(SUM(memory_target)/POWER(2,50),3)||' P'
       WHEN SUM(memory_target) > POWER(2,40) THEN ROUND(SUM(memory_target)/POWER(2,40),3)||' T'
       WHEN SUM(memory_target) > POWER(2,30) THEN ROUND(SUM(memory_target)/POWER(2,30),3)||' G'
       WHEN SUM(memory_target) > POWER(2,20) THEN ROUND(SUM(memory_target)/POWER(2,20),3)||' M'
       WHEN SUM(memory_target) > POWER(2,10) THEN ROUND(SUM(memory_target)/POWER(2,10),3)||' K'
       WHEN SUM(memory_target) > 0 THEN SUM(memory_target)||' B' END approx2,
       SUM(memory_max_target) memory_max_target,
       CASE
       WHEN SUM(memory_max_target) > POWER(2,50) THEN ROUND(SUM(memory_max_target)/POWER(2,50),3)||'
 P'
       WHEN SUM(memory_max_target) > POWER(2,40) THEN ROUND(SUM(memory_max_target)/POWER(2,40),3)||'
 T'
       WHEN SUM(memory_max_target) > POWER(2,30) THEN ROUND(SUM(memory_max_target)/POWER(2,30),3)||'
 G'
       WHEN SUM(memory_max_target) > POWER(2,20) THEN ROUND(SUM(memory_max_target)/POWER(2,20),3)||'
 M'
       WHEN SUM(memory_max_target) > POWER(2,10) THEN ROUND(SUM(memory_max_target)/POWER(2,10),3)||'
 K'
       WHEN SUM(memory_max_target) > 0 THEN SUM(memory_max_target)||' B' END approx3,
       SUM(sga_target) sga_target,
       CASE
       WHEN SUM(sga_target) > POWER(2,50) THEN ROUND(SUM(sga_target)/POWER(2,50),3)||' P'
       WHEN SUM(sga_target) > POWER(2,40) THEN ROUND(SUM(sga_target)/POWER(2,40),3)||' T'
       WHEN SUM(sga_target) > POWER(2,30) THEN ROUND(SUM(sga_target)/POWER(2,30),3)||' G'
       WHEN SUM(sga_target) > POWER(2,20) THEN ROUND(SUM(sga_target)/POWER(2,20),3)||' M'
       WHEN SUM(sga_target) > POWER(2,10) THEN ROUND(SUM(sga_target)/POWER(2,10),3)||' K'
       WHEN SUM(sga_target) > 0 THEN SUM(sga_target)||' B' END approx4,
       SUM(sga_max_size) sga_max_size,
       CASE
       WHEN SUM(sga_max_size) > POWER(2,50) THEN ROUND(SUM(sga_max_size)/POWER(2,50),3)||' P'
       WHEN SUM(sga_max_size) > POWER(2,40) THEN ROUND(SUM(sga_max_size)/POWER(2,40),3)||' T'
       WHEN SUM(sga_max_size) > POWER(2,30) THEN ROUND(SUM(sga_max_size)/POWER(2,30),3)||' G'
       WHEN SUM(sga_max_size) > POWER(2,20) THEN ROUND(SUM(sga_max_size)/POWER(2,20),3)||' M'
       WHEN SUM(sga_max_size) > POWER(2,10) THEN ROUND(SUM(sga_max_size)/POWER(2,10),3)||' K'
       WHEN SUM(sga_max_size) > 0 THEN SUM(sga_max_size)||' B' END approx5,
       SUM(max_sga) max_sga,
       CASE
       WHEN SUM(max_sga) > POWER(2,50) THEN ROUND(SUM(max_sga)/POWER(2,50),3)||' P'
       WHEN SUM(max_sga) > POWER(2,40) THEN ROUND(SUM(max_sga)/POWER(2,40),3)||' T'
       WHEN SUM(max_sga) > POWER(2,30) THEN ROUND(SUM(max_sga)/POWER(2,30),3)||' G'
       WHEN SUM(max_sga) > POWER(2,20) THEN ROUND(SUM(max_sga)/POWER(2,20),3)||' M'
       WHEN SUM(max_sga) > POWER(2,10) THEN ROUND(SUM(max_sga)/POWER(2,10),3)||' K'
       WHEN SUM(max_sga) > 0 THEN SUM(max_sga)||' B' END approx6,
       SUM(pga_aggregate_target) pga_aggregate_target,
       CASE
       WHEN SUM(pga_aggregate_target) > POWER(2,50) THEN ROUND(SUM(pga_aggregate_target)/POWER(2,50)
,3)||' P'
       WHEN SUM(pga_aggregate_target) > POWER(2,40) THEN ROUND(SUM(pga_aggregate_target)/POWER(2,40)
,3)||' T'
       WHEN SUM(pga_aggregate_target) > POWER(2,30) THEN ROUND(SUM(pga_aggregate_target)/POWER(2,30)
,3)||' G'
       WHEN SUM(pga_aggregate_target) > POWER(2,20) THEN ROUND(SUM(pga_aggregate_target)/POWER(2,20)
,3)||' M'
       WHEN SUM(pga_aggregate_target) > POWER(2,10) THEN ROUND(SUM(pga_aggregate_target)/POWER(2,10)
,3)||' K'
       WHEN SUM(pga_aggregate_target) > 0 THEN SUM(pga_aggregate_target)||' B' END approx7,
       SUM(max_pga) max_pga,
       CASE
       WHEN SUM(max_pga) > POWER(2,50) THEN ROUND(SUM(max_pga)/POWER(2,50),3)||' P'
       WHEN SUM(max_pga) > POWER(2,40) THEN ROUND(SUM(max_pga)/POWER(2,40),3)||' T'
       WHEN SUM(max_pga) > POWER(2,30) THEN ROUND(SUM(max_pga)/POWER(2,30),3)||' G'
       WHEN SUM(max_pga) > POWER(2,20) THEN ROUND(SUM(max_pga)/POWER(2,20),3)||' M'
       WHEN SUM(max_pga) > POWER(2,10) THEN ROUND(SUM(max_pga)/POWER(2,10),3)||' K'
       WHEN SUM(max_pga) > 0 THEN SUM(max_pga)||' B' END approx8
  FROM them_all

11:40:44 1f.105
Elapsed Hours so far:    0.308
Elapsed Hours so far: .308

Elapsed: 00:00:00.00

11:40:44 1f "00147_edb360_323688_1f_105_memory_size_mem.html"
Elapsed Hours so far:    0.308

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:40:44 1f "Resources (as per Statspack)"
11:40:44 Database Size on Disk

WITH
sizes AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1f.106 */
       'Data' file_type,
       SUM(bytes) bytes
  FROM v$datafile
 UNION ALL
SELECT 'Temp' file_type,
       SUM(bytes) bytes
  FROM v$tempfile
 UNION ALL
SELECT 'Log' file_type,
       SUM(bytes) * MAX(members) bytes
  FROM v$log
 UNION ALL
SELECT 'Control' file_type,
       SUM(block_size * file_size_blks) bytes
  FROM v$controlfile
),
dbsize AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 1f.106 */
       'Total' file_type,
       SUM(bytes) bytes
  FROM sizes
)
SELECT d.dbid,
       d.name db_name,
       s.file_type,
       s.bytes,
       CASE
       WHEN s.bytes > POWER(10,15) THEN ROUND(s.bytes/POWER(10,15),3)||' P'
       WHEN s.bytes > POWER(10,12) THEN ROUND(s.bytes/POWER(10,12),3)||' T'
       WHEN s.bytes > POWER(10,9) THEN ROUND(s.bytes/POWER(10,9),3)||' G'
       WHEN s.bytes > POWER(10,6) THEN ROUND(s.bytes/POWER(10,6),3)||' M'
       WHEN s.bytes > POWER(10,3) THEN ROUND(s.bytes/POWER(10,3),3)||' K'
       WHEN s.bytes > 0 THEN s.bytes||' B' END approx
  FROM v$database d,
       sizes s
 UNION ALL
SELECT d.dbid,
       d.name db_name,
       s.file_type,
       s.bytes,
       CASE
       WHEN s.bytes > POWER(10,15) THEN ROUND(s.bytes/POWER(10,15),3)||' P'
       WHEN s.bytes > POWER(10,12) THEN ROUND(s.bytes/POWER(10,12),3)||' T'
       WHEN s.bytes > POWER(10,9) THEN ROUND(s.bytes/POWER(10,9),3)||' G'
       WHEN s.bytes > POWER(10,6) THEN ROUND(s.bytes/POWER(10,6),3)||' M'
       WHEN s.bytes > POWER(10,3) THEN ROUND(s.bytes/POWER(10,3),3)||' K'
       WHEN s.bytes > 0 THEN s.bytes||' B' END approx
  FROM v$database d,
       dbsize s

11:40:44 1f.106
Elapsed Hours so far:    0.308
Elapsed Hours so far: .308

Elapsed: 00:00:00.01

11:40:45 1f "00148_edb360_323688_1f_106_database_size_on_disk.html"
Elapsed Hours so far:    0.308

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:40:45 2a "Database Administration"
11:40:45 Latches

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
select v.*
from
  (select
      name, inst_id,
      gets,
      misses,
      round(misses*100/(gets+1), 3) misses_gets_pct,
      spin_gets,
      sleep1,
      sleep2,
      sleep3,
      wait_time,
      round(wait_time/1000000) wait_time_seconds,
   rank () over
     (order by wait_time desc) as misses_rank
   from
      gv$latch
   where gets + misses + sleep1 + wait_time > 0
   order by
      wait_time desc
  ) v
where
   misses_rank <= 25

11:40:45 2a.107
Elapsed Hours so far:    0.308
Elapsed Hours so far: .308

Elapsed: 00:00:00.00

11:40:45 2a "00149_edb360_323688_2a_107_latches.html"
Elapsed Hours so far:    0.308

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:40:45 2a "Database Administration"
11:40:45 Invalid Objects

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 2a.108 */
       *
  FROM dba_objects
 WHERE status = 'INVALID'
 ORDER BY
       owner,
       object_name

11:40:45 2a.108
Elapsed Hours so far:    0.308
Elapsed Hours so far: .308

Elapsed: 00:00:00.00

11:40:45 2a "00150_edb360_323688_2a_108_invalid_objects.html"
Elapsed Hours so far:    0.308

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:40:46 2a "Database Administration"
11:40:46 Disabled Constraints

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 2a.109 */
       *
  FROM dba_constraints
 WHERE status = 'DISABLED'
   AND NOT (owner = 'SYSTEM' AND constraint_name LIKE 'LOGMNR%')
   AND owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 ORDER BY
       owner,
       constraint_name

11:40:46 2a.109
Elapsed Hours so far:    0.308
Elapsed Hours so far: .308

Elapsed: 00:00:00.00

11:40:46 2a "00151_edb360_323688_2a_109_disabled_constraints.html"
Elapsed Hours so far:    0.308

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:40:46 2a "Database Administration"
11:40:46 Enabled and not Validated Constraints

SELECT /*+  NO_MERGE  */ /* 2a.110 */
       *
  FROM dba_constraints
 WHERE status = 'ENABLED'
   AND validated = 'NOT VALIDATED'
   AND constraint_type != 'O'
   AND NOT (owner = 'SYSTEM' AND constraint_name LIKE 'LOGMNR%')
   AND owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 ORDER BY
       owner,
       constraint_name

11:40:46 2a.110
Elapsed Hours so far:    0.308
Elapsed Hours so far: .308

Elapsed: 00:00:00.00

11:40:46 2a "00152_edb360_323688_2a_110_enabled_and_not_validated_constraints.html"
Elapsed Hours so far:    0.309

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:40:47 2a "Database Administration"
11:40:47 Non-indexed FK Constraints

-- based on "Oracle Database Transactions and Locking Revealed" book by Thomas Kyte
WITH
ref_int_constraints AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.111 */
       col.owner,
       col.table_name,
       col.constraint_name,
       con.status,
       con.r_owner,
       con.r_constraint_name,
       COUNT(*) col_cnt,
       MAX(CASE col.position WHEN 01 THEN col.column_name END) col_01,
       MAX(CASE col.position WHEN 02 THEN col.column_name END) col_02,
       MAX(CASE col.position WHEN 03 THEN col.column_name END) col_03,
       MAX(CASE col.position WHEN 04 THEN col.column_name END) col_04,
       MAX(CASE col.position WHEN 05 THEN col.column_name END) col_05,
       MAX(CASE col.position WHEN 06 THEN col.column_name END) col_06,
       MAX(CASE col.position WHEN 07 THEN col.column_name END) col_07,
       MAX(CASE col.position WHEN 08 THEN col.column_name END) col_08,
       MAX(CASE col.position WHEN 09 THEN col.column_name END) col_09,
       MAX(CASE col.position WHEN 10 THEN col.column_name END) col_10,
       MAX(CASE col.position WHEN 11 THEN col.column_name END) col_11,
       MAX(CASE col.position WHEN 12 THEN col.column_name END) col_12,
       MAX(CASE col.position WHEN 13 THEN col.column_name END) col_13,
       MAX(CASE col.position WHEN 14 THEN col.column_name END) col_14,
       MAX(CASE col.position WHEN 15 THEN col.column_name END) col_15,
       MAX(CASE col.position WHEN 16 THEN col.column_name END) col_16,
       par.owner parent_owner,
       par.table_name parent_table_name,
       par.constraint_name parent_constraint_name
  FROM dba_constraints  con,
       dba_cons_columns col,
       dba_constraints par
 WHERE con.constraint_type = 'R'
   AND con.owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS
','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGIN
S','ORDSYS','OUTLN','OWBSYS')
   AND con.owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRC
ANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND col.owner = con.owner
   AND col.constraint_name = con.constraint_name
   AND col.table_name = con.table_name
   AND par.owner(+) = con.r_owner
   AND par.constraint_name(+) = con.r_constraint_name
 GROUP BY
       col.owner,
       col.constraint_name,
       col.table_name,
       con.status,
       con.r_owner,
       con.r_constraint_name,
       par.owner,
       par.constraint_name,
       par.table_name
),
ref_int_indexes AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.111 */
       r.owner,
       r.constraint_name,
       c.table_owner,
       c.table_name,
       c.index_owner,
       c.index_name,
       r.col_cnt
  FROM ref_int_constraints r,
       dba_ind_columns c,
       dba_indexes i
 WHERE c.table_owner = r.owner
   AND c.table_name = r.table_name
   AND c.column_position <= r.col_cnt
   AND c.column_name IN (r.col_01, r.col_02, r.col_03, r.col_04, r.col_05, r.col_06, r.col_07, r.col
_08,
                         r.col_09, r.col_10, r.col_11, r.col_12, r.col_13, r.col_14, r.col_15, r.col
_16)
   AND i.owner = c.index_owner
   AND i.index_name = c.index_name
   AND i.table_owner = c.table_owner
   AND i.table_name = c.table_name
   AND i.index_type != 'BITMAP'
 GROUP BY
       r.owner,
       r.constraint_name,
       c.table_owner,
       c.table_name,
       c.index_owner,
       c.index_name,
       r.col_cnt
HAVING COUNT(*) = r.col_cnt
)
SELECT /*+  NO_MERGE  */ /* 2a.111 */
       *
  FROM ref_int_constraints c
 WHERE NOT EXISTS (
SELECT NULL
  FROM ref_int_indexes i
 WHERE i.owner = c.owner
   AND i.constraint_name = c.constraint_name
)
 ORDER BY
       1, 2, 3

11:40:47 2a.111
Elapsed Hours so far:    0.309
Elapsed Hours so far: .309

Elapsed: 00:00:00.00

11:40:47 2a "00153_edb360_323688_2a_111_nonindexed_fk_constraints.html"
Elapsed Hours so far:    0.309

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:40:50 2a "Database Administration"
11:40:50 Unusable Indexes

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin) Expanded by Abel Macias
SELECT /*+  NO_MERGE  */ /* 2a.112 */
       index_owner,index_name, 'SUBPARTITIONED' INDEX_TYPE ,partition_name,subpartition_name
  FROM dba_ind_subpartitions
 WHERE status = 'UNUSABLE'
   AND index_owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSS
YS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUG
INS','ORDSYS','OUTLN','OWBSYS')
   AND index_owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','T
RCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
UNION ALL
SELECT index_owner,index_name,'PARTITIONED',partition_name,null
  FROM dba_ind_partitions
 WHERE status = 'UNUSABLE'
   AND index_owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSS
YS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUG
INS','ORDSYS','OUTLN','OWBSYS')
   AND index_owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','T
RCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
UNION ALL
SELECT owner,index_name,index_type,null,null
  FROM dba_indexes
 WHERE status = 'UNUSABLE'
   AND owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 ORDER BY
       1,2,4 nulls first,5 nulls first

11:40:50 2a.112
Elapsed Hours so far:    0.310
Elapsed Hours so far: .31

Elapsed: 00:00:00.00

11:40:50 2a "00154_edb360_323688_2a_112_unusable_indexes.html"
Elapsed Hours so far:    0.310

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:40:51 2a "Database Administration"
11:40:51 Invisible Indexes

SELECT /*+  NO_MERGE  */ /* 2a.113 */
       *
  FROM dba_indexes
 WHERE visibility = 'INVISIBLE'
   AND owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 ORDER BY
       owner,
       index_name

11:40:51 2a.113
Elapsed Hours so far:    0.310
Elapsed Hours so far: .31

Elapsed: 00:00:00.00

11:40:51 2a "00155_edb360_323688_2a_113_invisible_indexes.html"
Elapsed Hours so far:    0.310

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:40:51 2a "Database Administration"
11:40:51 Function-based Indexes

SELECT /*+  NO_MERGE  */ /* 2a.114 */
       *
  FROM dba_indexes
 WHERE index_type LIKE 'FUNCTION-BASED%'
   AND owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 ORDER BY
       owner,
       index_name

11:40:51 2a.114
Elapsed Hours so far:    0.310
Elapsed Hours so far: .31

Elapsed: 00:00:00.00

11:40:51 2a "00156_edb360_323688_2a_114_functionbased_indexes.html"
Elapsed Hours so far:    0.310

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:40:52 2a "Database Administration"
11:40:52 Bitmap Indexes

SELECT /*+  NO_MERGE  */ /* 2a.115 */
       *
  FROM dba_indexes
 WHERE index_type LIKE '%BITMAP'
   AND owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 ORDER BY
       owner,
       index_name

11:40:52 2a.115
Elapsed Hours so far:    0.310
Elapsed Hours so far: .31

Elapsed: 00:00:00.01

11:40:52 2a "00157_edb360_323688_2a_115_bitmap_indexes.html"
Elapsed Hours so far:    0.310

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:40:53 2a "Database Administration"
11:40:53 Reversed Indexes

SELECT /*+  NO_MERGE  */ /* 2a.116 */
       *
  FROM dba_indexes
 WHERE index_type LIKE '%REV'
   AND owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 ORDER BY
       owner,
       index_name

11:40:53 2a.116
Elapsed Hours so far:    0.310
Elapsed Hours so far: .31

Elapsed: 00:00:00.00

11:40:53 2a "00158_edb360_323688_2a_116_reversed_indexes.html"
Elapsed Hours so far:    0.310

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:40:53 2a "Database Administration"
11:40:53 Fat Indexes

WITH
indexes_list AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.117 */
       index_owner owner, /*index_name,*/ COUNT(*) columns
  FROM dba_ind_columns
 WHERE index_owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSS
YS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUG
INS','ORDSYS','OUTLN','OWBSYS')
   AND index_owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','T
RCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 GROUP BY
       index_owner, index_name
)
SELECT /*+  NO_MERGE  */ /* 2a.117 */
       owner,
       SUM(CASE columns WHEN  1 THEN 1 ELSE 0 END) "1 Col",
       SUM(CASE columns WHEN  2 THEN 1 ELSE 0 END) "2 Cols",
       SUM(CASE columns WHEN  3 THEN 1 ELSE 0 END) "3 Cols",
       SUM(CASE columns WHEN  4 THEN 1 ELSE 0 END) "4 Cols",
       SUM(CASE columns WHEN  5 THEN 1 ELSE 0 END) "5 Cols",
       SUM(CASE columns WHEN  6 THEN 1 ELSE 0 END) "6 Cols",
       SUM(CASE columns WHEN  7 THEN 1 ELSE 0 END) "7 Cols",
       SUM(CASE columns WHEN  8 THEN 1 ELSE 0 END) "8 Cols",
       SUM(CASE columns WHEN  9 THEN 1 ELSE 0 END) "9 Cols",
       SUM(CASE columns WHEN 10 THEN 1 ELSE 0 END) "10 Cols",
       SUM(CASE columns WHEN 11 THEN 1 ELSE 0 END) "11 Cols",
       SUM(CASE columns WHEN 12 THEN 1 ELSE 0 END) "12 Cols",
       SUM(CASE columns WHEN 13 THEN 1 ELSE 0 END) "13 Cols",
       SUM(CASE columns WHEN 14 THEN 1 ELSE 0 END) "14 Cols",
       SUM(CASE columns WHEN 15 THEN 1 ELSE 0 END) "15 Cols",
       SUM(CASE columns WHEN 16 THEN 1 ELSE 0 END) "16 Cols",
       SUM(CASE columns WHEN 17 THEN 1 ELSE 0 END) "17 Cols",
       SUM(CASE columns WHEN 18 THEN 1 ELSE 0 END) "18 Cols",
       SUM(CASE columns WHEN 19 THEN 1 ELSE 0 END) "19 Cols",
       SUM(CASE columns WHEN 20 THEN 1 ELSE 0 END) "20 Cols",
       SUM(CASE columns WHEN 21 THEN 1 ELSE 0 END) "21 Cols",
       SUM(CASE columns WHEN 22 THEN 1 ELSE 0 END) "22 Cols",
       SUM(CASE columns WHEN 23 THEN 1 ELSE 0 END) "23 Cols",
       SUM(CASE columns WHEN 24 THEN 1 ELSE 0 END) "24 Cols",
       SUM(CASE columns WHEN 25 THEN 1 ELSE 0 END) "25 Cols",
       SUM(CASE columns WHEN 26 THEN 1 ELSE 0 END) "26 Cols",
       SUM(CASE columns WHEN 27 THEN 1 ELSE 0 END) "27 Cols",
       SUM(CASE columns WHEN 28 THEN 1 ELSE 0 END) "28 Cols",
       SUM(CASE columns WHEN 29 THEN 1 ELSE 0 END) "29 Cols",
       SUM(CASE columns WHEN 30 THEN 1 ELSE 0 END) "30 Cols",
       SUM(CASE columns WHEN 31 THEN 1 ELSE 0 END) "31 Cols",
       SUM(CASE columns WHEN 32 THEN 1 ELSE 0 END) "32 Cols",
       SUM(CASE columns WHEN 33 THEN 1 ELSE 0 END) "33 Cols",
       SUM(CASE columns WHEN 34 THEN 1 ELSE 0 END) "34 Cols",
       SUM(CASE columns WHEN 35 THEN 1 ELSE 0 END) "35 Cols",
       SUM(CASE columns WHEN 36 THEN 1 ELSE 0 END) "36 Cols",
       SUM(CASE columns WHEN 37 THEN 1 ELSE 0 END) "37 Cols",
       SUM(CASE columns WHEN 38 THEN 1 ELSE 0 END) "38 Cols",
       SUM(CASE columns WHEN 39 THEN 1 ELSE 0 END) "39 Cols",
       SUM(CASE columns WHEN 40 THEN 1 ELSE 0 END) "40 Cols",
       SUM(CASE WHEN columns > 40 THEN 1 ELSE 0 END) "Over 40 Cols"
  FROM indexes_list
 GROUP BY
       owner
 ORDER BY
       owner

11:40:53 2a.117
Elapsed Hours so far:    0.310
Elapsed Hours so far: .31

Elapsed: 00:00:00.00

11:40:53 2a "00159_edb360_323688_2a_117_fat_indexes.html"
Elapsed Hours so far:    0.311

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:40:54 2a "Database Administration"
11:40:54 Columns with Histogram on Long String

SELECT /*+  NO_MERGE  */ /* 2a.118 */
       *
  FROM dba_tab_cols
 WHERE num_buckets BETWEEN 2 AND 253
   AND data_type LIKE '%CHAR%'
   AND char_length > 32
   AND avg_col_len > 6
   AND data_length > 32
 ORDER BY
       owner, table_name, column_id

11:40:54 2a.118
Elapsed Hours so far:    0.311
Elapsed Hours so far: .311

Elapsed: 00:00:00.01

11:40:54 2a "00160_edb360_323688_2a_118_columns_with_histogram_on_long_string.html"
Elapsed Hours so far:    0.311

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:40:55 2a "Database Administration"
11:40:55 Hidden Columns

SELECT /*+  NO_MERGE  */ /* 2a.119 */
       *
  FROM dba_tab_cols
 WHERE hidden_column = 'YES'
   AND owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 ORDER BY
       owner,
       table_name,
       column_name

11:40:55 2a.119
Elapsed Hours so far:    0.311
Elapsed Hours so far: .311

Elapsed: 00:00:00.00

11:40:55 2a "00161_edb360_323688_2a_119_hidden_columns.html"
Elapsed Hours so far:    0.311

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:40:56 2a "Database Administration"
11:40:56 Virtual Columns

SELECT /*+  NO_MERGE  */ /* 2a.120 */
       *
  FROM dba_tab_cols
 WHERE virtual_column = 'YES'
   AND owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 ORDER BY
       owner,
       table_name,
       column_name

11:40:56 2a.120
Elapsed Hours so far:    0.311
Elapsed Hours so far: .311

Elapsed: 00:00:00.00

11:40:56 2a "00162_edb360_323688_2a_120_virtual_columns.html"
Elapsed Hours so far:    0.311

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:40:57 2a "Database Administration"
11:40:57 Tables not recently used

WITH
obj AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.121 */
       owner,
       object_name,
       object_id,
       last_ddl_time
  FROM dba_objects
 WHERE object_type LIKE 'TABLE%'
   AND last_ddl_time IS NOT NULL
   AND owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
),
ash AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 2a.121 */
       current_obj#,
       MAX(CAST(sample_time AS DATE)) sample_date
  FROM dba_hist_active_sess_history h
 WHERE current_obj# > 0
   AND sql_plan_operation LIKE '%TABLE%'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       current_obj#
),
sta1 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.121 */
       owner,
       table_name,
       MAX(last_analyzed) last_analyzed
  FROM dba_tab_statistics
 WHERE last_analyzed IS NOT NULL
   AND owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 GROUP BY
       owner,
       table_name
),
sta2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.121 */
       owner,
       table_name,
       last_analyzed
  FROM dba_tables
 WHERE last_analyzed IS NOT NULL
   AND owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
),
sta3 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.121 */
       table_owner owner,
       table_name,
       MAX(timestamp) last_date
  FROM dba_tab_modifications
 WHERE timestamp IS NOT NULL
   AND table_owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSS
YS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUG
INS','ORDSYS','OUTLN','OWBSYS')
   AND table_owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','T
RCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 GROUP BY
       table_owner,
       table_name
),
grp AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.121 */
       owner,
       object_name table_name,
       MAX(last_ddl_time) last_date
  FROM obj
 GROUP BY
       owner,
       object_name
 UNION
SELECT obj.owner,
       obj.object_name table_name,
       MAX(sample_date) last_date
  FROM ash, obj
 WHERE obj.object_id = ash.current_obj#
 GROUP BY
       obj.owner,
       obj.object_name
 UNION
SELECT owner,
       table_name,
       last_analyzed last_date
  FROM sta1
 UNION
SELECT owner,
       table_name,
       last_analyzed last_date
  FROM sta2
 UNION
SELECT owner,
       table_name,
       last_date
  FROM sta3
)
SELECT /*+  NO_MERGE  */ /* 2a.121 */
       MAX(last_date) last_date,
       owner,
       table_name
  FROM grp
 GROUP BY
       owner,
       table_name
HAVING MAX(last_date) < SYSDATE - 31
 ORDER BY
       1, 2, 3

11:40:57 2a.121
Elapsed Hours so far:    0.311
Elapsed Hours so far: .311

Elapsed: 00:00:00.00

11:40:57 2a "00163_edb360_323688_2a_121_tables_not_recently_used.html"
Elapsed Hours so far:    0.314

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:05 2a "Database Administration"
11:41:05 Indexes not recently used

WITH
objects AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.122 */
       object_id,
       owner,
       object_name
  FROM dba_objects
 WHERE object_type LIKE 'INDEX%'
   AND owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
),
/*
ash_mem AS (
SELECT /*+  MATERIALIZE NO_MERGE  * /
       DISTINCT current_obj#
  FROM gv$active_session_history
 WHERE sql_plan_operation = 'INDEX'
   AND current_obj# > 0
),
*/
ash_awr AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 2a.122 */
       DISTINCT current_obj#
  FROM dba_hist_active_sess_history h
 WHERE sql_plan_operation = 'INDEX'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND current_obj# > 0
),
/*
sql_mem AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  * /
       DISTINCT object_owner, object_name
  FROM gv$sql_plan
WHERE operation = 'INDEX'
),
*/
sql_awr AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 2a.122 */
       DISTINCT object_owner, object_name
  FROM dba_hist_sql_plan
 WHERE operation = 'INDEX' AND dbid = 2109323688
)
SELECT /*+  NO_MERGE  */ /* 2a.122 */
       i.table_owner,
       i.table_name,
       i.index_name
  FROM dba_indexes i
 WHERE (index_type LIKE 'NORMAL%' OR index_type = 'BITMAP'  OR index_type LIKE 'FUNCTION%')
   AND i.table_owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQO
SSYS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPL
UGINS','ORDSYS','OUTLN','OWBSYS')
   AND i.table_owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM',
'TRCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   --AND (i.owner, i.index_name) NOT IN ( SELECT o.owner, o.object_name FROM ash_mem a, objects o WH
ERE o.object_id = a.current_obj# )
   AND (i.owner, i.index_name) NOT IN ( SELECT o.owner, o.object_name FROM ash_awr a, objects o WHER
E o.object_id = a.current_obj# )
   --AND (i.owner, i.index_name) NOT IN ( SELECT object_owner, object_name FROM sql_mem)
   AND (i.owner, i.index_name) NOT IN ( SELECT object_owner, object_name FROM sql_awr)
 ORDER BY
       i.table_owner,
       i.table_name,
       i.index_name

11:41:05 2a.122
Elapsed Hours so far:    0.314
Elapsed Hours so far: .314

Elapsed: 00:00:00.00

11:41:05 2a "00164_edb360_323688_2a_122_indexes_not_recently_used.html"
Elapsed Hours so far:    0.316

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:12 2a "Database Administration"
11:41:12 Redundant Indexes(1)

WITH
indexed_columns AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.123 */
       col.index_owner,
       col.index_name,
       col.table_owner,
       col.table_name,
       idx.index_type,
       idx.uniqueness,
       MAX(CASE col.column_position WHEN 01 THEN      col.column_name END)||
       MAX(CASE col.column_position WHEN 02 THEN ':'||col.column_name END)||
       MAX(CASE col.column_position WHEN 03 THEN ':'||col.column_name END)||
       MAX(CASE col.column_position WHEN 04 THEN ':'||col.column_name END)||
       MAX(CASE col.column_position WHEN 05 THEN ':'||col.column_name END)||
       MAX(CASE col.column_position WHEN 06 THEN ':'||col.column_name END)||
       MAX(CASE col.column_position WHEN 07 THEN ':'||col.column_name END)||
       MAX(CASE col.column_position WHEN 08 THEN ':'||col.column_name END)||
       MAX(CASE col.column_position WHEN 09 THEN ':'||col.column_name END)||
       MAX(CASE col.column_position WHEN 10 THEN ':'||col.column_name END)||
       MAX(CASE col.column_position WHEN 11 THEN ':'||col.column_name END)||
       MAX(CASE col.column_position WHEN 12 THEN ':'||col.column_name END)||
       MAX(CASE col.column_position WHEN 13 THEN ':'||col.column_name END)||
       MAX(CASE col.column_position WHEN 14 THEN ':'||col.column_name END)||
       MAX(CASE col.column_position WHEN 15 THEN ':'||col.column_name END)||
       MAX(CASE col.column_position WHEN 16 THEN ':'||col.column_name END)
       indexed_columns
  FROM dba_ind_columns col,
       dba_indexes idx
 WHERE col.table_owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APP
QOSSYS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORD
PLUGINS','ORDSYS','OUTLN','OWBSYS')
   AND col.table_owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM
','TRCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND idx.owner = col.index_owner
   AND idx.index_name = col.index_name
 GROUP BY
       col.index_owner,
       col.index_name,
       col.table_owner,
       col.table_name,
       idx.index_type,
       idx.uniqueness
)
SELECT /*+  NO_MERGE  */ /* 2a.123 */
       r.table_owner,
       r.table_name,
       r.index_type,
       r.index_name||' ('||r.indexed_columns||')' redundant_index,
       i.index_name||' ('||i.indexed_columns||')' superset_index
  FROM indexed_columns r,
       indexed_columns i
 WHERE i.table_owner = r.table_owner
   AND i.table_name = r.table_name
   AND i.index_type = r.index_type
   AND i.index_name != r.index_name
   AND i.indexed_columns LIKE r.indexed_columns||':%'
   AND r.uniqueness = 'NONUNIQUE'
 ORDER BY
       r.table_owner,
       r.table_name,
       r.index_name,
       i.index_name

11:41:12 2a.123
Elapsed Hours so far:    0.316
Elapsed Hours so far: .316

Elapsed: 00:00:00.00

11:41:12 2a "00165_edb360_323688_2a_123_redundant_indexes1.html"
Elapsed Hours so far:    0.316

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:13 2a "Database Administration"
11:41:13 Redundant Indexes(2)

-- requested by David Kurtz
WITH f AS ( /*function expressions*/
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.124 */
       owner, table_name, extension, extension_name
FROM   dba_stat_extensions
where  creator = 'SYSTEM' /*exclude extended stats*/
), ic AS ( /*list indexed columns getting expressions from stat_extensions*/
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.124 */
       i.table_owner, i.table_name,
       i.owner index_owner, i.index_name,
       i.index_type, i.uniqueness, i.visibility,
       c.column_position,
       CASE WHEN f.extension IS NULL THEN c.column_name
            ELSE CAST(SUBSTR(REPLACE(SUBSTR(f.extension,2,LENGTH(f.extension)-2),'"',''),1,128) AS V
ARCHAR2(128))
       END column_name
  FROM dba_indexes i
     , dba_ind_columns c
       LEFT OUTER JOIN f
       ON f.owner = c.table_owner
       AND f.table_name = c.table_name
       AND f.extension_name = c.column_name
 WHERE c.table_owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQO
SSYS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPL
UGINS','ORDSYS','OUTLN','OWBSYS')
   AND c.table_owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM',
'TRCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND i.table_name = c.table_name
   AND i.owner = c.index_owner
   AND i.index_name = c.index_name
   AND i.index_type like '%NORMAL'
), i AS ( /*construct column list*/
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.124 */
       ic.table_owner, ic.table_name,
       ic.index_owner, ic.index_name,
       ic.index_type, ic.uniqueness, ic.visibility,
       listagg(ic.column_name,',') within group (order by ic.column_position) AS column_list,
       '('||listagg('"'||ic.column_name||'"',',') within group (order by ic.column_position)||')' AS
 extension,
       count(*) num_columns
FROM ic
GROUP BY
       ic.table_owner, ic.table_name,
       ic.index_owner, ic.index_name,
       ic.index_type, ic.uniqueness, ic.visibility
), e AS ( /*extended stats*/
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.124 */
       owner, table_name, CAST(SUBSTR(extension,1,128) AS VARCHAR2(128)) extension, extension_name
FROM   dba_stat_extensions
where  creator = 'USER' /*extended stats not function based indexes*/
)
SELECT r.table_owner, r.table_name,
       i.index_name||' ('||i.column_list||')' superset_index,
       r.index_name||' ('||r.column_list||')' redundant_index,
       c.constraint_type, c.constraint_name,
       r.index_type, r.visibility, e.extension_name
  FROM i r
       LEFT OUTER JOIN e
         ON  e.owner = r.table_owner
         AND e.table_name = r.table_name
         AND e.extension = r.extension
       LEFT OUTER JOIN dba_constraints c
         ON c.table_name = r.table_name
         AND c.index_owner = r.index_owner
         AND c.index_name = r.index_name
         AND c.owner = r.table_owner
         AND c.constraint_type IN('P','U')
     , i
 WHERE i.table_owner = r.table_owner
   AND i.table_name = r.table_name
   AND i.index_name != r.index_name
   AND i.column_list LIKE r.column_list||',%'
   AND i.num_columns > r.num_columns
 ORDER BY r.table_owner, r.table_name, r.index_name, i.index_name

11:41:13 2a.124
Elapsed Hours so far:    0.316
Elapsed Hours so far: .316

Elapsed: 00:00:00.00

11:41:13 2a "00166_edb360_323688_2a_124_redundant_indexes2.html"
Elapsed Hours so far:    0.317

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:16 2a "Database Administration"
11:41:16 Tables with more than 5 Indexes

SELECT /*+  NO_MERGE  */ /* 2a.125 */
       COUNT(*) indexes,
       table_owner,
       table_name,
       SUM(CASE WHEN index_type LIKE 'NORMAL%' THEN 1 ELSE 0 END) type_normal,
       SUM(CASE WHEN index_type LIKE 'BITMAP%' THEN 1 ELSE 0 END) type_bitmap,
       SUM(CASE WHEN index_type LIKE 'FUNCTION-BASED%' THEN 1 ELSE 0 END) type_fbi,
       SUM(CASE WHEN index_type LIKE 'CLUSTER%' THEN 1 ELSE 0 END) type_cluster,
       SUM(CASE WHEN index_type LIKE 'IOT%' THEN 1 ELSE 0 END) type_iot,
       SUM(CASE WHEN index_type LIKE 'DOMAIN%' THEN 1 ELSE 0 END) type_domain,
       SUM(CASE WHEN index_type LIKE 'LOB%' THEN 1 ELSE 0 END) type_lob,
       SUM(CASE WHEN partitioned LIKE 'YES%' THEN 1 ELSE 0 END) partitioned,
       SUM(CASE WHEN temporary LIKE 'Y%' THEN 1 ELSE 0 END) temporary,
       SUM(CASE WHEN uniqueness LIKE 'UNIQUE%' THEN 1 ELSE 0 END) is_unique,
       SUM(CASE WHEN uniqueness LIKE 'NONUNIQUE%' THEN 1 ELSE 0 END) non_unique,
       SUM(CASE WHEN status LIKE 'VALID%' THEN 1 ELSE 0 END) valid,
       SUM(CASE WHEN status LIKE 'N/A%' THEN 1 ELSE 0 END) status_na,
       SUM(CASE WHEN visibility LIKE 'VISIBLE%' THEN 1 ELSE 0 END) visible,
       SUM(CASE WHEN visibility LIKE 'INVISIBLE%' THEN 1 ELSE 0 END) invisible,
       SUM(CASE WHEN status LIKE 'UNUSABLE%' THEN 1 ELSE 0 END) unusable
  FROM dba_indexes
 WHERE table_owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSS
YS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUG
INS','ORDSYS','OUTLN','OWBSYS')
   AND table_owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','T
RCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 GROUP BY
       table_owner,
       table_name
HAVING COUNT(*) > 5
 ORDER BY
       1 DESC

11:41:16 2a.125
Elapsed Hours so far:    0.317
Elapsed Hours so far: .317

Elapsed: 00:00:00.00

11:41:17 2a "00167_edb360_323688_2a_125_tables_with_more_than_5_indexes.html"
Elapsed Hours so far:    0.317

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:17 2a "Database Administration"
11:41:17 Tables on KEEP Buffer Pool

SELECT /*+  NO_MERGE  */ /* 2a.126 */
       owner,
       table_name,
       num_rows,
       blocks
  FROM dba_tables
 WHERE owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND buffer_pool = 'KEEP'
 ORDER BY
       owner,
       table_name

11:41:17 2a.126
Elapsed Hours so far:    0.317
Elapsed Hours so far: .317

Elapsed: 00:00:00.00

11:41:17 2a "00168_edb360_323688_2a_126_tables_on_keep_buffer_pool.html"
Elapsed Hours so far:    0.318

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:20 2a "Database Administration"
11:41:20 Tables on RECYCLE Buffer Pool

SELECT /*+  NO_MERGE  */ /* 2a.127 */
       owner,
       table_name,
       num_rows,
       blocks
  FROM dba_tables
 WHERE owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND buffer_pool = 'RECYCLE'
 ORDER BY
       owner,
       table_name

11:41:20 2a.127
Elapsed Hours so far:    0.318
Elapsed Hours so far: .318

Elapsed: 00:00:00.01

11:41:20 2a "00169_edb360_323688_2a_127_tables_on_recycle_buffer_pool.html"
Elapsed Hours so far:    0.318

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:22 2a "Database Administration"
11:41:22 Tables to be CACHED in Buffer Cache

-- requested by Milton Quinteros
SELECT /*+  NO_MERGE  */ /* 2a.128 */
       owner,
       table_name,
       num_rows,
       blocks
  FROM dba_tables
 WHERE owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND TRIM(cache) = 'Y'
 ORDER BY
       owner,
       table_name

11:41:22 2a.128
Elapsed Hours so far:    0.318
Elapsed Hours so far: .318

Elapsed: 00:00:00.00

11:41:22 2a "00170_edb360_323688_2a_128_tables_to_be_cached_in_buffer_cache.html"
Elapsed Hours so far:    0.319

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:23 2a "Database Administration"
11:41:23 Tables on KEEP Flash Cache

SELECT /*+  NO_MERGE  */ /* 2a.129 */
       owner,
       table_name,
       num_rows,
       blocks
  FROM dba_tables
 WHERE owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND flash_cache = 'KEEP'
 ORDER BY
       owner,
       table_name

11:41:23 2a.129
Elapsed Hours so far:    0.319
Elapsed Hours so far: .319

Elapsed: 00:00:00.00

11:41:23 2a "00171_edb360_323688_2a_129_tables_on_keep_flash_cache.html"
Elapsed Hours so far:    0.319

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:25 2a "Database Administration"
11:41:25 Tables on KEEP Cell Flash Cache

SELECT /*+  NO_MERGE  */ /* 2a.130 */
       owner,
       table_name,
       num_rows,
       blocks
  FROM dba_tables
 WHERE owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND cell_flash_cache = 'KEEP'
 ORDER BY
       owner,
       table_name

11:41:25 2a.130
Elapsed Hours so far:    0.319
Elapsed Hours so far: .319

Elapsed: 00:00:00.00

11:41:25 2a "00172_edb360_323688_2a_130_tables_on_keep_cell_flash_cache.html"
Elapsed Hours so far:    0.320

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:27 2a "Database Administration"
11:41:27 Tables set for Compression

SELECT /*+  NO_MERGE  */ /* 2a.131 */
       owner,
       table_name,
       compress_for,
       num_rows,
       blocks
  FROM dba_tables
 WHERE owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND compression = 'ENABLED'
 ORDER BY
       owner,
       table_name

11:41:27 2a.131
Elapsed Hours so far:    0.320
Elapsed Hours so far: .32

Elapsed: 00:00:00.00

11:41:27 2a "00173_edb360_323688_2a_131_tables_set_for_compression.html"
Elapsed Hours so far:    0.321

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:32 2a "Database Administration"
11:41:32 Partitions set for Compression

SELECT /*+  NO_MERGE  */ /* 2a.132 */
       table_owner,
       table_name,
       compress_for,
       COUNT(*),
       MIN(partition_position) min_part_pos,
       MAX(partition_position) max_part_pos
  FROM dba_tab_partitions
 WHERE table_owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSS
YS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUG
INS','ORDSYS','OUTLN','OWBSYS')
   AND table_owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','T
RCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND compression = 'ENABLED'
 GROUP BY
       table_owner,
       table_name,
       compress_for
 ORDER BY
       table_owner,
       table_name,
       compress_for

11:41:32 2a.132
Elapsed Hours so far:    0.321
Elapsed Hours so far: .321

Elapsed: 00:00:00.00

11:41:32 2a "00174_edb360_323688_2a_132_partitions_set_for_compression.html"
Elapsed Hours so far:    0.321

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:32 2a "Database Administration"
11:41:32 Unindexed Partition Key Columns

with k as (
select 	k.*, 'Partition' part_level
from 	dba_part_key_columns k
union all
select 	k.*, 'Subpartition'
from 	dba_subpart_key_columns k
)
SELECT  /*+  NO_MERGE  */ /* 2a.133 */
	i.table_owner, i.table_name
, 	i.owner index_owner
, 	i.index_name
, 	i.index_type
,	'Partition' part_level
,	p.locality
,	p.partitioning_type
,	p.partition_count
, 	k.column_position part_column_position
,	k.column_name part_column_name
,	(	SELECT  LISTAGG(NVL(ie.extension,ic.column_name),',') WITHIN GROUP (ORDER BY ic.column_position)

		FROM	dba_ind_columns ic
			LEFT OUTER JOIN dba_stat_extensions ie
			ON ie.owner = ic.table_owner
			AND ie.table_name = ic.table_name
			AND ie.extension_name = ic.column_name
		where	i.owner = ic.index_owner
		and 	i.index_name = ic.index_name
		and	i.table_owner = ic.table_owner
		and	i.table_name = ic.table_name
	) column_list
from	dba_indexes i
,	dba_part_indexes p
,	k
where	i.table_owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOS
SYS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLU
GINS','ORDSYS','OUTLN','OWBSYS')
AND 	i.table_owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','T
RCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
and	i.index_type NOT IN('LOB')
AND     k.owner = i.owner
and	k.name = i.index_name
and 	k.object_type = 'INDEX'
and	i.partitioned = 'YES'
and	p.owner = i.owner
and	p.index_name = i.index_name
and	p.table_name = i.table_name
and not exists (
	select 'x'
	from 	dba_ind_columns ic
	where	i.owner = ic.index_owner
	and 	i.index_name = ic.index_name
	and	i.table_owner = ic.table_owner
	and	i.table_name = ic.table_name
	and	ic.column_name = k.column_name)
order by 1,2,3,4,5,6

11:41:32 2a.133
Elapsed Hours so far:    0.321
Elapsed Hours so far: .321

Elapsed: 00:00:00.00

11:41:32 2a "00175_edb360_323688_2a_133_unindexed_partition_key_columns.html"
Elapsed Hours so far:    0.321

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:33 2a "Database Administration"
11:41:33 Subpartitions set for Compression

SELECT /*+  NO_MERGE  */ /* 2a.134 */
       table_owner,
       table_name,
       compress_for,
       COUNT(*),
       MIN(subpartition_position) min_part_pos,
       MAX(subpartition_position) max_part_pos
  FROM dba_tab_subpartitions
 WHERE table_owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSS
YS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUG
INS','ORDSYS','OUTLN','OWBSYS')
   AND table_owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','T
RCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND compression = 'ENABLED'
 GROUP BY
       table_owner,
       table_name,
       compress_for
 ORDER BY
       table_owner,
       table_name,
       compress_for

11:41:33 2a.134
Elapsed Hours so far:    0.321
Elapsed Hours so far: .321

Elapsed: 00:00:00.00

11:41:33 2a "00176_edb360_323688_2a_134_subpartitions_set_for_compression.html"
Elapsed Hours so far:    0.321

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:33 2a "Database Administration"
11:41:33 Segments with non-default Buffer Pool

-- requested by Milton Quinteros
SELECT /*+  NO_MERGE  */ /* 2a.135 */
       buffer_pool, owner, segment_name, partition_name, segment_type, blocks
  FROM dba_segments
 WHERE 'Y' = 'Y'
   AND owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND TRIM(buffer_pool) != 'DEFAULT'
 ORDER BY
       buffer_pool,
       owner,
       segment_name,
       partition_name

11:41:33 2a.135
Elapsed Hours so far:    0.321
Elapsed Hours so far: .321

Elapsed: 00:00:00.00

11:41:33 2a "00177_edb360_323688_2a_135_segments_with_nondefault_buffer_pool.html"
Elapsed Hours so far:    0.321

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:33 2a "Database Administration"
11:41:33 Segments with non-default Flash Cache

-- requested by Milton Quinteros
SELECT /*+  NO_MERGE  */ /* 2a.136 */
       flash_cache, owner, segment_name, partition_name, segment_type, blocks
  FROM dba_segments
 WHERE 'Y' = 'Y'
   AND owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND TRIM(flash_cache) != 'DEFAULT'
 ORDER BY
       flash_cache,
       owner,
       segment_name,
       partition_name

11:41:33 2a.136
Elapsed Hours so far:    0.321
Elapsed Hours so far: .321

Elapsed: 00:00:00.01

11:41:33 2a "00178_edb360_323688_2a_136_segments_with_nondefault_flash_cache.html"
Elapsed Hours so far:    0.322

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:34 2a "Database Administration"
11:41:34 Segments with non-default Cell Flash Cache

-- requested by Milton Quinteros
SELECT /*+  NO_MERGE  */ /* 2a.137 */
       cell_flash_cache, owner, segment_name, partition_name, segment_type, blocks
  FROM dba_segments
 WHERE 'Y' = 'Y'
   AND owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND TRIM(cell_flash_cache) != 'DEFAULT'
 ORDER BY
       cell_flash_cache,
       owner,
       segment_name,
       partition_name

11:41:34 2a.137
Elapsed Hours so far:    0.322
Elapsed Hours so far: .322

Elapsed: 00:00:00.00

11:41:34 2a "00179_edb360_323688_2a_137_segments_with_nondefault_cell_flash_cache.html"
Elapsed Hours so far:    0.322

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:34 2a "Database Administration"
11:41:34 Degree of Parallelism DOP on Tables

SELECT /*+  NO_MERGE  */ /* 2a.138 */
       owner,
       SUM(CASE WHEN TRIM(degree) = 'DEFAULT' THEN 1 ELSE 0 END) "DEFAULT",
       SUM(CASE WHEN TRIM(degree) = '0' THEN 1 ELSE 0 END) "0",
       SUM(CASE WHEN TRIM(degree) = '1' THEN 1 ELSE 0 END) "1",
       SUM(CASE WHEN TRIM(degree) = '2' THEN 1 ELSE 0 END) "2",
       SUM(CASE WHEN TRIM(degree) IN ('3', '4') THEN 1 ELSE 0 END) "3-4",
       SUM(CASE WHEN TRIM(degree) IN ('5', '6', '7', '8') THEN 1 ELSE 0 END) "5-8",
       SUM(CASE WHEN TRIM(degree) IN ('9', '10', '11', '12', '13', '14', '15', '16') THEN 1 ELSE 0 E
ND) "9-16",
       SUM(CASE WHEN LENGTH(TRIM(degree)) = 2 AND TRIM(degree) BETWEEN '17' AND '32' THEN 1 ELSE 0 E
ND) "17-32",
       SUM(CASE WHEN LENGTH(TRIM(degree)) = 2 AND TRIM(degree) BETWEEN '33' AND '64' THEN 1 ELSE 0 E
ND) "33-64",
       SUM(CASE WHEN (LENGTH(TRIM(degree)) = 2 AND TRIM(degree) BETWEEN '65' AND '99') OR
                     (LENGTH(TRIM(degree)) = 3 AND TRIM(degree) BETWEEN '100' AND '128') THEN 1 ELSE
 0 END) "65-128",
       SUM(CASE WHEN LENGTH(TRIM(degree)) = 3 AND TRIM(degree) BETWEEN '129' AND '256' THEN 1 ELSE 0
 END) "129-256",
       SUM(CASE WHEN LENGTH(TRIM(degree)) = 3 AND TRIM(degree) BETWEEN '257' AND '512' THEN 1 ELSE 0
 END) "257-512",
       SUM(CASE WHEN (LENGTH(TRIM(degree)) = 3 AND TRIM(degree) > '512') OR
                     (LENGTH(TRIM(degree)) > 3 AND TRIM(degree) != 'DEFAULT') THEN 1 ELSE 0 END) "HI
GHER"
  FROM dba_tables
 WHERE owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
HAVING COUNT(*) > SUM(CASE WHEN TRIM(degree) IN ('0', '1') THEN 1 ELSE 0 END)
 GROUP BY
       owner
 ORDER BY
       owner

11:41:34 2a.138
Elapsed Hours so far:    0.322
Elapsed Hours so far: .322

Elapsed: 00:00:00.00

11:41:34 2a "00180_edb360_323688_2a_138_degree_of_parallelism_dop_on_tables.html"
Elapsed Hours so far:    0.322

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:35 2a "Database Administration"
11:41:35 Tables with DOP Set

SELECT /*+  NO_MERGE  */ /* 2a.139 */
       degree,
       owner,
       table_name,
       blocks,
       partitioned
  FROM dba_tables
 WHERE owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND TRIM(degree) NOT IN ('0', '1')
 ORDER BY
       LENGTH(TRIM(degree)) DESC,
       degree DESC,
       owner,
       table_name

11:41:35 2a.139
Elapsed Hours so far:    0.322
Elapsed Hours so far: .322

Elapsed: 00:00:00.00

11:41:35 2a "00181_edb360_323688_2a_139_tables_with_dop_set.html"
Elapsed Hours so far:    0.322

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:35 2a "Database Administration"
11:41:35 Degree of Parallelism DOP on Indexes

SELECT /*+  NO_MERGE  */ /* 2a.140 */
       owner,
       SUM(CASE WHEN TRIM(degree) = 'DEFAULT' THEN 1 ELSE 0 END) "DEFAULT",
       SUM(CASE WHEN TRIM(degree) = '0' THEN 1 ELSE 0 END) "0",
       SUM(CASE WHEN TRIM(degree) = '1' THEN 1 ELSE 0 END) "1",
       SUM(CASE WHEN TRIM(degree) = '2' THEN 1 ELSE 0 END) "2",
       SUM(CASE WHEN TRIM(degree) IN ('3', '4') THEN 1 ELSE 0 END) "3-4",
       SUM(CASE WHEN TRIM(degree) IN ('5', '6', '7', '8') THEN 1 ELSE 0 END) "5-8",
       SUM(CASE WHEN TRIM(degree) IN ('9', '10', '11', '12', '13', '14', '15', '16') THEN 1 ELSE 0 E
ND) "9-16",
       SUM(CASE WHEN LENGTH(TRIM(degree)) = 2 AND TRIM(degree) BETWEEN '17' AND '32' THEN 1 ELSE 0 E
ND) "17-32",
       SUM(CASE WHEN LENGTH(TRIM(degree)) = 2 AND TRIM(degree) BETWEEN '33' AND '64' THEN 1 ELSE 0 E
ND) "33-64",
       SUM(CASE WHEN (LENGTH(TRIM(degree)) = 2 AND TRIM(degree) BETWEEN '65' AND '99') OR
                     (LENGTH(TRIM(degree)) = 3 AND TRIM(degree) BETWEEN '100' AND '128') THEN 1 ELSE
 0 END) "65-128",
       SUM(CASE WHEN LENGTH(TRIM(degree)) = 3 AND TRIM(degree) BETWEEN '129' AND '256' THEN 1 ELSE 0
 END) "129-256",
       SUM(CASE WHEN LENGTH(TRIM(degree)) = 3 AND TRIM(degree) BETWEEN '257' AND '512' THEN 1 ELSE 0
 END) "257-512",
       SUM(CASE WHEN (LENGTH(TRIM(degree)) = 3 AND TRIM(degree) > '512') OR
                     (LENGTH(TRIM(degree)) > 3 AND TRIM(degree) != 'DEFAULT') THEN 1 ELSE 0 END) "HI
GHER"
  FROM dba_indexes
 WHERE owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND index_type != 'LOB'
 GROUP BY
       owner
HAVING COUNT(*) > SUM(CASE WHEN TRIM(degree) IN ('0', '1') THEN 1 ELSE 0 END)
 ORDER BY
       owner

11:41:35 2a.140
Elapsed Hours so far:    0.322
Elapsed Hours so far: .322

Elapsed: 00:00:00.00

11:41:35 2a "00182_edb360_323688_2a_140_degree_of_parallelism_dop_on_indexes.html"
Elapsed Hours so far:    0.322

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:36 2a "Database Administration"
11:41:36 Indexes with DOP Set

SELECT /*+  NO_MERGE  */ /* 2a.141 */
       degree,
       owner,
       index_name,
       leaf_blocks,
       partitioned
  FROM dba_indexes
 WHERE owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND index_type != 'LOB'
   AND TRIM(degree) NOT IN ('0', '1')
 ORDER BY
       LENGTH(TRIM(degree)) DESC,
       degree DESC,
       owner,
       index_name

11:41:36 2a.141
Elapsed Hours so far:    0.322
Elapsed Hours so far: .322

Elapsed: 00:00:00.00

11:41:36 2a "00183_edb360_323688_2a_141_indexes_with_dop_set.html"
Elapsed Hours so far:    0.322

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:36 2a "Database Administration"
11:41:36 Unused Columns

-- requested by Mike Moehlman
SELECT /*+  NO_MERGE  */ /* 2a.142 */
       *
  FROM dba_unused_col_tabs
 WHERE owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 ORDER BY
       1, 2

11:41:36 2a.142
Elapsed Hours so far:    0.322
Elapsed Hours so far: .322

Elapsed: 00:00:00.00

11:41:36 2a "00184_edb360_323688_2a_142_unused_columns.html"
Elapsed Hours so far:    0.322

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:37 2a "Database Administration"
11:41:37 Columns with multiple Data Types

WITH
tables AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.143 */
       t.owner,
       t.table_name
  FROM dba_tables t
 WHERE t.owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS',
'CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS'
,'ORDSYS','OUTLN','OWBSYS')
   AND t.owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCAN
LZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND t.table_name NOT LIKE 'BIN%'
),
columns AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.143 */
       c.owner,
       c.table_name,
       c.column_name,
       c.data_type
  FROM dba_tab_columns c
 WHERE c.owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS',
'CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS'
,'ORDSYS','OUTLN','OWBSYS')
   AND c.owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCAN
LZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND c.data_type != 'UNDEFINED'
   AND c.table_name NOT LIKE 'BIN%'
   AND c.data_type != 'UNDEFINED'
),
table_columns AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.143 */
       c.column_name, COUNT(*) typ_cnt, c.data_type,
       MIN(c.owner||'.'||c.table_name) min_table_name,
       MAX(c.owner||'.'||c.table_name) max_table_name
  FROM columns c,
       tables t
 WHERE t.owner = c.owner -- this to filter out views
   AND t.table_name = c.table_name -- this to filter out views
 GROUP BY
       c.column_name, c.data_type
),
more_than_one_type AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.143 */
       column_name, SUM(typ_cnt) col_cnt
  FROM table_columns
 GROUP BY
       column_name
HAVING COUNT(*) > 1
)
SELECT /*+  NO_MERGE  */ /* 2a.143 */
       m.col_cnt, c.*
  FROM table_columns c,
       more_than_one_type m
 WHERE m.column_name = c.column_name
 ORDER BY
       m.col_cnt DESC,
       c.column_name,
       c.typ_cnt DESC,
       c.data_type

11:41:37 2a.143
Elapsed Hours so far:    0.322
Elapsed Hours so far: .322

Elapsed: 00:00:00.00

11:41:37 2a "00185_edb360_323688_2a_143_columns_with_multiple_data_types.html"
Elapsed Hours so far:    0.323

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:38 2a "Database Administration"
11:41:38 Jobs

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 2a.144 */
       *
  FROM dba_jobs
 ORDER BY
       job

11:41:38 2a.144
Elapsed Hours so far:    0.323
Elapsed Hours so far: .323

Elapsed: 00:00:00.00

11:41:38 2a "00186_edb360_323688_2a_144_jobs.html"
Elapsed Hours so far:    0.323

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:38 2a "Database Administration"
11:41:38 Jobs Running

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 2a.145 */
       *
  FROM dba_jobs_running
 ORDER BY
       job

11:41:38 2a.145
Elapsed Hours so far:    0.323
Elapsed Hours so far: .323

Elapsed: 00:00:00.00

11:41:39 2a "00187_edb360_323688_2a_145_jobs_running.html"
Elapsed Hours so far:    0.323

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:39 2a "Database Administration"
11:41:39 Scheduler Jobs

SELECT /*+  NO_MERGE  */ /* 2a.146 */
       *
  FROM dba_scheduler_jobs
 ORDER BY
       owner,
       job_name

11:41:39 2a.146
Elapsed Hours so far:    0.323
Elapsed Hours so far: .323

Elapsed: 00:00:00.00

11:41:39 2a "00188_edb360_323688_2a_146_scheduler_jobs.html"
Elapsed Hours so far:    0.323

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:39 2a "Database Administration"
11:41:39 Scheduler Jobs PDBs

SELECT /*+  NO_MERGE  */ /* 2a.147 */
       *
  FROM cdb_scheduler_jobs
 ORDER BY
       con_id,
       owner,
       job_name

11:41:39 2a.147
Elapsed Hours so far:    0.323
Elapsed Hours so far: .323

Elapsed: 00:00:00.00

11:41:39 2a "00189_edb360_323688_2a_147_scheduler_jobs_pdbs.html"
Elapsed Hours so far:    0.323

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:39 2a "Database Administration"
11:41:39 Scheduler Job Log for past 7 days

SELECT /*+  NO_MERGE  */ /* 2a.148 */
       *
  FROM dba_scheduler_job_log
 WHERE log_date > SYSDATE - 7
 ORDER BY
       log_id DESC,
       log_date DESC

11:41:39 2a.148
Elapsed Hours so far:    0.323
Elapsed Hours so far: .323

Elapsed: 00:00:00.00

11:41:39 2a "00190_edb360_323688_2a_148_scheduler_job_log_for_past_7_days.html"
Elapsed Hours so far:    0.323

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:39 2a "Database Administration"
11:41:39 Scheduler Job Log for past 7 days PDBs

SELECT /*+  NO_MERGE  */ /* 2a.149 */
       *
  FROM cdb_scheduler_job_log
 WHERE log_date > SYSDATE - 7
 ORDER BY
       con_id,
       log_id DESC,
       log_date DESC

11:41:39 2a.149
Elapsed Hours so far:    0.323
Elapsed Hours so far: .323

Elapsed: 00:00:00.00

11:41:39 2a "00191_edb360_323688_2a_149_scheduler_job_log_for_past_7_days_pdbs.html"
Elapsed Hours so far:    0.323

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:39 2a "Database Administration"
11:41:39 Scheduler Windows

SELECT /*+  NO_MERGE  */ /* 2a.150 */
       *
  FROM dba_scheduler_windows
 ORDER BY
       window_name

11:41:39 2a.150
Elapsed Hours so far:    0.323
Elapsed Hours so far: .323

Elapsed: 00:00:00.00

11:41:39 2a "00192_edb360_323688_2a_150_scheduler_windows.html"
Elapsed Hours so far:    0.323

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:40 2a "Database Administration"
11:41:40 Scheduler Windows PDBs

SELECT /*+  NO_MERGE  */ /* 2a.151 */
       *
  FROM cdb_scheduler_windows
 ORDER BY
       con_id,
       window_name

11:41:40 2a.151
Elapsed Hours so far:    0.323
Elapsed Hours so far: .323

Elapsed: 00:00:00.00

11:41:40 2a "00193_edb360_323688_2a_151_scheduler_windows_pdbs.html"
Elapsed Hours so far:    0.323

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:40 2a "Database Administration"
11:41:40 Scheduler Window Group Members

SELECT /*+  NO_MERGE  */ /* 2a.152 */
       *
  FROM dba_scheduler_wingroup_members
 ORDER BY
       1,2

11:41:40 2a.152
Elapsed Hours so far:    0.323
Elapsed Hours so far: .323

Elapsed: 00:00:00.01

11:41:40 2a "00194_edb360_323688_2a_152_scheduler_window_group_members.html"
Elapsed Hours so far:    0.323

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:40 2a "Database Administration"
11:41:40 Scheduler Window Group Members PDBs

SELECT /*+  NO_MERGE  */ /* 2a.153 */
       *
  FROM cdb_scheduler_wingroup_members
 ORDER BY
       con_id, 1,2

11:41:40 2a.153
Elapsed Hours so far:    0.323
Elapsed Hours so far: .323

Elapsed: 00:00:00.00

11:41:40 2a "00195_edb360_323688_2a_153_scheduler_window_group_members_pdbs.html"
Elapsed Hours so far:    0.323

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:40 2a "Database Administration"
11:41:40 Advisor Parameters

SELECT /*+  NO_MERGE  */ /* 2a.154 */
       *
  FROM dba_advisor_parameters

11:41:40 2a.154
Elapsed Hours so far:    0.323
Elapsed Hours so far: .323

Elapsed: 00:00:00.00

11:41:40 2a "00196_edb360_323688_2a_154_advisor_parameters.html"
Elapsed Hours so far:    0.324

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:42 2a "Database Administration"
11:41:42 Advisor Execution Types

SELECT /*+  NO_MERGE  */ /* 2a.155 */
       *
  FROM dba_advisor_execution_types

11:41:42 2a.155
Elapsed Hours so far:    0.324
Elapsed Hours so far: .324

Elapsed: 00:00:00.00

11:41:42 2a "00197_edb360_323688_2a_155_advisor_execution_types.html"
Elapsed Hours so far:    0.324

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:42 2a "Database Administration"
11:41:42 Advisor Tasks

SELECT /*+  NO_MERGE  */ /* 2a.156 */
       *
  FROM dba_advisor_tasks

11:41:42 2a.156
Elapsed Hours so far:    0.324
Elapsed Hours so far: .324

Elapsed: 00:00:00.00

11:41:42 2a "00198_edb360_323688_2a_156_advisor_tasks.html"
Elapsed Hours so far:    0.325

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:45 2a "Database Administration"
11:41:45 Advisor Executions

SELECT /*+  NO_MERGE  */ /* 2a.157 */
       *
  FROM dba_advisor_executions

11:41:45 2a.157
Elapsed Hours so far:    0.325
Elapsed Hours so far: .325

Elapsed: 00:00:00.01

11:41:45 2a "00199_edb360_323688_2a_157_advisor_executions.html"
Elapsed Hours so far:    0.325

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:47 2a "Database Administration"
11:41:47 Automated Maintenance Tasks

SELECT /*+  NO_MERGE  */ /* 2a.158 */
       *
  FROM dba_autotask_client
 ORDER BY
       client_name

11:41:47 2a.158
Elapsed Hours so far:    0.325
Elapsed Hours so far: .325

Elapsed: 00:00:00.00

11:41:47 2a "00200_edb360_323688_2a_158_automated_maintenance_tasks.html"
Elapsed Hours so far:    0.326

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:48 2a "Database Administration"
11:41:48 Automated Maintenance Tasks PDBs

SELECT /*+  NO_MERGE  */ /* 2a.159 */
       *
  FROM cdb_autotask_client
 ORDER BY
       con_id,
       client_name

11:41:48 2a.159
Elapsed Hours so far:    0.326
Elapsed Hours so far: .326

Elapsed: 00:00:00.00

11:41:48 2a "00201_edb360_323688_2a_159_automated_maintenance_tasks_pdbs.html"
Elapsed Hours so far:    0.326

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:50 2a "Database Administration"
11:41:50 Automated Maintenance Task Tasks

SELECT /*+  NO_MERGE  */ /* 2a.160 */
       *
  FROM dba_autotask_task
 ORDER BY
       client_name

11:41:50 2a.160
Elapsed Hours so far:    0.326
Elapsed Hours so far: .326

Elapsed: 00:00:00.00

11:41:50 2a "00202_edb360_323688_2a_160_automated_maintenance_task_tasks.html"
Elapsed Hours so far:    0.326

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:51 2a "Database Administration"
11:41:51 Automated Maintenance Task Tasks PDBs

SELECT /*+  NO_MERGE  */ /* 2a.161 */
       *
  FROM cdb_autotask_task
 ORDER BY
       con_id,
       client_name

11:41:51 2a.161
Elapsed Hours so far:    0.326
Elapsed Hours so far: .326

Elapsed: 00:00:00.00

11:41:51 2a "00203_edb360_323688_2a_161_automated_maintenance_task_tasks_pdbs.html"
Elapsed Hours so far:    0.326

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:51 2a "Database Administration"
11:41:51 Automated Maintenance Tasks History

SELECT /*+  NO_MERGE  */ /* 2a.162 */
       *
  FROM dba_autotask_client_history
 ORDER BY
       window_start_time DESC

11:41:51 2a.162
Elapsed Hours so far:    0.326
Elapsed Hours so far: .326

Elapsed: 00:00:00.00

11:41:51 2a "00204_edb360_323688_2a_162_automated_maintenance_tasks_history.html"
Elapsed Hours so far:    0.326

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:51 2a "Database Administration"
11:41:51 Automated Maintenance Tasks History PDBs

SELECT /*+  NO_MERGE  */ /* 2a.163 */
       *
  FROM cdb_autotask_client_history
 ORDER BY
       con_id,
       window_start_time DESC

11:41:51 2a.163
Elapsed Hours so far:    0.326
Elapsed Hours so far: .326

Elapsed: 00:00:00.00

11:41:51 2a "00205_edb360_323688_2a_163_automated_maintenance_tasks_history_pdbs.html"
Elapsed Hours so far:    0.326

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:51 2a "Database Administration"
11:41:51 Auto Task Job History

SELECT /*+  NO_MERGE  */ /* 2a.164 */
       *
  FROM dba_autotask_job_history
 ORDER BY
       window_start_time DESC

11:41:51 2a.164
Elapsed Hours so far:    0.326
Elapsed Hours so far: .326

Elapsed: 00:00:00.00

11:41:51 2a "00206_edb360_323688_2a_164_auto_task_job_history.html"
Elapsed Hours so far:    0.327

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:51 2a "Database Administration"
11:41:51 Auto Task Job History PDBs

SELECT /*+  NO_MERGE  */ /* 2a.165 */
       *
  FROM cdb_autotask_job_history
 ORDER BY
       con_id,
       window_start_time DESC

11:41:51 2a.165
Elapsed Hours so far:    0.327
Elapsed Hours so far: .327

Elapsed: 00:00:00.00

11:41:52 2a "00207_edb360_323688_2a_165_auto_task_job_history_pdbs.html"
Elapsed Hours so far:    0.327

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:52 2a "Database Administration"
11:41:52 Current Blocking Activity

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 2a.166 */
a.sid, a.sql_id sql_id_a, a.state, a.blocking_session, b.sql_id sql_id_b, b.prev_sql_id,
a.blocking_session_status, a.seconds_in_wait
 FROM gv$session a, gv$session b
where a.blocking_session is not null
and a.blocking_session = b.sid

11:41:52 2a.166
Elapsed Hours so far:    0.327
Elapsed Hours so far: .327

Elapsed: 00:00:00.00

11:41:52 2a "00208_edb360_323688_2a_166_current_blocking_activity.html"
Elapsed Hours so far:    0.327

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:52 2a "Database Administration"
11:41:52 Sequences

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 2a.167 */
       s.*,
       ROUND(100 * (s.last_number - s.min_value) / GREATEST((s.max_value - s.min_value), 1), 1) perc
ent_used /* requested by Mike Moehlman */
from dba_sequences s
where
   s.sequence_owner not in ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOS
SYS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLU
GINS','ORDSYS','OUTLN','OWBSYS')
and s.sequence_owner not in ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM',
'TRCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
and s.max_value > 0
order by s.sequence_owner, s.sequence_name

11:41:52 2a.167
Elapsed Hours so far:    0.327
Elapsed Hours so far: .327

Elapsed: 00:00:00.00

11:41:52 2a "00209_edb360_323688_2a_167_sequences.html"
Elapsed Hours so far:    0.327

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:52 2a "Database Administration"
11:41:52 Sequences used over 20%

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 2a.168 */
       ROUND(100 * (s.last_number - s.min_value) / GREATEST((s.max_value - s.min_value), 1), 1) perc
ent_used, /* requested by Mike Moehlman */
       s.*
from dba_sequences s
where
   s.sequence_owner not in ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOS
SYS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLU
GINS','ORDSYS','OUTLN','OWBSYS')
and s.sequence_owner not in ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM',
'TRCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
and s.max_value > 0
and ROUND(100 * (s.last_number - s.min_value) / GREATEST((s.max_value - s.min_value), 1), 1) > 20
order by
ROUND(100 * (s.last_number - s.min_value) / GREATEST((s.max_value - s.min_value), 1), 1) DESC, /* re
quested by Mike Moehlman */
s.sequence_owner, s.sequence_name

11:41:52 2a.168
Elapsed Hours so far:    0.327
Elapsed Hours so far: .327

Elapsed: 00:00:00.00

11:41:52 2a "00210_edb360_323688_2a_168_sequences_used_over_20.html"
Elapsed Hours so far:    0.327

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:52 2a "Database Administration"
11:41:52 Sequences prone to contention

SELECT /*+  NO_MERGE  */ /* 2a.169 */
       (s.last_number - CASE WHEN s.increment_by > 0 THEN s.min_value ELSE s.max_value END) / s.incr
ement_by times_used, s.*
  FROM dba_sequences s
 WHERE s.sequence_owner not in ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','AP
PQOSSYS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','OR
DPLUGINS','ORDSYS','OUTLN','OWBSYS')
   AND s.sequence_owner not in ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTE
M','TRCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND (s.cache_size <= 1000 OR s.order_flag = 'Y')
   AND s.min_value != s.last_number
   AND s.max_value != s.last_number
   AND (s.last_number - CASE WHEN s.increment_by > 0 THEN s.min_value ELSE s.max_value END) / s.incr
ement_by >= 10000
 ORDER BY 1 DESC

11:41:52 2a.169
Elapsed Hours so far:    0.327
Elapsed Hours so far: .327

Elapsed: 00:00:00.00

11:41:52 2a "00211_edb360_323688_2a_169_sequences_prone_to_contention.html"
Elapsed Hours so far:    0.327

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:53 2a "Database Administration"
11:41:53 Tables with more than 255 Columns

SELECT /*+  NO_MERGE  */ /* 2a.170 */
       COUNT(*) columns,
       c.owner,
       c.table_name,
       t.avg_row_len
  FROM dba_tab_columns c,
       dba_tables t
 WHERE c.owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS',
'CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS'
,'ORDSYS','OUTLN','OWBSYS')
   AND c.owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCAN
LZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND c.table_name NOT LIKE 'BIN%'
   AND t.owner = c.owner
   AND t.table_name = c.table_name
   AND NOT EXISTS
       (SELECT NULL FROM dba_views v WHERE v.owner = c.owner AND v.view_name = c.table_name)
 GROUP BY
       c.owner, c.table_name, t.avg_row_len
HAVING COUNT(*) > 255
 ORDER BY
       1 DESC,
       c.owner,
       c.table_name

11:41:53 2a.170
Elapsed Hours so far:    0.327
Elapsed Hours so far: .327

Elapsed: 00:00:00.01

11:41:53 2a "00212_edb360_323688_2a_170_tables_with_more_than_255_columns.html"
Elapsed Hours so far:    0.327

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:54 2a "Database Administration"
11:41:54 SQL using Literals or many children (by COUNT)

WITH
lit AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.171 */
       force_matching_signature, COUNT(*) cnt, MIN(sql_id) min_sql_id, MAX(sql_id) max_sql_id
  FROM gv$sql
 WHERE force_matching_signature > 0
   AND UPPER(sql_text) NOT LIKE '%EDB360%'
 GROUP BY
       force_matching_signature
HAVING COUNT(*) > 99
)
SELECT /*+  NO_MERGE  */ /* 2a.171 */
       DISTINCT lit.cnt, s.force_matching_signature, s.parsing_schema_name owner,
       CASE WHEN o.object_name IS NOT NULL THEN o.object_name||'('||s.program_line#||')' END source,

       lit.min_sql_id,
       lit.max_sql_id,
       s.sql_text
  FROM lit, gv$sql s, dba_objects o
 WHERE s.force_matching_signature = lit.force_matching_signature
   AND s.sql_id = lit.min_sql_id
   AND o.object_id(+) = s.program_id
 ORDER BY
       1 DESC, 2

11:41:54 2a.171
Elapsed Hours so far:    0.327
Elapsed Hours so far: .327

Elapsed: 00:00:00.00

11:41:54 2a "00213_edb360_323688_2a_171_sql_using_literals_or_many_children_by_count.html"
Elapsed Hours so far:    0.328

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:41:58 2a "Database Administration"
11:41:58 SQL using Literals or many children (by OWNER)

WITH
lit AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.172 */
       force_matching_signature, COUNT(*) cnt, MIN(sql_id) min_sql_id, MAX(sql_id) max_sql_id
  FROM gv$sql
 WHERE force_matching_signature > 0
   AND UPPER(sql_text) NOT LIKE '%EDB360%'
 GROUP BY
       force_matching_signature
HAVING COUNT(*) > 99
)
SELECT /*+  NO_MERGE  */ /* 2a.172 */
       DISTINCT s.parsing_schema_name owner, lit.cnt, s.force_matching_signature,
       CASE WHEN o.object_name IS NOT NULL THEN o.object_name||'('||s.program_line#||')' END source,

       lit.min_sql_id,
       lit.max_sql_id,
       s.sql_text
  FROM lit, gv$sql s, dba_objects o
 WHERE s.force_matching_signature = lit.force_matching_signature
   AND s.sql_id = lit.min_sql_id
   AND o.object_id(+) = s.program_id
 ORDER BY
       1, 2 DESC, 3

11:41:58 2a.172
Elapsed Hours so far:    0.328
Elapsed Hours so far: .328

Elapsed: 00:00:00.00

11:41:58 2a "00214_edb360_323688_2a_172_sql_using_literals_or_many_children_by_owner.html"
Elapsed Hours so far:    0.330

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:42:03 2a "Database Administration"
11:42:03 SQL consuming over 10GB of TEMP space

SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 2a.173 */
       h.sql_id,
       ROUND(MAX(h.temp_space_allocated)/POWER(10,9),1) max_temp_space_gb,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM dba_hist_active_sess_history h,
       dba_hist_sqltext s
 WHERE h.temp_space_allocated > 10*POWER(10,9)
   AND h.sql_id IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = 2109323688
   AND s.con_id(+) = h.con_id
 GROUP BY
       h.sql_id,
       DBMS_LOB.SUBSTR(s.sql_text, 1000)
 ORDER BY
       2 DESC, 1

11:42:03 2a.173
Elapsed Hours so far:    0.330
Elapsed Hours so far: .33

Elapsed: 00:00:00.00

11:42:03 2a "00215_edb360_323688_2a_173_sql_consuming_over_10gb_of_temp_space.html"
Elapsed Hours so far:    0.332

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:42:10 2a "Database Administration"
11:42:10 SQL with over 2GB of PGA allocated memory

SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 2a.174 */
       h.sql_id,
       ROUND(MAX(h.pga_allocated)/POWER(2,30),1) max_pga_gb,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM dba_hist_active_sess_history h,
       dba_hist_sqltext s
 WHERE h.pga_allocated > 2*POWER(2,30)
   AND h.sql_id IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = 2109323688
   AND s.con_id(+) = h.con_id
 GROUP BY
       h.sql_id,
       DBMS_LOB.SUBSTR(s.sql_text, 1000)
 ORDER BY
       2 DESC, 1

11:42:10 2a.174
Elapsed Hours so far:    0.332
Elapsed Hours so far: .332

Elapsed: 00:00:00.01

11:42:10 2a "00216_edb360_323688_2a_174_sql_with_over_2gb_of_pga_allocated_memory.html"
Elapsed Hours so far:    0.334

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:42:17 2a "Database Administration"
11:42:17 Opened Cursors Current - Count per Session

-- from http://www.orafaq.com/node/758
select /*+  NO_MERGE  */ /* 2a.175 */
       to_number(a.value) opened_cursors_current, a.inst_id,
       s.sid, s.serial#, s.username, s.machine, s.program, s.module, s.action
from gv$sesstat a, gv$statname b, gv$session s
where a.statistic# = b.statistic#
  and a.inst_id = b.inst_id
  and s.sid=a.sid
  and s.inst_id = a.inst_id
  and b.name = 'opened cursors current'
  and to_number(a.value) < 1.844E+19 -- bug
  and to_number(a.value) > 0
order by 1 desc, 2, 3

11:42:17 2a.175
Elapsed Hours so far:    0.334
Elapsed Hours so far: .334

Elapsed: 00:00:00.00

11:42:17 2a "00217_edb360_323688_2a_175_opened_cursors_current_count_per_session.html"
Elapsed Hours so far:    0.334

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:42:20 2a "Database Administration"
11:42:20 Cached Cursors Count per Session

SELECT /*+  NO_MERGE  */ /* 2a.176 */
       COUNT(*) cached_cursors, inst_id, sid, user_name
  FROM gv$open_cursor
 GROUP BY
       inst_id, sid, user_name
 ORDER BY
       1 DESC

11:42:20 2a.176
Elapsed Hours so far:    0.334
Elapsed Hours so far: .334

Elapsed: 00:00:00.00

11:42:20 2a "00218_edb360_323688_2a_176_cached_cursors_count_per_session.html"
Elapsed Hours so far:    0.335

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:42:21 2a "Database Administration"
11:42:21 Cached Cursors Count per SQL_ID

SELECT /*+  NO_MERGE  */ /* 2a.177 */
       COUNT(*) cached_cursors, COUNT(DISTINCT inst_id||'.'||sid) sessions, sql_id, hash_value, sql_
text, cursor_type,
       MIN(user_name) min_user_name, MAX(user_name) max_user_name, MAX(last_sql_active_time) last_sq
l_active_time
  FROM gv$open_cursor
 GROUP BY
       sql_id, hash_value, sql_text, cursor_type
HAVING COUNT(*) >= 50
   AND COUNT(*) > COUNT(DISTINCT inst_id||'.'||sid)
 ORDER BY
       1 DESC

11:42:21 2a.177
Elapsed Hours so far:    0.335
Elapsed Hours so far: .335

Elapsed: 00:00:00.00

11:42:21 2a "00219_edb360_323688_2a_177_cached_cursors_count_per_sqlid.html"
Elapsed Hours so far:    0.335

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:42:21 2a "Database Administration"
11:42:21 Cached Cursors List per Session

SELECT /*+  NO_MERGE  */ /* 2a.178 */
       *
  FROM gv$open_cursor
 ORDER BY
       inst_id, sid, sql_id
       , sql_exec_id

11:42:21 2a.178
Elapsed Hours so far:    0.335
Elapsed Hours so far: .335

Elapsed: 00:00:00.00

11:42:21 2a "00220_edb360_323688_2a_178_cached_cursors_list_per_session.html"
Elapsed Hours so far:    0.335

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:42:23 2a "Database Administration"
11:42:23 Session Cursor Cache Misses per Session

WITH
session_cache AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.179 */
       p.value - c.value session_cache_misses,
       c.value session_cache_hits,
       p.value total_parse_count,
       c.inst_id,
       c.sid
  FROM gv$sesstat c,
       gv$statname n1,
       gv$sesstat p,
       gv$statname n2
 WHERE n1.inst_id = c.inst_id
   AND n1.statistic# = c.statistic#
   AND n1.name = 'session cursor cache hits'
   AND n2.inst_id = p.inst_id
   AND n2.statistic# = p.statistic#
   AND n2.name = 'parse count (total)'
   AND p.inst_id = c.inst_id
   AND p.sid = c.sid
)
SELECT /*+  NO_MERGE  */ /* 2a.179 */
       c.session_cache_misses,
       c.session_cache_hits,
       c.total_parse_count,
       c.inst_id,
       c.sid,
       s.serial#,
       s.username,
       s.machine,
       s.program,
       s.module,
       s.action
  FROM session_cache c,
       gv$session s
 WHERE c.session_cache_misses > 0
   AND s.inst_id = c.inst_id
   AND s.sid = c.sid
 ORDER BY
       c.session_cache_misses DESC,
       c.session_cache_hits, c.total_parse_count

11:42:23 2a.179
Elapsed Hours so far:    0.335
Elapsed Hours so far: .335

Elapsed: 00:00:00.00

11:42:23 2a "00221_edb360_323688_2a_179_session_cursor_cache_misses_per_session.html"
Elapsed Hours so far:    0.336

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:42:27 2a "Database Administration"
11:42:27 High Cursor Count

SELECT /*+  NO_MERGE  */ /* 2a.180 */
       v1.sql_id,
       COUNT(*) child_cursors,
       MIN(inst_id) min_inst_id,
       MAX(inst_id) max_inst_id,
       MIN(child_number) min_child,
       MAX(child_number) max_child,
       v1.sql_text
  FROM gv$sql v1
 GROUP BY
       v1.sql_id,
       v1.sql_text
HAVING COUNT(*) > 99
 ORDER BY
       child_cursors DESC,
       v1.sql_id

11:42:27 2a.180
Elapsed Hours so far:    0.336
Elapsed Hours so far: .336

Elapsed: 00:00:00.00

11:42:27 2a "00222_edb360_323688_2a_180_high_cursor_count.html"
Elapsed Hours so far:    0.337

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:42:28 2a "Database Administration"
11:42:28 SQL with 100 or more unshared child cursors

WITH
not_shared AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.181 */
       sql_id, COUNT(*) child_cursors,
       RANK() OVER (ORDER BY COUNT(*) DESC NULLS LAST) AS sql_rank
  FROM gv$sql_shared_cursor
 GROUP BY
       sql_id
HAVING COUNT(*) > 99
)
SELECT /*+  NO_MERGE  */ /* 2a.181 */
       DISTINCT
       ns.sql_rank,
       ns.child_cursors,
       ns.sql_id,
       s.sql_text
  FROM not_shared ns,
       gv$sql s
 WHERE s.sql_id(+) = ns.sql_id
 ORDER BY
       ns.sql_rank,
       ns.child_cursors DESC,
       ns.sql_id

11:42:28 2a.181
Elapsed Hours so far:    0.337
Elapsed Hours so far: .337

Elapsed: 00:00:00.00

11:42:28 2a "00223_edb360_323688_2a_181_sql_with_100_or_more_unshared_child_cursors.html"
Elapsed Hours so far:    0.337

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:42:30 2a "Database Administration"
11:42:30 Top SQL by Buffer Gets consolidating duplicates

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 2a.182 */
   FORCE_MATCHING_SIGNATURE,
   duplicate_count cnt,
   min_sql_id,
   max_sql_id,
   distinct_phv phv_cnt,
   executions,
   buffer_gets,
   buffer_gets_per_exec,
   disk_reads,
   disk_reads_per_exec,
   rows_processed,
   rows_processed_per_exec,
   elapsed_seconds,
   elapsed_seconds_per_exec,
   pct_total_buffer_gets,
   pct_total_disk_reads,
   min_sql_text
from
  (select
      FORCE_MATCHING_SIGNATURE,
      count(*) duplicate_count,
      min(sql_id) min_sql_id,
      max(sql_id) max_sql_id,
      count(distinct plan_hash_value) distinct_phv,
      sum(executions) executions,
      sum(buffer_gets) buffer_gets,
      ROUND(sum(buffer_gets)/greatest(sum(executions),1)) buffer_gets_per_exec,
      sum(disk_reads) disk_reads,
      ROUND(sum(disk_reads)/greatest(sum(executions),1)) disk_reads_per_exec,
      sum(rows_processed) rows_processed,
      ROUND(sum(rows_processed)/greatest(sum(executions),1)) rows_processed_per_exec,
      round(sum(elapsed_time)/1000000, 3) elapsed_seconds,
      ROUND(sum(elapsed_time)/1000000/greatest(sum(executions),1), 3) elapsed_seconds_per_exec,
      ROUND(sum(buffer_gets)*100/         20276118614, 1) pct_total_buffer_gets,
      ROUND(sum(disk_reads)*100/           123439198, 1) pct_total_disk_reads,
      MIN(sql_text) min_sql_text,
      rank() over (order by sum(buffer_gets) desc nulls last) AS sql_rank
   from
      gv$sql
   where
      FORCE_MATCHING_SIGNATURE <> 0 and
      FORCE_MATCHING_SIGNATURE <> EXACT_MATCHING_SIGNATURE
   group by
      FORCE_MATCHING_SIGNATURE
   having
      count(*) >= 30
   order by
      buffer_gets desc
  ) v1
where
   sql_rank < 101

11:42:30 2a.182
Elapsed Hours so far:    0.337
Elapsed Hours so far: .337

Elapsed: 00:00:00.00

11:42:30 2a "00224_edb360_323688_2a_182_top_sql_by_buffer_gets_consolidating_duplicates.html"
Elapsed Hours so far:    0.338

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:42:31 2a "Database Administration"
11:42:31 Top SQL by number of duplicates

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 2a.183 */
   FORCE_MATCHING_SIGNATURE,
   duplicate_count,
   min_sql_id,
   max_sql_id,
   executions,
   buffer_gets,
   buffer_gets_per_exec,
   disk_reads,
   disk_reads_per_exec,
   rows_processed,
   rows_processed_per_exec,
   elapsed_seconds,
   elapsed_seconds_per_exec,
   pct_total_buffer_gets,
   pct_total_disk_reads,
   min_sql_text
from
  (select
      FORCE_MATCHING_SIGNATURE,
      count(*) duplicate_count,
      min(sql_id) min_sql_id,
      max(sql_id) max_sql_id,
      sum(executions) executions,
      sum(buffer_gets) buffer_gets,
      ROUND(sum(buffer_gets)/greatest(sum(executions),1)) buffer_gets_per_exec,
      sum(disk_reads) disk_reads,
      ROUND(sum(disk_reads)/greatest(sum(executions),1)) disk_reads_per_exec,
      sum(rows_processed) rows_processed,
      ROUND(sum(rows_processed)/greatest(sum(executions),1)) rows_processed_per_exec,
      round(sum(elapsed_time)/1000000, 3) elapsed_seconds,
      ROUND(sum(elapsed_time)/1000000/greatest(sum(executions),1), 3) elapsed_seconds_per_exec,
      ROUND(sum(buffer_gets)*100/         20276118710, 1) pct_total_buffer_gets,
      ROUND(sum(disk_reads)*100/           123439198, 1) pct_total_disk_reads,
      MIN(sql_text) min_sql_text,
      rank() over (order by count(*) desc nulls last) AS sql_rank
   from
      gv$sql
   where
      FORCE_MATCHING_SIGNATURE <> 0 and
      FORCE_MATCHING_SIGNATURE <> EXACT_MATCHING_SIGNATURE
   group by
      FORCE_MATCHING_SIGNATURE
   order by
      count(*) desc
  ) v1
where
   sql_rank < 101

11:42:31 2a.183
Elapsed Hours so far:    0.338
Elapsed Hours so far: .338

Elapsed: 00:00:00.00

11:42:31 2a "00225_edb360_323688_2a_183_top_sql_by_number_of_duplicates.html"
Elapsed Hours so far:    0.338

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:42:32 2a "Database Administration"
11:42:32 Libraries calling DBMS_STATS

WITH
lines_with_api AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.184 */ *
  FROM dba_source
 WHERE 'Y' = 'Y'
   AND REPLACE(UPPER(text), ' ') LIKE '%DBMS_STATS.%'
   AND UPPER(text) NOT LIKE '%--%DBMS_STATS%'
   AND owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
),
include_nearby_lines AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2a.184 */ DISTINCT s.*
  FROM lines_with_api l,
       dba_source s
 WHERE 'Y' = 'Y'
   AND s.owner = l.owner
   AND s.name = l.name
   AND s.type = l.type
   AND s.line BETWEEN l.line - 8 AND l.line + 8
)
SELECT a.owner,
       a.name,
       a.type,
       a.line,
       CASE WHEN REPLACE(UPPER(a.text), ' ') LIKE '%DBMS_STATS.%' AND UPPER(a.text) NOT LIKE '%--%DB
MS_STATS%' THEN '*' END dbms_stats,
       REPLACE(a.text, '  ', '..') text
  FROM include_nearby_lines a
 ORDER BY 1, 2, 3, 4

11:42:32 2a.184
Elapsed Hours so far:    0.338
Elapsed Hours so far: .338

Elapsed: 00:00:00.00

11:42:32 2a "00226_edb360_323688_2a_184_libraries_calling_dbmsstats.html"
Elapsed Hours so far:    0.340

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:42:39 2a "Database Administration"
11:42:39 Libraries doing ALTER SESSION

SELECT *
  FROM dba_source
 WHERE 'Y' = 'Y'
   AND UPPER(text) LIKE '%ALTER%SESSION%'
   AND UPPER(text) NOT LIKE '%--%ALTER%SESSION%'
   AND owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 ORDER BY
       owner, name, type, line

11:42:39 2a.185
Elapsed Hours so far:    0.340
Elapsed Hours so far: .34

Elapsed: 00:00:00.00

11:42:39 2a "00227_edb360_323688_2a_185_libraries_doing_alter_session.html"
Elapsed Hours so far:    0.340

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:42:42 2a "Database Administration"
11:42:42 Workload Repository Control

SELECT /*+  NO_MERGE  */ /* 2a.186 */
       *
  FROM dba_hist_wr_control

11:42:42 2a.186
Elapsed Hours so far:    0.340
Elapsed Hours so far: .34

Elapsed: 00:00:00.00

11:42:42 2a "00228_edb360_323688_2a_186_workload_repository_control.html"
Elapsed Hours so far:    0.340

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:42:42 2a "Database Administration"
11:42:42 ASH Info

SELECT /*+  NO_MERGE  */ /* 2a.187 */
       *
  FROM v$ash_info

11:42:42 2a.187
Elapsed Hours so far:    0.340
Elapsed Hours so far: .34

Elapsed: 00:00:00.00

11:42:42 2a "00229_edb360_323688_2a_187_ash_info.html"
Elapsed Hours so far:    0.341

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:42:42 2a "Database Administration"
11:42:42 ASH Retention

-- from http://jhdba.wordpress.com/tag/purge-wrh-tables/
SELECT /*+  NO_MERGE  */ /* 2a.188 */
 sysdate - a.sample_time ash,
sysdate - s.begin_interval_time snap,
c.RETENTION
from sys.wrm$_wr_control c,
(
select db.dbid,
min(w.sample_time) sample_time
from sys.v_$database db,
sys.Wrh$_active_session_history w
where w.dbid = db.dbid group by db.dbid
) a,
(
select db.dbid,
min(r.begin_interval_time) begin_interval_time
from sys.v_$database db,
sys.wrm$_snapshot r
where r.dbid = db.dbid
group by db.dbid
) s
where a.dbid = s.dbid
and c.dbid = a.dbid

11:42:42 2a.188
Elapsed Hours so far:    0.341
Elapsed Hours so far: .341

Elapsed: 00:00:00.00

11:42:42 2a "00230_edb360_323688_2a_188_ash_retention_.html"
Elapsed Hours so far:    0.341

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:42:42 2a "Database Administration"
11:42:42 WRH$ Partitions

-- from http://jhdba.wordpress.com/tag/purge-wrh-tables/
select table_name, count(*)
from dba_tab_partitions
where table_name like 'WRH$%'
and table_owner = 'SYS'
group by table_name
order by 1

11:42:42 2a.189
Elapsed Hours so far:    0.341
Elapsed Hours so far: .341

Elapsed: 00:00:00.01

11:42:42 2a "00231_edb360_323688_2a_189_wrh_partitions_.html"
Elapsed Hours so far:    0.341

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:42:42 2a "Database Administration"
11:42:42 Segments with Next Extent at Risk

-- requested by Milton Quinteros
with
max_free AS (
select /*+  MATERIALIZE NO_MERGE  */ /* 2a.190 */
tablespace_name, max(bytes) bytes
from dba_free_space
group by tablespace_name )
select /*+  NO_MERGE  */ /* 2a.190 */
s.owner, s.segment_name, s.partition_name, s.tablespace_name, s.next_extent, max_free.bytes max_free
_bytes
from dba_segments s, max_free
where 'Y' = 'Y'
and s.owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','CT
XSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','O
RDSYS','OUTLN','OWBSYS')
and s.owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZR
','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
and s.next_extent > max_free.bytes
and s.tablespace_name=max_free.tablespace_name
order by 1,2

11:42:42 2a.190
Elapsed Hours so far:    0.341
Elapsed Hours so far: .341

Elapsed: 00:00:00.00

11:42:42 2a "00232_edb360_323688_2a_190_segments_with_next_extent_at_risk.html"
Elapsed Hours so far:    0.345

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:42:59 2a "Database Administration"
11:42:59 Libraries Version

SELECT /*+  NO_MERGE  */ /* 2a.191 */
       *
  FROM dba_source
 WHERE 'Y' = 'Y'
   AND line < 21
   AND text LIKE '%$Header%'
 ORDER BY
       1, 2, 3, 4

11:42:59 2a.191
Elapsed Hours so far:    0.345
Elapsed Hours so far: .345

Elapsed: 00:00:00.00

11:42:59 2a "00233_edb360_323688_2a_191_libraries_version.html"
Elapsed Hours so far:    0.345

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:00 2a "Database Administration"
11:43:00 Orphaned Synonyms

-- provided by Simon Pane
SELECT /*+  NO_MERGE  */ /* 2a.192 */
       s.owner, s.table_owner, COUNT(1)
  FROM dba_synonyms s
 WHERE NOT EXISTS
       (select NULL
          from dba_objects o
         where o.object_name = s.table_name
           and o.owner = s.table_owner)
   AND s.db_link IS NULL
   AND s.owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS',
'CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS'
,'ORDSYS','OUTLN','OWBSYS')
   AND s.owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCAN
LZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND s.table_owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQO
SSYS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPL
UGINS','ORDSYS','OUTLN','OWBSYS')
   AND s.table_owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM',
'TRCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 GROUP BY s.owner, s.table_owner
 ORDER BY s.owner

11:43:00 2a.192
Elapsed Hours so far:    0.345
Elapsed Hours so far: .345

Elapsed: 00:00:00.00

11:43:00 2a "00234_edb360_323688_2a_192_orphaned_synonyms.html"
Elapsed Hours so far:    0.346

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:00 2a "Database Administration"
11:43:00 Last DDL by date

SELECT /*+  NO_MERGE  */ /* 2a.193 */
       owner, TO_CHAR(TRUNC(last_ddl_time), 'YYYY-MM-DD') last_ddl_time, COUNT(*) objects
  FROM dba_objects
 WHERE last_ddl_time >= TRUNC(SYSDATE) - 30
   AND owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 GROUP BY  owner, TRUNC(last_ddl_time)
 ORDER BY
       2 DESC

11:43:00 2a.193
Elapsed Hours so far:    0.346
Elapsed Hours so far: .346

Elapsed: 00:00:00.00

11:43:00 2a "00235_edb360_323688_2a_193_last_ddl_by_date.html"
Elapsed Hours so far:    0.346

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:00 2a "Database Administration"
11:43:00 Last DDL by pdb and date

SELECT /*+  NO_MERGE  */ /* 2a.194 */
       con_id, owner, TO_CHAR(TRUNC(last_ddl_time), 'YYYY-MM-DD') last_ddl_time, COUNT(*) objects
  FROM cdb_objects
 WHERE last_ddl_time >= TRUNC(SYSDATE) - 30
   AND owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 GROUP BY con_id, owner, TRUNC(last_ddl_time)
 ORDER BY
       1, 3 DESC

11:43:00 2a.194
Elapsed Hours so far:    0.346
Elapsed Hours so far: .346

Elapsed: 00:00:00.01

11:43:00 2a "00236_edb360_323688_2a_194_last_ddl_by_pdb_and_date.html"
Elapsed Hours so far:    0.346

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:01 2b "Storage"
11:43:01 Tablespace Usage Metrics

SELECT /*+  NO_MERGE  */ /* 2b.195 */
       SUBSTR(c.pdb_name, 1, 30) pdb_name,
       m.tablespace_name,
       m.used_space,
       m.tablespace_size,
       ROUND(m.used_percent, 1) used_percent,
       ROUND(m.used_space * p.block_size / POWER(2,30), 3) used_space_gb,
       ROUND(m.tablespace_size * p.block_size / POWER(2,30), 3) tablespace_size_gb
  FROM cdb_tablespace_usage_metrics m,
       cdb_pdbs c,
       cdb_tablespaces p
 WHERE c.con_id = m.con_id
   AND p.con_id = m.con_id
   AND p.tablespace_name = m.tablespace_name
 ORDER BY
       c.pdb_name,
       m.tablespace_name

11:43:01 2b.195
Elapsed Hours so far:    0.346
Elapsed Hours so far: .346

Elapsed: 00:00:00.00

11:43:01 2b "00237_edb360_323688_2b_195_tablespace_usage_metrics.html"
Elapsed Hours so far:    0.346

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:02 2b "Storage"
11:43:02 Tablespace

SELECT /*+  NO_MERGE  */ /* 2b.196 */
       *
  FROM v$tablespace
 ORDER BY
       ts#

11:43:02 2b.196
Elapsed Hours so far:    0.346
Elapsed Hours so far: .346

Elapsed: 00:00:00.00

11:43:02 2b "00238_edb360_323688_2b_196_tablespace.html"
Elapsed Hours so far:    0.346

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:02 2b "Storage"
11:43:02 Tablespaces

SELECT /*+  NO_MERGE  */ /* 2b.197 */
       *
  FROM dba_tablespaces
 ORDER BY
       tablespace_name

11:43:02 2b.197
Elapsed Hours so far:    0.346
Elapsed Hours so far: .346

Elapsed: 00:00:00.00

11:43:02 2b "00239_edb360_323688_2b_197_tablespaces.html"
Elapsed Hours so far:    0.346

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:02 2b "Storage"
11:43:02 Tablespace Groups

SELECT /*+  NO_MERGE  */ /* 2b.198 */
       *
  FROM dba_tablespace_groups
 ORDER BY
       group_name

11:43:02 2b.198
Elapsed Hours so far:    0.346
Elapsed Hours so far: .346

Elapsed: 00:00:00.00

11:43:02 2b "00240_edb360_323688_2b_198_tablespace_groups.html"
Elapsed Hours so far:    0.346

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:02 2b "Storage"
11:43:02 Default Tablespace Use

SELECT /*+  NO_MERGE  */ /* 2b.199 */
       default_tablespace, COUNT(*)
  FROM dba_users
 GROUP BY
       default_tablespace
 ORDER BY
       default_tablespace

11:43:02 2b.199
Elapsed Hours so far:    0.346
Elapsed Hours so far: .346

Elapsed: 00:00:00.00

11:43:02 2b "00241_edb360_323688_2b_199_default_tablespace_use.html"
Elapsed Hours so far:    0.346

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:02 2b "Storage"
11:43:02 Temporary Tablespace Use

SELECT /*+  NO_MERGE  */ /* 2b.200 */
       temporary_tablespace, COUNT(*)
  FROM dba_users
 GROUP BY
       temporary_tablespace
 ORDER BY
       temporary_tablespace

11:43:02 2b.200
Elapsed Hours so far:    0.346
Elapsed Hours so far: .346

Elapsed: 00:00:00.00

11:43:03 2b "00242_edb360_323688_2b_200_temporary_tablespace_use.html"
Elapsed Hours so far:    0.346

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:03 2b "Storage"
11:43:03 UNDO Stat

SELECT /*+  NO_MERGE  */ /* 2b.201 */
       *
  FROM gv$undostat

11:43:03 2b.201
Elapsed Hours so far:    0.346
Elapsed Hours so far: .346

Elapsed: 00:00:00.00

11:43:03 2b "00243_edb360_323688_2b_201_undo_stat.html"
Elapsed Hours so far:    0.346

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:03 2b "Storage"
11:43:03 Tablespace Usage

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
-- fixed by Rodigo Righetti
WITH
files AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2b.202 */
       tablespace_name,
       SUM(DECODE(autoextensible, 'YES', maxbytes, bytes)) / POWER(10,9) Max_size_gb,
       SUM( bytes) / POWER(10,9) Size_gb
  FROM dba_data_files
 GROUP BY
       tablespace_name
),
segments AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2b.202 */
       tablespace_name,
       SUM(bytes) / POWER(10,9) used_gb
  FROM dba_segments
 WHERE 'Y' = 'Y'
 GROUP BY
       tablespace_name
),
tablespaces AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2b.202 */
       files.tablespace_name,
       ROUND(files.size_gb, 1) size_gb,
       ROUND(segments.used_gb, 1) used_gb,
       ROUND(100 * segments.used_gb / files.size_gb, 1) pct_used,
       ROUND(files.max_size_gb, 1) max_size_gb
  FROM files,
       segments
 WHERE files.size_gb > 0
   AND files.tablespace_name = segments.tablespace_name(+)
 ORDER BY
       files.tablespace_name
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2b.202 */
       'Total' tablespace_name,
       SUM(size_gb) size_gb,
       SUM(used_gb) used_gb,
       ROUND(100 * SUM(used_gb) / SUM(size_gb), 1) pct_used,
       sum(max_size_gb) max_size_gb
  FROM tablespaces
)
SELECT tablespace_name,
       size_gb,
       used_gb,
       pct_used,
       max_size_gb
  FROM tablespaces
 UNION ALL
SELECT tablespace_name,
       size_gb,
       used_gb,
       pct_used,
       max_size_gb
  FROM total

11:43:03 2b.202
Elapsed Hours so far:    0.346
Elapsed Hours so far: .346

Elapsed: 00:00:00.00

11:43:03 2b "00244_edb360_323688_2b_202_tablespace_usage.html"
Elapsed Hours so far:    0.347

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:05 2b "Storage"
11:43:05 Temp Tablespace Usage

-- requested by Rodrigo Righetti
SELECT /*+  NO_MERGE  */ /* 2b.203 */
a.tablespace_name, round(A.AVAIL_SIZE_GB,1) AVAIL_SIZE_GB,
round(B.TOT_GBBYTES_CACHED,1) TOT_GBBYTES_CACHED ,
round(B.TOT_GBBYTES_USED,1) TOT_GBBYTES_USED,
ROUND(100*(B.TOT_GBBYTES_CACHED/A.AVAIL_SIZE_GB),1) PERC_CACHED,
ROUND(100*(B.TOT_GBBYTES_USED/A.AVAIL_SIZE_GB),1) PERC_USED
FROM
(select  tablespace_name,sum(bytes)/POWER(10,9) AVAIL_SIZE_GB
from dba_temp_files
group by tablespace_name) A,
(SELECT tablespace_name,
SUM(BYTES_CACHED)/POWER(10,9) TOT_GBBYTES_CACHED,
SUM(BYTES_USED)/POWER(10,9) TOT_GBBYTES_USED
FROM gv$temp_extent_pool
GROUP BY  TABLESPACE_NAME) B
where a.tablespace_name=b.tablespace_name

11:43:05 2b.203
Elapsed Hours so far:    0.347
Elapsed Hours so far: .347

Elapsed: 00:00:00.00

11:43:05 2b "00245_edb360_323688_2b_203_temp_tablespace_usage.html"
Elapsed Hours so far:    0.347

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:05 2b "Storage"
11:43:05 Tablespace Quotas

-- by berx
select /*+  NO_MERGE  */ /* 2b.204 */ * from dba_ts_quotas
WHERE username NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS',
'CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS'
,'ORDSYS','OUTLN','OWBSYS')
and username not in ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')

11:43:05 2b.204
Elapsed Hours so far:    0.347
Elapsed Hours so far: .347

Elapsed: 00:00:00.00

11:43:05 2b "00246_edb360_323688_2b_204_tablespace_quotas.html"
Elapsed Hours so far:    0.347

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:06 2b "Storage"
11:43:06 Datafile

SELECT /*+  NO_MERGE  */ /* 2b.205 */
       *
  FROM v$datafile
 ORDER BY
       file#

11:43:06 2b.205
Elapsed Hours so far:    0.347
Elapsed Hours so far: .347

Elapsed: 00:00:00.00

11:43:06 2b "00247_edb360_323688_2b_205_datafile.html"
Elapsed Hours so far:    0.347

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:06 2b "Storage"
11:43:06 Data Files

SELECT /*+  NO_MERGE  */ /* 2b.206 */
       *
  FROM dba_data_files
 ORDER BY
       file_name

11:43:06 2b.206
Elapsed Hours so far:    0.347
Elapsed Hours so far: .347

Elapsed: 00:00:00.00

11:43:06 2b "00248_edb360_323688_2b_206_data_files.html"
Elapsed Hours so far:    0.348

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:08 2b "Storage"
11:43:08 Data Files Usage

WITH
alloc AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2b.207 */
       tablespace_name,
       COUNT(*) datafiles,
       ROUND(SUM(bytes)/POWER(10,9)) gb
  FROM dba_data_files
 GROUP BY
       tablespace_name
),
free AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2b.207 */
       tablespace_name,
       ROUND(SUM(bytes)/POWER(10,9)) gb
  FROM dba_free_space
 GROUP BY
       tablespace_name
),
tablespaces AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2b.207 */
       a.tablespace_name,
       a.datafiles,
       a.gb alloc_gb,
       (a.gb - f.gb) used_gb,
       f.gb free_gb
  FROM alloc a, free f
 WHERE a.tablespace_name = f.tablespace_name
 ORDER BY
       a.tablespace_name
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2b.207 */
       SUM(alloc_gb) alloc_gb,
       SUM(used_gb) used_gb,
       SUM(free_gb) free_gb
  FROM tablespaces
)
SELECT v.tablespace_name,
       v.datafiles,
       v.alloc_gb,
       v.used_gb,
       CASE WHEN v.alloc_gb > 0 THEN
       LPAD(TRIM(TO_CHAR(ROUND(100 * v.used_gb / v.alloc_gb, 1), '990.0')), 8)
       END pct_used,
       v.free_gb,
       CASE WHEN v.alloc_gb > 0 THEN
       LPAD(TRIM(TO_CHAR(ROUND(100 * v.free_gb / v.alloc_gb, 1), '990.0')), 8)
       END pct_free
  FROM (
SELECT tablespace_name,
       datafiles,
       alloc_gb,
       used_gb,
       free_gb
  FROM tablespaces
 UNION ALL
SELECT 'Total' tablespace_name,
       TO_NUMBER(NULL) datafiles,
       alloc_gb,
       used_gb,
       free_gb
  FROM total
) v

11:43:08 2b.207
Elapsed Hours so far:    0.348
Elapsed Hours so far: .348

Elapsed: 00:00:00.00

11:43:08 2b "00249_edb360_323688_2b_207_data_files_usage.html"
Elapsed Hours so far:    0.352

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:24 2b "Storage"
11:43:24 Tempfile

SELECT /*+  NO_MERGE  */ /* 2b.208 */
       *
  FROM v$tempfile
 ORDER BY
       file#

11:43:24 2b.208
Elapsed Hours so far:    0.352
Elapsed Hours so far: .352

Elapsed: 00:00:00.01

11:43:24 2b "00250_edb360_323688_2b_208_tempfile.html"
Elapsed Hours so far:    0.352

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:24 2b "Storage"
11:43:24 Temp Files

SELECT /*+  NO_MERGE  */ /* 2b.209 */
       *
  FROM dba_temp_files
 ORDER BY
       file_name

11:43:24 2b.209
Elapsed Hours so far:    0.352
Elapsed Hours so far: .352

Elapsed: 00:00:00.00

11:43:24 2b "00251_edb360_323688_2b_209_temp_files.html"
Elapsed Hours so far:    0.352

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:24 2b "Storage"
11:43:24 I/O Statistics for DB Files

SELECT /*+  NO_MERGE  */ /* 2b.210 */
       *
  FROM v$iostat_file
 ORDER BY
       1

11:43:24 2b.210
Elapsed Hours so far:    0.352
Elapsed Hours so far: .352

Elapsed: 00:00:00.00

11:43:24 2b "00252_edb360_323688_2b_210_io_statistics_for_db_files.html"
Elapsed Hours so far:    0.352

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:24 2b "Storage"
11:43:24 Kernel I/O taking long

SELECT /*+  NO_MERGE  */ /* 2b.211 */
       *
  FROM v$kernel_io_outlier
 ORDER BY
       1

11:43:24 2b.211
Elapsed Hours so far:    0.352
Elapsed Hours so far: .352

Elapsed: 00:00:00.00

11:43:25 2b "00253_edb360_323688_2b_211_kernel_io_taking_long.html"
Elapsed Hours so far:    0.352

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:25 2b "Storage"
11:43:25 Log Writer I/O taking long

SELECT /*+  NO_MERGE  */ /* 2b.212 */
       *
  FROM v$lgwrio_outlier
 ORDER BY
       1

11:43:25 2b.212
Elapsed Hours so far:    0.352
Elapsed Hours so far: .352

Elapsed: 00:00:00.00

11:43:25 2b "00254_edb360_323688_2b_212_log_writer_io_taking_long.html"
Elapsed Hours so far:    0.352

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:25 2b "Storage"
11:43:25 I/O taking long

SELECT /*+  NO_MERGE  */ /* 2b.213 */
       *
  FROM v$io_outlier
 ORDER BY
       1

11:43:25 2b.213
Elapsed Hours so far:    0.352
Elapsed Hours so far: .352

Elapsed: 00:00:00.00

11:43:25 2b "00255_edb360_323688_2b_213_io_taking_long.html"
Elapsed Hours so far:    0.352

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:25 2b "Storage"
11:43:25 SYSAUX Occupants

SELECT /*+  NO_MERGE  */ /* 2b.214 */
       v.*, ROUND(v.space_usage_kbytes / POWER(10,6), 3) space_usage_gbs
  FROM v$sysaux_occupants v
 ORDER BY 1

11:43:25 2b.214
Elapsed Hours so far:    0.352
Elapsed Hours so far: .352

Elapsed: 00:00:00.00

11:43:25 2b "00256_edb360_323688_2b_214_sysaux_occupants.html"
Elapsed Hours so far:    0.353

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:26 2b "Storage"
11:43:26 Database Growth per Month

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 2b.215 */
       TO_CHAR(creation_time, 'YYYY-MM') creation_month,
       ROUND(SUM(bytes)/POWER(10,6)) mb_growth,
       ROUND(SUM(bytes)/POWER(10,9)) gb_growth,
       ROUND(SUM(bytes)/POWER(10,12), 1) tb_growth
  FROM v$datafile
 GROUP BY
       TO_CHAR(creation_time, 'YYYY-MM')
 ORDER BY
       TO_CHAR(creation_time, 'YYYY-MM')

11:43:26 2b.215
Elapsed Hours so far:    0.353
Elapsed Hours so far: .353

Elapsed: 00:00:00.00

11:43:26 2b "00257_edb360_323688_2b_215_database_growth_per_month.html"
Elapsed Hours so far:    0.353

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:27 2b "Storage"
11:43:27 Largest 200 Objects

WITH schema_object AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2b.216 */
       segment_type,
       owner,
       segment_name,
       tablespace_name,
       COUNT(*) segments,
       SUM(extents) extents,
       SUM(blocks) blocks,
       SUM(bytes) bytes
  FROM dba_segments
 WHERE 'Y' = 'Y'
 GROUP BY
       segment_type,
       owner,
       segment_name,
       tablespace_name
), totals AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2b.216 */
       SUM(segments) segments,
       SUM(extents) extents,
       SUM(blocks) blocks,
       SUM(bytes) bytes
  FROM schema_object
), top_200_pre AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2b.216 */
       ROWNUM rank, v1.*
       FROM (
SELECT so.segment_type,
       so.owner,
       so.segment_name,
       so.tablespace_name,
       so.segments,
       so.extents,
       so.blocks,
       so.bytes,
       ROUND((so.segments / t.segments) * 100, 3) segments_perc,
       ROUND((so.extents / t.extents) * 100, 3) extents_perc,
       ROUND((so.blocks / t.blocks) * 100, 3) blocks_perc,
       ROUND((so.bytes / t.bytes) * 100, 3) bytes_perc
  FROM schema_object so,
       totals t
 ORDER BY
       bytes_perc DESC NULLS LAST
) v1
 WHERE ROWNUM < 201
), top_200 AS (
SELECT p.*,
       (SELECT object_id
          FROM dba_objects o
         WHERE o.object_type = p.segment_type
           AND o.owner = p.owner
           AND o.object_name = p.segment_name
           AND o.object_type NOT LIKE '%PARTITION%') object_id,
       (SELECT data_object_id
          FROM dba_objects o
         WHERE o.object_type = p.segment_type
           AND o.owner = p.owner
           AND o.object_name = p.segment_name
           AND o.object_type NOT LIKE '%PARTITION%') data_object_id,
       (SELECT SUM(p2.bytes_perc) FROM top_200_pre p2 WHERE p2.rank <= p.rank) bytes_perc_cum
  FROM top_200_pre p
), top_200_totals AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2b.216 */
       SUM(segments) segments,
       SUM(extents) extents,
       SUM(blocks) blocks,
       SUM(bytes) bytes,
       SUM(segments_perc) segments_perc,
       SUM(extents_perc) extents_perc,
       SUM(blocks_perc) blocks_perc,
       SUM(bytes_perc) bytes_perc
  FROM top_200
), top_100_totals AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2b.216 */
       SUM(segments) segments,
       SUM(extents) extents,
       SUM(blocks) blocks,
       SUM(bytes) bytes,
       SUM(segments_perc) segments_perc,
       SUM(extents_perc) extents_perc,
       SUM(blocks_perc) blocks_perc,
       SUM(bytes_perc) bytes_perc
  FROM top_200
 WHERE rank < 101
), top_20_totals AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2b.216 */
       SUM(segments) segments,
       SUM(extents) extents,
       SUM(blocks) blocks,
       SUM(bytes) bytes,
       SUM(segments_perc) segments_perc,
       SUM(extents_perc) extents_perc,
       SUM(blocks_perc) blocks_perc,
       SUM(bytes_perc) bytes_perc
  FROM top_200
 WHERE rank < 21
)
SELECT v.rank,
       v.segment_type,
       v.owner,
       v.segment_name,
       v.object_id,
       v.data_object_id,
       v.tablespace_name,
       CASE
       WHEN v.segment_type LIKE 'INDEX%' THEN
         (SELECT i.table_name
            FROM dba_indexes i
           WHERE i.owner = v.owner AND i.index_name = v.segment_name)
       WHEN v.segment_type LIKE 'LOB%' THEN
         (SELECT l.table_name
            FROM dba_lobs l
           WHERE l.owner = v.owner AND l.segment_name = v.segment_name)
       END table_name,
       v.segments,
       v.extents,
       v.blocks,
       v.bytes,
       ROUND(v.bytes / POWER(10,9), 3) gb,
       LPAD(TO_CHAR(v.segments_perc, '990.000'), 7) segments_perc,
       LPAD(TO_CHAR(v.extents_perc, '990.000'), 7) extents_perc,
       LPAD(TO_CHAR(v.blocks_perc, '990.000'), 7) blocks_perc,
       LPAD(TO_CHAR(v.bytes_perc, '990.000'), 7) bytes_perc,
       LPAD(TO_CHAR(v.bytes_perc_cum, '990.000'), 7) perc_cum
  FROM (
SELECT d.rank,
       d.segment_type,
       d.owner,
       d.segment_name,
       d.object_id,
       d.data_object_id,
       d.tablespace_name,
       d.segments,
       d.extents,
       d.blocks,
       d.bytes,
       d.segments_perc,
       d.extents_perc,
       d.blocks_perc,
       d.bytes_perc,
       d.bytes_perc_cum
  FROM top_200 d
 UNION ALL
SELECT TO_NUMBER(NULL) rank,
       NULL segment_type,
       NULL owner,
       NULL segment_name,
       TO_NUMBER(NULL),
       TO_NUMBER(NULL),
       'TOP  20' tablespace_name,
       st.segments,
       st.extents,
       st.blocks,
       st.bytes,
       st.segments_perc,
       st.extents_perc,
       st.blocks_perc,
       st.bytes_perc,
       TO_NUMBER(NULL) bytes_perc_cum
  FROM top_20_totals st
 UNION ALL
SELECT TO_NUMBER(NULL) rank,
       NULL segment_type,
       NULL owner,
       NULL segment_name,
       TO_NUMBER(NULL),
       TO_NUMBER(NULL),
       'TOP 100' tablespace_name,
       st.segments,
       st.extents,
       st.blocks,
       st.bytes,
       st.segments_perc,
       st.extents_perc,
       st.blocks_perc,
       st.bytes_perc,
       TO_NUMBER(NULL) bytes_perc_cum
  FROM top_100_totals st
 UNION ALL
SELECT TO_NUMBER(NULL) rank,
       NULL segment_type,
       NULL owner,
       NULL segment_name,
       TO_NUMBER(NULL),
       TO_NUMBER(NULL),
       'TOP 200' tablespace_name,
       st.segments,
       st.extents,
       st.blocks,
       st.bytes,
       st.segments_perc,
       st.extents_perc,
       st.blocks_perc,
       st.bytes_perc,
       TO_NUMBER(NULL) bytes_perc_cum
  FROM top_200_totals st
 UNION ALL
SELECT TO_NUMBER(NULL) rank,
       NULL segment_type,
       NULL owner,
       NULL segment_name,
       TO_NUMBER(NULL),
       TO_NUMBER(NULL),
       'TOTAL' tablespace_name,
       t.segments,
       t.extents,
       t.blocks,
       t.bytes,
       100 segemnts_perc,
       100 extents_perc,
       100 blocks_perc,
       100 bytes_perc,
       TO_NUMBER(NULL) bytes_perc_cum
  FROM totals t) v

11:43:27 2b.216
Elapsed Hours so far:    0.353
Elapsed Hours so far: .353

Elapsed: 00:00:00.00

11:43:27 2b "00258_edb360_323688_2b_216_largest_200_objects.html"
Elapsed Hours so far:    0.354

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:30 2b "Storage"
11:43:30 Column Usage of 100 Largest Tables

WITH k as (
SELECT owner, name, column_position, column_name
,      'Partition' partitioning_level
FROM   DBA_part_key_columns
WHERE  object_type = 'TABLE'
AND    owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
AND    owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
UNION ALL
SELECT owner, name, column_position, column_name
,      'Subpartition'
FROM   DBA_subpart_key_columns
WHERE  object_type = 'TABLE'
AND    owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
AND    owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
), c AS (
SELECT c.owner, c.table_name
,      c.column_id, c.column_name, c.num_distinct, c.num_nulls
,      u.EQUALITY_PREDS
,      u.EQUIJOIN_PREDS
,      u.NONEQUIJOIN_PREDS
,      u.RANGE_PREDS
,      u.LIKE_PREDS
,      u.NULL_PREDS
,      u.TIMESTAMP
FROM   DBA_objects o
,      DBA_tab_columns c
,      sys.col_usage$ u
WHERE  o.object_type = 'TABLE'
AND    o.owner = c.owner
AND    o.object_name = c.table_name
AND    u.obj# = o.object_id
AND    u.intcol# = c.column_id
AND    o.owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS',
'CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS'
,'ORDSYS','OUTLN','OWBSYS')
AND    o.owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCAN
LZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
), x as (
SELECT dense_rank() over (order by t.blocks desc, t.owner, t.table_name) ranking
,      t.owner, t.table_name
,      c.column_id, c.column_name
,      k.partitioning_level
,      CASE WHEN k.partitioning_level = 'Partition'    THEN    p.partitioning_type
            WHEN k.partitioning_level = 'Subpartition' THEN p.subpartitioning_type
            WHEN p.table_name IS NULL                  THEN 'None'
       END as partitioning_type
,      k.column_position
,      t.blocks, t.num_rows
,      c.num_distinct, c.num_nulls
,      c.EQUALITY_PREDS
,      c.EQUIJOIN_PREDS
,      c.NONEQUIJOIN_PREDS
,      c.RANGE_PREDS
,      c.LIKE_PREDS
,      c.NULL_PREDS
,      c.TIMESTAMP
FROM   DBA_tables t
  LEFT OUTER JOIN DBA_part_tables p
    ON p.owner = t.owner
   AND p.table_name = t.table_name
  LEFT OUTER JOIN c
    ON c.owner = t.owner
   AND c.table_name = t.table_name
  LEFT OUTER JOIN k
    ON k.owner = c.owner
   AND k.name = c.table_name
   AND k.column_name = c.column_name
WHERE  t.blocks>0
AND    t.owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS',
'CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS'
,'ORDSYS','OUTLN','OWBSYS')
AND    t.owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS',
'CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS'
,'ORDSYS','OUTLN','OWBSYS')
)
select x.*
from x
where ranking <= 100
ORDER BY 1,2,3,4

11:43:30 2b.217
Elapsed Hours so far:    0.354
Elapsed Hours so far: .354

Elapsed: 00:00:00.00

11:43:30 2b "00259_edb360_323688_2b_217_column_usage_of_100_largest_tables.html"
Elapsed Hours so far:    0.355

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:35 2b "Storage"
11:43:35 Tables with one extent and no rows

-- requested by David Kurtz
SELECT  /* LEADING(T) USE_NL(S) */ -- removed hint as per Luis Calvo
        t.owner, t.table_name, t.tablespace_name, t.num_rows, t.blocks hwm_blocks, t.last_analyzed,
s.blocks seg_blocks
FROM    dba_tables t
,       dba_segments s
WHERE   'Y' = 'Y'
and     t.owner not in ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS'
,'CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS
','ORDSYS','OUTLN','OWBSYS')
and     t.owner not in ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCA
NLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
and     s.segment_type = 'TABLE'
and     t.owner = s.owner
and     t.table_name = s.segment_name
and     t.tablespace_name = s.tablespace_name
and     s.partition_name IS NULL
and     t.segment_created = 'YES'
AND     (       t.num_rows = 0
        OR       t.num_rows IS NULL
        )
and     s.extents =  1
ORDER BY 1,2

11:43:35 2b.218
Elapsed Hours so far:    0.355
Elapsed Hours so far: .355

Elapsed: 00:00:00.00

11:43:35 2b "00260_edb360_323688_2b_218_tables_with_one_extent_and_no_rows.html"
Elapsed Hours so far:    0.356

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:39 2b "Storage"
11:43:39 Partitions with one extent and no rows

-- requested by David Kurtz
SELECT  /* LEADING(T) USE_NL(S) */ -- removed hint as per Luis Calvo
        t.table_owner, t.table_name, t.partition_name, t.tablespace_name, t.num_rows, t.blocks hwm_b
locks, t.last_analyzed, s.blocks seg_blocks
FROM    dba_tab_partitions t
,       dba_segments s
WHERE   'Y' = 'Y'
and     t.table_owner not in ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQ
OSSYS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDP
LUGINS','ORDSYS','OUTLN','OWBSYS')
and     t.table_owner not in ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM'
,'TRCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
and     s.segment_type = 'TABLE PARTITION'
and     t.table_owner = s.owner
and     t.table_name = s.segment_name
and     t.tablespace_name = s.tablespace_name
and     t.partition_name = s.partition_name
and     t.segment_created = 'YES'
AND     (       t.num_rows = 0
        OR       t.num_rows IS NULL
        )
and     s.extents =  1
ORDER BY 1,2,3

11:43:39 2b.219
Elapsed Hours so far:    0.356
Elapsed Hours so far: .356

Elapsed: 00:00:00.00

11:43:39 2b "00261_edb360_323688_2b_219_partitions_with_one_extent_and_no_rows.html"
Elapsed Hours so far:    0.356

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:39 2b "Storage"
11:43:39 Subpartitions with one extent and no rows

-- requested by David Kurtz
SELECT  /* LEADING(T) USE_NL(S) */ -- removed hint as per Luis Calvo
        t.table_owner, t.table_name, t.partition_name, t.subpartition_name, t.tablespace_name, t.num
_rows, t.blocks hwm_blocks, t.last_analyzed, s.blocks seg_blocks
FROM    dba_tab_subpartitions t
,       dba_segments s
WHERE   'Y' = 'Y'
and     t.table_owner not in ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQ
OSSYS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDP
LUGINS','ORDSYS','OUTLN','OWBSYS')
and     t.table_owner not in ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM'
,'TRCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
and     s.segment_type = 'TABLE SUBPARTITION'
and     t.table_owner = s.owner
and     t.table_name = s.segment_name
and     t.subpartition_name = s.partition_name
and     t.tablespace_name = s.tablespace_name
and     t.segment_created = 'YES'
AND     (       t.num_rows = 0
        OR       t.num_rows IS NULL
        )
and     s.extents =  1
ORDER BY 1,2,3,4

11:43:39 2b.220
Elapsed Hours so far:    0.356
Elapsed Hours so far: .356

Elapsed: 00:00:00.00

11:43:39 2b "00262_edb360_323688_2b_220_subpartitions_with_one_extent_and_no_rows.html"
Elapsed Hours so far:    0.357

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:40 2b "Storage"
11:43:40 Tables and their indexes larger than 1 GB

WITH
tables AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2b.221 */
       owner,
       segment_name,
       SUM(bytes) bytes,
       COUNT(*) segments
  FROM dba_segments
 WHERE 'Y' = 'Y'
   AND segment_type LIKE 'TABLE%'
GROUP BY
       owner,
       segment_name
),
indexes AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2b.221 */
       owner,
       segment_name,
       SUM(bytes) bytes,
       COUNT(*) segments
  FROM dba_segments
 WHERE 'Y' = 'Y'
   AND segment_type LIKE 'INDEX%'
GROUP BY
       owner,
       segment_name
),
idx_tbl AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2b.221 */
       d.table_owner,
       d.table_name,
       SUM(i.bytes) bytes,
       SUM(i.segments) segments
  FROM indexes i,
       dba_indexes d
WHERE i.owner = d.owner
  AND i.segment_name = d.index_name
GROUP BY
       d.table_owner,
       d.table_name
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2b.221 */
       t.owner,
       t.segment_name table_name,
       (t.bytes + NVL(i.bytes, 0)) bytes,
       t.bytes table_bytes,
       NVL(i.bytes, 0) indexes_bytes,
       (t.segments + NVL(i.segments, 0)) segs,
       t.segments tab_segs,
       NVL(i.segments, 0) idx_segs
  FROM tables t,
       idx_tbl i
WHERE t.owner = i.table_owner(+)
   AND t.segment_name = i.table_name(+)
)
SELECT owner,
       table_name,
       ROUND(bytes / POWER(10,9), 3) total_gb,
       ROUND(table_bytes / POWER(10,9), 3) table_gb,
       ROUND(indexes_bytes / POWER(10,9), 3) indexes_gb,
       segs,
       tab_segs,
       idx_segs
  FROM total
WHERE bytes > POWER(10,9)
ORDER BY
       bytes DESC NULLS LAST

11:43:40 2b.221
Elapsed Hours so far:    0.357
Elapsed Hours so far: .357

Elapsed: 00:00:00.00

11:43:40 2b "00263_edb360_323688_2b_221_tables_and_their_indexes_larger_than_1_gb.html"
Elapsed Hours so far:    0.357

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:43 2b "Storage"
11:43:43 Indexes larger than their Table

WITH
tables AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2b.222 */
       owner,
       segment_name,
       SUM(bytes) bytes
  FROM dba_segments
 WHERE 'Y' = 'Y'
   AND segment_type LIKE 'TABLE%'
GROUP BY
       owner,
       segment_name
),
indexes AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2b.222 */
       owner,
       segment_name,
       SUM(bytes) bytes
  FROM dba_segments
 WHERE 'Y' = 'Y'
   AND segment_type LIKE 'INDEX%'
GROUP BY
       owner,
       segment_name
),
idx_tbl AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2b.222 */
       d.table_owner,
       d.table_name,
       d.owner,
       d.index_name,
       SUM(i.bytes) bytes
  FROM indexes i,
       dba_indexes d
WHERE i.owner = d.owner
   AND i.segment_name = d.index_name
GROUP BY
       d.table_owner,
       d.table_name,
       d.owner,
       d.index_name
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2b.222 */
       t.owner table_owner,
       t.segment_name table_name,
       t.bytes t_bytes,
       i.owner index_owner,
       i.index_name,
       i.bytes i_bytes
  FROM tables t,
       idx_tbl i
WHERE t.owner = i.table_owner
   AND t.segment_name = i.table_name
   AND i.bytes > t.bytes
   AND t.bytes > POWER(10,7) /* 10M */
)
SELECT table_owner,
       table_name,
       ROUND(t_bytes / POWER(10,9), 3) table_gb,
       index_owner,
       index_name,
       ROUND(i_bytes / POWER(10,9), 3) index_gb,
       ROUND((i_bytes - t_bytes) / POWER(10,9), 3) dif_gb,
       ROUND(100 * (i_bytes - t_bytes) / t_bytes, 1) dif_perc
  FROM total
ORDER BY
      table_owner,
       table_name,
       index_owner,
       index_name

11:43:43 2b.222
Elapsed Hours so far:    0.357
Elapsed Hours so far: .357

Elapsed: 00:00:00.00

11:43:43 2b "00264_edb360_323688_2b_222_indexes_larger_than_their_table.html"
Elapsed Hours so far:    0.358

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:45 2b "Storage"
11:43:45 Temporary Segments in Permanent Tablespaces

-- http://askdba.org/weblog/2009/07/cleanup-temporary-segments-in-permanent-tablespace/
select /*+  NO_MERGE  */ /* 2b.223 */
tablespace_name, owner, segment_name,
round(sum(bytes/POWER(10,6))) mega_bytes
from dba_segments
where 'Y' = 'Y'
and segment_type = 'TEMPORARY'
group by tablespace_name, owner, segment_name
having round(sum(bytes/POWER(10,6))) > 0
order by tablespace_name, owner, segment_name

11:43:45 2b.223
Elapsed Hours so far:    0.358
Elapsed Hours so far: .358

Elapsed: 00:00:00.00

11:43:45 2b "00265_edb360_323688_2b_223_temporary_segments_in_permanent_tablespaces.html"
Elapsed Hours so far:    0.358

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:46 2b "Storage"
11:43:46 Segments in Reserved Tablespaces

-- provided by Simon Pane
SELECT /*+  NO_MERGE  */ /* 2b.224 */
       s.owner, s.segment_type, s.tablespace_name, COUNT(1) segments
  FROM dba_segments s
 WHERE 'Y' = 'Y'
   AND s.owner NOT IN ('SYS','SYSTEM','OUTLN','AURORA$JIS$UTILITY$','OSE$HTTP$ADMIN','ORACACHE','ORD
SYS',
                       'CTXSYS','DBSNMP','DMSYS','EXFSYS','MDSYS','OLAPSYS','SYSMAN','TSMSYS','WMSYS
','XDB',
                       'GSMADMIN_INTERNAL'
                      )
   AND s.tablespace_name IN ('SYSTEM','SYSAUX','TEMP','TEMPORARY','RBS','ROLLBACK','ROLLBACKS','RBSE
GS')
   AND s.tablespace_name NOT IN (SELECT tablespace_name
                                   FROM dba_tablespaces
                                  WHERE contents IN ('UNDO','TEMPORARY')
                                )
and s.owner not in ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','CT
XSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','O
RDSYS','OUTLN','OWBSYS')
and s.owner not in ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZR
','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 GROUP BY s.owner, s.segment_type, s.tablespace_name
 ORDER BY 1,2,3

11:43:46 2b.224
Elapsed Hours so far:    0.358
Elapsed Hours so far: .358

Elapsed: 00:00:00.00

11:43:46 2b "00266_edb360_323688_2b_224_segments_in_reserved_tablespaces.html"
Elapsed Hours so far:    0.358

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:46 2b "Storage"
11:43:46 Segment Shrink Recommendations

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 2b.225 */
       *
FROM TABLE(dbms_space.asa_recommendations())
Where segment_owner not in ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOS
SYS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLU
GINS','ORDSYS','OUTLN','OWBSYS') and
   segment_owner not in ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRC
ANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
order by reclaimable_space desc

11:43:46 2b.225
Elapsed Hours so far:    0.358
Elapsed Hours so far: .358

Elapsed: 00:00:00.00

11:43:46 2b "00267_edb360_323688_2b_225_segment_shrink_recommendations.html"
Elapsed Hours so far:    0.359

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:47 2b "Storage"
11:43:47 Objects in Recycle Bin

-- requested by Milton Quinteros
SELECT /*+  NO_MERGE  */ /* 2b.226 */
       *
  FROM dba_recyclebin
 WHERE owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 ORDER BY
       owner,
       object_name

11:43:47 2b.226
Elapsed Hours so far:    0.359
Elapsed Hours so far: .359

Elapsed: 00:00:00.00

11:43:47 2b "00268_edb360_323688_2b_226_objects_in_recycle_bin.html"
Elapsed Hours so far:    0.359

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:43:49 2b "Storage"
11:43:49 Consumers of Recycle Bin

-- requested by Dimas Chbane
SELECT /*+  NO_MERGE  */ /* 2b.227 */
       ROUND(SUM(r.space * t.block_size) / POWER(10,6)) mb_space,
       r.owner
  FROM dba_recyclebin r,
       dba_tablespaces t
 WHERE r.ts_name = t.tablespace_name
 GROUP BY
       r.owner
HAVING ROUND(SUM(r.space * t.block_size) / POWER(10,6)) > 0
 ORDER BY
       1 DESC, 2

11:43:49 2b.227
Elapsed Hours so far:    0.359
Elapsed Hours so far: .359

Elapsed: 00:00:00.00

11:43:49 2b "00269_edb360_323688_2b_227_consumers_of_recycle_bin.html"
Elapsed Hours so far:    0.390

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:45:40 2b "Storage"
11:45:40 Tables with excessive wasted space

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 2b.229 */
   (round(SUM(s.blocks) * x.block_size / POWER(10,6))) -
      (round(SUM(s.num_rows) * MAX(s.avg_row_len) * (1+(t.pct_free/100)) * decode (t.compression,'EN
ABLED',0.50,1.00) / POWER(10,6))) over_allocated_mb,
   t.owner, t.table_name, SUM(s.blocks), x.block_size, t.pct_free,
   round(SUM(s.blocks) * x.block_size / POWER(10,6)) actual_mb,
   round(SUM(s.num_rows) * MAX(s.avg_row_len) * (1+(t.pct_free/100)) * decode (t.compression,'ENABLE
D',0.50,1.00) / POWER(10,6)) estimate_mb,
   SUM(s.num_rows), MAX(s.avg_row_len), t.compression
from
   dba_tables t,
   dba_tab_statistics s,
   dba_tablespaces x
where
   s.owner = t.owner and
   s.table_name = t.table_name and
   x.tablespace_name = t.tablespace_name and
   t.owner not in ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','CTX
SYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','OR
DSYS','OUTLN','OWBSYS') and
   t.owner not in ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZR'
,'WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
group by
   t.owner, t.table_name, x.block_size, t.pct_free, t.compression
having
   (SUM(s.blocks) * x.block_size / POWER(10,6)) >= 100 and -- actual_mb
   abs(round(SUM(s.blocks) * x.block_size / POWER(10,6)) - round(SUM(s.num_rows) * MAX(s.avg_row_len
) * (1+(t.pct_free/100)) * decode (t.compression,'ENABLED',0.50,1.00) / POWER(10,6))) /
      (round(SUM(s.blocks) * x.block_size / POWER(10,6))) >= 0.25
order by
   1 desc,
   t.owner, t.table_name

11:45:40 2b.229
Elapsed Hours so far:    0.390
Elapsed Hours so far: .39

Elapsed: 00:00:00.00

11:45:40 2b "00271_edb360_323688_2b_229_tables_with_excessive_wasted_space.html"
Elapsed Hours so far:    0.407

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:41 2b "Storage"
11:46:41 Tables over 10GB and no partitions

Select /*+  NO_MERGE  */ /* 2b.231 */
       t.owner, t.table_name, t.blocks, s.block_size, t.blocks*s.block_size bytes,
       Case When t.blocks*s.block_size between 1024*1024*1024      and 1024*1024*1024*1024-1
                 Then to_char(round(t.blocks*s.block_size /1024/1024/1024          ),'9999') ||' Gb'

            When t.blocks*s.block_size between 1024*1024*1024      and 1024*1024*1024*1024*1024-1
                 Then to_char(round(t.blocks*s.block_size /1024/1024/1024/1024     ),'9999') ||' Tb'

            When t.blocks*s.block_size between 1024*1024*1024*1024 and 1024*1024*1024*1024*1024*1024
-1
                 Then to_char(round(t.blocks*s.block_size /1024/1024/1024/1024/1024),'9999') ||' Pb'

       Else To_char(t.blocks*s.block_size) End  display
From   dba_tables t, dba_tablespaces s
Where  t.tablespace_name = s.tablespace_name
And    t.blocks*s.block_size > 10*1024*1024*1024
And    partitioned='NO'
And    owner Not In ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS')
And    owner Not In ('CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','
ORDDATA')
And    owner Not In ('ORDPLUGINS','ORDSYS','OUTLN','OWBSYS','SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTX
PLAIN')
And    owner Not In ('SYS','SYSMAN','SYSTEM','TRCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPER
F','MGDSYS','OJVMSYS')
order by blocks desc ;

11:46:41 2b.231
Elapsed Hours so far:    0.407
Elapsed Hours so far: .407

Elapsed: 00:00:00.00

11:46:41 2b "00273_edb360_323688_2b_231_tables_over_10gb_and_no_partitions.html"
Elapsed Hours so far:    0.407

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:42 2c "Automatic Storage Management (ASM)"
11:46:42 ASM Attributes

SELECT /*+  NO_MERGE  */ /* 2c.232 */
       *
  FROM v$asm_attribute
 ORDER BY
       1, 2

11:46:42 2c.232
Elapsed Hours so far:    0.407
Elapsed Hours so far: .407

Elapsed: 00:00:00.00

11:46:42 2c "00274_edb360_323688_2c_232_asm_attributes.html"
Elapsed Hours so far:    0.407

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:42 2c "Automatic Storage Management (ASM)"
11:46:42 ASM Client

SELECT /*+  NO_MERGE  */ /* 2c.233 */
       *
  FROM v$asm_client
 ORDER BY
       1, 2

11:46:42 2c.233
Elapsed Hours so far:    0.407
Elapsed Hours so far: .407

Elapsed: 00:00:00.00

11:46:42 2c "00275_edb360_323688_2c_233_asm_client.html"
Elapsed Hours so far:    0.407

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:42 2c "Automatic Storage Management (ASM)"
11:46:42 ASM Template

SELECT /*+  NO_MERGE  */ /* 2c.234 */
       *
  FROM v$asm_template
 ORDER BY
       1, 2

11:46:42 2c.234
Elapsed Hours so far:    0.407
Elapsed Hours so far: .407

Elapsed: 00:00:00.00

11:46:43 2c "00276_edb360_323688_2c_234_asm_template.html"
Elapsed Hours so far:    0.407

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:43 2c "Automatic Storage Management (ASM)"
11:46:43 ASM Disk Group

SELECT /*+  NO_MERGE  */ /* 2c.235 */
       *
  FROM v$asm_diskgroup
 ORDER BY
       1, 2

11:46:43 2c.235
Elapsed Hours so far:    0.407
Elapsed Hours so far: .407

Elapsed: 00:00:00.00

11:46:43 2c "00277_edb360_323688_2c_235_asm_disk_group.html"
Elapsed Hours so far:    0.408

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:44 2c "Automatic Storage Management (ASM)"
11:46:44 ASM Disk Group Stat

SELECT /*+  NO_MERGE  */ /* 2c.236 */
       *
  FROM v$asm_diskgroup_stat
 ORDER BY
       1, 2

11:46:44 2c.236
Elapsed Hours so far:    0.408
Elapsed Hours so far: .408

Elapsed: 00:00:00.00

11:46:44 2c "00278_edb360_323688_2c_236_asm_disk_group_stat.html"
Elapsed Hours so far:    0.408

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:44 2c "Automatic Storage Management (ASM)"
11:46:44 ASM Disk

SELECT /*+  NO_MERGE  */ /* 2c.237 */
       *
  FROM v$asm_disk
 ORDER BY
       1, 2

11:46:44 2c.237
Elapsed Hours so far:    0.408
Elapsed Hours so far: .408

Elapsed: 00:00:00.00

11:46:44 2c "00279_edb360_323688_2c_237_asm_disk.html"
Elapsed Hours so far:    0.408

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:45 2c "Automatic Storage Management (ASM)"
11:46:45 ASM Disk Stat

SELECT /*+  NO_MERGE  */ /* 2c.238 */
       *
  FROM v$asm_disk_stat
 ORDER BY
       1, 2

11:46:45 2c.238
Elapsed Hours so far:    0.408
Elapsed Hours so far: .408

Elapsed: 00:00:00.00

11:46:45 2c "00280_edb360_323688_2c_238_asm_disk_stat.html"
Elapsed Hours so far:    0.408

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:45 2c "Automatic Storage Management (ASM)"
11:46:45 ASM Disk IO Stats

SELECT /*+  NO_MERGE  */ /* 2c.239 */
       *
  FROM gv$asm_disk_iostat
 ORDER BY
       1, 2, 3, 4, 5

11:46:45 2c.239
Elapsed Hours so far:    0.408
Elapsed Hours so far: .408

Elapsed: 00:00:00.00

11:46:45 2c "00281_edb360_323688_2c_239_asm_disk_io_stats.html"
Elapsed Hours so far:    0.408

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:46 2c "Automatic Storage Management (ASM)"
11:46:46 ASM File

SELECT /*+  NO_MERGE  */ /* 2c.240 */
       *
  FROM v$asm_file

11:46:46 2c.240
Elapsed Hours so far:    0.408
Elapsed Hours so far: .408

Elapsed: 00:00:00.00

11:46:46 2c "00282_edb360_323688_2c_240_asm_file.html"
Elapsed Hours so far:    0.408

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:46 2c "Automatic Storage Management (ASM)"
11:46:46 Files Count per Disk Group

select /*+  NO_MERGE  */ /* 2c.241 */
count(*) files, name disk_group, 'Datafile' file_type
from
(select regexp_substr(name, '[^/]+', 1, 1) name from v$datafile)
group by name
union all
select count(*) files, name disk_group, 'Tempfile' file_type
from
(select regexp_substr(name, '[^/]+', 1, 1) name from v$tempfile)
group by name
order by 1 desc, 2, 3

11:46:46 2c.241
Elapsed Hours so far:    0.408
Elapsed Hours so far: .408

Elapsed: 00:00:00.00

11:46:46 2c "00283_edb360_323688_2c_241_files_count_per_disk_group.html"
Elapsed Hours so far:    0.408

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:46 2c "Automatic Storage Management (ASM)"
11:46:46 Data and Temp Files Count per Disk Group

select /*+  NO_MERGE  */ /* 2c.242 */
count(*) files, name disk_group
from
(select regexp_substr(name, '[^/]+', 1, 1) name from v$datafile
union all
select regexp_substr(name, '[^/]+', 1, 1) name from v$tempfile)
group by name
order by 1 desc

11:46:46 2c.242
Elapsed Hours so far:    0.408
Elapsed Hours so far: .408

Elapsed: 00:00:00.00

11:46:46 2c "00284_edb360_323688_2c_242_data_and_temp_files_count_per_disk_group.html"
Elapsed Hours so far:    0.409

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:49 2d "Backup and Recovery"
11:46:49 Block Corruption

SELECT /*+  NO_MERGE  */ /* 2d.244 */
       *
  FROM v$database_block_corruption

11:46:49 2d.244
Elapsed Hours so far:    0.409
Elapsed Hours so far: .409

Elapsed: 00:00:00.00

11:46:49 2d "00286_edb360_323688_2d_244_block_corruption.html"
Elapsed Hours so far:    0.409

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:49 2d "Backup and Recovery"
11:46:49 Nonlogged Datafile Blocks

SELECT /*+  NO_MERGE  */ /* 2d.245 */
       *
  FROM v$nonlogged_block

11:46:49 2d.245
Elapsed Hours so far:    0.409
Elapsed Hours so far: .409

Elapsed: 00:00:00.00

11:46:49 2d "00287_edb360_323688_2d_245_nonlogged_datafile_blocks.html"
Elapsed Hours so far:    0.409

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:49 2d "Backup and Recovery"
11:46:49 Blocks with Corruption or Nonlogged

With -- requested by Gabriel Alonso
CORR  As (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2d.246 */
       e.owner, e.segment_type, e.segment_name, e.partition_name, c.file#
     , greatest(e.block_id, c.block#) corr_start_block#
     , least(e.block_id+e.blocks-1, c.block#+c.blocks-1) corr_end_block#
     , least(e.block_id+e.blocks-1, c.block#+c.blocks-1)
       - greatest(e.block_id, c.block#) + 1 blocks_corrupted
     , null description
  FROM dba_extents e, v$database_block_corruption c
WHERE e.file_id = c.file#
   AND e.block_id <= c.block# + c.blocks - 1
   AND e.block_id + e.blocks - 1 >= c.block#
UNION
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2d.246 */
       s.owner, s.segment_type, s.segment_name, s.partition_name, c.file#
     , header_block corr_start_block#
     , header_block corr_end_block#
     , 1 blocks_corrupted
     , 'Segment Header' description
  FROM dba_segments s, v$database_block_corruption c
WHERE s.header_file = c.file#
   AND s.header_block between c.block# and c.block# + c.blocks - 1
UNION
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2d.246 */
       null owner, null segment_type, null segment_name, null partition_name, c.file#
     , greatest(f.block_id, c.block#) corr_start_block#
     , least(f.block_id+f.blocks-1, c.block#+c.blocks-1) corr_end_block#
     , least(f.block_id+f.blocks-1, c.block#+c.blocks-1)
       - greatest(f.block_id, c.block#) + 1 blocks_corrupted
     , 'Free Block' description
  FROM dba_free_space f, v$database_block_corruption c
WHERE f.file_id = c.file#
   AND f.block_id <= c.block# + c.blocks - 1
   AND f.block_id + f.blocks - 1 >= c.block#
ORDER  BY file#, corr_start_block#
),
NOLOG As (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2d.246 */
       e.owner, e.segment_type, e.segment_name, e.partition_name, c.file#
     , greatest(e.block_id, c.block#) corr_start_block#
     , least(e.block_id+e.blocks-1, c.block#+c.blocks-1) corr_end_block#
     , least(e.block_id+e.blocks-1, c.block#+c.blocks-1)
       - greatest(e.block_id, c.block#) + 1 blocks_corrupted
     , null description
  FROM dba_extents e, v$nonlogged_block c
WHERE e.file_id = c.file#
   AND e.block_id <= c.block# + c.blocks - 1
   AND e.block_id + e.blocks - 1 >= c.block#
UNION
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2d.246 */
       s.owner, s.segment_type, s.segment_name, s.partition_name, c.file#
     , header_block corr_start_block#
     , header_block corr_end_block#
     , 1 blocks_corrupted
     , 'Segment Header' description
  FROM dba_segments s, v$nonlogged_block c
WHERE s.header_file = c.file#
   AND s.header_block between c.block# and c.block# + c.blocks - 1
UNION
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2d.246 */
       null owner, null segment_type, null segment_name, null partition_name, c.file#
     , greatest(f.block_id, c.block#) corr_start_block#
     , least(f.block_id+f.blocks-1, c.block#+c.blocks-1) corr_end_block#
     , least(f.block_id+f.blocks-1, c.block#+c.blocks-1)
       - greatest(f.block_id, c.block#) + 1 blocks_corrupted
     , 'Free Block' description
  FROM dba_free_space f, v$nonlogged_block  c
WHERE f.file_id = c.file#
   AND f.block_id <= c.block# + c.blocks - 1
   AND f.block_id + f.blocks - 1 >= c.block#
Order  By file#, corr_start_block#
)
Select /*+  NO_MERGE  */ /* 2d.246 */ * from corr
Union
Select /*+  NO_MERGE  */ /* 2d.246 */ * from nolog

11:46:49 2d.246
Elapsed Hours so far:    0.409
Elapsed Hours so far: .409

Elapsed: 00:00:00.00

11:46:49 2d "00288_edb360_323688_2d_246_blocks_with_corruption_or_nonlogged.html"
Elapsed Hours so far:    0.409

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:50 2d "Backup and Recovery"
11:46:50 Block Change Tracking

SELECT /*+  NO_MERGE  */ /* 2d.247 */
       *
  FROM v$block_change_tracking

11:46:50 2d.247
Elapsed Hours so far:    0.409
Elapsed Hours so far: .409

Elapsed: 00:00:00.00

11:46:50 2d "00289_edb360_323688_2d_247_block_change_tracking.html"
Elapsed Hours so far:    0.410

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:50 2d "Backup and Recovery"
11:46:50 RMAN Backup Job Details

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 2d.248 */
       *
  FROM v$rman_backup_job_details
 --WHERE start_time >= (SYSDATE - 100)
 ORDER BY
       start_time DESC

11:46:50 2d.248
Elapsed Hours so far:    0.410
Elapsed Hours so far: .41

Elapsed: 00:00:00.00

11:46:50 2d "00290_edb360_323688_2d_248_rman_backup_job_details.html"
Elapsed Hours so far:    0.410

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:50 2d "Backup and Recovery"
11:46:50 RMAN Backup Set Details

SELECT /*+  NO_MERGE  */ /* 2d.249 */
       *
  FROM v$backup_set_details
 ORDER BY
       1, 2, 3, 4, 5

11:46:50 2d.249
Elapsed Hours so far:    0.410
Elapsed Hours so far: .41

Elapsed: 00:00:00.00

11:46:51 2d "00291_edb360_323688_2d_249_rman_backup_set_details.html"
Elapsed Hours so far:    0.411

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:54 2d "Backup and Recovery"
11:46:54 RMAN Output

SELECT /*+  NO_MERGE  */ /* 2d.250 */
       *
  FROM v$rman_output

11:46:54 2d.250
Elapsed Hours so far:    0.411
Elapsed Hours so far: .411

Elapsed: 00:00:00.00

11:46:54 2d "00292_edb360_323688_2d_250_rman_output.html"
Elapsed Hours so far:    0.411

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:54 2d "Backup and Recovery"
11:46:54 Fast Recovery Area

SELECT /*+  NO_MERGE  */ /* 2d.251 */
       *
  FROM v$recovery_file_dest

11:46:54 2d.251
Elapsed Hours so far:    0.411
Elapsed Hours so far: .411

Elapsed: 00:00:00.00

11:46:55 2d "00293_edb360_323688_2d_251_fast_recovery_area.html"
Elapsed Hours so far:    0.411

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:55 2d "Backup and Recovery"
11:46:55 Fast Recovery Area Usage

SELECT /*+  NO_MERGE  */ /* 2d.252 */
       *
  FROM v$recovery_area_usage

11:46:55 2d.252
Elapsed Hours so far:    0.411
Elapsed Hours so far: .411

Elapsed: 00:00:00.00

11:46:55 2d "00294_edb360_323688_2d_252_fast_recovery_area_usage.html"
Elapsed Hours so far:    0.411

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:55 2d "Backup and Recovery"
11:46:55 Restore Point

SELECT /*+  NO_MERGE  */ /* 2d.253 */
       *
  FROM v$restore_point

11:46:55 2d.253
Elapsed Hours so far:    0.411
Elapsed Hours so far: .411

Elapsed: 00:00:00.00

11:46:55 2d "00295_edb360_323688_2d_253_restore_point.html"
Elapsed Hours so far:    0.411

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:55 2d "Backup and Recovery"
11:46:55 Flashback Statistics

SELECT /*+  NO_MERGE  */ /* 2d.254 */
       *
  FROM gv$flashback_database_stat

11:46:55 2d.254
Elapsed Hours so far:    0.411
Elapsed Hours so far: .411

Elapsed: 00:00:00.00

11:46:55 2d "00296_edb360_323688_2d_254_flashback_statistics.html"
Elapsed Hours so far:    0.411

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:56 2d "Backup and Recovery"
11:46:56 Flashback Log

SELECT /*+  NO_MERGE  */ /* 2d.255 */
       *
  FROM gv$flashback_database_log

11:46:56 2d.255
Elapsed Hours so far:    0.411
Elapsed Hours so far: .411

Elapsed: 00:00:00.01

11:46:56 2d "00297_edb360_323688_2d_255_flashback_log.html"
Elapsed Hours so far:    0.412

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:59 2d "Backup and Recovery"
11:46:59 REDO LOG

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 2d.256 */
     *
  FROM v$log
 ORDER BY 1, 2, 3, 4

11:46:59 2d.256
Elapsed Hours so far:    0.412
Elapsed Hours so far: .412

Elapsed: 00:00:00.00

11:46:59 2d "00298_edb360_323688_2d_256_redo_log.html"
Elapsed Hours so far:    0.412

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:46:59 2d "Backup and Recovery"
11:46:59 REDO LOG Files

SELECT /*+  NO_MERGE  */ /* 2d.257 */
     *
  FROM v$logfile
 ORDER BY 1, 2, 3, 4

11:46:59 2d.257
Elapsed Hours so far:    0.412
Elapsed Hours so far: .412

Elapsed: 00:00:00.00

11:46:59 2d "00299_edb360_323688_2d_257_redo_log_files.html"
Elapsed Hours so far:    0.412

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:00 2d "Backup and Recovery"
11:47:00 REDO LOG History

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 2d.258 */
 THREAD#, TO_CHAR(trunc(FIRST_TIME), 'YYYY-MON-DD') day, count(*)
FROM v$log_history
where FIRST_TIME >= (sysdate - 31)
group by rollup(THREAD#, trunc(FIRST_TIME))
order by THREAD#, trunc(FIRST_TIME)

11:47:00 2d.258
Elapsed Hours so far:    0.412
Elapsed Hours so far: .412

Elapsed: 00:00:00.01

11:47:00 2d "00300_edb360_323688_2d_258_redo_log_history.html"
Elapsed Hours so far:    0.412

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:00 2d "Backup and Recovery"
11:47:00 REDO LOG Switches Frequency Map

-- requested by Weidong
WITH
log AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2d.259 */
       thread#,
       TO_CHAR(TRUNC(first_time), 'YYYY-MM-DD') yyyy_mm_dd,
       TO_CHAR(TRUNC(first_time), 'Dy') day,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '00', 1, 0)) h00,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '01', 1, 0)) h01,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '02', 1, 0)) h02,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '03', 1, 0)) h03,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '04', 1, 0)) h04,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '05', 1, 0)) h05,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '06', 1, 0)) h06,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '07', 1, 0)) h07,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '08', 1, 0)) h08,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '09', 1, 0)) h09,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '10', 1, 0)) h10,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '11', 1, 0)) h11,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '12', 1, 0)) h12,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '13', 1, 0)) h13,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '14', 1, 0)) h14,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '15', 1, 0)) h15,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '16', 1, 0)) h16,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '17', 1, 0)) h17,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '18', 1, 0)) h18,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '19', 1, 0)) h19,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '20', 1, 0)) h20,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '21', 1, 0)) h21,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '22', 1, 0)) h22,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '23', 1, 0)) h23,
       COUNT(*) per_day
  FROM v$log_history
 GROUP BY
       thread#,
       TRUNC(first_time)
 ORDER BY
       thread#,
       TRUNC(first_time) DESC NULLS LAST
),
ordered_log AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2d.259 */
       ROWNUM row_num_noprint, log.*
  FROM log
),
min_set AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2d.259 */
       thread#,
       MIN(row_num_noprint) min_row_num
  FROM ordered_log
 GROUP BY
       thread#
)
SELECT /*+  NO_MERGE  */ /* 2d.259 */
       log.*
  FROM ordered_log log,
       min_set ms
 WHERE log.thread# = ms.thread#
   AND log.row_num_noprint < ms.min_row_num + 14
 ORDER BY
       log.thread#,
       log.yyyy_mm_dd DESC

11:47:00 2d.259
Elapsed Hours so far:    0.412
Elapsed Hours so far: .412

Elapsed: 00:00:00.00

11:47:00 2d "00301_edb360_323688_2d_259_redo_log_switches_frequency_map.html"
Elapsed Hours so far:    0.412

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:01 2d "Backup and Recovery"
11:47:01 ARCHIVED LOG

SELECT *
  FROM v$archived_log

11:47:01 2d.260
Elapsed Hours so far:    0.412
Elapsed Hours so far: .412

Elapsed: 00:00:00.00

11:47:01 2d "00302_edb360_323688_2d_260_archived_log.html"
Elapsed Hours so far:    0.413

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:03 2d "Backup and Recovery"
11:47:03 ARCHIVED LOG Frequency Map per Thread

-- requested by Abdul Khan and Srinivas Kanaparthy
WITH
log AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2d.261 */
       --DISTINCT
       thread#,
       sequence#,
       first_time,
       blocks,
       block_size
  FROM v$archived_log
 WHERE first_time IS NOT NULL
),
log_denorm AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2d.261 */
       thread#,
       TO_CHAR(TRUNC(first_time), 'YYYY-MM-DD') yyyy_mm_dd,
       TO_CHAR(TRUNC(first_time), 'Dy') day,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '00', 1, 0)) h00,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '01', 1, 0)) h01,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '02', 1, 0)) h02,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '03', 1, 0)) h03,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '04', 1, 0)) h04,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '05', 1, 0)) h05,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '06', 1, 0)) h06,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '07', 1, 0)) h07,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '08', 1, 0)) h08,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '09', 1, 0)) h09,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '10', 1, 0)) h10,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '11', 1, 0)) h11,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '12', 1, 0)) h12,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '13', 1, 0)) h13,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '14', 1, 0)) h14,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '15', 1, 0)) h15,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '16', 1, 0)) h16,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '17', 1, 0)) h17,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '18', 1, 0)) h18,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '19', 1, 0)) h19,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '20', 1, 0)) h20,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '21', 1, 0)) h21,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '22', 1, 0)) h22,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '23', 1, 0)) h23,
       ROUND(SUM(blocks * block_size) / POWER(10,9), 1) TOT_GB,
       COUNT(*) cnt,
       ROUND(SUM(blocks * block_size) / POWER(10,9) / COUNT(*), 1) AVG_GB
  FROM log
 GROUP BY
       thread#,
       TRUNC(first_time)
 ORDER BY
       thread#,
       TRUNC(first_time) DESC
),
ordered_log AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2d.261 */
       ROWNUM row_num_noprint, log_denorm.*
  FROM log_denorm
),
min_set AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2d.261 */
       thread#,
       MIN(row_num_noprint) min_row_num
  FROM ordered_log
 GROUP BY
       thread#
)
SELECT /*+  NO_MERGE  */ /* 2d.261 */
       log.*
  FROM ordered_log log,
       min_set ms
 WHERE log.thread# = ms.thread#
   AND log.row_num_noprint < ms.min_row_num + 14
 ORDER BY
       log.thread#,
       log.yyyy_mm_dd DESC

11:47:03 2d.261
Elapsed Hours so far:    0.413
Elapsed Hours so far: .413

Elapsed: 00:00:00.00

11:47:03 2d "00303_edb360_323688_2d_261_archived_log_frequency_map_per_thread.html"
Elapsed Hours so far:    0.413

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:04 2d "Backup and Recovery"
11:47:04 ARCHIVED LOG Frequency Map per Cluster

WITH
log AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2d.262 */
       --DISTINCT
       thread#,
       sequence#,
       first_time,
       blocks,
       block_size
  FROM v$archived_log
 WHERE first_time IS NOT NULL
),
log_denorm AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2d.262 */
       TO_CHAR(TRUNC(first_time), 'YYYY-MM-DD') yyyy_mm_dd,
       TO_CHAR(TRUNC(first_time), 'Dy') day,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '00', 1, 0)) h00,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '01', 1, 0)) h01,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '02', 1, 0)) h02,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '03', 1, 0)) h03,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '04', 1, 0)) h04,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '05', 1, 0)) h05,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '06', 1, 0)) h06,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '07', 1, 0)) h07,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '08', 1, 0)) h08,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '09', 1, 0)) h09,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '10', 1, 0)) h10,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '11', 1, 0)) h11,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '12', 1, 0)) h12,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '13', 1, 0)) h13,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '14', 1, 0)) h14,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '15', 1, 0)) h15,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '16', 1, 0)) h16,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '17', 1, 0)) h17,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '18', 1, 0)) h18,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '19', 1, 0)) h19,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '20', 1, 0)) h20,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '21', 1, 0)) h21,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '22', 1, 0)) h22,
       SUM(DECODE(TO_CHAR(first_time, 'HH24'), '23', 1, 0)) h23,
       ROUND(SUM(blocks * block_size) / POWER(10,9), 1) TOT_GB,
       COUNT(*) cnt,
       ROUND(SUM(blocks * block_size) / POWER(10,9) / COUNT(*), 1) AVG_GB
  FROM log
 GROUP BY
       TRUNC(first_time)
 ORDER BY
       TRUNC(first_time) DESC
),
ordered_log AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2d.262 */
       ROWNUM row_num_noprint, log_denorm.*
  FROM log_denorm
),
min_set AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 2d.262 */
       MIN(row_num_noprint) min_row_num
  FROM ordered_log
)
SELECT /*+  NO_MERGE  */ /* 2d.262 */
       log.*
  FROM ordered_log log,
       min_set ms
 WHERE log.row_num_noprint < ms.min_row_num + 14
 ORDER BY
       log.yyyy_mm_dd DESC

11:47:04 2d.262
Elapsed Hours so far:    0.413
Elapsed Hours so far: .413

Elapsed: 00:00:00.00

11:47:04 2d "00304_edb360_323688_2d_262_archived_log_frequency_map_per_cluster.html"
Elapsed Hours so far:    0.414

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:07 2d "Backup and Recovery"
11:47:07 NOLOGGING Objects

WITH
objects AS (
SELECT 1 record_type,
       'TABLESPACE' object_type,
       tablespace_name,
       NULL owner,
       NULL name,
       NULL column_name,
       NULL partition,
       NULL subpartition
  FROM dba_tablespaces
 WHERE logging = 'NOLOGGING'
   AND contents != 'TEMPORARY'
UNION ALL
SELECT 2 record_type,
       'TABLE' object_type,
       tablespace_name,
       owner,
       table_name name,
       NULL column_name,
       NULL partition,
       NULL subpartition
  FROM dba_all_tables
 WHERE logging = 'NO'
   AND temporary = 'N'
UNION ALL
SELECT 3 record_type,
       'INDEX' object_type,
       tablespace_name,
       owner,
       index_name name,
       NULL column_name,
       NULL partition,
       NULL subpartition
  FROM dba_indexes
 WHERE logging = 'NO'
   AND temporary = 'N'
UNION ALL
SELECT 4 record_type,
       'LOB' object_type,
       tablespace_name,
       owner,
       table_name name,
       SUBSTR(column_name, 1, 30) column_name,
       NULL partition,
       NULL subpartition
  FROM dba_lobs
 WHERE logging = 'NO'
UNION ALL
SELECT 5 record_type,
       'TAB_PARTITION' object_type,
       tablespace_name,
       table_owner owner,
       table_name name,
       NULL column_name,
       partition_name partition,
       NULL subpartition
  FROM dba_tab_partitions
 WHERE logging = 'NO'
UNION ALL
SELECT 6 record_type,
       'IND_PARTITION' object_type,
       tablespace_name,
       index_owner owner,
       index_name name,
       NULL column_name,
       partition_name partition,
       NULL subpartition
  FROM dba_ind_partitions
 WHERE logging = 'NO'
UNION ALL
SELECT 7 record_type,
       'LOB_PARTITION' object_type,
       tablespace_name,
       table_owner owner,
       table_name name,
       SUBSTR(column_name, 1, 30) column_name,
       partition_name partition,
       NULL subpartition
  FROM dba_lob_partitions
 WHERE logging = 'NO'
UNION ALL
SELECT 8 record_type,
       'TAB_SUBPARTITION' object_type,
       tablespace_name,
       table_owner owner,
       table_name name,
       NULL column_name,
       partition_name partition,
       subpartition_name subpartition
  FROM dba_tab_subpartitions
 WHERE logging = 'NO'
UNION ALL
SELECT 9 record_type,
       'IND_SUBPARTITION' object_type,
       tablespace_name,
       index_owner owner,
       index_name name,
       NULL column_name,
       partition_name partition,
       subpartition_name subpartition
  FROM dba_ind_subpartitions
 WHERE logging = 'NO'
UNION ALL
SELECT 10 record_type,
       'LOB_SUBPARTITION' object_type,
       tablespace_name,
       table_owner owner,
       table_name name,
       SUBSTR(column_name, 1, 30) column_name,
       lob_partition_name partition,
       subpartition_name subpartition
  FROM dba_lob_subpartitions
 WHERE logging = 'NO'
)
SELECT object_type,
       tablespace_name,
       owner,
       name,
       column_name,
       partition,
       subpartition
  FROM objects
 ORDER BY
       record_type,
       tablespace_name,
       owner,
       name,
       column_name,
       partition,
       subpartition

11:47:07 2d.264
Elapsed Hours so far:    0.414
Elapsed Hours so far: .414

Elapsed: 00:00:00.00

11:47:07 2d "00306_edb360_323688_2d_264_nologging_objects.html"
Elapsed Hours so far:    0.414

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:08 2d "Backup and Recovery"
11:47:08 Unrecoverable Datafile

SELECT /*+  NO_MERGE  */ /* 2d.265 */
       *
  FROM v$datafile
 WHERE unrecoverable_change# > 0
 ORDER BY
       file#

11:47:08 2d.265
Elapsed Hours so far:    0.414
Elapsed Hours so far: .414

Elapsed: 00:00:00.00

11:47:08 2d "00307_edb360_323688_2d_265_unrecoverable_datafile.html"
Elapsed Hours so far:    0.415

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:08 2d "Backup and Recovery"
11:47:08 Unrecoverable Datafile after Backup

-- from http://www.pythian.com/blog/oracle-what-is-an-unrecoverable-data-file/
-- by Catherine Chow
SELECT /*+  NO_MERGE  */ /* 2d.266 */
df.name data_file_name, df.unrecoverable_time
FROM v$datafile df, v$backup bk
WHERE df.file#=bk.file#
and df.unrecoverable_change#!=0
and df.unrecoverable_time >
(select max(end_time) FROM v$rman_backup_job_details
where INPUT_TYPE in ('DB FULL' ,'DB INCR') and status = 'COMPLETED')

11:47:08 2d.266
Elapsed Hours so far:    0.415
Elapsed Hours so far: .415

Elapsed: 00:00:00.00

11:47:08 2d "00308_edb360_323688_2d_266_unrecoverable_datafile_after_backup.html"
Elapsed Hours so far:    0.415

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:10 2e "Data Guard Primary Site"
11:47:10 Database Role

-- from MOS Doc ID: 1577401.1
SELECT database_role role, name, db_unique_name, platform_id, open_mode, log_mode, flashback_on, pro
tection_mode, protection_level /* 2e.267 */
FROM v$database

11:47:10 2e.267
Elapsed Hours so far:    0.415
Elapsed Hours so far: .415

Elapsed: 00:00:00.00

11:47:10 2e "00309_edb360_323688_2e_267_database_role.html"
Elapsed Hours so far:    0.415

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:10 2e "Data Guard Primary Site"
11:47:10 Force Logging

-- from MOS Doc ID: 1577401.1
SELECT force_logging, remote_archive, supplemental_log_data_pk, supplemental_log_data_ui, switchover
_status, dataguard_broker /* 2e.268 */
FROM v$database

11:47:10 2e.268
Elapsed Hours so far:    0.415
Elapsed Hours so far: .415

Elapsed: 00:00:00.00

11:47:10 2e "00310_edb360_323688_2e_268_force_logging.html"
Elapsed Hours so far:    0.415

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:10 2e "Data Guard Primary Site"
11:47:10 Catproc Release

-- from MOS Doc ID: 1577401.1
SELECT version, modified, status /* 2e.269 */
  FROM dba_registry WHERE comp_id = 'CATPROC'

11:47:10 2e.269
Elapsed Hours so far:    0.415
Elapsed Hours so far: .415

Elapsed: 00:00:00.00

11:47:10 2e "00311_edb360_323688_2e_269_catproc_release.html"
Elapsed Hours so far:    0.415

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:10 2e "Data Guard Primary Site"
11:47:10 Threads

-- from MOS Doc ID: 1577401.1
SELECT thread#, instance, status /* 2e.270 */
FROM v$thread

11:47:10 2e.270
Elapsed Hours so far:    0.415
Elapsed Hours so far: .415

Elapsed: 00:00:00.00

11:47:10 2e "00312_edb360_323688_2e_270_threads.html"
Elapsed Hours so far:    0.415

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:10 2e "Data Guard Primary Site"
11:47:10 Instances

-- from MOS Doc ID: 1577401.1
SELECT thread#, instance_name, host_name, version, archiver, log_switch_wait /* 2e.271 */
FROM gv$instance ORDER BY thread#

11:47:10 2e.271
Elapsed Hours so far:    0.415
Elapsed Hours so far: .415

Elapsed: 00:00:00.00

11:47:10 2e "00313_edb360_323688_2e_271_instances.html"
Elapsed Hours so far:    0.415

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:10 2e "Data Guard Primary Site"
11:47:10 Log Switching

-- from MOS Doc ID: 1577401.1
SELECT fs.log_switches_under_20_mins, ss.log_switches_over_20_mins /* 2e.272 */
  FROM (
SELECT SUM(COUNT (ROUND((b.first_time - a.first_time) * 1440) )) "LOG_SWITCHES_UNDER_20_MINS"
  FROM v$archived_log a, v$archived_log b
 WHERE a.sequence# + 1 = b.sequence#
   AND a.dest_id = 1
   AND a.thread# = b.thread#
   AND a.dest_id = b.dest_id
   AND a.dest_id = (
SELECT MIN(dest_id)
  FROM gv$archive_dest
 WHERE target='PRIMARY'
   AND destination IS NOT NULL)
   AND ROUND((b.first_time - a.first_time) * 1440)  < 20
 GROUP BY ROUND((b.first_time - a.first_time) * 1440))  fs, (
SELECT  SUM(COUNT (ROUND((b.first_time - a.first_time) * 1440) )) "LOG_SWITCHES_OVER_20_MINS"
  FROM v$archived_log a, v$archived_log b
 WHERE a.sequence# + 1 = b.sequence#
   AND a.dest_id = 1
   AND a.thread# = b.thread#
   AND a.dest_id = b.dest_id
   AND a.dest_id = (
SELECT MIN(dest_id)
  FROM gv$archive_dest
 WHERE target='PRIMARY'
   AND destination IS NOT NULL)
   AND ROUND((b.first_time - a.first_time) * 1440)  > 19
 GROUP BY ROUND((b.first_time - a.first_time) * 1440)) ss

11:47:10 2e.272
Elapsed Hours so far:    0.415
Elapsed Hours so far: .415

Elapsed: 00:00:00.00

11:47:10 2e "00314_edb360_323688_2e_272_log_switching.html"
Elapsed Hours so far:    0.415

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:12 2e "Data Guard Primary Site"
11:47:12 Log Switches

-- from MOS Doc ID: 1577401.1
SELECT (CASE WHEN bucket = 1 THEN '<= ' || TO_CHAR(bucket * 5) /* 2e.273 */
             WHEN (bucket >1 AND bucket < 9) THEN TO_CHAR(bucket * 5 - 4) || ' TO ' || TO_CHAR(bucke
t * 5)
             WHEN bucket > 8 THEN '>= ' || TO_CHAR(bucket * 5 - 4) END) "MINUTES",
       switches "LOG_SWITCHES"
  FROM (
SELECT bucket , COUNT(b.bucket) SWITCHES
  FROM (
SELECT WIDTH_BUCKET(ROUND((b.first_time - a.first_time) * 1440), 0, 40, 8) bucket
  FROM v$archived_log a, v$archived_log b
 WHERE a.sequence# + 1 = b.sequence#
   AND a.dest_id = b.dest_id
   AND a.thread# = b.thread#
   AND a.dest_id = (
SELECT MIN(dest_id)
  FROM gv$archive_dest
 WHERE target = 'PRIMARY'
   AND destination IS NOT NULL)) b
 GROUP BY bucket ORDER BY bucket)

11:47:12 2e.273
Elapsed Hours so far:    0.415
Elapsed Hours so far: .415

Elapsed: 00:00:00.00

11:47:12 2e "00315_edb360_323688_2e_273_log_switches.html"
Elapsed Hours so far:    0.416

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:13 2e "Data Guard Primary Site"
11:47:13 Redo Log Group

-- from MOS Doc ID: 1577401.1
SELECT thread#, group#, sequence#, bytes, archived ,status /* 2e.274 */
FROM v$log ORDER BY thread#, group#

11:47:13 2e.274
Elapsed Hours so far:    0.416
Elapsed Hours so far: .416

Elapsed: 00:00:00.00

11:47:13 2e "00316_edb360_323688_2e_274_redo_log_group.html"
Elapsed Hours so far:    0.416

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:13 2e "Data Guard Primary Site"
11:47:13 Standby Logs

-- from MOS Doc ID: 1577401.1
SELECT thread#, group#, sequence#, bytes, archived, status /* 2e.275 */
FROM v$standby_log order by thread#, group#

11:47:13 2e.275
Elapsed Hours so far:    0.416
Elapsed Hours so far: .416

Elapsed: 00:00:00.00

11:47:13 2e "00317_edb360_323688_2e_275_standby_logs.html"
Elapsed Hours so far:    0.416

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:13 2e "Data Guard Primary Site"
11:47:13 Archive Destinations

-- from MOS Doc ID: 1577401.1
SELECT thread#, dest_id, destination, target, schedule, process /* 2e.276 */
 FROM gv$archive_dest gvad, gv$instance gvi
 WHERE gvad.inst_id = gvi.inst_id
   AND destination is NOT NULL
 ORDER BY thread#, dest_id

11:47:13 2e.276
Elapsed Hours so far:    0.416
Elapsed Hours so far: .416

Elapsed: 00:00:00.00

11:47:13 2e "00318_edb360_323688_2e_276_archive_destinations.html"
Elapsed Hours so far:    0.416

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:13 2e "Data Guard Primary Site"
11:47:13 Destination Details

-- from MOS Doc ID: 1577401.1
SELECT thread#, dest_id, gvad.archiver, transmit_mode, affirm, /* 2e.277 */
       async_blocks, net_timeout, max_failure, delay_mins, reopen_secs reopen, register, binding
  FROM gv$archive_dest gvad, gv$instance gvi
 WHERE gvad.inst_id = gvi.inst_id
   AND destination is NOT NULL
 ORDER BY thread#, dest_id

11:47:13 2e.277
Elapsed Hours so far:    0.416
Elapsed Hours so far: .416

Elapsed: 00:00:00.00

11:47:13 2e "00319_edb360_323688_2e_277_destination_details.html"
Elapsed Hours so far:    0.416

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:13 2e "Data Guard Primary Site"
11:47:13 Destination Errors

-- from MOS Doc ID: 1577401.1
SELECT thread#, dest_id, gvad.status, error, fail_sequence /* 2e.278 */
 FROM gv$archive_dest gvad, gv$instance gvi
WHERE gvad.inst_id = gvi.inst_id
  AND destination is NOT NULL
ORDER BY thread#, dest_id

11:47:13 2e.278
Elapsed Hours so far:    0.416
Elapsed Hours so far: .416

Elapsed: 00:00:00.00

11:47:13 2e "00320_edb360_323688_2e_278_destination_errors.html"
Elapsed Hours so far:    0.416

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:13 2e "Data Guard Primary Site"
11:47:13 Error Conditions

-- from MOS Doc ID: 1577401.1
SELECT gvi.thread#, timestamp, message /* 2e.279 */
  FROM gv$dataguard_status gvds, gv$instance gvi
 WHERE gvds.inst_id = gvi.inst_id
   AND severity in ('Error','Fatal')
 ORDER BY timestamp, thread#

11:47:13 2e.279
Elapsed Hours so far:    0.416
Elapsed Hours so far: .416

Elapsed: 00:00:00.00

11:47:13 2e "00321_edb360_323688_2e_279_error_conditions.html"
Elapsed Hours so far:    0.416

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:14 2e "Data Guard Primary Site"
11:47:14 Status Processes Redo Shipping

-- from MOS Doc ID: 1577401.1
SELECT inst_id, thread#, process, pid, status, client_process, /* 2e.280 */
       client_pid, sequence#, block#, active_agents, known_agents
  FROM gv$managed_standby
 ORDER BY thread#, pid

11:47:14 2e.280
Elapsed Hours so far:    0.416
Elapsed Hours so far: .416

Elapsed: 00:00:00.00

11:47:14 2e "00322_edb360_323688_2e_280_status_processes_redo_shipping.html"
Elapsed Hours so far:    0.416

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:14 2e "Data Guard Primary Site"
11:47:14 Current and Last Seq#

-- from MOS Doc ID: 1577401.1
SELECT cu.thread#, cu.dest_id, la.lastarchived "Last Archived", /* 2e.281 */
       cu.currentsequence "Current Sequence", appl.lastapplied "Last Applied"
 FROM (
select gvi.thread#, gvd.dest_id, MAX(gvd.log_sequence) currentsequence
  FROM gv$archive_dest gvd, gv$instance gvi
 WHERE gvd.status = 'VALID'
   AND gvi.inst_id = gvd.inst_id
 GROUP BY thread#, dest_id) cu, (
SELECT thread#, dest_id, MAX(sequence#) lastarchived
  FROM gv$archived_log
 WHERE resetlogs_change# = (
SELECT resetlogs_change#
  FROM v$database)
   AND archived = 'YES'
 GROUP BY thread#, dest_id) la, (
SELECT thread#, dest_id, MAX(sequence#) lastapplied
  FROM gv$archived_log
 WHERE resetlogs_change# = (
SELECT resetlogs_change#
  FROM v$database)
   AND applied = 'YES'
 GROUP BY thread#, dest_id) appl
 WHERE cu.thread# = la.thread#
   AND cu.thread# = appl.thread#
   AND cu.dest_id = la.dest_id
   AND cu.dest_id = appl.dest_id
 ORDER BY 1, 2

11:47:14 2e.281
Elapsed Hours so far:    0.416
Elapsed Hours so far: .416

Elapsed: 00:00:00.00

11:47:14 2e "00323_edb360_323688_2e_281_current_and_last_seq.html"
Elapsed Hours so far:    0.416

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:14 2e "Data Guard Primary Site"
11:47:14 Standby Dest

-- from MOS Doc ID: 1577401.1
SELECT dest_id, database_mode, recovery_mode, protection_mode, standby_logfile_count, standby_logfil
e_active /* 2e.282 */
  FROM v$archive_dest_status
 WHERE destination IS NOT NULL

11:47:14 2e.282
Elapsed Hours so far:    0.416
Elapsed Hours so far: .416

Elapsed: 00:00:00.00

11:47:15 2e "00324_edb360_323688_2e_282_standby_dest.html"
Elapsed Hours so far:    0.416

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:15 2e "Data Guard Primary Site"
11:47:15 Non-default Init Parameters

-- from MOS Doc ID: 1577401.1
SELECT num, '*' "THREAD#", name, value /* 2e.283 */
  FROM v$PARAMETER WHERE NUM IN (
SELECT num
  FROM v$parameter
 WHERE (isdefault = 'FALSE' OR ismodified <> 'FALSE')
   AND name NOT LIKE 'nls%'
 MINUS
SELECT num
  FROM gv$parameter gvp, gv$instance gvi
 WHERE num IN (
SELECT DISTINCT gvpa.num
  FROM gv$parameter gvpa, gv$parameter gvpb
 WHERE gvpa.num = gvpb.num
   AND  gvpa.value <> gvpb.value
   AND (gvpa.isdefault = 'FALSE' OR gvpa.ismodified <> 'FALSE')
   AND gvpa.name NOT LIKE 'nls%')
   AND gvi.inst_id = gvp.inst_id
   AND (gvp.isdefault = 'FALSE' OR gvp.ismodified <> 'FALSE')
   AND gvp.name NOT LIKE 'nls%')
 UNION
SELECT num, TO_CHAR(thread#) "THREAD#", name, value
  FROM gv$parameter gvp, gv$instance gvi
 WHERE num IN (
SELECT DISTINCT gvpa.num
  FROM gv$parameter gvpa, gv$parameter gvpb
 WHERE gvpa.num = gvpb.num
   AND gvpa.value <> gvpb.value
   AND (gvpa.isdefault = 'FALSE' OR gvpa.ismodified <> 'FALSE')
   AND gvp.name NOT LIKE 'nls%')
   AND gvi.inst_id = gvp.inst_id
   AND (gvp.isdefault = 'FALSE' OR gvp.ismodified <> 'FALSE')
   AND gvp.name NOT LIKE 'nls%'
 ORDER BY 1, 2

11:47:15 2e.283
Elapsed Hours so far:    0.416
Elapsed Hours so far: .416

Elapsed: 00:00:00.00

11:47:15 2e "00325_edb360_323688_2e_283_nondefault_init_parameters.html"
Elapsed Hours so far:    0.417

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:16 3a "Database Resource Management (DBRM)"
11:47:16 Consumer Groups

SELECT /*+  NO_MERGE  */ /* 3a.284 */
       *
  FROM dba_rsrc_consumer_groups
 ORDER BY
       1, 2

11:47:16 3a.284
Elapsed Hours so far:    0.417
Elapsed Hours so far: .417

Elapsed: 00:00:00.00

11:47:16 3a "00326_edb360_323688_3a_284_consumer_groups.html"
Elapsed Hours so far:    0.417

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:16 3a "Database Resource Management (DBRM)"
11:47:16 Consumer Group Users and Roles

SELECT /*+  NO_MERGE  */ /* 3a.285 */
       *
  FROM dba_rsrc_consumer_group_privs
 ORDER BY
       1, 2

11:47:16 3a.285
Elapsed Hours so far:    0.417
Elapsed Hours so far: .417

Elapsed: 00:00:00.00

11:47:16 3a "00327_edb360_323688_3a_285_consumer_group_users_and_roles.html"
Elapsed Hours so far:    0.417

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:16 3a "Database Resource Management (DBRM)"
11:47:16 Resource Groups Mappings

SELECT /*+  NO_MERGE  */ /* 3a.286 */
       *
  FROM dba_rsrc_group_mappings
 ORDER BY
       1, 2

11:47:16 3a.286
Elapsed Hours so far:    0.417
Elapsed Hours so far: .417

Elapsed: 00:00:00.00

11:47:16 3a "00328_edb360_323688_3a_286_resource_groups_mappings.html"
Elapsed Hours so far:    0.417

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:17 3a "Database Resource Management (DBRM)"
11:47:17 Resource Groups Mapping Priorities

SELECT /*+  NO_MERGE  */ /* 3a.287 */
       *
  FROM dba_rsrc_mapping_priority
 ORDER BY
       1, 2

11:47:17 3a.287
Elapsed Hours so far:    0.417
Elapsed Hours so far: .417

Elapsed: 00:00:00.00

11:47:17 3a "00329_edb360_323688_3a_287_resource_groups_mapping_priorities.html"
Elapsed Hours so far:    0.417

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:17 3a "Database Resource Management (DBRM)"
11:47:17 Resource Plan Directives

SELECT /*+  NO_MERGE  */ /* 3a.288 */
       *
  FROM dba_rsrc_plan_directives
 ORDER BY
       1, 2

11:47:17 3a.288
Elapsed Hours so far:    0.417
Elapsed Hours so far: .417

Elapsed: 00:00:00.00

11:47:17 3a "00330_edb360_323688_3a_288_resource_plan_directives.html"
Elapsed Hours so far:    0.417

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:17 3a "Database Resource Management (DBRM)"
11:47:17 Resource Plans

SELECT /*+  NO_MERGE  */ /* 3a.289 */
       *
  FROM dba_rsrc_plans
 ORDER BY
       1, 2

11:47:17 3a.289
Elapsed Hours so far:    0.417
Elapsed Hours so far: .417

Elapsed: 00:00:00.00

11:47:17 3a "00331_edb360_323688_3a_289_resource_plans.html"
Elapsed Hours so far:    0.417

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:17 3a "Database Resource Management (DBRM)"
11:47:17 Resource Plan Directives for PDBs

SELECT /*+  NO_MERGE  */ /* 3a.290 */
       *
  FROM dba_cdb_rsrc_plan_directives
 ORDER BY
       1, 2

11:47:17 3a.290
Elapsed Hours so far:    0.417
Elapsed Hours so far: .417

Elapsed: 00:00:00.00

11:47:17 3a "00332_edb360_323688_3a_290_resource_plan_directives_for_pdbs.html"
Elapsed Hours so far:    0.417

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:17 3a "Database Resource Management (DBRM)"
11:47:17 Resource Plans for PDBs

SELECT /*+  NO_MERGE  */ /* 3a.291 */
       *
  FROM dba_cdb_rsrc_plans
 ORDER BY
       1, 2

11:47:17 3a.291
Elapsed Hours so far:    0.417
Elapsed Hours so far: .417

Elapsed: 00:00:00.00

11:47:17 3a "00333_edb360_323688_3a_291_resource_plans_for_pdbs.html"
Elapsed Hours so far:    0.417

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:17 3a "Database Resource Management (DBRM)"
11:47:17 Active Resource Consumer Groups

SELECT /*+  NO_MERGE  */ /* 3a.292 */
       *
  FROM gv$rsrc_consumer_group
 ORDER BY
       1, 2

11:47:17 3a.292
Elapsed Hours so far:    0.417
Elapsed Hours so far: .417

Elapsed: 00:00:00.00

11:47:17 3a "00334_edb360_323688_3a_292_active_resource_consumer_groups.html"
Elapsed Hours so far:    0.417

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:18 3a "Database Resource Management (DBRM)"
11:47:18 Resource Consumer Group History

SELECT /*+  NO_MERGE  */ /* 3a.293 */
       *
  FROM gv$rsrc_cons_group_history
 ORDER BY
       1, 2

11:47:18 3a.293
Elapsed Hours so far:    0.417
Elapsed Hours so far: .417

Elapsed: 00:00:00.00

11:47:18 3a "00335_edb360_323688_3a_293_resource_consumer_group_history.html"
Elapsed Hours so far:    0.417

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:18 3a "Database Resource Management (DBRM)"
11:47:18 Resource Plan

SELECT /*+  NO_MERGE  */ /* 3a.294 */
       *
  FROM gv$rsrc_plan
 ORDER BY
       1, 2

11:47:18 3a.294
Elapsed Hours so far:    0.417
Elapsed Hours so far: .417

Elapsed: 00:00:00.00

11:47:18 3a "00336_edb360_323688_3a_294_resource_plan.html"
Elapsed Hours so far:    0.417

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:18 3a "Database Resource Management (DBRM)"
11:47:18 Resource Plan History

SELECT /*+  NO_MERGE  */ /* 3a.295 */
       *
  FROM gv$rsrc_plan_history
 ORDER BY
       1, 2

11:47:18 3a.295
Elapsed Hours so far:    0.417
Elapsed Hours so far: .417

Elapsed: 00:00:00.00

11:47:18 3a "00337_edb360_323688_3a_295_resource_plan_history.html"
Elapsed Hours so far:    0.417

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:18 3a "Database Resource Management (DBRM)"
11:47:18 RM Stats per Session

SELECT /*+  NO_MERGE  */ /* 3a.296 */
       *
  FROM gv$rsrc_session_info
 ORDER BY
       1, 2

11:47:18 3a.296
Elapsed Hours so far:    0.417
Elapsed Hours so far: .417

Elapsed: 00:00:00.00

11:47:18 3a "00338_edb360_323688_3a_296_rm_stats_per_session.html"
Elapsed Hours so far:    0.417

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:18 3a "Database Resource Management (DBRM)"
11:47:18 Resources Consumed per Consumer Group

SELECT /*+  NO_MERGE  */ /* 3a.297 */
       *
  FROM gv$rsrcmgrmetric
 ORDER BY
       1, 2

11:47:18 3a.297
Elapsed Hours so far:    0.417
Elapsed Hours so far: .417

Elapsed: 00:00:00.00

11:47:18 3a "00339_edb360_323688_3a_297_resources_consumed_per_consumer_group.html"
Elapsed Hours so far:    0.417

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:19 3a "Database Resource Management (DBRM)"
11:47:19 Resources Consumed History

SELECT /*+  NO_MERGE  */ /* 3a.298 */
       *
  FROM gv$rsrcmgrmetric_history
 ORDER BY
       1, 2

11:47:19 3a.298
Elapsed Hours so far:    0.417
Elapsed Hours so far: .417

Elapsed: 00:00:00.00

11:47:19 3a "00340_edb360_323688_3a_298_resources_consumed_history.html"
Elapsed Hours so far:    0.418

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:20 3b "Plan Stability"
11:47:20 SQL Patches

SELECT *
  FROM dba_sql_patches
 ORDER BY
       created DESC

11:47:20 3b.300
Elapsed Hours so far:    0.418
Elapsed Hours so far: .418

Elapsed: 00:00:00.00

11:47:20 3b "00342_edb360_323688_3b_300_sql_patches.html"
Elapsed Hours so far:    0.418

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:20 3b "Plan Stability"
11:47:20 SQL Profiles

SELECT *
  FROM dba_sql_profiles
 ORDER BY
       created DESC

11:47:20 3b.301
Elapsed Hours so far:    0.418
Elapsed Hours so far: .418

Elapsed: 00:00:00.00

11:47:20 3b "00343_edb360_323688_3b_301_sql_profiles.html"
Elapsed Hours so far:    0.418

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:20 3b "Plan Stability"
11:47:20 SQL Plan Profiles Summary by Type and Status

SELECT COUNT(*),
       category,
       type,
       status,
       MIN(created) min_created,
       MAX(created) max_created,
       MEDIAN(created) median_created
  FROM dba_sql_profiles
 GROUP BY
       category,
       type,
       status
 ORDER BY
       1 DESC, 2, 3, 4

11:47:20 3b.302
Elapsed Hours so far:    0.418
Elapsed Hours so far: .418

Elapsed: 00:00:00.00

11:47:20 3b "00344_edb360_323688_3b_302_sql_plan_profiles_summary_by_type_and_status.html"
Elapsed Hours so far:    0.418

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:20 3b "Plan Stability"
11:47:20 SQL Profiles Summary by Creation Month

SELECT TO_CHAR(TRUNC(created, 'MM'), 'YYYY-MM') created,
       COUNT(*) profiles,
       SUM(CASE status WHEN 'ENABLED' THEN 1 ELSE 0 END) enabled,
       SUM(CASE status WHEN 'DISABLED' THEN 1 ELSE 0 END) disabled
  FROM dba_sql_profiles
 GROUP BY
       TRUNC(created, 'MM')
 ORDER BY
       1

11:47:20 3b.303
Elapsed Hours so far:    0.418
Elapsed Hours so far: .418

Elapsed: 00:00:00.00

11:47:20 3b "00345_edb360_323688_3b_303_sql_profiles_summary_by_creation_month.html"
Elapsed Hours so far:    0.418

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:21 3b "Plan Stability"
11:47:21 SQL Plan Baselines

SELECT *
  FROM dba_sql_plan_baselines
 ORDER BY
       created DESC

11:47:21 3b.304
Elapsed Hours so far:    0.418
Elapsed Hours so far: .418

Elapsed: 00:00:00.00

11:47:21 3b "00346_edb360_323688_3b_304_sql_plan_baselines.html"
Elapsed Hours so far:    0.418

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:21 3b "Plan Stability"
11:47:21 SQL Plan Baselines Summary by Status

SELECT COUNT(*),
       enabled,
       accepted,
       fixed,
       reproduced,
       MIN(created) min_created,
       MAX(created) max_created,
       MEDIAN(created) median_created
  FROM dba_sql_plan_baselines
 GROUP BY
       enabled,
       accepted,
       fixed,
       reproduced
 ORDER BY
       1 DESC, 2, 3, 4, 5

11:47:21 3b.305
Elapsed Hours so far:    0.418
Elapsed Hours so far: .418

Elapsed: 00:00:00.00

11:47:21 3b "00347_edb360_323688_3b_305_sql_plan_baselines_summary_by_status.html"
Elapsed Hours so far:    0.418

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:21 3b "Plan Stability"
11:47:21 SQL Plan Baselines Summary by Creation Month

SELECT TO_CHAR(TRUNC(created, 'MM'), 'YYYY-MM') created,
       COUNT(*) baselines,
       SUM(CASE enabled WHEN 'YES' THEN 1 ELSE 0 END) enabled,
       SUM(CASE enabled WHEN 'YES' THEN (CASE accepted WHEN 'YES' THEN 1 ELSE 0 END) ELSE 0 END) acc
epted,
       SUM(CASE enabled WHEN 'YES' THEN (CASE accepted WHEN 'YES' THEN (CASE reproduced WHEN 'YES' T
HEN 1 ELSE 0 END) ELSE 0 END) ELSE 0 END) reproduced,
       SUM(CASE enabled WHEN 'NO' THEN 1 ELSE 0 END) disabled
  FROM dba_sql_plan_baselines
 GROUP BY
       TRUNC(created, 'MM')
 ORDER BY
       1

11:47:21 3b.306
Elapsed Hours so far:    0.418
Elapsed Hours so far: .418

Elapsed: 00:00:00.00

11:47:21 3b "00348_edb360_323688_3b_306_sql_plan_baselines_summary_by_creation_month.html"
Elapsed Hours so far:    0.418

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:21 3b "Plan Stability"
11:47:21 SQL Plan Baselines State by SQL

SELECT q.signature,
       q.sql_handle,
       MIN(q.created) created,
       MAX(q.last_modified) last_modified,
       MAX(q.last_executed) last_executed,
       MAX(q.last_verified) last_verified,
       COUNT(*) plans_in_history,
       SUM(CASE q.enabled WHEN 'YES' THEN 1 ELSE 0 END) enabled,
       SUM(CASE q.enabled||q.accepted WHEN 'YESYES' THEN 1 ELSE 0 END) enabled_and_accepted,
       SUM(CASE q.enabled||q.accepted||q.reproduced WHEN 'YESYESYES' THEN 1 ELSE 0 END) enabled_acce
pted_reproduced,
       SUM(CASE q.enabled||q.accepted||q.reproduced||q.fixed WHEN 'YESYESYESYES' THEN 1 ELSE 0 END)
enabled_accept_reprod_fixed,
       SUM(CASE q.enabled||q.accepted WHEN 'YESNO' THEN 1 ELSE 0 END) pending,
       SUM(CASE q.enabled WHEN 'NO' THEN 1 ELSE 0 END) disabled,
       MIN(q.sql_text) min_sql_text
  FROM dba_sql_plan_baselines q
 GROUP BY
       q.signature,
       q.sql_handle
 ORDER BY
       q.signature,
       q.sql_handle

11:47:21 3b.307
Elapsed Hours so far:    0.418
Elapsed Hours so far: .418

Elapsed: 00:00:00.00

11:47:21 3b "00349_edb360_323688_3b_307_sql_plan_baselines_state_by_sql.html"
Elapsed Hours so far:    0.418

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:22 3b "Plan Stability"
11:47:22 SQL Plan Directives

SELECT d.dir_id,
       d.type,
       d.enabled,
       (CASE WHEN d.internal_state = 'HAS_STATS' OR d.redundant = 'YES' THEN 'SUPERSEDED'
             WHEN d.internal_state IN ('NEW', 'MISSING_STATS', 'PERMANENT') THEN 'USABLE'
             ELSE 'UNKNOWN'
         END) state,
       d.auto_drop,
       f.reason,
       d.created,
       d.last_modified,
       d.last_used,
       d.internal_state,
       d.redundant
  FROM sys."_BASE_OPT_DIRECTIVE" d,
       sys."_BASE_OPT_FINDING" f
  WHERE d.f_id = f.f_id
 ORDER BY 1

11:47:22 3b.308
Elapsed Hours so far:    0.418
Elapsed Hours so far: .418

Elapsed: 00:00:00.00

11:47:22 3b "00350_edb360_323688_3b_308_sql_plan_directives.html"
Elapsed Hours so far:    0.418

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:22 3b "Plan Stability"
11:47:22 SQL Plan Directives - Objects

SELECT *
  FROM dba_sql_plan_dir_objects
 ORDER BY 1,2,3,4

11:47:22 3b.309
Elapsed Hours so far:    0.418
Elapsed Hours so far: .418

Elapsed: 00:00:00.00

11:47:22 3b "00351_edb360_323688_3b_309_sql_plan_directives_objects.html"
Elapsed Hours so far:    0.421

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:32 3c "Cost-based Optimizer (CBO) Statistics"
11:47:32 CBO System Statistics

SELECT /*+  NO_MERGE  */ /* 3c.310 */
       *
  FROM sys.aux_stats$

11:47:32 3c.310
Elapsed Hours so far:    0.421
Elapsed Hours so far: .421

Elapsed: 00:00:00.00

11:47:32 3c "00352_edb360_323688_3c_310_cbo_system_statistics.html"
Elapsed Hours so far:    0.421

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:32 3c "Cost-based Optimizer (CBO) Statistics"
11:47:32 CBO System Statistics History

SELECT /*+  NO_MERGE  */ /* 3c.311 */
       *
  FROM sys.wri$_optstat_aux_history
 ORDER BY 1 DESC, 2

11:47:32 3c.311
Elapsed Hours so far:    0.421
Elapsed Hours so far: .421

Elapsed: 00:00:00.00

11:47:32 3c "00353_edb360_323688_3c_311_cbo_system_statistics_history.html"
Elapsed Hours so far:    0.421

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:32 3c "Cost-based Optimizer (CBO) Statistics"
11:47:32 Stats History Availability

SELECT DBMS_STATS.get_stats_history_availability availability,
       DBMS_STATS.get_stats_history_retention retention
  FROM dual

11:47:32 3c.312
Elapsed Hours so far:    0.421
Elapsed Hours so far: .421

Elapsed: 00:00:00.00

11:47:33 3c "00354_edb360_323688_3c_312_stats_history_availability.html"
Elapsed Hours so far:    0.421

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:33 3c "Cost-based Optimizer (CBO) Statistics"
11:47:33 Default Values for DBMS_STATS

SELECT * FROM sys.optstat_hist_control$

11:47:33 3c.313
Elapsed Hours so far:    0.421
Elapsed Hours so far: .421

Elapsed: 00:00:00.00

11:47:33 3c "00355_edb360_323688_3c_313_default_values_for_dbmsstats.html"
Elapsed Hours so far:    0.421

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:33 3c "Cost-based Optimizer (CBO) Statistics"
11:47:33 Tables Summary

SELECT /*+  NO_MERGE  */ /* 3c.314 */
       owner,
       COUNT(*) tables_count,
       SUM(DECODE(last_analyzed, NULL, 1, 0)) not_analyzed,
       SUM(DECODE(partitioned, 'YES', 1, 0)) partitioned,
       SUM(DECODE(temporary, 'Y', 1, 0)) temporary,
       SUM(DECODE(status, 'VALID', 0, 1)) not_valid,
       SUM(DECODE(logging, 'YES', 0, 1)) not_logging,
       SUM(DECODE(TRIM(cache), 'Y', 1, 0)) cache,
       SUM(DECODE(flash_cache, 'KEEP', 1, 0)) keep_flash_cache,
       SUM(DECODE(cell_flash_cache, 'KEEP', 1, 0)) keep_cell_flash_cache,
       SUM(DECODE(result_cache, 'FORCE', 1, 0)) result_cache_force,
       SUM(DECODE(dependencies, 'ENABLED', 1, 0)) dependencies,
       SUM(DECODE(compression, 'ENABLED', 1, 0)) compression,
       SUM(DECODE(compress_for, 'BASIC', 1, 0)) compress_for_basic,
       SUM(DECODE(compress_for, 'OLTP', 1, 0)) compress_for_oltp,
       SUM(CASE WHEN compress_for IN
       ('ARCHIVE HIGH', 'ARCHIVE LOW', 'QUERY HIGH', 'QUERY LOW')
       THEN 1 ELSE 0 END) compress_for_hcc,
       SUM(DECODE(dropped, 'YES', 1, 0)) dropped,
       SUM(DECODE(read_only, 'YES', 1, 0)) read_only,
       SUM(num_rows) sum_num_rows,
       MAX(num_rows) max_num_rows,
       SUM(blocks) sum_blocks,
       MAX(blocks) max_blocks,
       MIN(last_analyzed) min_last_analyzed,
       MAX(last_analyzed) max_last_analyzed,
       MEDIAN(last_analyzed) median_last_analyzed,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_75_percentile,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_90_percentile,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_95_percentile,
       PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_99_percentile
  FROM dba_tables t
 WHERE table_name NOT LIKE 'BIN$%' -- bug 9930151 reported by brad peek
   AND NOT EXISTS (
SELECT /*+  NO_MERGE  */ NULL
  FROM dba_external_tables e
 WHERE e.owner = t.owner
   AND e.table_name = t.table_name
)
 GROUP BY
       owner
 ORDER BY
       owner

11:47:33 3c.314
Elapsed Hours so far:    0.421
Elapsed Hours so far: .421

Elapsed: 00:00:00.00

11:47:33 3c "00356_edb360_323688_3c_314_tables_summary.html"
Elapsed Hours so far:    0.422

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:35 3c "Cost-based Optimizer (CBO) Statistics"
11:47:35 Table Statistics Summary

SELECT /*+  NO_MERGE  */ /* 3c.315 */
       owner,
       object_type,
       COUNT(*) type_count,
       SUM(DECODE(last_analyzed, NULL, 1, 0)) not_analyzed,
       SUM(DECODE(stattype_locked, NULL, 0, 1)) stats_locked,
       SUM(DECODE(stale_stats, 'YES', 1, 0)) stale_stats,
       SUM(num_rows) sum_num_rows,
       MAX(num_rows) max_num_rows,
       SUM(blocks) sum_blocks,
       MAX(blocks) max_blocks,
       MIN(last_analyzed) min_last_analyzed,
       MAX(last_analyzed) max_last_analyzed,
       MEDIAN(last_analyzed) median_last_analyzed,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_75_percentile,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_90_percentile,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_95_percentile,
       PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_99_percentile
  FROM dba_tab_statistics s
 WHERE table_name NOT LIKE 'BIN$%' -- bug 9930151 reported by brad peek
   AND NOT EXISTS (
SELECT /*+  NO_MERGE  */ NULL
  FROM dba_external_tables e
 WHERE e.owner = s.owner
   AND e.table_name = s.table_name
)
 GROUP BY
       owner, object_type
 ORDER BY
       owner, object_type

11:47:35 3c.315
Elapsed Hours so far:    0.422
Elapsed Hours so far: .422

Elapsed: 00:00:00.00

11:47:35 3c "00357_edb360_323688_3c_315_table_statistics_summary.html"
Elapsed Hours so far:    0.422

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:35 3c "Cost-based Optimizer (CBO) Statistics"
11:47:35 Table Columns Summary

SELECT /*+  NO_MERGE  */ /* 3c.316 */
       owner,
       COUNT(DISTINCT table_name) tables_count,
       COUNT(*) columns_count,
       SUM(DECODE(last_analyzed, NULL, 1, 0)) not_analyzed,
       SUM(DECODE(hidden_column, 'YES', 1, 0)) hidden_column,
       SUM(DECODE(virtual_column, 'YES', 1, 0)) virtual_column,
       SUM(DECODE(histogram, 'NONE', 0, 1)) histogram,
       MIN(last_analyzed) min_last_analyzed,
       MAX(last_analyzed) max_last_analyzed,
       MEDIAN(last_analyzed) median_last_analyzed,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_75_percentile,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_90_percentile,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_95_percentile,
       PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_99_percentile
  FROM dba_tab_cols c
 WHERE table_name NOT LIKE 'BIN$%' -- bug 9930151 reported by brad peek
   AND owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND NOT EXISTS (
SELECT /*+  NO_MERGE  */ NULL
  FROM dba_external_tables e
 WHERE e.owner = c.owner
   AND e.table_name = c.table_name
)
 GROUP BY
       owner
 ORDER BY
       owner

11:47:35 3c.316
Elapsed Hours so far:    0.422
Elapsed Hours so far: .422

Elapsed: 00:00:00.00

11:47:35 3c "00358_edb360_323688_3c_316_table_columns_summary.html"
Elapsed Hours so far:    0.423

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:39 3c "Cost-based Optimizer (CBO) Statistics"
11:47:39 Indexes Summary

SELECT /*+  NO_MERGE  */ /* 3c.317 */
       owner,
       COUNT(DISTINCT table_name) tables_count,
       COUNT(*) indexes_count,
       SUM(DECODE(last_analyzed, NULL, 1, 0)) not_analyzed,
       SUM(DECODE(partitioned, 'YES', 1, 0)) partitioned,
       SUM(DECODE(temporary, 'Y', 1, 0)) temporary,
       SUM(DECODE(status, 'UNUSABLE', 1, 0)) unusable,
       SUM(DECODE(visibility, 'INVISIBLE', 1, 0)) invisible,
       SUM(DECODE(logging, 'YES', 0, 1)) not_logging,
       SUM(DECODE(flash_cache, 'KEEP', 1, 0)) keep_flash_cache,
       SUM(DECODE(cell_flash_cache, 'KEEP', 1, 0)) keep_cell_flash_cache,
       SUM(DECODE(compression, 'ENABLED', 1, 0)) compression,
       SUM(DECODE(dropped, 'YES', 1, 0)) dropped,
       SUM(leaf_blocks) sum_leaf_blocks,
       MAX(leaf_blocks) max_leaf_blocks,
       MAX(blevel) max_blevel,
       MIN(last_analyzed) min_last_analyzed,
       MAX(last_analyzed) max_last_analyzed,
       MEDIAN(last_analyzed) median_last_analyzed,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_75_percentile,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_90_percentile,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_95_percentile,
       PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_99_percentile
  FROM dba_indexes
 WHERE owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 GROUP BY
       owner
 ORDER BY
       owner

11:47:39 3c.317
Elapsed Hours so far:    0.423
Elapsed Hours so far: .423

Elapsed: 00:00:00.00

11:47:39 3c "00359_edb360_323688_3c_317_indexes_summary.html"
Elapsed Hours so far:    0.423

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:39 3c "Cost-based Optimizer (CBO) Statistics"
11:47:39 Ind Summary

SELECT /*+  NO_MERGE  */ /* 3c.318 */
       owner,
       object_type,
       COUNT(*) type_count,
       SUM(DECODE(last_analyzed, NULL, 1, 0)) not_analyzed,
       SUM(DECODE(stattype_locked, NULL, 0, 1)) stats_locked,
       SUM(DECODE(stale_stats, 'YES', 1, 0)) stale_stats,
       SUM(leaf_blocks) sum_leaf_blocks,
       MAX(leaf_blocks) max_leaf_blocks,
       MAX(blevel) max_blevel,
       MIN(last_analyzed) min_last_analyzed,
       MAX(last_analyzed) max_last_analyzed,
       MEDIAN(last_analyzed) median_last_analyzed,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_75_percentile,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_90_percentile,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_95_percentile,
       PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_99_percentile
  FROM dba_ind_statistics
 WHERE owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
   AND owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 GROUP BY
       owner, object_type
 ORDER BY
       owner, object_type

11:47:39 3c.318
Elapsed Hours so far:    0.423
Elapsed Hours so far: .423

Elapsed: 00:00:00.00

11:47:39 3c "00360_edb360_323688_3c_318_ind_summary.html"
Elapsed Hours so far:    0.423

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:40 3c "Cost-based Optimizer (CBO) Statistics"
11:47:40 Table Partitions Summary

SELECT /*+  NO_MERGE  */ /* 3c.319 */
       table_owner,
       COUNT(DISTINCT table_name) tables_count,
       COUNT(*) partitions_count,
       SUM(DECODE(composite, 'YES', 1, 0)) subpartitioned,
       SUM(subpartition_count) subpartition_count,
       SUM(DECODE(last_analyzed, NULL, 1, 0)) not_analyzed,
       SUM(DECODE(logging, 'YES', 0, 1)) not_logging,
       SUM(DECODE(flash_cache, 'KEEP', 1, 0)) keep_flash_cache,
       SUM(DECODE(cell_flash_cache, 'KEEP', 1, 0)) keep_cell_flash_cache,
       SUM(DECODE(compression, 'ENABLED', 1, 0)) compression,
       SUM(DECODE(compress_for, 'BASIC', 1, 0)) compress_for_basic,
       SUM(DECODE(compress_for, 'OLTP', 1, 0)) compress_for_oltp,
       SUM(CASE WHEN compress_for IN
       ('ARCHIVE HIGH', 'ARCHIVE LOW', 'QUERY HIGH', 'QUERY LOW')
       THEN 1 ELSE 0 END) compress_for_hcc,
       SUM(num_rows) sum_num_rows,
       MAX(num_rows) max_num_rows,
       SUM(blocks) sum_blocks,
       MAX(blocks) max_blocks,
       MIN(last_analyzed) min_last_analyzed,
       MAX(last_analyzed) max_last_analyzed,
       MEDIAN(last_analyzed) median_last_analyzed,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_75_percentile,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_90_percentile,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_95_percentile,
       PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_99_percentile
  FROM dba_tab_partitions
 WHERE table_owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSS
YS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUG
INS','ORDSYS','OUTLN','OWBSYS')
   AND table_owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','T
RCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 GROUP BY
       table_owner
 ORDER BY
       table_owner

11:47:40 3c.319
Elapsed Hours so far:    0.423
Elapsed Hours so far: .423

Elapsed: 00:00:00.01

11:47:40 3c "00361_edb360_323688_3c_319_table_partitions_summary.html"
Elapsed Hours so far:    0.423

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:40 3c "Cost-based Optimizer (CBO) Statistics"
11:47:40 Index Partitions Summary

SELECT /*+  NO_MERGE  */ /* 3c.320 */
       index_owner,
       COUNT(DISTINCT index_name) indexes_count,
       COUNT(*) partitions_count,
       SUM(DECODE(composite, 'YES', 1, 0)) subpartitioned,
       SUM(subpartition_count) subpartition_count,
       SUM(DECODE(last_analyzed, NULL, 1, 0)) not_analyzed,
       SUM(DECODE(status, 'UNUSABLE', 1, 0)) unusable,
       SUM(DECODE(logging, 'YES', 0, 1)) not_logging,
       SUM(DECODE(flash_cache, 'KEEP', 1, 0)) keep_flash_cache,
       SUM(DECODE(cell_flash_cache, 'KEEP', 1, 0)) keep_cell_flash_cache,
       SUM(DECODE(compression, 'ENABLED', 1, 0)) compression,
       SUM(leaf_blocks) sum_leaf_blocks,
       MAX(leaf_blocks) max_leaf_blocks,
       MAX(blevel) max_blevel,
       MIN(last_analyzed) min_last_analyzed,
       MAX(last_analyzed) max_last_analyzed,
       MEDIAN(last_analyzed) median_last_analyzed,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_75_percentile,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_90_percentile,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_95_percentile,
       PERCENTILE_DISC(0.99) WITHIN GROUP (ORDER BY last_analyzed) last_analyzed_99_percentile
  FROM dba_ind_partitions
 WHERE index_owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSS
YS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUG
INS','ORDSYS','OUTLN','OWBSYS')
   AND index_owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','T
RCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 GROUP BY
       index_owner
 ORDER BY
       index_owner

11:47:40 3c.320
Elapsed Hours so far:    0.423
Elapsed Hours so far: .423

Elapsed: 00:00:00.00

11:47:40 3c "00362_edb360_323688_3c_320_index_partitions_summary.html"
Elapsed Hours so far:    0.424

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:41 3c "Cost-based Optimizer (CBO) Statistics"
11:47:41 Table Partitioning

WITH pc AS (
SELECT owner, name table_name
,      LISTAGG(column_name,', ') WITHIN GROUP (ORDER BY column_position) part_column_list
FROM   dba_part_key_columns
WHERE  object_type = 'TABLE'
GROUP BY owner, name
), sc as (
SELECT owner, name table_name
,      LISTAGG(column_name,', ') WITHIN GROUP (ORDER BY column_position) subp_column_list
FROM   dba_subpart_key_columns
WHERE  object_type = 'TABLE'
GROUP BY owner, name
), tp as (
SELECT table_owner owner, table_name
,      COUNT(*) part_count
,      COUNT(distinct tablespace_name) part_tablespaces
,      SUM(DECODE(compression,'ENABLE',1)) part_compression_enabled
,      SUM(CASE WHEN compress_for like 'BASIC'         THEN 1 END) part_compressfor_basic
,      SUM(CASE WHEN compress_for like 'QUERY HIGH%'   THEN 1 END) part_compressfor_queryhigh
,      SUM(CASE WHEN compress_for like 'QUERY LOW%'    THEN 1 END) part_compressfor_querylow
,      SUM(CASE WHEN compress_for like 'ARCHIVE HIGH%' THEN 1 END) part_compressfor_archivehigh
,      SUM(CASE WHEN compress_for like 'ARCHIVE LOW%'  THEN 1 END) part_compressfor_archivelow
,      SUM(num_rows) part_num_rows
,      SUM(blocks) part_blocks
,      SUM(DECODE(interval,'YES',1)) part_intervals
,      SUM(DECODE(segment_created,'YES',1)) part_segments_created
FROM   dba_tab_partitions
GROUP BY table_owner, table_name
), sp as (
SELECT table_owner owner, table_name
,      COUNT(*) subp_count
,      COUNT(distinct tablespace_name) subp_tablespaces
,      SUM(DECODE(compression,'ENABLE',1)) subp_compression_enabled
,      SUM(CASE WHEN compress_for like 'BASIC'         THEN 1 END) subp_compressfor_basic
,      SUM(CASE WHEN compress_for like 'QUERY HIGH%'   THEN 1 END) subp_compressfor_queryhigh
,      SUM(CASE WHEN compress_for like 'QUERY LOW%'    THEN 1 END) subp_compressfor_querylow
,      SUM(CASE WHEN compress_for like 'ARCHIVE HIGH%' THEN 1 END) subp_compressfor_archivehigh
,      SUM(CASE WHEN compress_for like 'ARCHIVE LOW%'  THEN 1 END) subp_compressfor_archivelow
,      SUM(num_rows) subp_num_rows
,      SUM(blocks) subp_blocks
,      SUM(DECODE(interval,'YES',1)) subp_intervals
,      SUM(DECODE(segment_created,'YES',1)) subp_segments_created
FROM   dba_tab_subpartitions
GROUP BY table_owner, table_name
)
SELECT /*+  NO_MERGE  */ /* 3c.321 */
  p.owner, p.table_name
, p.partitioning_type
, pc.part_column_list,tp.part_count, tp.part_intervals
,tp.part_num_rows, tp.part_blocks, tp.part_segments_created
,tp.part_tablespaces
,tp.part_compression_enabled
,tp.part_compressfor_basic
,tp.part_compressfor_queryhigh
,tp.part_compressfor_querylow
,tp.part_compressfor_archivehigh
,tp.part_compressfor_archivelow
, NULLIF(p.subpartitioning_type,'NONE') subpartitioning_type
--,DEF_SUBPARTITION_COUNT
, sc.subp_column_list,sp.subp_count, sp.subp_intervals
,sp.subp_num_rows, sp.subp_blocks, sp.subp_segments_created
,sp.subp_tablespaces
,sp.subp_compression_enabled
,sp.subp_compressfor_basic
,sp.subp_compressfor_queryhigh
,sp.subp_compressfor_querylow
,sp.subp_compressfor_archivehigh
,sp.subp_compressfor_archivelow
--,STATUS
--,DEF_COMPRESSION
--,DEF_COMPRESS_FOR
--,IS_NESTED
  FROM dba_part_Tables p
       LEFT OUTER JOIN pc ON pc.owner = p.owner AND pc.table_name = p.table_name
       LEFT OUTER JOIN sc ON sc.owner = p.owner AND sc.table_name = p.table_name
       LEFT OUTER JOIN tp ON tp.owner = p.owner AND tp.table_name = p.table_name
       LEFT OUTER JOIN sp ON sp.owner = p.owner AND sp.table_name = p.table_name
 WHERE p.owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS',
'CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS'
,'ORDSYS','OUTLN','OWBSYS')
   AND p.owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCAN
LZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND p.table_name NOT LIKE 'BIN%'
 ORDER BY
       p.owner, p.table_name

11:47:41 3c.321
Elapsed Hours so far:    0.424
Elapsed Hours so far: .424

Elapsed: 00:00:00.00

11:47:41 3c "00363_edb360_323688_3c_321_table_partitioning.html"
Elapsed Hours so far:    0.424

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:42 3c "Cost-based Optimizer (CBO) Statistics"
11:47:42 Partitioning Keys and Column Usage Statistics

WITH k as (
SELECT owner, name, column_position, column_name
,      'Partition' partitioning_level
FROM   dba_part_key_columns
WHERE  object_type = 'TABLE'
AND    owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
AND    owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
UNION ALL
SELECT owner, name, column_position, column_name
,      'Subpartition'
FROM   dba_subpart_key_columns
WHERE  object_type = 'TABLE'
AND    owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
AND    owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
), c as (
SELECT p.owner, p.table_name, o.object_id
,      c.column_id, c.column_name, c.num_distinct, c.sample_size, c.num_nulls
,         p.partitioning_type
,      p.subpartitioning_type
FROM   dba_objects o
,      dba_part_tables p
,      dba_tab_columns c
WHERE  p.owner = o.owner
AND    p.table_name = o.object_name
AND    o.object_type = 'TABLE'
AND    c.owner = p.owner
AND    c.table_name = p.table_name
)
SELECT /*+  NO_MERGE  */ /* 3c.322 */
       c.owner, c.table_name
,      c.column_id, c.column_name
,      k.partitioning_level
,      CASE WHEN k.partitioning_level = 'Partition'    THEN    c.partitioning_type
            WHEN k.partitioning_level = 'Subpartition' THEN c.subpartitioning_type
       END as partitioning_type
,      k.column_position
,      c.num_distinct, c.sample_size, c.num_nulls
,      u.EQUALITY_PREDS
,      u.EQUIJOIN_PREDS
,      u.NONEQUIJOIN_PREDS
,      u.RANGE_PREDS
,      u.LIKE_PREDS
,      u.NULL_PREDS
,      u.TIMESTAMP
FROM   c
  LEFT OUTER JOIN k
    ON k.owner = c.owner
   AND k.name = c.table_name
   AND k.column_name = c.column_name
  LEFT OUTER JOIN sys.col_usage$ u
    ON u.obj# = c.object_id
   AND u.intcol# = c.column_id
WHERE  (u.obj# IS NOT NULL
or     k.partitioning_level IS NOT NULL)
AND    c.owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS',
'CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS'
,'ORDSYS','OUTLN','OWBSYS')
AND    c.owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCAN
LZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
ORDER BY c.owner, c.table_name, c.column_id, c.column_name

11:47:42 3c.322
Elapsed Hours so far:    0.424
Elapsed Hours so far: .424

Elapsed: 00:00:00.01

11:47:42 3c "00364_edb360_323688_3c_322_partitioning_keys_and_column_usage_statistics.html"
Elapsed Hours so far:    0.424

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:43 3c "Cost-based Optimizer (CBO) Statistics"
11:47:43 Tables with Missing Stats

SELECT /*+  NO_MERGE  */ /* 3c.323 */
       s.owner, s.table_name, s.stale_stats, s.stattype_locked
  FROM dba_tab_statistics s,
       dba_tables t
 WHERE s.object_type = 'TABLE'
   AND s.owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS',
'CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS'
,'ORDSYS','OUTLN','OWBSYS')
   AND s.owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCAN
LZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND s.last_analyzed IS NULL
   AND s.table_name NOT LIKE 'BIN%'
   AND NOT (s.table_name LIKE '%TEMP' OR s.table_name LIKE '%\_TEMP\_%' ESCAPE '\')
   AND t.owner = s.owner
   AND t.table_name = s.table_name
   AND t.temporary = 'N'
   AND NOT EXISTS (
SELECT NULL
  FROM dba_external_tables e
 WHERE e.owner = s.owner
   AND e.table_name = s.table_name
)
 ORDER BY
       s.owner, s.table_name

11:47:43 3c.323
Elapsed Hours so far:    0.424
Elapsed Hours so far: .424

Elapsed: 00:00:00.00

11:47:43 3c "00365_edb360_323688_3c_323_tables_with_missing_stats.html"
Elapsed Hours so far:    0.425

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:45 3c "Cost-based Optimizer (CBO) Statistics"
11:47:45 Tables with Stale Stats

SELECT /*+  NO_MERGE  */ /* 3c.324 */
       s.owner, s.table_name, s.num_rows, s.last_analyzed, s.stattype_locked
  FROM dba_tab_statistics s,
       dba_tables t
 WHERE s.object_type = 'TABLE'
   AND s.owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS',
'CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS'
,'ORDSYS','OUTLN','OWBSYS')
   AND s.owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCAN
LZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND s.stale_stats = 'YES'
   AND s.table_name NOT LIKE 'BIN%'
   AND NOT (s.table_name LIKE '%TEMP' OR s.table_name LIKE '%\_TEMP\_%' ESCAPE '\')
   AND t.owner = s.owner
   AND t.table_name = s.table_name
   AND t.temporary = 'N'
   AND NOT EXISTS (
SELECT NULL
  FROM dba_external_tables e
 WHERE e.owner = s.owner
   AND e.table_name = s.table_name
)
 ORDER BY
       s.owner, s.table_name

11:47:45 3c.324
Elapsed Hours so far:    0.425
Elapsed Hours so far: .425

Elapsed: 00:00:00.00

11:47:45 3c "00366_edb360_323688_3c_324_tables_with_stale_stats.html"
Elapsed Hours so far:    0.425

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:47 3c "Cost-based Optimizer (CBO) Statistics"
11:47:47 Tables with Outdated Stats

SELECT /*+  NO_MERGE  */ /* 3c.325 */
       s.owner, s.table_name, s.num_rows, s.last_analyzed, s.stale_stats, s.stattype_locked
  FROM dba_tab_statistics s,
       dba_tables t
 WHERE s.object_type = 'TABLE'
   AND s.owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS',
'CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS'
,'ORDSYS','OUTLN','OWBSYS')
   AND s.owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCAN
LZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND s.last_analyzed < SYSDATE - 31
   AND s.table_name NOT LIKE 'BIN%'
   AND NOT (s.table_name LIKE '%TEMP' OR s.table_name LIKE '%\_TEMP\_%' ESCAPE '\')
   AND t.owner = s.owner
   AND t.table_name = s.table_name
   AND t.temporary = 'N'
   AND NOT EXISTS (
SELECT NULL
  FROM dba_external_tables e
 WHERE e.owner = s.owner
   AND e.table_name = s.table_name
)
 ORDER BY
       s.owner, s.table_name

11:47:47 3c.325
Elapsed Hours so far:    0.425
Elapsed Hours so far: .425

Elapsed: 00:00:00.00

11:47:48 3c "00367_edb360_323688_3c_325_tables_with_outdated_stats.html"
Elapsed Hours so far:    0.426

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:50 3c "Cost-based Optimizer (CBO) Statistics"
11:47:50 Tables with Locked Stats

SELECT /*+  NO_MERGE  */ /* 3c.326 */
       s.owner, s.table_name, t.temporary, s.num_rows, s.last_analyzed, s.stale_stats, s.stattype_lo
cked, e.type_name external_table_type
  FROM dba_tab_statistics s,
       dba_tables t,
       dba_external_tables e
 WHERE s.object_type = 'TABLE'
   AND s.owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS',
'CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS'
,'ORDSYS','OUTLN','OWBSYS')
   AND s.owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCAN
LZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND s.stattype_locked IS NOT NULL
   AND s.table_name NOT LIKE 'BIN%'
   AND t.owner = s.owner
   AND t.table_name = s.table_name
   AND e.owner(+) = s.owner
   AND e.table_name(+) = s.table_name
 ORDER BY
       s.owner, s.table_name

11:47:50 3c.326
Elapsed Hours so far:    0.426
Elapsed Hours so far: .426

Elapsed: 00:00:00.01

11:47:50 3c "00368_edb360_323688_3c_326_tables_with_locked_stats.html"
Elapsed Hours so far:    0.426

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:51 3c "Cost-based Optimizer (CBO) Statistics"
11:47:51 Global Temporary Tables with Stats

SELECT /*+  NO_MERGE  */ /* 3c.327 */
       s.owner, s.table_name, s.num_rows, s.last_analyzed, s.stale_stats, s.stattype_locked
  FROM dba_tab_statistics s,
       dba_tables t
 WHERE s.object_type = 'TABLE'
   AND s.owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS',
'CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS'
,'ORDSYS','OUTLN','OWBSYS')
   AND s.owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCAN
LZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND s.last_analyzed IS NOT NULL
   AND s.table_name NOT LIKE 'BIN%'
   AND t.owner = s.owner
   AND t.table_name = s.table_name
   AND t.temporary = 'Y'
 ORDER BY
       s.owner, s.table_name

11:47:51 3c.327
Elapsed Hours so far:    0.426
Elapsed Hours so far: .426

Elapsed: 00:00:00.00

11:47:51 3c "00369_edb360_323688_3c_327_global_temporary_tables_with_stats.html"
Elapsed Hours so far:    0.427

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:52 3c "Cost-based Optimizer (CBO) Statistics"
11:47:52 Temp Tables with Stats

SELECT /*+  NO_MERGE  */ /* 3c.328 */
       s.owner, s.table_name, t.temporary, s.num_rows, s.last_analyzed, s.stale_stats, s.stattype_lo
cked
  FROM dba_tab_statistics s,
       dba_tables t
 WHERE s.object_type = 'TABLE'
   AND s.owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS',
'CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS'
,'ORDSYS','OUTLN','OWBSYS')
   AND s.owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCAN
LZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
   AND s.last_analyzed IS NOT NULL
   /*AND s.stale_stats = 'YES'*/
   AND (s.table_name LIKE '%TEMP' OR s.table_name LIKE '%\_TEMP\_%' ESCAPE '\')
   AND s.table_name NOT LIKE 'BIN%'
   AND t.owner = s.owner
   AND t.table_name = s.table_name
   AND NOT EXISTS (
SELECT NULL
  FROM dba_external_tables e
 WHERE e.owner = s.owner
   AND e.table_name = s.table_name
)
 ORDER BY
       s.owner, s.table_name

11:47:52 3c.328
Elapsed Hours so far:    0.427
Elapsed Hours so far: .427

Elapsed: 00:00:00.00

11:47:52 3c "00370_edb360_323688_3c_328_temp_tables_with_stats.html"
Elapsed Hours so far:    0.427

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:47:54 3c "Cost-based Optimizer (CBO) Statistics"
11:47:54 Objects with many Stats Versions

WITH
h AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3c.329 */
       obj#,
       COUNT(*) versions,
       MIN(savtime) min_savtime,
       MAX(savtime) max_savtime,
       MEDIAN(savtime) med_savtime,
       MIN(rowcnt) min_rowcnt,
       MAX(rowcnt) max_rowcnt,
       MEDIAN(rowcnt) med_rowcnt,
       MIN(blkcnt) min_blkcnt,
       MAX(blkcnt) max_blkcnt,
       MEDIAN(blkcnt) med_blkcnt
  FROM sys.wri$_optstat_tab_history
 GROUP BY
       obj#
HAVING COUNT(*) > DBMS_STATS.GET_STATS_HISTORY_RETENTION
)
SELECT /*+  NO_MERGE  */ /* 3c.329 */
       h.versions,
       o.owner,
       o.object_name,
       o.subobject_name,
       o.object_type,
       o.object_id,
       h.min_savtime,
       h.max_savtime,
       h.med_savtime,
       h.min_rowcnt,
       h.max_rowcnt,
       h.med_rowcnt,
       h.min_blkcnt,
       h.max_blkcnt,
       h.med_blkcnt
  FROM h, dba_objects o
 WHERE o.object_id = h.obj#
   AND o.owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS',
'CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS'
,'ORDSYS','OUTLN','OWBSYS')
   AND o.owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCAN
LZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
 ORDER BY
       h.versions DESC,
       o.owner,
       o.object_name,
       o.subobject_name

11:47:54 3c.329
Elapsed Hours so far:    0.427
Elapsed Hours so far: .427

Elapsed: 00:00:00.00

11:47:54 3c "00371_edb360_323688_3c_329_objects_with_many_stats_versions.html"
Get DBMS_STATS.REPORT_STATS_OPERATIONS(detail_level => 'BASIC', format => 'HTML', latestN => 10000, since => TO_TIMESTAMP('2020-10-06T11:22:16', 'YYYY-MM-DD"T"HH24:MI:SS'), until => TO_TIMESTAMP('2020-11-06T11:22:16', 'YYYY-MM-DD"T"HH24:MI:SS'))
Elapsed Hours so far:    0.431

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:48:07 3c "Cost-based Optimizer (CBO) Statistics"
11:48:07 SYS Stats for WRH$, WRI$, WRM$ and WRR$ Tables

select /*+  NO_MERGE  */ /* 3c.331 */
table_name, blocks, num_rows, sample_size, last_analyzed
from dba_tables
where owner = 'SYS'
and table_name like 'WR_$%'
order by table_name

11:48:07 3c.331
Elapsed Hours so far:    0.431
Elapsed Hours so far: .431

Elapsed: 00:00:00.00

11:48:08 3c "00373_edb360_323688_3c_331_sys_stats_for_wrh_wri_wrm_and_wrr_tables.html"
Elapsed Hours so far:    0.431

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:48:08 3c "Cost-based Optimizer (CBO) Statistics"
11:48:08 SYS Stats for WRH$, WRI$, WRM$ and WRR$ Indexes

select /*+  NO_MERGE  */ /* 3c.332 */
table_name, index_name, blevel, leaf_blocks, distinct_keys, num_rows, sample_size, last_analyzed
from dba_indexes
where owner = 'SYS'
and table_name like 'WR_$%'
order by table_name, index_name

11:48:08 3c.332
Elapsed Hours so far:    0.431
Elapsed Hours so far: .431

Elapsed: 00:00:00.00

11:48:08 3c "00374_edb360_323688_3c_332_sys_stats_for_wrh_wri_wrm_and_wrr_indexes.html"
Elapsed Hours so far:    0.431

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:48:08 3c "Cost-based Optimizer (CBO) Statistics"
11:48:08 Table Modifications for WRH$, WRI$, WRM$ and WRR$

SELECT /*+  NO_MERGE  */ /* 3c.333 */
       table_name, partition_name, inserts, updates, deletes, timestamp, truncated
  FROM dba_tab_modifications
 WHERE table_owner = 'SYS'
   AND table_name LIKE 'WR_$%'
 ORDER BY
       table_name, partition_name

11:48:08 3c.333
Elapsed Hours so far:    0.431
Elapsed Hours so far: .431

Elapsed: 00:00:00.00

11:48:08 3c "00375_edb360_323688_3c_333_table_modifications_for_wrh_wri_wrm_and_wrr.html"
Elapsed Hours so far:    0.431

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:48:08 3c "Cost-based Optimizer (CBO) Statistics"
11:48:08 Columns with Histograms in Extended Statistics

WITH i as ( /*composite indexes*/
SELECT	i.table_owner, i.table_name, i.owner index_owner, i.index_name, i.distinct_keys
,	    '('||(LISTAGG('"'||c.column_name||'"',',') WITHIN GROUP (order by c.column_position))||')' col
umn_list
FROM	dba_indexes i
,	    dba_ind_columns c
WHERE   i.table_owner = c.table_owner
AND     i.table_name = c.table_name
AND     i.owner = c.index_owner
AND     i.index_name = c.index_name
AND     i.table_name NOT LIKE 'BIN$%'
AND     i.table_owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQ
OSSYS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDP
LUGINS','ORDSYS','OUTLN','OWBSYS')
AND     i.table_owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM'
,'TRCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
GROUP BY i.table_owner, i.table_name, i.owner, i.index_name, i.distinct_keys
HAVING COUNT(*) > 1
), e as ( /*extended stats*/
SELECT 	e.owner, e.table_name, e.extension_name
,       CAST(e.extension AS VARCHAR(1000)) extension
,       se.histogram, se.num_buckets, se.num_distinct
FROM	dba_stat_extensions e
,       dba_tab_col_statistics se
WHERE	e.creator = 'USER'
AND     se.owner = e.owner
AND     se.table_name = e.table_name
AND     se.column_name = e.extension_name
AND     e.table_name NOT LIKE 'BIN$%'
AND     e.owner NOT IN ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS'
,'CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS
','ORDSYS','OUTLN','OWBSYS')
AND     e.owner NOT IN ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCA
NLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
)
SELECT	e.owner, e.table_name
, 	    'Extension' object_type
,       e.extension_name object_name, e.num_distinct, e.num_buckets, e.extension
,       sc.column_name
,       sc.num_distinct col_num_distinct
,       sc.num_buckets col_num_buckets
,       sc.histogram col_histogram
FROM	e
,       dba_tab_col_statistics sc
WHERE	e.histogram = 'NONE'
AND     e.extension LIKE '%"'||sc.column_name||'"%'
AND     sc.owner = e.owner
AND     sc.table_name = e.table_name
AND     sc.histogram != 'NONE'
AND     sc.num_buckets > 1
AND     e.num_buckets = 1
UNION ALL
SELECT	/*+  NO_MERGE  */ /* 3c.334 */
        i.table_owner, i.table_name
,       'Index' object_type
,       i.index_name object_name, i.distinct_keys, TO_NUMBER(null), i.column_list
,       sc.column_name
,       sc.num_distinct col_num_distinct
,       sc.num_buckets col_num_buckets
,       sc.histogram col_histogram
from	i
,       dba_ind_columns ic
,       dba_tab_col_statistics sc
WHERE 	ic.table_owner = i.table_owner
AND     ic.table_name = i.table_name
AND     ic.index_owner = i.index_owner
AND 	ic.index_name = i.index_name
AND     sc.owner = i.table_owner
AND     sc.table_name = ic.table_name
AND     sc.column_name = ic.column_name
AND     sc.histogram != 'NONE'
AND     sc.num_buckets > 1
AND NOT EXISTS( /*report index if no extension*/
        SELECT 'x'
        FROM    e
        WHERE   e.owner = i.table_owner
        AND     e.table_name = i.table_name
        AND     e.extension = i.column_list
        )
ORDER BY 1,2,3,4

11:48:08 3c.334
Elapsed Hours so far:    0.431
Elapsed Hours so far: .431

Elapsed: 00:00:00.00

11:48:08 3c "00376_edb360_323688_3c_334_columns_with_histograms_in_extended_statistics.html"
Elapsed Hours so far:    0.434

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:48:17 3d "Performance Summaries"
11:48:17 Wait Statistics

-- incarnation from health_check_4.4 (Jon Adams and Jack Agustin)
SELECT /*+  NO_MERGE  */ /* 3d.335 */
       *
  FROM gv$waitstat
 WHERE count > 0
 ORDER BY
       class,
       inst_id

11:48:17 3d.335
Elapsed Hours so far:    0.434
Elapsed Hours so far: .434

Elapsed: 00:00:00.00

11:48:17 3d "00377_edb360_323688_3d_335_wait_statistics.html"
Elapsed Hours so far:    0.434

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:48:17 3d "Performance Summaries"
11:48:17 System Wait Class

SELECT /*+  NO_MERGE  */ /* 3d.336 */
       *
  FROM gv$system_wait_class
 ORDER BY
       inst_id,
       time_waited DESC

11:48:17 3d.336
Elapsed Hours so far:    0.434
Elapsed Hours so far: .434

Elapsed: 00:00:00.00

11:48:18 3d "00378_edb360_323688_3d_336_system_wait_class.html"
Elapsed Hours so far:    0.434

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:48:18 3d "Performance Summaries"
11:48:18 SQL with changing Elapsed Time per Execution (list)

WITH
per_time AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3d.337 */
       h.dbid,
       h.sql_id,
       SYSDATE - CAST(s.end_interval_time AS DATE) days_ago,
       SUM(h.elapsed_time_total) / SUM(h.executions_total) time_per_exec
  FROM dba_hist_sqlstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.executions_total > 0
   AND h.plan_hash_value > 0
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND CAST(s.end_interval_time AS DATE) > SYSDATE - 31
 GROUP BY
       h.dbid,
       h.sql_id,
       SYSDATE - CAST(s.end_interval_time AS DATE)
),
avg_time AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3d.337 */
       dbid,
       sql_id,
       MEDIAN(time_per_exec) med_time_per_exec,
       STDDEV(time_per_exec) std_time_per_exec,
       AVG(time_per_exec)    avg_time_per_exec,
       MIN(time_per_exec)    min_time_per_exec,
       MAX(time_per_exec)    max_time_per_exec
  FROM per_time
 GROUP BY
       dbid,
       sql_id
HAVING COUNT(*) >= 10
   AND MAX(days_ago) - MIN(days_ago) >= 5
   AND MEDIAN(time_per_exec) > 1e4
),
time_over_median AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3d.337 */
       h.dbid,
       h.sql_id,
       h.days_ago,
       (h.time_per_exec / a.med_time_per_exec) time_per_exec_over_med,
       a.med_time_per_exec,
       a.std_time_per_exec,
       a.avg_time_per_exec,
       a.min_time_per_exec,
       a.max_time_per_exec
  FROM per_time h, avg_time a
 WHERE a.sql_id = h.sql_id
),
ranked AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3d.337 */
       RANK () OVER (ORDER BY ABS(REGR_SLOPE(t.time_per_exec_over_med, t.days_ago)) DESC) rank_num,
       t.dbid,
       t.sql_id,
       CASE WHEN REGR_SLOPE(t.time_per_exec_over_med, t.days_ago) > 0 THEN 'IMPROVING' ELSE 'REGRESS
ING' END change,
       ROUND(REGR_SLOPE(t.time_per_exec_over_med, t.days_ago), 3) slope,
       ROUND(AVG(t.med_time_per_exec)/1e6, 3) med_secs_per_exec,
       ROUND(AVG(t.std_time_per_exec)/1e6, 3) std_secs_per_exec,
       ROUND(AVG(t.avg_time_per_exec)/1e6, 3) avg_secs_per_exec,
       ROUND(MIN(t.min_time_per_exec)/1e6, 3) min_secs_per_exec,
       ROUND(MAX(t.max_time_per_exec)/1e6, 3) max_secs_per_exec
  FROM time_over_median t
 GROUP BY
       t.dbid,
       t.sql_id
HAVING ABS(REGR_SLOPE(t.time_per_exec_over_med, t.days_ago)) > 0.1
)
SELECT /*+  NO_MERGE  */ /* 3d.337 */
       DISTINCT
       r.rank_num,
       r.sql_id,
       r.change,
       r.slope,
       r.med_secs_per_exec med_secs_per_exec,
       r.std_secs_per_exec std_secs_per_exec,
       r.avg_secs_per_exec avg_secs_per_exec,
       r.min_secs_per_exec min_secs_per_exec,
       r.max_secs_per_exec max_secs_per_exec,
       COUNT(DISTINCT p.plan_hash_value) plans,
       REPLACE(DBMS_LOB.SUBSTR(s.sql_text, 1000), CHR(10)) sql_text
  FROM ranked r,
       dba_hist_sqltext s,
       dba_hist_sql_plan p
 WHERE r.rank_num <= 20
   AND s.dbid(+) = r.dbid AND s.sql_id(+) = r.sql_id
   AND p.dbid(+) = r.dbid AND p.sql_id(+) = r.sql_id
 GROUP BY
       r.rank_num,
       r.sql_id,
       r.change,
       r.slope,
       r.med_secs_per_exec,
       r.std_secs_per_exec,
       r.avg_secs_per_exec,
       r.min_secs_per_exec,
       r.max_secs_per_exec,
       REPLACE(DBMS_LOB.SUBSTR(s.sql_text, 1000), CHR(10))
 ORDER BY
       r.rank_num

11:48:18 3d.337
Elapsed Hours so far:    0.434
Elapsed Hours so far: .434

Elapsed: 00:00:00.00

11:48:18 3d "00379_edb360_323688_3d_337_sql_with_changing_elapsed_time_per_execution_list.html"
Elapsed Hours so far:    0.435

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:48:23 3d "Performance Summaries"
11:48:23 SQL with changing Elapsed Time per Execution (time series)

WITH
per_time AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3d.338 */
       h.dbid,
       h.sql_id,
       SYSDATE - CAST(s.end_interval_time AS DATE) days_ago,
       SUM(h.elapsed_time_total) / SUM(h.executions_total) time_per_exec
  FROM dba_hist_sqlstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.executions_total > 0
   AND h.plan_hash_value > 0
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND CAST(s.end_interval_time AS DATE) > SYSDATE - 31
 GROUP BY
       h.dbid,
       h.sql_id,
       SYSDATE - CAST(s.end_interval_time AS DATE)
),
avg_time AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3d.338 */
       dbid,
       sql_id,
       MEDIAN(time_per_exec) med_time_per_exec,
       STDDEV(time_per_exec) std_time_per_exec,
       AVG(time_per_exec)    avg_time_per_exec,
       MIN(time_per_exec)    min_time_per_exec,
       MAX(time_per_exec)    max_time_per_exec
  FROM per_time
 GROUP BY
       dbid,
       sql_id
HAVING COUNT(*) >= 10
   AND MAX(days_ago) - MIN(days_ago) >= 5
   AND MEDIAN(time_per_exec) > 1e4
),
time_over_median AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3d.338 */
       h.dbid,
       h.sql_id,
       h.days_ago,
       (h.time_per_exec / a.med_time_per_exec) time_per_exec_over_med,
       a.med_time_per_exec,
       a.std_time_per_exec,
       a.avg_time_per_exec,
       a.min_time_per_exec,
       a.max_time_per_exec
  FROM per_time h, avg_time a
 WHERE a.sql_id = h.sql_id
),
ranked AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3d.338 */
       RANK () OVER (ORDER BY ABS(REGR_SLOPE(t.time_per_exec_over_med, t.days_ago)) DESC) rank_num,
       t.dbid,
       t.sql_id,
       CASE WHEN REGR_SLOPE(t.time_per_exec_over_med, t.days_ago) > 0 THEN 'IMPROVING' ELSE 'REGRESS
ING' END change,
       ROUND(REGR_SLOPE(t.time_per_exec_over_med, t.days_ago), 3) slope,
       ROUND(AVG(t.med_time_per_exec)/1e6, 3) med_secs_per_exec,
       ROUND(AVG(t.std_time_per_exec)/1e6, 3) std_secs_per_exec,
       ROUND(AVG(t.avg_time_per_exec)/1e6, 3) avg_secs_per_exec,
       ROUND(MIN(t.min_time_per_exec)/1e6, 3) min_secs_per_exec,
       ROUND(MAX(t.max_time_per_exec)/1e6, 3) max_secs_per_exec
  FROM time_over_median t
 GROUP BY
       t.dbid,
       t.sql_id
HAVING ABS(REGR_SLOPE(t.time_per_exec_over_med, t.days_ago)) > 0.1
)
SELECT /*+  NO_MERGE  */ /* 3d.338 */
         r.rank_num
       , h.sql_id
       , h.instance_number instance_number_x
       , TO_CHAR(CAST(s.end_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') end_time_x
       , h.plan_hash_value plan_hash_value_x
       , h.executions_total executions_total_x
       , ROUND(h.rows_processed_total / h.executions_total) rows_per_exec
       , ROUND(h.elapsed_time_total   / h.executions_total / 1e6, 3) et_secs_per_exec
       , ROUND(h.cpu_time_total       / h.executions_total / 1e6, 3) cpu_secs_per_exec
       , ROUND(h.iowait_total         / h.executions_total / 1e6, 3) io_secs_per_exec
       , ROUND(h.clwait_total         / h.executions_total / 1e6, 3) cl_secs_per_exec
       , ROUND(h.apwait_total         / h.executions_total / 1e6, 3) ap_secs_per_exec
       , ROUND(h.ccwait_total         / h.executions_total / 1e6, 3) cc_secs_per_exec
       , ROUND(h.plsexec_time_total   / h.executions_total / 1e6, 3) pl_secs_per_exec
       , ROUND(h.javexec_time_total   / h.executions_total / 1e6, 3) ja_secs_per_exec
       , ROUND(h.buffer_gets_total    / h.executions_total) bg_per_exec
       , ROUND(h.disk_reads_total     / h.executions_total) dr_per_exec
       , ROUND(h.direct_writes_total  / h.executions_total) dw_per_exec
       , ROUND(h.physical_read_requests_total   / h.executions_total) prr_per_exec
       , ROUND(h.physical_read_bytes_total      / h.executions_total) prb_per_exec
       , ROUND(h.physical_write_requests_total  / h.executions_total) pwr_per_exec
       , ROUND(h.physical_write_bytes_total     / h.executions_total) pwb_per_exec
       , ROUND(h.io_offload_elig_bytes_total    / h.executions_total) ofb_per_exec
       , ROUND(h.io_interconnect_bytes_total    / h.executions_total) icb_per_exec
       , ROUND(h.optimized_physical_reads_total / h.executions_total) opr_per_exec
       , ROUND(h.cell_uncompressed_bytes_total  / h.executions_total) unb_per_exec
       , ROUND(h.io_offload_return_bytes_total  / h.executions_total) orb_per_exec
  FROM ranked r,
       dba_hist_sqlstat h,
       dba_hist_snapshot s
 WHERE r.rank_num <= 20
   AND h.sql_id = r.sql_id
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.executions_total > 0
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
 ORDER BY
       r.rank_num,
       h.sql_id,
       h.instance_number,
       s.end_interval_time,
       h.plan_hash_value

11:48:23 3d.338
Elapsed Hours so far:    0.435
Elapsed Hours so far: .435

Elapsed: 00:00:00.00

11:48:23 3d "00380_edb360_323688_3d_338_sql_with_changing_elapsed_time_per_execution_time_series.html"
Elapsed Hours so far:    0.436

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:48:24 3d "Performance Summaries"
11:48:24 SQL with multiple Execution Plans

WITH
per_phv AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3d.339 */
       h.dbid,
       h.sql_id,
       h.plan_hash_value,
       MIN(s.begin_interval_time) min_time,
       MAX(s.end_interval_time) max_time,
       MEDIAN(h.elapsed_time_total / h.executions_total) med_time_per_exec,
       STDDEV(h.elapsed_time_total / h.executions_total) std_time_per_exec,
       AVG(h.elapsed_time_total / h.executions_total)    avg_time_per_exec,
       MIN(h.elapsed_time_total / h.executions_total)    min_time_per_exec,
       MAX(h.elapsed_time_total / h.executions_total)    max_time_per_exec,
       STDDEV(h.elapsed_time_total / h.executions_total) / AVG(h.elapsed_time_total / h.executions_t
otal) std_dev,
       MAX(h.executions_total) executions_total,
       MEDIAN(h.elapsed_time_total / h.executions_total) * MAX(h.executions_total) total_elapsed_tim
e
  FROM dba_hist_sqlstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.executions_total > 1
   AND h.plan_hash_value > 0
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND CAST(s.end_interval_time AS DATE) > SYSDATE - 31
 GROUP BY
       h.dbid,
       h.sql_id,
       h.plan_hash_value
),
ranked1 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3d.339 */
       RANK () OVER (ORDER BY STDDEV(med_time_per_exec)/AVG(med_time_per_exec) DESC) rank_num1,
       dbid,
       sql_id,
       COUNT(*) plans,
       SUM(total_elapsed_time) total_elapsed_time,
       MIN(med_time_per_exec) min_med_time_per_exec,
       MAX(med_time_per_exec) max_med_time_per_exec
  FROM per_phv
 GROUP BY
       dbid,
       sql_id
HAVING COUNT(*) > 1
),
ranked2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3d.339 */
       RANK () OVER (ORDER BY r.total_elapsed_time DESC) rank_num2,
       r.rank_num1,
       r.sql_id,
       r.plans,
       p.plan_hash_value,
       TO_CHAR(CAST(p.min_time AS DATE), 'YYYY-MM-DD/HH24') min_time,
       TO_CHAR(CAST(p.max_time AS DATE), 'YYYY-MM-DD/HH24') max_time,
       ROUND(p.med_time_per_exec / 1e6, 3) med_secs_per_exec,
       p.executions_total executions,
       ROUND(p.med_time_per_exec * p.executions_total / 1e6, 3) aprox_tot_secs,
       ROUND(p.std_time_per_exec / 1e6, 3) std_secs_per_exec,
       ROUND(p.avg_time_per_exec / 1e6, 3) avg_secs_per_exec,
       ROUND(p.min_time_per_exec / 1e6, 3) min_secs_per_exec,
       ROUND(p.max_time_per_exec / 1e6, 3) max_secs_per_exec,
       REPLACE(DBMS_LOB.SUBSTR(s.sql_text, 1000), CHR(10)) sql_text
  FROM ranked1 r,
       per_phv p,
       dba_hist_sqltext s
 WHERE r.rank_num1 <= 20 * 5
   AND p.dbid = r.dbid
   AND p.sql_id = r.sql_id
   AND s.dbid(+) = r.dbid AND s.sql_id(+) = r.sql_id
)
SELECT /*+  NO_MERGE  */ /* 3d.339 */
       r.sql_id,
       r.plans,
       r.plan_hash_value,
       r.min_time,
       r.max_time,
       r.med_secs_per_exec,
       r.executions,
       r.aprox_tot_secs,
       r.std_secs_per_exec,
       r.avg_secs_per_exec,
       r.min_secs_per_exec,
       r.max_secs_per_exec,
       r.sql_text
  FROM ranked2 r
 WHERE rank_num2 <= 20
 ORDER BY
       r.rank_num2,
       r.sql_id,
       r.min_time,
       r.plan_hash_value

11:48:24 3d.339
Elapsed Hours so far:    0.436
Elapsed Hours so far: .436

Elapsed: 00:00:00.01

11:48:24 3d "00381_edb360_323688_3d_339_sql_with_multiple_execution_plans.html"
Elapsed Hours so far:    0.436

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:48:25 3d "Performance Summaries"
11:48:25 Top Plans

-- provided by David Kurtz
WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 3d.340 */
       h.sql_id,
       h.sql_plan_hash_value,
       h.dbid,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.sql_id IS NOT NULL
   AND h.sql_plan_hash_value > 0
GROUP BY
       h.sql_id,
       h.sql_plan_hash_value,
       h.dbid
), hist2 as (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3d.340 */
       DISTINCT
       h.sql_id
     , h.sql_plan_hash_value
     , h.dbid
     , h.samples
     , CASE WHEN s.rowid IS NOT NULL THEN samples ELSE 0 END sql_samples
     , SUM(h.samples) over (partition by h.dbid, h.sql_plan_hash_value) plan_samples
     , DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h
    LEFT OUTER JOIN dba_hist_sqltext s
    ON s.sql_id = h.sql_id AND s.dbid = h.dbid
), hist3 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3d.340 */
       hist2.*
     , ROW_NUMBER() over (partition by dbid, sql_plan_hash_value order by sql_samples DESC) sql_id_r
ank
   FROM hist2
), hist4 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3d.340 */
       hist3.*
     , ROW_NUMBER() over (order by sql_samples DESC) rn
  FROM hist3
WHERE sql_id_rank = 1
), total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3d.340 */
       SUM(samples) samples FROM hist
)
SELECT /*+  NO_MERGE  */ /* 3d.340 */
       h.sql_id plan_top_sql_id,
       h.sql_plan_hash_value,
       h.plan_samples,
       ROUND(100 * h.plan_samples / t.samples, 1) percent,
       h.sql_text
  FROM hist4 h,
       total t
WHERE h.samples >= t.samples / 1000 AND h.rn <= 14
UNION ALL
SELECT 'Others',
       TO_NUMBER(NULL),
       NVL(SUM(h.plan_samples), 0) samples,
       NVL(ROUND(100 * SUM(h.plan_samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist4 h,
       total t
WHERE h.plan_samples < t.samples / 1000 OR rn > 14
ORDER BY 3 DESC NULLS LAST

11:48:25 3d.340
Elapsed Hours so far:    0.436
Elapsed Hours so far: .436

Elapsed: 00:00:00.00

11:48:25 3d "00382_edb360_323688_3d_340_top_plans.html"
Elapsed Hours so far:    0.436

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:48:25 3d "Performance Summaries"
11:48:25 Result Cache related parameters

-- provided by Simon Pane
SELECT /*+  NO_MERGE  */ /* 3d.341 */
       inst_id, name "PARAMETER", value, isdefault, ismodified
  FROM gv$system_parameter2
 WHERE name IN ('result_cache_mode','result_cache_max_size','result_cache_max_result')
 ORDER BY 2,1,3

11:48:25 3d.341
Elapsed Hours so far:    0.436
Elapsed Hours so far: .436

Elapsed: 00:00:00.00

11:48:25 3d "00383_edb360_323688_3d_341_result_cache_related_parameters.html"
Elapsed Hours so far:    0.436

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:48:26 3d "Performance Summaries"
11:48:26 Result Cache status

-- provided by Simon Pane
SELECT dbms_result_cache.status FROM dual

11:48:26 3d.342
Elapsed Hours so far:    0.436
Elapsed Hours so far: .436

Elapsed: 00:00:00.00

11:48:26 3d "00384_edb360_323688_3d_342_result_cache_status.html"
Elapsed Hours so far:    0.436

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:48:26 3d "Performance Summaries"
11:48:26 Result Cache memory

-- provided by Simon Pane
SELECT /*+  NO_MERGE  */ /* 3d.343 */
       inst_id, free, count(*)
  FROM gv$result_cache_memory
 GROUP BY inst_id, free

11:48:26 3d.343
Elapsed Hours so far:    0.436
Elapsed Hours so far: .436

Elapsed: 00:00:00.01

11:48:26 3d "00385_edb360_323688_3d_343_result_cache_memory.html"
Elapsed Hours so far:    0.446

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:02 3d "Performance Summaries"
11:49:02 Result Cache statistics

-- provided by Simon Pane
SELECT /*+  NO_MERGE  */ /* 3d.344 */
       inst_id, name, value
  FROM gv$result_cache_statistics
 ORDER BY 1, 2

11:49:02 3d.344
Elapsed Hours so far:    0.446
Elapsed Hours so far: .446

Elapsed: 00:00:00.00

11:49:02 3d "00386_edb360_323688_3d_344_result_cache_statistics.html"
Elapsed Hours so far:    0.446

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:03 3d "Performance Summaries"
11:49:03 Client Result Cache statistics

-- provided by Simon Pane
SELECT /*+  NO_MERGE  */ /* 3d.345 */
       stat_id, SUBSTR(name,1,20), value, cache_id
  FROM client_result_cache_stats$
 ORDER BY cache_id, stat_id

11:49:03 3d.345
Elapsed Hours so far:    0.446
Elapsed Hours so far: .446

Elapsed: 00:00:00.00

11:49:03 3d "00387_edb360_323688_3d_345_client_result_cache_statistics.html"
Elapsed Hours so far:    0.446

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:03 3d "Performance Summaries"
11:49:03 AAS for past minute

-- inspired by Kyle Hailey blogs
-- http://www.kylehailey.com/wait-event-and-wait-class-metrics-vs-vsystem_event/
-- http://www.kylehailey.com/oracle-cpu-time/
WITH
ora_cpu_used AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3d.346 */
       '2' row_type,
       'Oracle CPU used' timed_event,
       sm.inst_id,
       sm.begin_time,
       sm.end_time,
       ROUND(sm.value / 100, 3) aas --(/ 100 is to convert from cs to sec)
  FROM gv$sysmetric sm
 WHERE sm.metric_name='CPU Usage Per Sec'
   AND sm.group_id = 2 -- 1 minute
),
system_cpu_used AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3d.346 */
       '4' row_type,
       'System CPU used' timed_event,
       sm.inst_id,
       sm.begin_time,
       sm.end_time,
       ROUND((sm.value / 100) * TO_NUMBER(p.value), 3) aas -- (/ 100 is to convert % to fraction)
  FROM gv$sysmetric sm,
       gv$system_parameter2 p
 WHERE sm.metric_name='Host CPU Utilization (%)'
   AND sm.group_id = 2 -- 1 minute
   AND sm.inst_id = p.inst_id
   AND p.name = 'cpu_count'
),
non_idle_waits AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3d.346 */
       '6' row_type,
       wc.wait_class timed_event,
       wcm.inst_id,
       wcm.begin_time,
       wcm.end_time,
       ROUND(wcm.time_waited/wcm.intsize_csec, 3) aas
  FROM gv$waitclassmetric wcm,
       gv$system_wait_class wc
 WHERE wcm.inst_id = wc.inst_id
   AND wcm.wait_class_id = wc.wait_class_id
   AND wcm.wait_class# = wc.wait_class#
   AND wcm.time_waited > 0
   AND wcm.wait_count > 0
   AND wc.wait_class != 'Idle'
   AND ROUND(wcm.time_waited/wcm.intsize_csec, 3) >= 0.001
),
time_window AS ( -- one row with oldest and newest date sample
SELECT MIN(begin_time) begin_time, MAX(end_time) end_time FROM (
SELECT MIN(begin_time) begin_time, MAX(end_time) end_time FROM ora_cpu_used
 UNION ALL
SELECT MIN(begin_time) begin_time, MAX(end_time) end_time FROM system_cpu_used
 UNION ALL
SELECT MIN(begin_time) begin_time, MAX(end_time) end_time FROM non_idle_waits
)),
ora_dem_cpu AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3d.346 */
       '1' row_type,
       'Oracle demand for CPU' timed_event,
       ash.inst_id,
       tw.begin_time,
       tw.end_time,
       ROUND(COUNT(*) / ((tw.end_time - tw.begin_time) * 24 * 60 * 60), 3) aas -- samples over time
in secs
  FROM gv$active_session_history ash,
       time_window tw
 WHERE ash.session_state = 'ON CPU'
   AND CAST(sample_time AS DATE) BETWEEN tw.begin_time AND tw.end_time
   AND 'Y' = 'Y'
 GROUP BY
       ash.inst_id,
       tw.begin_time,
       tw.end_time
),
ora_wait_cpu AS (
SELECT '3' row_type,
       'Oracle wait for CPU (demand - used)' timed_event,
       d.inst_id,
       LEAST(d.begin_time, u.begin_time) begin_time,
       GREATEST(d.end_time, u.end_time) end_time,
       CASE WHEN d.aas > u.aas THEN d.aas - u.aas ELSE 0 END aas
  FROM ora_dem_cpu d,
       ora_cpu_used u
 WHERE d.inst_id = u.inst_id
),
system_cpu_used_no_ora AS (
SELECT '5' row_type,
       'System CPU used (excludes Oracle)' timed_event,
       s.inst_id,
       LEAST(s.begin_time, u.begin_time) begin_time,
       GREATEST(s.end_time, u.end_time) end_time,
       CASE WHEN s.aas > u.aas THEN s.aas - u.aas ELSE 0 END aas
  FROM system_cpu_used s,
       ora_cpu_used u
 WHERE s.inst_id = u.inst_id
),
all_pieces AS (
SELECT * FROM ora_dem_cpu
 UNION ALL
SELECT * FROM ora_cpu_used
 UNION ALL
SELECT * FROM ora_wait_cpu
 UNION ALL
SELECT * FROM system_cpu_used
 UNION ALL
SELECT * FROM system_cpu_used_no_ora
 UNION ALL
SELECT * FROM non_idle_waits
)
SELECT /*+  NO_MERGE  */ /* 3d.346 */
       inst_id,
       timed_event,
       aas
  FROM all_pieces
 ORDER BY
       inst_id,
       row_type,
       aas DESC,
       timed_event

11:49:03 3d.346
Elapsed Hours so far:    0.446
Elapsed Hours so far: .446

Elapsed: 00:00:00.00

11:49:03 3d "00388_edb360_323688_3d_346_aas_for_past_minute.html"
Elapsed Hours so far:    0.446

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:03 3d "Performance Summaries"
11:49:03 Wait Class Metric for past minute

-- inspired by Kyle Hailey blogs
-- http://www.kylehailey.com/wait-event-and-wait-class-metrics-vs-vsystem_event/
-- http://www.kylehailey.com/oracle-cpu-time/
SELECT /*+  NO_MERGE  */ /* 3d.347 */
       wc.wait_class,
       wcm.*,
       ROUND(wcm.time_waited/wcm.intsize_csec, 3) aas,
       CASE WHEN wc.wait_class = 'User I/O' THEN
       ROUND(10 * wcm.time_waited  / wcm.wait_count, 3) END avg_io_ms
  FROM gv$waitclassmetric wcm,
       gv$system_wait_class wc
 WHERE wcm.inst_id = wc.inst_id
   AND wcm.wait_class_id = wc.wait_class_id
   AND wcm.wait_class# = wc.wait_class#
   AND wcm.time_waited > 0
   AND wcm.wait_count > 0
   AND wc.wait_class != 'Idle'
   AND ROUND(wcm.time_waited/wcm.intsize_csec, 3) >= 0.001
 ORDER BY
       wcm.inst_id,
       wc.wait_class

11:49:03 3d.347
Elapsed Hours so far:    0.446
Elapsed Hours so far: .446

Elapsed: 00:00:00.01

11:49:03 3d "00389_edb360_323688_3d_347_wait_class_metric_for_past_minute.html"
Elapsed Hours so far:    0.447

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:04 3d "Performance Summaries"
11:49:04 Event Metric for past minute

-- inspired by Kyle Hailey blogs
-- http://www.kylehailey.com/wait-event-and-wait-class-metrics-vs-vsystem_event/
-- http://www.kylehailey.com/oracle-cpu-time/
SELECT /*+  NO_MERGE  */ /* 3d.348 */
       en.wait_class,
       en.name event,
       em.*,
       ROUND(em.time_waited / em.intsize_csec, 3) aas,
       CASE WHEN en.wait_class = 'User I/O' THEN 10 * em.time_waited  / em.wait_count END avg_io_ms
  FROM gv$eventmetric em,
       gv$event_name en
 WHERE em.inst_id = en.inst_id
   AND em.event_id = en.event_id
   AND em.event# = en.event#
   AND em.time_waited > 0
   AND em.wait_count > 0
   AND en.wait_class != 'Idle'
 ORDER BY
       em.inst_id,
       en.wait_class,
       en.name

11:49:04 3d.348
Elapsed Hours so far:    0.447
Elapsed Hours so far: .447

Elapsed: 00:00:00.00

11:49:04 3d "00390_edb360_323688_3d_348_event_metric_for_past_minute.html"
Elapsed Hours so far:    0.447

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:04 3d "Performance Summaries"
11:49:04 System Metric for past minute

-- inspired by Kyle Hailey blogs
-- http://www.kylehailey.com/wait-event-and-wait-class-metrics-vs-vsystem_event/
-- http://www.kylehailey.com/oracle-cpu-time/
SELECT /*+  NO_MERGE  */ /* 3d.349 */
       *
  FROM gv$sysmetric
 WHERE group_id = 2 -- 1 minute
 ORDER BY
       inst_id,
       metric_name

11:49:04 3d.349
Elapsed Hours so far:    0.447
Elapsed Hours so far: .447

Elapsed: 00:00:00.00

11:49:04 3d "00391_edb360_323688_3d_349_system_metric_for_past_minute.html"
Elapsed Hours so far:    0.447

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:04 3d "Performance Summaries"
11:49:04 System Metric Summary for past hour

-- inspired by Kyle Hailey blogs
-- http://www.kylehailey.com/wait-event-and-wait-class-metrics-vs-vsystem_event/
-- http://www.kylehailey.com/oracle-cpu-time/
SELECT /*+  NO_MERGE  */ /* 3d.350 */
       *
  FROM gv$sysmetric_summary
 ORDER BY
       inst_id,
       metric_name

11:49:04 3d.350
Elapsed Hours so far:    0.447
Elapsed Hours so far: .447

Elapsed: 00:00:00.00

11:49:04 3d "00392_edb360_323688_3d_350_system_metric_summary_for_past_hour.html"
Elapsed Hours so far:    0.447

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:05 3e "Operating System (OS) Statistics History"
11:49:05 Operating System (OS) Statistics

SELECT /*+  NO_MERGE  */ /* 3e.351 */
       *
  FROM gv$osstat

11:49:05 3e.351
Elapsed Hours so far:    0.447
Elapsed Hours so far: .447

Elapsed: 00:00:00.00

11:49:06 3e "00393_edb360_323688_3e_351_operating_system_os_statistics.html"
Elapsed Hours so far:    0.447

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:06 3e "Operating System (OS) Statistics History"
11:49:06 OS Load and CPU Cores for Cluster

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.352 */
       snap_id,
       dbid,
       instance_number,
       stat_name,
       value
  FROM dba_hist_osstat
 WHERE stat_name IN ('LOAD', 'NUM_CPU_CORES')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = instance_number
),
manual_pivot AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.352 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'LOAD'            THEN value ELSE 0 END) load,
       SUM(CASE stat_name WHEN 'NUM_CPU_CORES'   THEN value ELSE 0 END) num_cpu_cores
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
)
SELECT u.snap_id,
       TO_CHAR(MIN(s.begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(s.end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(u.load), 2) load,
       SUM(u.num_cpu_cores) num_cpu_cores,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM manual_pivot u,
       dba_hist_snapshot s
 WHERE s.snap_id         = u.snap_id
   AND s.dbid            = u.dbid
   AND s.instance_number = u.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
 GROUP BY
       u.snap_id
 ORDER BY
       u.snap_id

11:49:06 3e.352
Elapsed Hours so far:    0.447
Elapsed Hours so far: .447

Elapsed: 00:00:00.00

11:49:06 3e "00394_edb360_323688_3e_352_os_load_and_cpu_cores_for_cluster.html"
11:49:06 3e "00395_edb360_323688_3e_352_os_load_and_cpu_cores_for_cluster_line_chart.html"
Elapsed Hours so far:    0.447

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:06 3e "Operating System (OS) Statistics History"
11:49:06 OS Load and CPU Cores for Instance 1

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.352 */
       snap_id,
       dbid,
       instance_number,
       stat_name,
       value
  FROM dba_hist_osstat
 WHERE stat_name IN ('LOAD', 'NUM_CPU_CORES')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 1
),
manual_pivot AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.352 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'LOAD'            THEN value ELSE 0 END) load,
       SUM(CASE stat_name WHEN 'NUM_CPU_CORES'   THEN value ELSE 0 END) num_cpu_cores
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
)
SELECT u.snap_id,
       TO_CHAR(MIN(s.begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(s.end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(u.load), 2) load,
       SUM(u.num_cpu_cores) num_cpu_cores,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM manual_pivot u,
       dba_hist_snapshot s
 WHERE s.snap_id         = u.snap_id
   AND s.dbid            = u.dbid
   AND s.instance_number = u.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
 GROUP BY
       u.snap_id
 ORDER BY
       u.snap_id

11:49:06 3e.353
Elapsed Hours so far:    0.447
Elapsed Hours so far: .447

Elapsed: 00:00:00.00

11:49:06 3e "00396_edb360_323688_3e_353_os_load_and_cpu_cores_for_instance_1.html"
11:49:06 3e "00397_edb360_323688_3e_353_os_load_and_cpu_cores_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.447

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:07 3e "Operating System (OS) Statistics History"
11:49:07 OS Load and CPU Cores for Instance 2

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.352 */
       snap_id,
       dbid,
       instance_number,
       stat_name,
       value
  FROM dba_hist_osstat
 WHERE stat_name IN ('LOAD', 'NUM_CPU_CORES')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 2
),
manual_pivot AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.352 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'LOAD'            THEN value ELSE 0 END) load,
       SUM(CASE stat_name WHEN 'NUM_CPU_CORES'   THEN value ELSE 0 END) num_cpu_cores
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
)
SELECT u.snap_id,
       TO_CHAR(MIN(s.begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(s.end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(u.load), 2) load,
       SUM(u.num_cpu_cores) num_cpu_cores,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM manual_pivot u,
       dba_hist_snapshot s
 WHERE s.snap_id         = u.snap_id
   AND s.dbid            = u.dbid
   AND s.instance_number = u.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
 GROUP BY
       u.snap_id
 ORDER BY
       u.snap_id

11:49:07 3e.354
Elapsed Hours so far:    0.447
Elapsed Hours so far: .447

Elapsed: 00:00:00.01

11:49:07 3e "00398_edb360_323688_3e_354_os_load_and_cpu_cores_for_instance_2.html"
11:49:07 3e "00399_edb360_323688_3e_354_os_load_and_cpu_cores_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.447

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:07 3e "Operating System (OS) Statistics History"
11:49:07 OS Load and CPU Subscription Threshold for Cluster

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.355 */
       snap_id,
       dbid,
       instance_number,
       stat_name,
       value
  FROM dba_hist_osstat
 WHERE stat_name IN ('LOAD', 'NUM_CPU_CORES')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = instance_number
),
manual_pivot AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.355 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'LOAD'            THEN value ELSE 0 END) load,
       SUM(CASE stat_name WHEN 'NUM_CPU_CORES'   THEN value ELSE 0 END) num_cpu_cores
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
)
SELECT u.snap_id,
       TO_CHAR(MIN(s.begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(s.end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(u.load), 2) load,
       --SUM(u.num_cpu_cores) num_cpu_cores,
       32 cpu_load_threshold,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM manual_pivot u,
       dba_hist_snapshot s
 WHERE s.snap_id         = u.snap_id
   AND s.dbid            = u.dbid
   AND s.instance_number = u.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
 GROUP BY
       u.snap_id
 ORDER BY
       u.snap_id

11:49:07 3e.355
Elapsed Hours so far:    0.447
Elapsed Hours so far: .447

Elapsed: 00:00:00.00

11:49:07 3e "00400_edb360_323688_3e_355_os_load_and_cpu_subscription_threshold_for_cluster.html"
11:49:07 3e "00401_edb360_323688_3e_355_os_load_and_cpu_subscription_threshold_for_cluster_line_chart.html"
Elapsed Hours so far:    0.448

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:07 3e "Operating System (OS) Statistics History"
11:49:07 OS Load and CPU Subscription Threshold for Instance 1

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.355 */
       snap_id,
       dbid,
       instance_number,
       stat_name,
       value
  FROM dba_hist_osstat
 WHERE stat_name IN ('LOAD', 'NUM_CPU_CORES')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 1
),
manual_pivot AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.355 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'LOAD'            THEN value ELSE 0 END) load,
       SUM(CASE stat_name WHEN 'NUM_CPU_CORES'   THEN value ELSE 0 END) num_cpu_cores
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
)
SELECT u.snap_id,
       TO_CHAR(MIN(s.begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(s.end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(u.load), 2) load,
       --SUM(u.num_cpu_cores) num_cpu_cores,
       32 cpu_load_threshold,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM manual_pivot u,
       dba_hist_snapshot s
 WHERE s.snap_id         = u.snap_id
   AND s.dbid            = u.dbid
   AND s.instance_number = u.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
 GROUP BY
       u.snap_id
 ORDER BY
       u.snap_id

11:49:07 3e.356
Elapsed Hours so far:    0.448
Elapsed Hours so far: .448

Elapsed: 00:00:00.00

11:49:08 3e "00402_edb360_323688_3e_356_os_load_and_cpu_subscription_threshold_for_instance_1.html"
11:49:08 3e "00403_edb360_323688_3e_356_os_load_and_cpu_subscription_threshold_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.448

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:08 3e "Operating System (OS) Statistics History"
11:49:08 OS Load and CPU Subscription Threshold for Instance 2

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.355 */
       snap_id,
       dbid,
       instance_number,
       stat_name,
       value
  FROM dba_hist_osstat
 WHERE stat_name IN ('LOAD', 'NUM_CPU_CORES')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 2
),
manual_pivot AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.355 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'LOAD'            THEN value ELSE 0 END) load,
       SUM(CASE stat_name WHEN 'NUM_CPU_CORES'   THEN value ELSE 0 END) num_cpu_cores
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
)
SELECT u.snap_id,
       TO_CHAR(MIN(s.begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(s.end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(u.load), 2) load,
       --SUM(u.num_cpu_cores) num_cpu_cores,
       32 cpu_load_threshold,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM manual_pivot u,
       dba_hist_snapshot s
 WHERE s.snap_id         = u.snap_id
   AND s.dbid            = u.dbid
   AND s.instance_number = u.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
 GROUP BY
       u.snap_id
 ORDER BY
       u.snap_id

11:49:08 3e.357
Elapsed Hours so far:    0.448
Elapsed Hours so far: .448

Elapsed: 00:00:00.00

11:49:08 3e "00404_edb360_323688_3e_357_os_load_and_cpu_subscription_threshold_for_instance_2.html"
11:49:08 3e "00405_edb360_323688_3e_357_os_load_and_cpu_subscription_threshold_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.448

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:08 3e "Operating System (OS) Statistics History"
11:49:08 CPU Time Percent for Cluster

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.358 */
       snap_id,
       dbid,
       instance_number,
       stat_name,
       value - LAG(value) OVER (PARTITION BY dbid, instance_number, stat_id ORDER BY snap_id) value
  FROM dba_hist_osstat
 WHERE stat_name IN ('IDLE_TIME', 'BUSY_TIME', 'USER_TIME', 'SYS_TIME', 'IOWAIT_TIME', 'NICE_TIME')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = instance_number
),
manual_pivot AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.358 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'IDLE_TIME'   THEN value ELSE 0 END) idle_time,
       SUM(CASE stat_name WHEN 'BUSY_TIME'   THEN value ELSE 0 END) busy_time,
       SUM(CASE stat_name WHEN 'USER_TIME'   THEN value ELSE 0 END) user_time,
       SUM(CASE stat_name WHEN 'SYS_TIME'    THEN value ELSE 0 END) sys_time,
       SUM(CASE stat_name WHEN 'IOWAIT_TIME' THEN value ELSE 0 END) iowait_time,
       SUM(CASE stat_name WHEN 'NICE_TIME'   THEN value ELSE 0 END) nice_time
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
)
SELECT u.snap_id,
       TO_CHAR(MIN(s.begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(s.end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(100 * SUM(u.busy_time)   / (SUM(u.busy_time) + SUM(u.idle_time)), 2) busy_time_perc,
       ROUND(100 * SUM(u.user_time)   / (SUM(u.busy_time) + SUM(u.idle_time)), 2) user_time_perc,
       ROUND(100 * SUM(u.sys_time)    / (SUM(u.busy_time) + SUM(u.idle_time)), 2) sys_time_perc,
       ROUND(100 * SUM(u.nice_time)   / (SUM(u.busy_time) + SUM(u.idle_time)), 2) nice_time_perc,
       ROUND(100 * SUM(u.idle_time)   / (SUM(u.busy_time) + SUM(u.idle_time)), 2) idle_time_perc,
       ROUND(100 * SUM(u.iowait_time) / (SUM(u.busy_time) + SUM(u.idle_time)), 2) iowait_time_perc,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM manual_pivot u,
       dba_hist_snapshot s
 WHERE s.snap_id         = u.snap_id
   AND s.dbid            = u.dbid
   AND s.instance_number = u.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
   AND u.busy_time + u.idle_time > 0
 GROUP BY
       u.snap_id
 ORDER BY
       u.snap_id

11:49:08 3e.358
Elapsed Hours so far:    0.448
Elapsed Hours so far: .448

Elapsed: 00:00:00.01

11:49:08 3e "00406_edb360_323688_3e_358_cpu_time_percent_for_cluster.html"
11:49:09 3e "00407_edb360_323688_3e_358_cpu_time_percent_for_cluster_line_chart.html"
Elapsed Hours so far:    0.448

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:09 3e "Operating System (OS) Statistics History"
11:49:09 CPU Time Percent for Instance 1

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.358 */
       snap_id,
       dbid,
       instance_number,
       stat_name,
       value - LAG(value) OVER (PARTITION BY dbid, instance_number, stat_id ORDER BY snap_id) value
  FROM dba_hist_osstat
 WHERE stat_name IN ('IDLE_TIME', 'BUSY_TIME', 'USER_TIME', 'SYS_TIME', 'IOWAIT_TIME', 'NICE_TIME')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 1
),
manual_pivot AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.358 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'IDLE_TIME'   THEN value ELSE 0 END) idle_time,
       SUM(CASE stat_name WHEN 'BUSY_TIME'   THEN value ELSE 0 END) busy_time,
       SUM(CASE stat_name WHEN 'USER_TIME'   THEN value ELSE 0 END) user_time,
       SUM(CASE stat_name WHEN 'SYS_TIME'    THEN value ELSE 0 END) sys_time,
       SUM(CASE stat_name WHEN 'IOWAIT_TIME' THEN value ELSE 0 END) iowait_time,
       SUM(CASE stat_name WHEN 'NICE_TIME'   THEN value ELSE 0 END) nice_time
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
)
SELECT u.snap_id,
       TO_CHAR(MIN(s.begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(s.end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(100 * SUM(u.busy_time)   / (SUM(u.busy_time) + SUM(u.idle_time)), 2) busy_time_perc,
       ROUND(100 * SUM(u.user_time)   / (SUM(u.busy_time) + SUM(u.idle_time)), 2) user_time_perc,
       ROUND(100 * SUM(u.sys_time)    / (SUM(u.busy_time) + SUM(u.idle_time)), 2) sys_time_perc,
       ROUND(100 * SUM(u.nice_time)   / (SUM(u.busy_time) + SUM(u.idle_time)), 2) nice_time_perc,
       ROUND(100 * SUM(u.idle_time)   / (SUM(u.busy_time) + SUM(u.idle_time)), 2) idle_time_perc,
       ROUND(100 * SUM(u.iowait_time) / (SUM(u.busy_time) + SUM(u.idle_time)), 2) iowait_time_perc,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM manual_pivot u,
       dba_hist_snapshot s
 WHERE s.snap_id         = u.snap_id
   AND s.dbid            = u.dbid
   AND s.instance_number = u.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
   AND u.busy_time + u.idle_time > 0
 GROUP BY
       u.snap_id
 ORDER BY
       u.snap_id

11:49:09 3e.359
Elapsed Hours so far:    0.448
Elapsed Hours so far: .448

Elapsed: 00:00:00.00

11:49:09 3e "00408_edb360_323688_3e_359_cpu_time_percent_for_instance_1.html"
11:49:09 3e "00409_edb360_323688_3e_359_cpu_time_percent_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.448

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:10 3e "Operating System (OS) Statistics History"
11:49:10 CPU Time Percent for Instance 2

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.358 */
       snap_id,
       dbid,
       instance_number,
       stat_name,
       value - LAG(value) OVER (PARTITION BY dbid, instance_number, stat_id ORDER BY snap_id) value
  FROM dba_hist_osstat
 WHERE stat_name IN ('IDLE_TIME', 'BUSY_TIME', 'USER_TIME', 'SYS_TIME', 'IOWAIT_TIME', 'NICE_TIME')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 2
),
manual_pivot AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.358 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'IDLE_TIME'   THEN value ELSE 0 END) idle_time,
       SUM(CASE stat_name WHEN 'BUSY_TIME'   THEN value ELSE 0 END) busy_time,
       SUM(CASE stat_name WHEN 'USER_TIME'   THEN value ELSE 0 END) user_time,
       SUM(CASE stat_name WHEN 'SYS_TIME'    THEN value ELSE 0 END) sys_time,
       SUM(CASE stat_name WHEN 'IOWAIT_TIME' THEN value ELSE 0 END) iowait_time,
       SUM(CASE stat_name WHEN 'NICE_TIME'   THEN value ELSE 0 END) nice_time
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
)
SELECT u.snap_id,
       TO_CHAR(MIN(s.begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(s.end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(100 * SUM(u.busy_time)   / (SUM(u.busy_time) + SUM(u.idle_time)), 2) busy_time_perc,
       ROUND(100 * SUM(u.user_time)   / (SUM(u.busy_time) + SUM(u.idle_time)), 2) user_time_perc,
       ROUND(100 * SUM(u.sys_time)    / (SUM(u.busy_time) + SUM(u.idle_time)), 2) sys_time_perc,
       ROUND(100 * SUM(u.nice_time)   / (SUM(u.busy_time) + SUM(u.idle_time)), 2) nice_time_perc,
       ROUND(100 * SUM(u.idle_time)   / (SUM(u.busy_time) + SUM(u.idle_time)), 2) idle_time_perc,
       ROUND(100 * SUM(u.iowait_time) / (SUM(u.busy_time) + SUM(u.idle_time)), 2) iowait_time_perc,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM manual_pivot u,
       dba_hist_snapshot s
 WHERE s.snap_id         = u.snap_id
   AND s.dbid            = u.dbid
   AND s.instance_number = u.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
   AND u.busy_time + u.idle_time > 0
 GROUP BY
       u.snap_id
 ORDER BY
       u.snap_id

11:49:10 3e.360
Elapsed Hours so far:    0.448
Elapsed Hours so far: .448

Elapsed: 00:00:00.00

11:49:10 3e "00410_edb360_323688_3e_360_cpu_time_percent_for_instance_2.html"
11:49:10 3e "00411_edb360_323688_3e_360_cpu_time_percent_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.448

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:10 3e "Operating System (OS) Statistics History"
11:49:10 CPU Busy and Idle Times Percent for Cluster

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.361 */
       snap_id,
       dbid,
       instance_number,
       stat_name,
       value - LAG(value) OVER (PARTITION BY dbid, instance_number, stat_id ORDER BY snap_id) value
  FROM dba_hist_osstat
 WHERE stat_name IN ('IDLE_TIME', 'BUSY_TIME')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = instance_number
),
manual_pivot AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.361 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'IDLE_TIME'   THEN value ELSE 0 END) idle_time,
       SUM(CASE stat_name WHEN 'BUSY_TIME'   THEN value ELSE 0 END) busy_time
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
)
SELECT u.snap_id,
       TO_CHAR(MIN(s.begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(s.end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(100 * SUM(u.busy_time) / (SUM(u.busy_time) + SUM(u.idle_time)), 2) busy_time_perc,
       ROUND(100 * SUM(u.idle_time) / (SUM(u.busy_time) + SUM(u.idle_time)), 2) idle_time_perc,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM manual_pivot u,
       dba_hist_snapshot s
 WHERE s.snap_id         = u.snap_id
   AND s.dbid            = u.dbid
   AND s.instance_number = u.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
 GROUP BY
       u.snap_id
 ORDER BY
       u.snap_id

11:49:10 3e.361
Elapsed Hours so far:    0.448
Elapsed Hours so far: .448

Elapsed: 00:00:00.00

11:49:10 3e "00412_edb360_323688_3e_361_cpu_busy_and_idle_times_percent_for_cluster.html"
11:49:10 3e "00413_edb360_323688_3e_361_cpu_busy_and_idle_times_percent_for_cluster_line_chart.html"
Elapsed Hours so far:    0.449

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:11 3e "Operating System (OS) Statistics History"
11:49:11 CPU Busy and Idle Times Percent for Instance 1

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.361 */
       snap_id,
       dbid,
       instance_number,
       stat_name,
       value - LAG(value) OVER (PARTITION BY dbid, instance_number, stat_id ORDER BY snap_id) value
  FROM dba_hist_osstat
 WHERE stat_name IN ('IDLE_TIME', 'BUSY_TIME')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 1
),
manual_pivot AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.361 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'IDLE_TIME'   THEN value ELSE 0 END) idle_time,
       SUM(CASE stat_name WHEN 'BUSY_TIME'   THEN value ELSE 0 END) busy_time
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
)
SELECT u.snap_id,
       TO_CHAR(MIN(s.begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(s.end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(100 * SUM(u.busy_time) / (SUM(u.busy_time) + SUM(u.idle_time)), 2) busy_time_perc,
       ROUND(100 * SUM(u.idle_time) / (SUM(u.busy_time) + SUM(u.idle_time)), 2) idle_time_perc,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM manual_pivot u,
       dba_hist_snapshot s
 WHERE s.snap_id         = u.snap_id
   AND s.dbid            = u.dbid
   AND s.instance_number = u.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
 GROUP BY
       u.snap_id
 ORDER BY
       u.snap_id

11:49:11 3e.362
Elapsed Hours so far:    0.449
Elapsed Hours so far: .449

Elapsed: 00:00:00.00

11:49:11 3e "00414_edb360_323688_3e_362_cpu_busy_and_idle_times_percent_for_instance_1.html"
11:49:11 3e "00415_edb360_323688_3e_362_cpu_busy_and_idle_times_percent_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.449

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:11 3e "Operating System (OS) Statistics History"
11:49:11 CPU Busy and Idle Times Percent for Instance 2

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.361 */
       snap_id,
       dbid,
       instance_number,
       stat_name,
       value - LAG(value) OVER (PARTITION BY dbid, instance_number, stat_id ORDER BY snap_id) value
  FROM dba_hist_osstat
 WHERE stat_name IN ('IDLE_TIME', 'BUSY_TIME')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 2
),
manual_pivot AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.361 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'IDLE_TIME'   THEN value ELSE 0 END) idle_time,
       SUM(CASE stat_name WHEN 'BUSY_TIME'   THEN value ELSE 0 END) busy_time
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
)
SELECT u.snap_id,
       TO_CHAR(MIN(s.begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(s.end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(100 * SUM(u.busy_time) / (SUM(u.busy_time) + SUM(u.idle_time)), 2) busy_time_perc,
       ROUND(100 * SUM(u.idle_time) / (SUM(u.busy_time) + SUM(u.idle_time)), 2) idle_time_perc,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM manual_pivot u,
       dba_hist_snapshot s
 WHERE s.snap_id         = u.snap_id
   AND s.dbid            = u.dbid
   AND s.instance_number = u.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
 GROUP BY
       u.snap_id
 ORDER BY
       u.snap_id

11:49:11 3e.363
Elapsed Hours so far:    0.449
Elapsed Hours so far: .449

Elapsed: 00:00:00.00

11:49:11 3e "00416_edb360_323688_3e_363_cpu_busy_and_idle_times_percent_for_instance_2.html"
11:49:11 3e "00417_edb360_323688_3e_363_cpu_busy_and_idle_times_percent_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.449

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:12 3e "Operating System (OS) Statistics History"
11:49:12 CPU User and Sys Times Percent for Cluster

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.364 */
       snap_id,
       dbid,
       instance_number,
       stat_name,
       value - LAG(value) OVER (PARTITION BY dbid, instance_number, stat_id ORDER BY snap_id) value
  FROM dba_hist_osstat
 WHERE stat_name IN ('USER_TIME', 'SYS_TIME')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = instance_number
),
manual_pivot AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.364 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'USER_TIME'   THEN value ELSE 0 END) user_time,
       SUM(CASE stat_name WHEN 'SYS_TIME'   THEN value ELSE 0 END) sys_time
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
)
SELECT u.snap_id,
       TO_CHAR(MIN(s.begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(s.end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(100 * SUM(u.user_time) / (SUM(u.user_time) + SUM(u.sys_time)), 2) user_time_perc,
       ROUND(100 * SUM(u.sys_time) / (SUM(u.user_time) + SUM(u.sys_time)), 2) sys_time_perc,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM manual_pivot u,
       dba_hist_snapshot s
 WHERE s.snap_id         = u.snap_id
   AND s.dbid            = u.dbid
   AND s.instance_number = u.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
 GROUP BY
       u.snap_id
 ORDER BY
       u.snap_id

11:49:12 3e.364
Elapsed Hours so far:    0.449
Elapsed Hours so far: .449

Elapsed: 00:00:00.00

11:49:12 3e "00418_edb360_323688_3e_364_cpu_user_and_sys_times_percent_for_cluster.html"
11:49:12 3e "00419_edb360_323688_3e_364_cpu_user_and_sys_times_percent_for_cluster_line_chart.html"
Elapsed Hours so far:    0.449

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:12 3e "Operating System (OS) Statistics History"
11:49:12 CPU User and Sys Times Percent for Instance 1

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.364 */
       snap_id,
       dbid,
       instance_number,
       stat_name,
       value - LAG(value) OVER (PARTITION BY dbid, instance_number, stat_id ORDER BY snap_id) value
  FROM dba_hist_osstat
 WHERE stat_name IN ('USER_TIME', 'SYS_TIME')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 1
),
manual_pivot AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.364 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'USER_TIME'   THEN value ELSE 0 END) user_time,
       SUM(CASE stat_name WHEN 'SYS_TIME'   THEN value ELSE 0 END) sys_time
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
)
SELECT u.snap_id,
       TO_CHAR(MIN(s.begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(s.end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(100 * SUM(u.user_time) / (SUM(u.user_time) + SUM(u.sys_time)), 2) user_time_perc,
       ROUND(100 * SUM(u.sys_time) / (SUM(u.user_time) + SUM(u.sys_time)), 2) sys_time_perc,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM manual_pivot u,
       dba_hist_snapshot s
 WHERE s.snap_id         = u.snap_id
   AND s.dbid            = u.dbid
   AND s.instance_number = u.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
 GROUP BY
       u.snap_id
 ORDER BY
       u.snap_id

11:49:12 3e.365
Elapsed Hours so far:    0.449
Elapsed Hours so far: .449

Elapsed: 00:00:00.00

11:49:12 3e "00420_edb360_323688_3e_365_cpu_user_and_sys_times_percent_for_instance_1.html"
11:49:13 3e "00421_edb360_323688_3e_365_cpu_user_and_sys_times_percent_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.449

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:13 3e "Operating System (OS) Statistics History"
11:49:13 CPU User and Sys Times Percent for Instance 2

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.364 */
       snap_id,
       dbid,
       instance_number,
       stat_name,
       value - LAG(value) OVER (PARTITION BY dbid, instance_number, stat_id ORDER BY snap_id) value
  FROM dba_hist_osstat
 WHERE stat_name IN ('USER_TIME', 'SYS_TIME')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 2
),
manual_pivot AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.364 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'USER_TIME'   THEN value ELSE 0 END) user_time,
       SUM(CASE stat_name WHEN 'SYS_TIME'   THEN value ELSE 0 END) sys_time
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
)
SELECT u.snap_id,
       TO_CHAR(MIN(s.begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(s.end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(100 * SUM(u.user_time) / (SUM(u.user_time) + SUM(u.sys_time)), 2) user_time_perc,
       ROUND(100 * SUM(u.sys_time) / (SUM(u.user_time) + SUM(u.sys_time)), 2) sys_time_perc,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM manual_pivot u,
       dba_hist_snapshot s
 WHERE s.snap_id         = u.snap_id
   AND s.dbid            = u.dbid
   AND s.instance_number = u.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
 GROUP BY
       u.snap_id
 ORDER BY
       u.snap_id

11:49:13 3e.366
Elapsed Hours so far:    0.449
Elapsed Hours so far: .449

Elapsed: 00:00:00.00

11:49:13 3e "00422_edb360_323688_3e_366_cpu_user_and_sys_times_percent_for_instance_2.html"
11:49:13 3e "00423_edb360_323688_3e_366_cpu_user_and_sys_times_percent_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.449

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:13 3e "Operating System (OS) Statistics History"
11:49:13 Virtual Memory (VM) for Cluster

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.367 */
       snap_id,
       dbid,
       instance_number,
       stat_name,
       value - LAG(value) OVER (PARTITION BY dbid, instance_number, stat_id ORDER BY snap_id) value
  FROM dba_hist_osstat
 WHERE stat_name IN ('VM_IN_BYTES', 'VM_OUT_BYTES')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = instance_number
),
manual_pivot AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.367 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'VM_IN_BYTES'  THEN value ELSE 0 END) vm_in_bytes,
       SUM(CASE stat_name WHEN 'VM_OUT_BYTES' THEN value ELSE 0 END) vm_out_bytes
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
)
SELECT u.snap_id,
       TO_CHAR(MIN(s.begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(s.end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(u.vm_in_bytes) / POWER(2,30), 3) vm_in_gb,
       ROUND(SUM(u.vm_out_bytes) / POWER(2,30), 3) vm_out_gb,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM manual_pivot u,
       dba_hist_snapshot s
 WHERE s.snap_id         = u.snap_id
   AND s.dbid            = u.dbid
   AND s.instance_number = u.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
 GROUP BY
       u.snap_id
 ORDER BY
       u.snap_id

11:49:13 3e.367
Elapsed Hours so far:    0.449
Elapsed Hours so far: .449

Elapsed: 00:00:00.00

11:49:13 3e "00424_edb360_323688_3e_367_virtual_memory_vm_for_cluster.html"
11:49:13 3e "00425_edb360_323688_3e_367_virtual_memory_vm_for_cluster_line_chart.html"
Elapsed Hours so far:    0.449

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:14 3e "Operating System (OS) Statistics History"
11:49:14 Virtual Memory (VM) for Instance 1

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.367 */
       snap_id,
       dbid,
       instance_number,
       stat_name,
       value - LAG(value) OVER (PARTITION BY dbid, instance_number, stat_id ORDER BY snap_id) value
  FROM dba_hist_osstat
 WHERE stat_name IN ('VM_IN_BYTES', 'VM_OUT_BYTES')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 1
),
manual_pivot AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.367 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'VM_IN_BYTES'  THEN value ELSE 0 END) vm_in_bytes,
       SUM(CASE stat_name WHEN 'VM_OUT_BYTES' THEN value ELSE 0 END) vm_out_bytes
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
)
SELECT u.snap_id,
       TO_CHAR(MIN(s.begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(s.end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(u.vm_in_bytes) / POWER(2,30), 3) vm_in_gb,
       ROUND(SUM(u.vm_out_bytes) / POWER(2,30), 3) vm_out_gb,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM manual_pivot u,
       dba_hist_snapshot s
 WHERE s.snap_id         = u.snap_id
   AND s.dbid            = u.dbid
   AND s.instance_number = u.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
 GROUP BY
       u.snap_id
 ORDER BY
       u.snap_id

11:49:14 3e.368
Elapsed Hours so far:    0.449
Elapsed Hours so far: .449

Elapsed: 00:00:00.00

11:49:14 3e "00426_edb360_323688_3e_368_virtual_memory_vm_for_instance_1.html"
11:49:14 3e "00427_edb360_323688_3e_368_virtual_memory_vm_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.449

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:14 3e "Operating System (OS) Statistics History"
11:49:14 Virtual Memory (VM) for Instance 2

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.367 */
       snap_id,
       dbid,
       instance_number,
       stat_name,
       value - LAG(value) OVER (PARTITION BY dbid, instance_number, stat_id ORDER BY snap_id) value
  FROM dba_hist_osstat
 WHERE stat_name IN ('VM_IN_BYTES', 'VM_OUT_BYTES')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 2
),
manual_pivot AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.367 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'VM_IN_BYTES'  THEN value ELSE 0 END) vm_in_bytes,
       SUM(CASE stat_name WHEN 'VM_OUT_BYTES' THEN value ELSE 0 END) vm_out_bytes
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
)
SELECT u.snap_id,
       TO_CHAR(MIN(s.begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(s.end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(u.vm_in_bytes) / POWER(2,30), 3) vm_in_gb,
       ROUND(SUM(u.vm_out_bytes) / POWER(2,30), 3) vm_out_gb,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM manual_pivot u,
       dba_hist_snapshot s
 WHERE s.snap_id         = u.snap_id
   AND s.dbid            = u.dbid
   AND s.instance_number = u.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
 GROUP BY
       u.snap_id
 ORDER BY
       u.snap_id

11:49:14 3e.369
Elapsed Hours so far:    0.449
Elapsed Hours so far: .449

Elapsed: 00:00:00.00

11:49:14 3e "00428_edb360_323688_3e_369_virtual_memory_vm_for_instance_2.html"
11:49:14 3e "00429_edb360_323688_3e_369_virtual_memory_vm_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.450

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:15 3e "Operating System (OS) Statistics History"
11:49:15 CPU Busy Time per Instance

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.370 */
       o.snap_id,
       o.instance_number,
       o.value - LAG(o.value) OVER (PARTITION BY o.dbid, o.instance_number, o.stat_id ORDER BY o.sna
p_id) value,
       s.begin_interval_time,
       s.end_interval_time
  FROM dba_hist_osstat o,
       dba_hist_snapshot s
 WHERE o.stat_name = 'BUSY_TIME'
   AND o.snap_id BETWEEN 3473 AND 4962
   AND o.dbid = 2109323688
   AND s.snap_id         = o.snap_id
   AND s.dbid            = o.dbid
   AND s.instance_number = o.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE instance_number WHEN 1 THEN value ELSE 0 END) inst_01,
       SUM(CASE instance_number WHEN 2 THEN value ELSE 0 END) inst_02,
       SUM(CASE instance_number WHEN 3 THEN value ELSE 0 END) inst_03,
       SUM(CASE instance_number WHEN 4 THEN value ELSE 0 END) inst_04,
       SUM(CASE instance_number WHEN 5 THEN value ELSE 0 END) inst_05,
       SUM(CASE instance_number WHEN 6 THEN value ELSE 0 END) inst_06,
       SUM(CASE instance_number WHEN 7 THEN value ELSE 0 END) inst_07,
       SUM(CASE instance_number WHEN 8 THEN value ELSE 0 END) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:49:15 3e.370
Elapsed Hours so far:    0.450
Elapsed Hours so far: .45

Elapsed: 00:00:00.00

11:49:15 3e "00430_edb360_323688_3e_370_cpu_busy_time_per_instance.html"
11:49:15 3e "00431_edb360_323688_3e_370_cpu_busy_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.450

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:15 3e "Operating System (OS) Statistics History"
11:49:15 CPU User Time per Instance

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.370 */
       o.snap_id,
       o.instance_number,
       o.value - LAG(o.value) OVER (PARTITION BY o.dbid, o.instance_number, o.stat_id ORDER BY o.sna
p_id) value,
       s.begin_interval_time,
       s.end_interval_time
  FROM dba_hist_osstat o,
       dba_hist_snapshot s
 WHERE o.stat_name = 'USER_TIME'
   AND o.snap_id BETWEEN 3473 AND 4962
   AND o.dbid = 2109323688
   AND s.snap_id         = o.snap_id
   AND s.dbid            = o.dbid
   AND s.instance_number = o.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE instance_number WHEN 1 THEN value ELSE 0 END) inst_01,
       SUM(CASE instance_number WHEN 2 THEN value ELSE 0 END) inst_02,
       SUM(CASE instance_number WHEN 3 THEN value ELSE 0 END) inst_03,
       SUM(CASE instance_number WHEN 4 THEN value ELSE 0 END) inst_04,
       SUM(CASE instance_number WHEN 5 THEN value ELSE 0 END) inst_05,
       SUM(CASE instance_number WHEN 6 THEN value ELSE 0 END) inst_06,
       SUM(CASE instance_number WHEN 7 THEN value ELSE 0 END) inst_07,
       SUM(CASE instance_number WHEN 8 THEN value ELSE 0 END) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:49:15 3e.371
Elapsed Hours so far:    0.450
Elapsed Hours so far: .45

Elapsed: 00:00:00.00

11:49:15 3e "00432_edb360_323688_3e_371_cpu_user_time_per_instance.html"
11:49:15 3e "00433_edb360_323688_3e_371_cpu_user_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.450

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:16 3e "Operating System (OS) Statistics History"
11:49:16 CPU Sys Time per Instance

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.370 */
       o.snap_id,
       o.instance_number,
       o.value - LAG(o.value) OVER (PARTITION BY o.dbid, o.instance_number, o.stat_id ORDER BY o.sna
p_id) value,
       s.begin_interval_time,
       s.end_interval_time
  FROM dba_hist_osstat o,
       dba_hist_snapshot s
 WHERE o.stat_name = 'SYS_TIME'
   AND o.snap_id BETWEEN 3473 AND 4962
   AND o.dbid = 2109323688
   AND s.snap_id         = o.snap_id
   AND s.dbid            = o.dbid
   AND s.instance_number = o.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE instance_number WHEN 1 THEN value ELSE 0 END) inst_01,
       SUM(CASE instance_number WHEN 2 THEN value ELSE 0 END) inst_02,
       SUM(CASE instance_number WHEN 3 THEN value ELSE 0 END) inst_03,
       SUM(CASE instance_number WHEN 4 THEN value ELSE 0 END) inst_04,
       SUM(CASE instance_number WHEN 5 THEN value ELSE 0 END) inst_05,
       SUM(CASE instance_number WHEN 6 THEN value ELSE 0 END) inst_06,
       SUM(CASE instance_number WHEN 7 THEN value ELSE 0 END) inst_07,
       SUM(CASE instance_number WHEN 8 THEN value ELSE 0 END) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:49:16 3e.372
Elapsed Hours so far:    0.450
Elapsed Hours so far: .45

Elapsed: 00:00:00.00

11:49:16 3e "00434_edb360_323688_3e_372_cpu_sys_time_per_instance.html"
11:49:16 3e "00435_edb360_323688_3e_372_cpu_sys_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.450

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:16 3e "Operating System (OS) Statistics History"
11:49:16 CPU Nice Time per Instance

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.370 */
       o.snap_id,
       o.instance_number,
       o.value - LAG(o.value) OVER (PARTITION BY o.dbid, o.instance_number, o.stat_id ORDER BY o.sna
p_id) value,
       s.begin_interval_time,
       s.end_interval_time
  FROM dba_hist_osstat o,
       dba_hist_snapshot s
 WHERE o.stat_name = 'NICE_TIME'
   AND o.snap_id BETWEEN 3473 AND 4962
   AND o.dbid = 2109323688
   AND s.snap_id         = o.snap_id
   AND s.dbid            = o.dbid
   AND s.instance_number = o.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE instance_number WHEN 1 THEN value ELSE 0 END) inst_01,
       SUM(CASE instance_number WHEN 2 THEN value ELSE 0 END) inst_02,
       SUM(CASE instance_number WHEN 3 THEN value ELSE 0 END) inst_03,
       SUM(CASE instance_number WHEN 4 THEN value ELSE 0 END) inst_04,
       SUM(CASE instance_number WHEN 5 THEN value ELSE 0 END) inst_05,
       SUM(CASE instance_number WHEN 6 THEN value ELSE 0 END) inst_06,
       SUM(CASE instance_number WHEN 7 THEN value ELSE 0 END) inst_07,
       SUM(CASE instance_number WHEN 8 THEN value ELSE 0 END) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:49:16 3e.373
Elapsed Hours so far:    0.450
Elapsed Hours so far: .45

Elapsed: 00:00:00.00

11:49:16 3e "00436_edb360_323688_3e_373_cpu_nice_time_per_instance.html"
11:49:16 3e "00437_edb360_323688_3e_373_cpu_nice_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.450

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:16 3e "Operating System (OS) Statistics History"
11:49:16 CPU Idle Time per Instance

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.370 */
       o.snap_id,
       o.instance_number,
       o.value - LAG(o.value) OVER (PARTITION BY o.dbid, o.instance_number, o.stat_id ORDER BY o.sna
p_id) value,
       s.begin_interval_time,
       s.end_interval_time
  FROM dba_hist_osstat o,
       dba_hist_snapshot s
 WHERE o.stat_name = 'IDLE_TIME'
   AND o.snap_id BETWEEN 3473 AND 4962
   AND o.dbid = 2109323688
   AND s.snap_id         = o.snap_id
   AND s.dbid            = o.dbid
   AND s.instance_number = o.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE instance_number WHEN 1 THEN value ELSE 0 END) inst_01,
       SUM(CASE instance_number WHEN 2 THEN value ELSE 0 END) inst_02,
       SUM(CASE instance_number WHEN 3 THEN value ELSE 0 END) inst_03,
       SUM(CASE instance_number WHEN 4 THEN value ELSE 0 END) inst_04,
       SUM(CASE instance_number WHEN 5 THEN value ELSE 0 END) inst_05,
       SUM(CASE instance_number WHEN 6 THEN value ELSE 0 END) inst_06,
       SUM(CASE instance_number WHEN 7 THEN value ELSE 0 END) inst_07,
       SUM(CASE instance_number WHEN 8 THEN value ELSE 0 END) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:49:16 3e.374
Elapsed Hours so far:    0.450
Elapsed Hours so far: .45

Elapsed: 00:00:00.00

11:49:17 3e "00438_edb360_323688_3e_374_cpu_idle_time_per_instance.html"
11:49:17 3e "00439_edb360_323688_3e_374_cpu_idle_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.450

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:17 3e "Operating System (OS) Statistics History"
11:49:17 CPU IO Wait Time per Instance

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.370 */
       o.snap_id,
       o.instance_number,
       o.value - LAG(o.value) OVER (PARTITION BY o.dbid, o.instance_number, o.stat_id ORDER BY o.sna
p_id) value,
       s.begin_interval_time,
       s.end_interval_time
  FROM dba_hist_osstat o,
       dba_hist_snapshot s
 WHERE o.stat_name = 'IOWAIT_TIME'
   AND o.snap_id BETWEEN 3473 AND 4962
   AND o.dbid = 2109323688
   AND s.snap_id         = o.snap_id
   AND s.dbid            = o.dbid
   AND s.instance_number = o.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE instance_number WHEN 1 THEN value ELSE 0 END) inst_01,
       SUM(CASE instance_number WHEN 2 THEN value ELSE 0 END) inst_02,
       SUM(CASE instance_number WHEN 3 THEN value ELSE 0 END) inst_03,
       SUM(CASE instance_number WHEN 4 THEN value ELSE 0 END) inst_04,
       SUM(CASE instance_number WHEN 5 THEN value ELSE 0 END) inst_05,
       SUM(CASE instance_number WHEN 6 THEN value ELSE 0 END) inst_06,
       SUM(CASE instance_number WHEN 7 THEN value ELSE 0 END) inst_07,
       SUM(CASE instance_number WHEN 8 THEN value ELSE 0 END) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:49:17 3e.375
Elapsed Hours so far:    0.450
Elapsed Hours so far: .45

Elapsed: 00:00:00.00

11:49:17 3e "00440_edb360_323688_3e_375_cpu_io_wait_time_per_instance.html"
11:49:17 3e "00441_edb360_323688_3e_375_cpu_io_wait_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.450

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:17 3e "Operating System (OS) Statistics History"
11:49:17 CPU RSRC MGR Wait Time per Instance

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.370 */
       o.snap_id,
       o.instance_number,
       o.value - LAG(o.value) OVER (PARTITION BY o.dbid, o.instance_number, o.stat_id ORDER BY o.sna
p_id) value,
       s.begin_interval_time,
       s.end_interval_time
  FROM dba_hist_osstat o,
       dba_hist_snapshot s
 WHERE o.stat_name = 'RSRC_MGR_CPU_WAIT_TIME'
   AND o.snap_id BETWEEN 3473 AND 4962
   AND o.dbid = 2109323688
   AND s.snap_id         = o.snap_id
   AND s.dbid            = o.dbid
   AND s.instance_number = o.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE instance_number WHEN 1 THEN value ELSE 0 END) inst_01,
       SUM(CASE instance_number WHEN 2 THEN value ELSE 0 END) inst_02,
       SUM(CASE instance_number WHEN 3 THEN value ELSE 0 END) inst_03,
       SUM(CASE instance_number WHEN 4 THEN value ELSE 0 END) inst_04,
       SUM(CASE instance_number WHEN 5 THEN value ELSE 0 END) inst_05,
       SUM(CASE instance_number WHEN 6 THEN value ELSE 0 END) inst_06,
       SUM(CASE instance_number WHEN 7 THEN value ELSE 0 END) inst_07,
       SUM(CASE instance_number WHEN 8 THEN value ELSE 0 END) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:49:17 3e.376
Elapsed Hours so far:    0.450
Elapsed Hours so far: .45

Elapsed: 00:00:00.00

11:49:17 3e "00442_edb360_323688_3e_376_cpu_rsrc_mgr_wait_time_per_instance.html"
11:49:18 3e "00443_edb360_323688_3e_376_cpu_rsrc_mgr_wait_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.450

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:18 3e "Operating System (OS) Statistics History"
11:49:18 OS CPU Wait Time per Instance

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.370 */
       o.snap_id,
       o.instance_number,
       o.value - LAG(o.value) OVER (PARTITION BY o.dbid, o.instance_number, o.stat_id ORDER BY o.sna
p_id) value,
       s.begin_interval_time,
       s.end_interval_time
  FROM dba_hist_osstat o,
       dba_hist_snapshot s
 WHERE o.stat_name = 'OS_CPU_WAIT_TIME'
   AND o.snap_id BETWEEN 3473 AND 4962
   AND o.dbid = 2109323688
   AND s.snap_id         = o.snap_id
   AND s.dbid            = o.dbid
   AND s.instance_number = o.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE instance_number WHEN 1 THEN value ELSE 0 END) inst_01,
       SUM(CASE instance_number WHEN 2 THEN value ELSE 0 END) inst_02,
       SUM(CASE instance_number WHEN 3 THEN value ELSE 0 END) inst_03,
       SUM(CASE instance_number WHEN 4 THEN value ELSE 0 END) inst_04,
       SUM(CASE instance_number WHEN 5 THEN value ELSE 0 END) inst_05,
       SUM(CASE instance_number WHEN 6 THEN value ELSE 0 END) inst_06,
       SUM(CASE instance_number WHEN 7 THEN value ELSE 0 END) inst_07,
       SUM(CASE instance_number WHEN 8 THEN value ELSE 0 END) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:49:18 3e.377
Elapsed Hours so far:    0.450
Elapsed Hours so far: .45

Elapsed: 00:00:00.00

11:49:18 3e "00444_edb360_323688_3e_377_os_cpu_wait_time_per_instance.html"
11:49:18 3e "00445_edb360_323688_3e_377_os_cpu_wait_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.451

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:18 3e "Operating System (OS) Statistics History"
11:49:18 Virtual Memory (VM) IN-Bytes per Instance

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.370 */
       o.snap_id,
       o.instance_number,
       o.value - LAG(o.value) OVER (PARTITION BY o.dbid, o.instance_number, o.stat_id ORDER BY o.sna
p_id) value,
       s.begin_interval_time,
       s.end_interval_time
  FROM dba_hist_osstat o,
       dba_hist_snapshot s
 WHERE o.stat_name = 'VM_IN_BYTES'
   AND o.snap_id BETWEEN 3473 AND 4962
   AND o.dbid = 2109323688
   AND s.snap_id         = o.snap_id
   AND s.dbid            = o.dbid
   AND s.instance_number = o.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE instance_number WHEN 1 THEN value ELSE 0 END) inst_01,
       SUM(CASE instance_number WHEN 2 THEN value ELSE 0 END) inst_02,
       SUM(CASE instance_number WHEN 3 THEN value ELSE 0 END) inst_03,
       SUM(CASE instance_number WHEN 4 THEN value ELSE 0 END) inst_04,
       SUM(CASE instance_number WHEN 5 THEN value ELSE 0 END) inst_05,
       SUM(CASE instance_number WHEN 6 THEN value ELSE 0 END) inst_06,
       SUM(CASE instance_number WHEN 7 THEN value ELSE 0 END) inst_07,
       SUM(CASE instance_number WHEN 8 THEN value ELSE 0 END) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:49:18 3e.378
Elapsed Hours so far:    0.451
Elapsed Hours so far: .451

Elapsed: 00:00:00.00

11:49:18 3e "00446_edb360_323688_3e_378_virtual_memory_vm_inbytes_per_instance.html"
11:49:18 3e "00447_edb360_323688_3e_378_virtual_memory_vm_inbytes_per_instance_line_chart.html"
Elapsed Hours so far:    0.451

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:18 3e "Operating System (OS) Statistics History"
11:49:18 Virtual Memory (VM) OUT-Bytes per Instance

WITH
seed AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3e.370 */
       o.snap_id,
       o.instance_number,
       o.value - LAG(o.value) OVER (PARTITION BY o.dbid, o.instance_number, o.stat_id ORDER BY o.sna
p_id) value,
       s.begin_interval_time,
       s.end_interval_time
  FROM dba_hist_osstat o,
       dba_hist_snapshot s
 WHERE o.stat_name = 'VM_OUT_BYTES'
   AND o.snap_id BETWEEN 3473 AND 4962
   AND o.dbid = 2109323688
   AND s.snap_id         = o.snap_id
   AND s.dbid            = o.dbid
   AND s.instance_number = o.instance_number
   AND (CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 > 1 -- ig
nore snaps closer than 1m appart
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE instance_number WHEN 1 THEN value ELSE 0 END) inst_01,
       SUM(CASE instance_number WHEN 2 THEN value ELSE 0 END) inst_02,
       SUM(CASE instance_number WHEN 3 THEN value ELSE 0 END) inst_03,
       SUM(CASE instance_number WHEN 4 THEN value ELSE 0 END) inst_04,
       SUM(CASE instance_number WHEN 5 THEN value ELSE 0 END) inst_05,
       SUM(CASE instance_number WHEN 6 THEN value ELSE 0 END) inst_06,
       SUM(CASE instance_number WHEN 7 THEN value ELSE 0 END) inst_07,
       SUM(CASE instance_number WHEN 8 THEN value ELSE 0 END) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM seed
 WHERE value >= 0
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:49:18 3e.379
Elapsed Hours so far:    0.451
Elapsed Hours so far: .451

Elapsed: 00:00:00.00

11:49:18 3e "00448_edb360_323688_3e_379_virtual_memory_vm_outbytes_per_instance.html"
11:49:19 3e "00449_edb360_323688_3e_379_virtual_memory_vm_outbytes_per_instance_line_chart.html"
Elapsed Hours so far:    0.451

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:20 3f "Interconnect Ping Latency Stats"
11:49:20 8K msg pings from all Instances

WITH
interconnect_pings AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 3f.380 */
       h.snap_id,
       h.dbid,
       h.instance_number,
       h.target_instance,
       s.begin_interval_time,
       s.end_interval_time,
       s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) startup_time_interval,
       h.cnt_500b - LAG(h.cnt_500b)         OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_500b,
       h.cnt_8k - LAG(h.cnt_8k)             OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_8k,
       h.wait_500b - LAG(h.wait_500b)       OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_500b,
       h.wait_8k - LAG(h.wait_8k)           OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_8k
  FROM dba_hist_interconnect_pings h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.cnt_500b > 100 -- else too small
   AND h.cnt_8k > 100 -- else too small
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
per_source_and_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM interconnect_pings
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND cnt_500b > 0
   AND cnt_8k > 0
   AND wait_500b > 0
   AND wait_8k > 0
 GROUP BY
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time
),
per_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       instance_number
),
per_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       target_instance
),
per_cluster AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id
),
source_and_target_extended AS (
SELECT /*+  MATERIALIZE NO_MERGE  LEADING(st) */
       st.snap_id,
       st.instance_number,
       st.target_instance,
       LEAST(st.begin_interval_time, s.begin_interval_time, t.begin_interval_time, c.begin_interval_
time) begin_interval_time,
       LEAST(st.end_interval_time, s.end_interval_time, t.end_interval_time, c.end_interval_time) en
d_interval_time,
       st.Avg_Latency_500B_msg,
       st.Avg_Latency_8K_msg,
       s.Avg_Latency_500B_msg s_Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg s_Avg_Latency_8K_msg,
       t.Avg_Latency_500B_msg t_Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source_and_target st,
       per_source s,
       per_target t,
       per_cluster c
 WHERE s.snap_id = st.snap_id
   AND s.instance_number = st.instance_number
   AND t.snap_id = st.snap_id
   AND t.target_instance = st.target_instance
   AND c.snap_id = st.snap_id
-- automatic transitivity does not apply to joins
-- added predicates in case LEADING hint is not obeyed
   AND t.snap_id = s.snap_id
   AND c.snap_id = s.snap_id
   AND c.snap_id = t.snap_id
 UNION ALL
SELECT s.snap_id,
       s.instance_number,
       s.target_instance,
       LEAST(s.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(s.end_interval_time, c.end_interval_time) end_interval_time,
       s.Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source s,
       per_cluster c
 WHERE c.snap_id = s.snap_id
 UNION ALL
SELECT t.snap_id,
       t.instance_number,
       t.target_instance,
       LEAST(t.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(c.end_interval_time, c.end_interval_time) end_interval_time,
       t.Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_target t,
       per_cluster c
 WHERE c.snap_id = t.snap_id
),
denorm_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(s_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(s_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE instance_number = -1
 GROUP BY
       snap_id,
       instance_number
),
denorm_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       target_instance inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(t_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(t_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE target_instance = -1
 GROUP BY
       snap_id,
       target_instance
)
SELECT /*+  NO_MERGE  */ /* 3f.380 */
       snap_id,
       TO_CHAR(CAST(begin_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(CAST(end_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') end_time,
       c_Avg_Latency_8K_msg cluster_avg,
       i_Avg_Latency_8K_msg instance_avg,
       Avg_Latency_8K_msg_i1 inst_1,
       Avg_Latency_8K_msg_i2 inst_2,
       Avg_Latency_8K_msg_i3 inst_3,
       Avg_Latency_8K_msg_i4 inst_4,
       Avg_Latency_8K_msg_i5 inst_5,
       Avg_Latency_8K_msg_i6 inst_6,
       Avg_Latency_8K_msg_i7 inst_7,
       Avg_Latency_8K_msg_i8 inst_8,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM denorm_source
 ORDER BY
       snap_id

11:49:20 3f.380
Elapsed Hours so far:    0.451
Elapsed Hours so far: .451

Elapsed: 00:00:00.01

11:49:20 3f "00450_edb360_323688_3f_380_8k_msg_pings_from_all_instances.html"
11:49:21 3f "00451_edb360_323688_3f_380_8k_msg_pings_from_all_instances_line_chart.html"
Elapsed Hours so far:    0.451

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:21 3f "Interconnect Ping Latency Stats"
11:49:21 8K msg pings sent to all Instances

WITH
interconnect_pings AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 3f.380 */
       h.snap_id,
       h.dbid,
       h.instance_number,
       h.target_instance,
       s.begin_interval_time,
       s.end_interval_time,
       s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) startup_time_interval,
       h.cnt_500b - LAG(h.cnt_500b)         OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_500b,
       h.cnt_8k - LAG(h.cnt_8k)             OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_8k,
       h.wait_500b - LAG(h.wait_500b)       OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_500b,
       h.wait_8k - LAG(h.wait_8k)           OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_8k
  FROM dba_hist_interconnect_pings h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.cnt_500b > 100 -- else too small
   AND h.cnt_8k > 100 -- else too small
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
per_source_and_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM interconnect_pings
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND cnt_500b > 0
   AND cnt_8k > 0
   AND wait_500b > 0
   AND wait_8k > 0
 GROUP BY
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time
),
per_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       instance_number
),
per_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       target_instance
),
per_cluster AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id
),
source_and_target_extended AS (
SELECT /*+  MATERIALIZE NO_MERGE  LEADING(st) */
       st.snap_id,
       st.instance_number,
       st.target_instance,
       LEAST(st.begin_interval_time, s.begin_interval_time, t.begin_interval_time, c.begin_interval_
time) begin_interval_time,
       LEAST(st.end_interval_time, s.end_interval_time, t.end_interval_time, c.end_interval_time) en
d_interval_time,
       st.Avg_Latency_500B_msg,
       st.Avg_Latency_8K_msg,
       s.Avg_Latency_500B_msg s_Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg s_Avg_Latency_8K_msg,
       t.Avg_Latency_500B_msg t_Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source_and_target st,
       per_source s,
       per_target t,
       per_cluster c
 WHERE s.snap_id = st.snap_id
   AND s.instance_number = st.instance_number
   AND t.snap_id = st.snap_id
   AND t.target_instance = st.target_instance
   AND c.snap_id = st.snap_id
-- automatic transitivity does not apply to joins
-- added predicates in case LEADING hint is not obeyed
   AND t.snap_id = s.snap_id
   AND c.snap_id = s.snap_id
   AND c.snap_id = t.snap_id
 UNION ALL
SELECT s.snap_id,
       s.instance_number,
       s.target_instance,
       LEAST(s.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(s.end_interval_time, c.end_interval_time) end_interval_time,
       s.Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source s,
       per_cluster c
 WHERE c.snap_id = s.snap_id
 UNION ALL
SELECT t.snap_id,
       t.instance_number,
       t.target_instance,
       LEAST(t.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(c.end_interval_time, c.end_interval_time) end_interval_time,
       t.Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_target t,
       per_cluster c
 WHERE c.snap_id = t.snap_id
),
denorm_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(s_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(s_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE instance_number = -1
 GROUP BY
       snap_id,
       instance_number
),
denorm_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       target_instance inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(t_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(t_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE target_instance = -1
 GROUP BY
       snap_id,
       target_instance
)
SELECT /*+  NO_MERGE  */ /* 3f.380 */
       snap_id,
       TO_CHAR(CAST(begin_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(CAST(end_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') end_time,
       c_Avg_Latency_8K_msg cluster_avg,
       i_Avg_Latency_8K_msg instance_avg,
       Avg_Latency_8K_msg_i1 inst_1,
       Avg_Latency_8K_msg_i2 inst_2,
       Avg_Latency_8K_msg_i3 inst_3,
       Avg_Latency_8K_msg_i4 inst_4,
       Avg_Latency_8K_msg_i5 inst_5,
       Avg_Latency_8K_msg_i6 inst_6,
       Avg_Latency_8K_msg_i7 inst_7,
       Avg_Latency_8K_msg_i8 inst_8,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM denorm_target
 ORDER BY
       snap_id

11:49:21 3f.381
Elapsed Hours so far:    0.451
Elapsed Hours so far: .451

Elapsed: 00:00:00.00

11:49:21 3f "00452_edb360_323688_3f_381_8k_msg_pings_sent_to_all_instances.html"
11:49:22 3f "00453_edb360_323688_3f_381_8k_msg_pings_sent_to_all_instances_line_chart.html"
Elapsed Hours so far:    0.452

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:22 3f "Interconnect Ping Latency Stats"
11:49:22 500B msg pings from all Instances

WITH
interconnect_pings AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 3f.380 */
       h.snap_id,
       h.dbid,
       h.instance_number,
       h.target_instance,
       s.begin_interval_time,
       s.end_interval_time,
       s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) startup_time_interval,
       h.cnt_500b - LAG(h.cnt_500b)         OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_500b,
       h.cnt_8k - LAG(h.cnt_8k)             OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_8k,
       h.wait_500b - LAG(h.wait_500b)       OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_500b,
       h.wait_8k - LAG(h.wait_8k)           OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_8k
  FROM dba_hist_interconnect_pings h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.cnt_500b > 100 -- else too small
   AND h.cnt_8k > 100 -- else too small
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
per_source_and_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM interconnect_pings
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND cnt_500b > 0
   AND cnt_8k > 0
   AND wait_500b > 0
   AND wait_8k > 0
 GROUP BY
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time
),
per_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       instance_number
),
per_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       target_instance
),
per_cluster AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id
),
source_and_target_extended AS (
SELECT /*+  MATERIALIZE NO_MERGE  LEADING(st) */
       st.snap_id,
       st.instance_number,
       st.target_instance,
       LEAST(st.begin_interval_time, s.begin_interval_time, t.begin_interval_time, c.begin_interval_
time) begin_interval_time,
       LEAST(st.end_interval_time, s.end_interval_time, t.end_interval_time, c.end_interval_time) en
d_interval_time,
       st.Avg_Latency_500B_msg,
       st.Avg_Latency_8K_msg,
       s.Avg_Latency_500B_msg s_Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg s_Avg_Latency_8K_msg,
       t.Avg_Latency_500B_msg t_Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source_and_target st,
       per_source s,
       per_target t,
       per_cluster c
 WHERE s.snap_id = st.snap_id
   AND s.instance_number = st.instance_number
   AND t.snap_id = st.snap_id
   AND t.target_instance = st.target_instance
   AND c.snap_id = st.snap_id
-- automatic transitivity does not apply to joins
-- added predicates in case LEADING hint is not obeyed
   AND t.snap_id = s.snap_id
   AND c.snap_id = s.snap_id
   AND c.snap_id = t.snap_id
 UNION ALL
SELECT s.snap_id,
       s.instance_number,
       s.target_instance,
       LEAST(s.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(s.end_interval_time, c.end_interval_time) end_interval_time,
       s.Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source s,
       per_cluster c
 WHERE c.snap_id = s.snap_id
 UNION ALL
SELECT t.snap_id,
       t.instance_number,
       t.target_instance,
       LEAST(t.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(c.end_interval_time, c.end_interval_time) end_interval_time,
       t.Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_target t,
       per_cluster c
 WHERE c.snap_id = t.snap_id
),
denorm_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(s_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(s_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE instance_number = -1
 GROUP BY
       snap_id,
       instance_number
),
denorm_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       target_instance inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(t_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(t_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE target_instance = -1
 GROUP BY
       snap_id,
       target_instance
)
SELECT /*+  NO_MERGE  */ /* 3f.380 */
       snap_id,
       TO_CHAR(CAST(begin_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(CAST(end_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') end_time,
       c_Avg_Latency_500B_msg cluster_avg,
       i_Avg_Latency_500B_msg instance_avg,
       Avg_Latency_500B_msg_i1 inst_1,
       Avg_Latency_500B_msg_i2 inst_2,
       Avg_Latency_500B_msg_i3 inst_3,
       Avg_Latency_500B_msg_i4 inst_4,
       Avg_Latency_500B_msg_i5 inst_5,
       Avg_Latency_500B_msg_i6 inst_6,
       Avg_Latency_500B_msg_i7 inst_7,
       Avg_Latency_500B_msg_i8 inst_8,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM denorm_source
 ORDER BY
       snap_id

11:49:22 3f.382
Elapsed Hours so far:    0.452
Elapsed Hours so far: .452

Elapsed: 00:00:00.00

11:49:22 3f "00454_edb360_323688_3f_382_500b_msg_pings_from_all_instances.html"
11:49:23 3f "00455_edb360_323688_3f_382_500b_msg_pings_from_all_instances_line_chart.html"
Elapsed Hours so far:    0.452

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:23 3f "Interconnect Ping Latency Stats"
11:49:23 500B msg pings sent to all Instances

WITH
interconnect_pings AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 3f.380 */
       h.snap_id,
       h.dbid,
       h.instance_number,
       h.target_instance,
       s.begin_interval_time,
       s.end_interval_time,
       s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) startup_time_interval,
       h.cnt_500b - LAG(h.cnt_500b)         OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_500b,
       h.cnt_8k - LAG(h.cnt_8k)             OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_8k,
       h.wait_500b - LAG(h.wait_500b)       OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_500b,
       h.wait_8k - LAG(h.wait_8k)           OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_8k
  FROM dba_hist_interconnect_pings h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.cnt_500b > 100 -- else too small
   AND h.cnt_8k > 100 -- else too small
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
per_source_and_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM interconnect_pings
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND cnt_500b > 0
   AND cnt_8k > 0
   AND wait_500b > 0
   AND wait_8k > 0
 GROUP BY
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time
),
per_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       instance_number
),
per_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       target_instance
),
per_cluster AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id
),
source_and_target_extended AS (
SELECT /*+  MATERIALIZE NO_MERGE  LEADING(st) */
       st.snap_id,
       st.instance_number,
       st.target_instance,
       LEAST(st.begin_interval_time, s.begin_interval_time, t.begin_interval_time, c.begin_interval_
time) begin_interval_time,
       LEAST(st.end_interval_time, s.end_interval_time, t.end_interval_time, c.end_interval_time) en
d_interval_time,
       st.Avg_Latency_500B_msg,
       st.Avg_Latency_8K_msg,
       s.Avg_Latency_500B_msg s_Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg s_Avg_Latency_8K_msg,
       t.Avg_Latency_500B_msg t_Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source_and_target st,
       per_source s,
       per_target t,
       per_cluster c
 WHERE s.snap_id = st.snap_id
   AND s.instance_number = st.instance_number
   AND t.snap_id = st.snap_id
   AND t.target_instance = st.target_instance
   AND c.snap_id = st.snap_id
-- automatic transitivity does not apply to joins
-- added predicates in case LEADING hint is not obeyed
   AND t.snap_id = s.snap_id
   AND c.snap_id = s.snap_id
   AND c.snap_id = t.snap_id
 UNION ALL
SELECT s.snap_id,
       s.instance_number,
       s.target_instance,
       LEAST(s.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(s.end_interval_time, c.end_interval_time) end_interval_time,
       s.Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source s,
       per_cluster c
 WHERE c.snap_id = s.snap_id
 UNION ALL
SELECT t.snap_id,
       t.instance_number,
       t.target_instance,
       LEAST(t.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(c.end_interval_time, c.end_interval_time) end_interval_time,
       t.Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_target t,
       per_cluster c
 WHERE c.snap_id = t.snap_id
),
denorm_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(s_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(s_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE instance_number = -1
 GROUP BY
       snap_id,
       instance_number
),
denorm_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       target_instance inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(t_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(t_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE target_instance = -1
 GROUP BY
       snap_id,
       target_instance
)
SELECT /*+  NO_MERGE  */ /* 3f.380 */
       snap_id,
       TO_CHAR(CAST(begin_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(CAST(end_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') end_time,
       c_Avg_Latency_500B_msg cluster_avg,
       i_Avg_Latency_500B_msg instance_avg,
       Avg_Latency_500B_msg_i1 inst_1,
       Avg_Latency_500B_msg_i2 inst_2,
       Avg_Latency_500B_msg_i3 inst_3,
       Avg_Latency_500B_msg_i4 inst_4,
       Avg_Latency_500B_msg_i5 inst_5,
       Avg_Latency_500B_msg_i6 inst_6,
       Avg_Latency_500B_msg_i7 inst_7,
       Avg_Latency_500B_msg_i8 inst_8,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM denorm_target
 ORDER BY
       snap_id

11:49:23 3f.383
Elapsed Hours so far:    0.452
Elapsed Hours so far: .452

Elapsed: 00:00:00.00

11:49:23 3f "00456_edb360_323688_3f_383_500b_msg_pings_sent_to_all_instances.html"
11:49:23 3f "00457_edb360_323688_3f_383_500b_msg_pings_sent_to_all_instances_line_chart.html"
Elapsed Hours so far:    0.452

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:24 3f "Interconnect Ping Latency Stats"
11:49:24 8K msg pings received from Instance 1

WITH
interconnect_pings AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 3f.380 */
       h.snap_id,
       h.dbid,
       h.instance_number,
       h.target_instance,
       s.begin_interval_time,
       s.end_interval_time,
       s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) startup_time_interval,
       h.cnt_500b - LAG(h.cnt_500b)         OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_500b,
       h.cnt_8k - LAG(h.cnt_8k)             OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_8k,
       h.wait_500b - LAG(h.wait_500b)       OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_500b,
       h.wait_8k - LAG(h.wait_8k)           OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_8k
  FROM dba_hist_interconnect_pings h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.cnt_500b > 100 -- else too small
   AND h.cnt_8k > 100 -- else too small
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
per_source_and_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM interconnect_pings
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND cnt_500b > 0
   AND cnt_8k > 0
   AND wait_500b > 0
   AND wait_8k > 0
 GROUP BY
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time
),
per_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       instance_number
),
per_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       target_instance
),
per_cluster AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id
),
source_and_target_extended AS (
SELECT /*+  MATERIALIZE NO_MERGE  LEADING(st) */
       st.snap_id,
       st.instance_number,
       st.target_instance,
       LEAST(st.begin_interval_time, s.begin_interval_time, t.begin_interval_time, c.begin_interval_
time) begin_interval_time,
       LEAST(st.end_interval_time, s.end_interval_time, t.end_interval_time, c.end_interval_time) en
d_interval_time,
       st.Avg_Latency_500B_msg,
       st.Avg_Latency_8K_msg,
       s.Avg_Latency_500B_msg s_Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg s_Avg_Latency_8K_msg,
       t.Avg_Latency_500B_msg t_Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source_and_target st,
       per_source s,
       per_target t,
       per_cluster c
 WHERE s.snap_id = st.snap_id
   AND s.instance_number = st.instance_number
   AND t.snap_id = st.snap_id
   AND t.target_instance = st.target_instance
   AND c.snap_id = st.snap_id
-- automatic transitivity does not apply to joins
-- added predicates in case LEADING hint is not obeyed
   AND t.snap_id = s.snap_id
   AND c.snap_id = s.snap_id
   AND c.snap_id = t.snap_id
 UNION ALL
SELECT s.snap_id,
       s.instance_number,
       s.target_instance,
       LEAST(s.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(s.end_interval_time, c.end_interval_time) end_interval_time,
       s.Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source s,
       per_cluster c
 WHERE c.snap_id = s.snap_id
 UNION ALL
SELECT t.snap_id,
       t.instance_number,
       t.target_instance,
       LEAST(t.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(c.end_interval_time, c.end_interval_time) end_interval_time,
       t.Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_target t,
       per_cluster c
 WHERE c.snap_id = t.snap_id
),
denorm_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(s_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(s_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE instance_number = 1
 GROUP BY
       snap_id,
       instance_number
),
denorm_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       target_instance inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(t_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(t_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE target_instance = 1
 GROUP BY
       snap_id,
       target_instance
)
SELECT /*+  NO_MERGE  */ /* 3f.380 */
       snap_id,
       TO_CHAR(CAST(begin_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(CAST(end_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') end_time,
       c_Avg_Latency_8K_msg cluster_avg,
       i_Avg_Latency_8K_msg instance_avg,
       Avg_Latency_8K_msg_i1 inst_1,
       Avg_Latency_8K_msg_i2 inst_2,
       Avg_Latency_8K_msg_i3 inst_3,
       Avg_Latency_8K_msg_i4 inst_4,
       Avg_Latency_8K_msg_i5 inst_5,
       Avg_Latency_8K_msg_i6 inst_6,
       Avg_Latency_8K_msg_i7 inst_7,
       Avg_Latency_8K_msg_i8 inst_8,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM denorm_target
 ORDER BY
       snap_id

11:49:24 3f.384
Elapsed Hours so far:    0.452
Elapsed Hours so far: .452

Elapsed: 00:00:00.00

11:49:24 3f "00458_edb360_323688_3f_384_8k_msg_pings_received_from_instance_1.html"
11:49:24 3f "00459_edb360_323688_3f_384_8k_msg_pings_received_from_instance_1_line_chart.html"
Elapsed Hours so far:    0.452

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:25 3f "Interconnect Ping Latency Stats"
11:49:25 8K msg pings sent to Instance 1

WITH
interconnect_pings AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 3f.380 */
       h.snap_id,
       h.dbid,
       h.instance_number,
       h.target_instance,
       s.begin_interval_time,
       s.end_interval_time,
       s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) startup_time_interval,
       h.cnt_500b - LAG(h.cnt_500b)         OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_500b,
       h.cnt_8k - LAG(h.cnt_8k)             OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_8k,
       h.wait_500b - LAG(h.wait_500b)       OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_500b,
       h.wait_8k - LAG(h.wait_8k)           OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_8k
  FROM dba_hist_interconnect_pings h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.cnt_500b > 100 -- else too small
   AND h.cnt_8k > 100 -- else too small
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
per_source_and_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM interconnect_pings
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND cnt_500b > 0
   AND cnt_8k > 0
   AND wait_500b > 0
   AND wait_8k > 0
 GROUP BY
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time
),
per_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       instance_number
),
per_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       target_instance
),
per_cluster AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id
),
source_and_target_extended AS (
SELECT /*+  MATERIALIZE NO_MERGE  LEADING(st) */
       st.snap_id,
       st.instance_number,
       st.target_instance,
       LEAST(st.begin_interval_time, s.begin_interval_time, t.begin_interval_time, c.begin_interval_
time) begin_interval_time,
       LEAST(st.end_interval_time, s.end_interval_time, t.end_interval_time, c.end_interval_time) en
d_interval_time,
       st.Avg_Latency_500B_msg,
       st.Avg_Latency_8K_msg,
       s.Avg_Latency_500B_msg s_Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg s_Avg_Latency_8K_msg,
       t.Avg_Latency_500B_msg t_Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source_and_target st,
       per_source s,
       per_target t,
       per_cluster c
 WHERE s.snap_id = st.snap_id
   AND s.instance_number = st.instance_number
   AND t.snap_id = st.snap_id
   AND t.target_instance = st.target_instance
   AND c.snap_id = st.snap_id
-- automatic transitivity does not apply to joins
-- added predicates in case LEADING hint is not obeyed
   AND t.snap_id = s.snap_id
   AND c.snap_id = s.snap_id
   AND c.snap_id = t.snap_id
 UNION ALL
SELECT s.snap_id,
       s.instance_number,
       s.target_instance,
       LEAST(s.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(s.end_interval_time, c.end_interval_time) end_interval_time,
       s.Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source s,
       per_cluster c
 WHERE c.snap_id = s.snap_id
 UNION ALL
SELECT t.snap_id,
       t.instance_number,
       t.target_instance,
       LEAST(t.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(c.end_interval_time, c.end_interval_time) end_interval_time,
       t.Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_target t,
       per_cluster c
 WHERE c.snap_id = t.snap_id
),
denorm_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(s_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(s_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE instance_number = 1
 GROUP BY
       snap_id,
       instance_number
),
denorm_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       target_instance inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(t_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(t_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE target_instance = 1
 GROUP BY
       snap_id,
       target_instance
)
SELECT /*+  NO_MERGE  */ /* 3f.380 */
       snap_id,
       TO_CHAR(CAST(begin_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(CAST(end_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') end_time,
       c_Avg_Latency_8K_msg cluster_avg,
       i_Avg_Latency_8K_msg instance_avg,
       Avg_Latency_8K_msg_i1 inst_1,
       Avg_Latency_8K_msg_i2 inst_2,
       Avg_Latency_8K_msg_i3 inst_3,
       Avg_Latency_8K_msg_i4 inst_4,
       Avg_Latency_8K_msg_i5 inst_5,
       Avg_Latency_8K_msg_i6 inst_6,
       Avg_Latency_8K_msg_i7 inst_7,
       Avg_Latency_8K_msg_i8 inst_8,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM denorm_source
 ORDER BY
       snap_id

11:49:25 3f.385
Elapsed Hours so far:    0.452
Elapsed Hours so far: .452

Elapsed: 00:00:00.01

11:49:25 3f "00460_edb360_323688_3f_385_8k_msg_pings_sent_to_instance_1.html"
11:49:25 3f "00461_edb360_323688_3f_385_8k_msg_pings_sent_to_instance_1_line_chart.html"
Elapsed Hours so far:    0.453

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:26 3f "Interconnect Ping Latency Stats"
11:49:26 500B msg pings received from Instance 1

WITH
interconnect_pings AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 3f.380 */
       h.snap_id,
       h.dbid,
       h.instance_number,
       h.target_instance,
       s.begin_interval_time,
       s.end_interval_time,
       s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) startup_time_interval,
       h.cnt_500b - LAG(h.cnt_500b)         OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_500b,
       h.cnt_8k - LAG(h.cnt_8k)             OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_8k,
       h.wait_500b - LAG(h.wait_500b)       OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_500b,
       h.wait_8k - LAG(h.wait_8k)           OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_8k
  FROM dba_hist_interconnect_pings h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.cnt_500b > 100 -- else too small
   AND h.cnt_8k > 100 -- else too small
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
per_source_and_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM interconnect_pings
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND cnt_500b > 0
   AND cnt_8k > 0
   AND wait_500b > 0
   AND wait_8k > 0
 GROUP BY
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time
),
per_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       instance_number
),
per_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       target_instance
),
per_cluster AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id
),
source_and_target_extended AS (
SELECT /*+  MATERIALIZE NO_MERGE  LEADING(st) */
       st.snap_id,
       st.instance_number,
       st.target_instance,
       LEAST(st.begin_interval_time, s.begin_interval_time, t.begin_interval_time, c.begin_interval_
time) begin_interval_time,
       LEAST(st.end_interval_time, s.end_interval_time, t.end_interval_time, c.end_interval_time) en
d_interval_time,
       st.Avg_Latency_500B_msg,
       st.Avg_Latency_8K_msg,
       s.Avg_Latency_500B_msg s_Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg s_Avg_Latency_8K_msg,
       t.Avg_Latency_500B_msg t_Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source_and_target st,
       per_source s,
       per_target t,
       per_cluster c
 WHERE s.snap_id = st.snap_id
   AND s.instance_number = st.instance_number
   AND t.snap_id = st.snap_id
   AND t.target_instance = st.target_instance
   AND c.snap_id = st.snap_id
-- automatic transitivity does not apply to joins
-- added predicates in case LEADING hint is not obeyed
   AND t.snap_id = s.snap_id
   AND c.snap_id = s.snap_id
   AND c.snap_id = t.snap_id
 UNION ALL
SELECT s.snap_id,
       s.instance_number,
       s.target_instance,
       LEAST(s.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(s.end_interval_time, c.end_interval_time) end_interval_time,
       s.Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source s,
       per_cluster c
 WHERE c.snap_id = s.snap_id
 UNION ALL
SELECT t.snap_id,
       t.instance_number,
       t.target_instance,
       LEAST(t.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(c.end_interval_time, c.end_interval_time) end_interval_time,
       t.Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_target t,
       per_cluster c
 WHERE c.snap_id = t.snap_id
),
denorm_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(s_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(s_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE instance_number = 1
 GROUP BY
       snap_id,
       instance_number
),
denorm_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       target_instance inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(t_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(t_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE target_instance = 1
 GROUP BY
       snap_id,
       target_instance
)
SELECT /*+  NO_MERGE  */ /* 3f.380 */
       snap_id,
       TO_CHAR(CAST(begin_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(CAST(end_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') end_time,
       c_Avg_Latency_500B_msg cluster_avg,
       i_Avg_Latency_500B_msg instance_avg,
       Avg_Latency_500B_msg_i1 inst_1,
       Avg_Latency_500B_msg_i2 inst_2,
       Avg_Latency_500B_msg_i3 inst_3,
       Avg_Latency_500B_msg_i4 inst_4,
       Avg_Latency_500B_msg_i5 inst_5,
       Avg_Latency_500B_msg_i6 inst_6,
       Avg_Latency_500B_msg_i7 inst_7,
       Avg_Latency_500B_msg_i8 inst_8,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM denorm_target
 ORDER BY
       snap_id

11:49:26 3f.386
Elapsed Hours so far:    0.453
Elapsed Hours so far: .453

Elapsed: 00:00:00.00

11:49:26 3f "00462_edb360_323688_3f_386_500b_msg_pings_received_from_instance_1.html"
11:49:26 3f "00463_edb360_323688_3f_386_500b_msg_pings_received_from_instance_1_line_chart.html"
Elapsed Hours so far:    0.453

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:27 3f "Interconnect Ping Latency Stats"
11:49:27 500B msg pings sent to Instance 1

WITH
interconnect_pings AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 3f.380 */
       h.snap_id,
       h.dbid,
       h.instance_number,
       h.target_instance,
       s.begin_interval_time,
       s.end_interval_time,
       s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) startup_time_interval,
       h.cnt_500b - LAG(h.cnt_500b)         OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_500b,
       h.cnt_8k - LAG(h.cnt_8k)             OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_8k,
       h.wait_500b - LAG(h.wait_500b)       OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_500b,
       h.wait_8k - LAG(h.wait_8k)           OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_8k
  FROM dba_hist_interconnect_pings h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.cnt_500b > 100 -- else too small
   AND h.cnt_8k > 100 -- else too small
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
per_source_and_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM interconnect_pings
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND cnt_500b > 0
   AND cnt_8k > 0
   AND wait_500b > 0
   AND wait_8k > 0
 GROUP BY
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time
),
per_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       instance_number
),
per_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       target_instance
),
per_cluster AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id
),
source_and_target_extended AS (
SELECT /*+  MATERIALIZE NO_MERGE  LEADING(st) */
       st.snap_id,
       st.instance_number,
       st.target_instance,
       LEAST(st.begin_interval_time, s.begin_interval_time, t.begin_interval_time, c.begin_interval_
time) begin_interval_time,
       LEAST(st.end_interval_time, s.end_interval_time, t.end_interval_time, c.end_interval_time) en
d_interval_time,
       st.Avg_Latency_500B_msg,
       st.Avg_Latency_8K_msg,
       s.Avg_Latency_500B_msg s_Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg s_Avg_Latency_8K_msg,
       t.Avg_Latency_500B_msg t_Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source_and_target st,
       per_source s,
       per_target t,
       per_cluster c
 WHERE s.snap_id = st.snap_id
   AND s.instance_number = st.instance_number
   AND t.snap_id = st.snap_id
   AND t.target_instance = st.target_instance
   AND c.snap_id = st.snap_id
-- automatic transitivity does not apply to joins
-- added predicates in case LEADING hint is not obeyed
   AND t.snap_id = s.snap_id
   AND c.snap_id = s.snap_id
   AND c.snap_id = t.snap_id
 UNION ALL
SELECT s.snap_id,
       s.instance_number,
       s.target_instance,
       LEAST(s.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(s.end_interval_time, c.end_interval_time) end_interval_time,
       s.Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source s,
       per_cluster c
 WHERE c.snap_id = s.snap_id
 UNION ALL
SELECT t.snap_id,
       t.instance_number,
       t.target_instance,
       LEAST(t.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(c.end_interval_time, c.end_interval_time) end_interval_time,
       t.Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_target t,
       per_cluster c
 WHERE c.snap_id = t.snap_id
),
denorm_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(s_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(s_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE instance_number = 1
 GROUP BY
       snap_id,
       instance_number
),
denorm_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       target_instance inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(t_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(t_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE target_instance = 1
 GROUP BY
       snap_id,
       target_instance
)
SELECT /*+  NO_MERGE  */ /* 3f.380 */
       snap_id,
       TO_CHAR(CAST(begin_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(CAST(end_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') end_time,
       c_Avg_Latency_500B_msg cluster_avg,
       i_Avg_Latency_500B_msg instance_avg,
       Avg_Latency_500B_msg_i1 inst_1,
       Avg_Latency_500B_msg_i2 inst_2,
       Avg_Latency_500B_msg_i3 inst_3,
       Avg_Latency_500B_msg_i4 inst_4,
       Avg_Latency_500B_msg_i5 inst_5,
       Avg_Latency_500B_msg_i6 inst_6,
       Avg_Latency_500B_msg_i7 inst_7,
       Avg_Latency_500B_msg_i8 inst_8,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM denorm_source
 ORDER BY
       snap_id

11:49:27 3f.387
Elapsed Hours so far:    0.453
Elapsed Hours so far: .453

Elapsed: 00:00:00.00

11:49:27 3f "00464_edb360_323688_3f_387_500b_msg_pings_sent_to_instance_1.html"
11:49:27 3f "00465_edb360_323688_3f_387_500b_msg_pings_sent_to_instance_1_line_chart.html"
Elapsed Hours so far:    0.453

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:27 3f "Interconnect Ping Latency Stats"
11:49:27 8K msg pings received from Instance 2

WITH
interconnect_pings AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 3f.380 */
       h.snap_id,
       h.dbid,
       h.instance_number,
       h.target_instance,
       s.begin_interval_time,
       s.end_interval_time,
       s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) startup_time_interval,
       h.cnt_500b - LAG(h.cnt_500b)         OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_500b,
       h.cnt_8k - LAG(h.cnt_8k)             OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_8k,
       h.wait_500b - LAG(h.wait_500b)       OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_500b,
       h.wait_8k - LAG(h.wait_8k)           OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_8k
  FROM dba_hist_interconnect_pings h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.cnt_500b > 100 -- else too small
   AND h.cnt_8k > 100 -- else too small
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
per_source_and_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM interconnect_pings
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND cnt_500b > 0
   AND cnt_8k > 0
   AND wait_500b > 0
   AND wait_8k > 0
 GROUP BY
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time
),
per_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       instance_number
),
per_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       target_instance
),
per_cluster AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id
),
source_and_target_extended AS (
SELECT /*+  MATERIALIZE NO_MERGE  LEADING(st) */
       st.snap_id,
       st.instance_number,
       st.target_instance,
       LEAST(st.begin_interval_time, s.begin_interval_time, t.begin_interval_time, c.begin_interval_
time) begin_interval_time,
       LEAST(st.end_interval_time, s.end_interval_time, t.end_interval_time, c.end_interval_time) en
d_interval_time,
       st.Avg_Latency_500B_msg,
       st.Avg_Latency_8K_msg,
       s.Avg_Latency_500B_msg s_Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg s_Avg_Latency_8K_msg,
       t.Avg_Latency_500B_msg t_Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source_and_target st,
       per_source s,
       per_target t,
       per_cluster c
 WHERE s.snap_id = st.snap_id
   AND s.instance_number = st.instance_number
   AND t.snap_id = st.snap_id
   AND t.target_instance = st.target_instance
   AND c.snap_id = st.snap_id
-- automatic transitivity does not apply to joins
-- added predicates in case LEADING hint is not obeyed
   AND t.snap_id = s.snap_id
   AND c.snap_id = s.snap_id
   AND c.snap_id = t.snap_id
 UNION ALL
SELECT s.snap_id,
       s.instance_number,
       s.target_instance,
       LEAST(s.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(s.end_interval_time, c.end_interval_time) end_interval_time,
       s.Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source s,
       per_cluster c
 WHERE c.snap_id = s.snap_id
 UNION ALL
SELECT t.snap_id,
       t.instance_number,
       t.target_instance,
       LEAST(t.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(c.end_interval_time, c.end_interval_time) end_interval_time,
       t.Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_target t,
       per_cluster c
 WHERE c.snap_id = t.snap_id
),
denorm_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(s_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(s_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE instance_number = 2
 GROUP BY
       snap_id,
       instance_number
),
denorm_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       target_instance inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(t_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(t_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE target_instance = 2
 GROUP BY
       snap_id,
       target_instance
)
SELECT /*+  NO_MERGE  */ /* 3f.380 */
       snap_id,
       TO_CHAR(CAST(begin_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(CAST(end_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') end_time,
       c_Avg_Latency_8K_msg cluster_avg,
       i_Avg_Latency_8K_msg instance_avg,
       Avg_Latency_8K_msg_i1 inst_1,
       Avg_Latency_8K_msg_i2 inst_2,
       Avg_Latency_8K_msg_i3 inst_3,
       Avg_Latency_8K_msg_i4 inst_4,
       Avg_Latency_8K_msg_i5 inst_5,
       Avg_Latency_8K_msg_i6 inst_6,
       Avg_Latency_8K_msg_i7 inst_7,
       Avg_Latency_8K_msg_i8 inst_8,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM denorm_target
 ORDER BY
       snap_id

11:49:27 3f.388
Elapsed Hours so far:    0.453
Elapsed Hours so far: .453

Elapsed: 00:00:00.01

11:49:28 3f "00466_edb360_323688_3f_388_8k_msg_pings_received_from_instance_2.html"
11:49:28 3f "00467_edb360_323688_3f_388_8k_msg_pings_received_from_instance_2_line_chart.html"
Elapsed Hours so far:    0.453

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:28 3f "Interconnect Ping Latency Stats"
11:49:28 8K msg pings sent to Instance 2

WITH
interconnect_pings AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 3f.380 */
       h.snap_id,
       h.dbid,
       h.instance_number,
       h.target_instance,
       s.begin_interval_time,
       s.end_interval_time,
       s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) startup_time_interval,
       h.cnt_500b - LAG(h.cnt_500b)         OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_500b,
       h.cnt_8k - LAG(h.cnt_8k)             OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_8k,
       h.wait_500b - LAG(h.wait_500b)       OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_500b,
       h.wait_8k - LAG(h.wait_8k)           OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_8k
  FROM dba_hist_interconnect_pings h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.cnt_500b > 100 -- else too small
   AND h.cnt_8k > 100 -- else too small
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
per_source_and_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM interconnect_pings
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND cnt_500b > 0
   AND cnt_8k > 0
   AND wait_500b > 0
   AND wait_8k > 0
 GROUP BY
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time
),
per_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       instance_number
),
per_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       target_instance
),
per_cluster AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id
),
source_and_target_extended AS (
SELECT /*+  MATERIALIZE NO_MERGE  LEADING(st) */
       st.snap_id,
       st.instance_number,
       st.target_instance,
       LEAST(st.begin_interval_time, s.begin_interval_time, t.begin_interval_time, c.begin_interval_
time) begin_interval_time,
       LEAST(st.end_interval_time, s.end_interval_time, t.end_interval_time, c.end_interval_time) en
d_interval_time,
       st.Avg_Latency_500B_msg,
       st.Avg_Latency_8K_msg,
       s.Avg_Latency_500B_msg s_Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg s_Avg_Latency_8K_msg,
       t.Avg_Latency_500B_msg t_Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source_and_target st,
       per_source s,
       per_target t,
       per_cluster c
 WHERE s.snap_id = st.snap_id
   AND s.instance_number = st.instance_number
   AND t.snap_id = st.snap_id
   AND t.target_instance = st.target_instance
   AND c.snap_id = st.snap_id
-- automatic transitivity does not apply to joins
-- added predicates in case LEADING hint is not obeyed
   AND t.snap_id = s.snap_id
   AND c.snap_id = s.snap_id
   AND c.snap_id = t.snap_id
 UNION ALL
SELECT s.snap_id,
       s.instance_number,
       s.target_instance,
       LEAST(s.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(s.end_interval_time, c.end_interval_time) end_interval_time,
       s.Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source s,
       per_cluster c
 WHERE c.snap_id = s.snap_id
 UNION ALL
SELECT t.snap_id,
       t.instance_number,
       t.target_instance,
       LEAST(t.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(c.end_interval_time, c.end_interval_time) end_interval_time,
       t.Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_target t,
       per_cluster c
 WHERE c.snap_id = t.snap_id
),
denorm_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(s_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(s_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE instance_number = 2
 GROUP BY
       snap_id,
       instance_number
),
denorm_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       target_instance inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(t_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(t_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE target_instance = 2
 GROUP BY
       snap_id,
       target_instance
)
SELECT /*+  NO_MERGE  */ /* 3f.380 */
       snap_id,
       TO_CHAR(CAST(begin_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(CAST(end_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') end_time,
       c_Avg_Latency_8K_msg cluster_avg,
       i_Avg_Latency_8K_msg instance_avg,
       Avg_Latency_8K_msg_i1 inst_1,
       Avg_Latency_8K_msg_i2 inst_2,
       Avg_Latency_8K_msg_i3 inst_3,
       Avg_Latency_8K_msg_i4 inst_4,
       Avg_Latency_8K_msg_i5 inst_5,
       Avg_Latency_8K_msg_i6 inst_6,
       Avg_Latency_8K_msg_i7 inst_7,
       Avg_Latency_8K_msg_i8 inst_8,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM denorm_source
 ORDER BY
       snap_id

11:49:28 3f.389
Elapsed Hours so far:    0.453
Elapsed Hours so far: .453

Elapsed: 00:00:00.00

11:49:28 3f "00468_edb360_323688_3f_389_8k_msg_pings_sent_to_instance_2.html"
11:49:29 3f "00469_edb360_323688_3f_389_8k_msg_pings_sent_to_instance_2_line_chart.html"
Elapsed Hours so far:    0.454

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:29 3f "Interconnect Ping Latency Stats"
11:49:29 500B msg pings received from Instance 2

WITH
interconnect_pings AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 3f.380 */
       h.snap_id,
       h.dbid,
       h.instance_number,
       h.target_instance,
       s.begin_interval_time,
       s.end_interval_time,
       s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) startup_time_interval,
       h.cnt_500b - LAG(h.cnt_500b)         OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_500b,
       h.cnt_8k - LAG(h.cnt_8k)             OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_8k,
       h.wait_500b - LAG(h.wait_500b)       OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_500b,
       h.wait_8k - LAG(h.wait_8k)           OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_8k
  FROM dba_hist_interconnect_pings h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.cnt_500b > 100 -- else too small
   AND h.cnt_8k > 100 -- else too small
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
per_source_and_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM interconnect_pings
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND cnt_500b > 0
   AND cnt_8k > 0
   AND wait_500b > 0
   AND wait_8k > 0
 GROUP BY
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time
),
per_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       instance_number
),
per_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       target_instance
),
per_cluster AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id
),
source_and_target_extended AS (
SELECT /*+  MATERIALIZE NO_MERGE  LEADING(st) */
       st.snap_id,
       st.instance_number,
       st.target_instance,
       LEAST(st.begin_interval_time, s.begin_interval_time, t.begin_interval_time, c.begin_interval_
time) begin_interval_time,
       LEAST(st.end_interval_time, s.end_interval_time, t.end_interval_time, c.end_interval_time) en
d_interval_time,
       st.Avg_Latency_500B_msg,
       st.Avg_Latency_8K_msg,
       s.Avg_Latency_500B_msg s_Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg s_Avg_Latency_8K_msg,
       t.Avg_Latency_500B_msg t_Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source_and_target st,
       per_source s,
       per_target t,
       per_cluster c
 WHERE s.snap_id = st.snap_id
   AND s.instance_number = st.instance_number
   AND t.snap_id = st.snap_id
   AND t.target_instance = st.target_instance
   AND c.snap_id = st.snap_id
-- automatic transitivity does not apply to joins
-- added predicates in case LEADING hint is not obeyed
   AND t.snap_id = s.snap_id
   AND c.snap_id = s.snap_id
   AND c.snap_id = t.snap_id
 UNION ALL
SELECT s.snap_id,
       s.instance_number,
       s.target_instance,
       LEAST(s.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(s.end_interval_time, c.end_interval_time) end_interval_time,
       s.Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source s,
       per_cluster c
 WHERE c.snap_id = s.snap_id
 UNION ALL
SELECT t.snap_id,
       t.instance_number,
       t.target_instance,
       LEAST(t.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(c.end_interval_time, c.end_interval_time) end_interval_time,
       t.Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_target t,
       per_cluster c
 WHERE c.snap_id = t.snap_id
),
denorm_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(s_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(s_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE instance_number = 2
 GROUP BY
       snap_id,
       instance_number
),
denorm_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       target_instance inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(t_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(t_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE target_instance = 2
 GROUP BY
       snap_id,
       target_instance
)
SELECT /*+  NO_MERGE  */ /* 3f.380 */
       snap_id,
       TO_CHAR(CAST(begin_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(CAST(end_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') end_time,
       c_Avg_Latency_500B_msg cluster_avg,
       i_Avg_Latency_500B_msg instance_avg,
       Avg_Latency_500B_msg_i1 inst_1,
       Avg_Latency_500B_msg_i2 inst_2,
       Avg_Latency_500B_msg_i3 inst_3,
       Avg_Latency_500B_msg_i4 inst_4,
       Avg_Latency_500B_msg_i5 inst_5,
       Avg_Latency_500B_msg_i6 inst_6,
       Avg_Latency_500B_msg_i7 inst_7,
       Avg_Latency_500B_msg_i8 inst_8,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM denorm_target
 ORDER BY
       snap_id

11:49:29 3f.390
Elapsed Hours so far:    0.454
Elapsed Hours so far: .454

Elapsed: 00:00:00.01

11:49:29 3f "00470_edb360_323688_3f_390_500b_msg_pings_received_from_instance_2.html"
11:49:30 3f "00471_edb360_323688_3f_390_500b_msg_pings_received_from_instance_2_line_chart.html"
Elapsed Hours so far:    0.454

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:30 3f "Interconnect Ping Latency Stats"
11:49:30 500B msg pings sent to Instance 2

WITH
interconnect_pings AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 3f.380 */
       h.snap_id,
       h.dbid,
       h.instance_number,
       h.target_instance,
       s.begin_interval_time,
       s.end_interval_time,
       s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) startup_time_interval,
       h.cnt_500b - LAG(h.cnt_500b)         OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_500b,
       h.cnt_8k - LAG(h.cnt_8k)             OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) cnt_8k,
       h.wait_500b - LAG(h.wait_500b)       OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_500b,
       h.wait_8k - LAG(h.wait_8k)           OVER (PARTITION BY h.dbid, h.instance_number, h.target_i
nstance ORDER BY h.snap_id) wait_8k
  FROM dba_hist_interconnect_pings h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.cnt_500b > 100 -- else too small
   AND h.cnt_8k > 100 -- else too small
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
per_source_and_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM interconnect_pings
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND cnt_500b > 0
   AND cnt_8k > 0
   AND wait_500b > 0
   AND wait_8k > 0
 GROUP BY
       snap_id,
       instance_number,
       target_instance,
       begin_interval_time,
       end_interval_time
),
per_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       instance_number
),
per_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id,
       target_instance
),
per_cluster AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       -1 instance_number,
       -1 target_instance,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(cnt_500b) cnt_500b,
       SUM(cnt_8k) cnt_8k,
       SUM(wait_500b) wait_500b,
       SUM(wait_8k) wait_8k,
       ROUND(SUM(wait_500b) / SUM(cnt_500b) / 1000, 2) Avg_Latency_500B_msg,
       ROUND(SUM(wait_8k) / SUM(cnt_8k) / 1000, 2) Avg_Latency_8K_msg
  FROM per_source_and_target
 GROUP BY
       snap_id
),
source_and_target_extended AS (
SELECT /*+  MATERIALIZE NO_MERGE  LEADING(st) */
       st.snap_id,
       st.instance_number,
       st.target_instance,
       LEAST(st.begin_interval_time, s.begin_interval_time, t.begin_interval_time, c.begin_interval_
time) begin_interval_time,
       LEAST(st.end_interval_time, s.end_interval_time, t.end_interval_time, c.end_interval_time) en
d_interval_time,
       st.Avg_Latency_500B_msg,
       st.Avg_Latency_8K_msg,
       s.Avg_Latency_500B_msg s_Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg s_Avg_Latency_8K_msg,
       t.Avg_Latency_500B_msg t_Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source_and_target st,
       per_source s,
       per_target t,
       per_cluster c
 WHERE s.snap_id = st.snap_id
   AND s.instance_number = st.instance_number
   AND t.snap_id = st.snap_id
   AND t.target_instance = st.target_instance
   AND c.snap_id = st.snap_id
-- automatic transitivity does not apply to joins
-- added predicates in case LEADING hint is not obeyed
   AND t.snap_id = s.snap_id
   AND c.snap_id = s.snap_id
   AND c.snap_id = t.snap_id
 UNION ALL
SELECT s.snap_id,
       s.instance_number,
       s.target_instance,
       LEAST(s.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(s.end_interval_time, c.end_interval_time) end_interval_time,
       s.Avg_Latency_500B_msg,
       s.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_source s,
       per_cluster c
 WHERE c.snap_id = s.snap_id
 UNION ALL
SELECT t.snap_id,
       t.instance_number,
       t.target_instance,
       LEAST(t.begin_interval_time, c.begin_interval_time) begin_interval_time,
       LEAST(c.end_interval_time, c.end_interval_time) end_interval_time,
       t.Avg_Latency_500B_msg,
       t.Avg_Latency_8K_msg,
       0 s_Avg_Latency_500B_msg,
       0 s_Avg_Latency_8K_msg,
       0 t_Avg_Latency_500B_msg,
       0 t_Avg_Latency_8K_msg,
       c.Avg_Latency_500B_msg c_Avg_Latency_500B_msg,
       c.Avg_Latency_8K_msg c_Avg_Latency_8K_msg
  FROM per_target t,
       per_cluster c
 WHERE c.snap_id = t.snap_id
),
denorm_target AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       instance_number inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE target_instance WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE target_instance WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE target_instance WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE target_instance WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE target_instance WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE target_instance WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE target_instance WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE target_instance WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(s_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(s_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE instance_number = 2
 GROUP BY
       snap_id,
       instance_number
),
denorm_source AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3f.380 */
       snap_id,
       target_instance inst_num,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i1
,
       SUM(CASE instance_number WHEN 1 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i1,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i2
,
       SUM(CASE instance_number WHEN 2 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i2,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i3
,
       SUM(CASE instance_number WHEN 3 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i3,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i4
,
       SUM(CASE instance_number WHEN 4 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i4,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i5
,
       SUM(CASE instance_number WHEN 5 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i5,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i6
,
       SUM(CASE instance_number WHEN 6 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i6,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i7
,
       SUM(CASE instance_number WHEN 7 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i7,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_500B_msg ELSE 0 END) Avg_Latency_500B_msg_i8
,
       SUM(CASE instance_number WHEN 8 THEN Avg_Latency_8K_msg ELSE 0 END) Avg_Latency_8K_msg_i8,
       MAX(t_Avg_Latency_500B_msg) i_Avg_Latency_500B_msg,
       MAX(t_Avg_Latency_8K_msg) i_Avg_Latency_8K_msg,
       MAX(c_Avg_Latency_500B_msg) c_Avg_Latency_500B_msg,
       MAX(c_Avg_Latency_8K_msg) c_Avg_Latency_8K_msg
  FROM source_and_target_extended
 WHERE target_instance = 2
 GROUP BY
       snap_id,
       target_instance
)
SELECT /*+  NO_MERGE  */ /* 3f.380 */
       snap_id,
       TO_CHAR(CAST(begin_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(CAST(end_interval_time AS DATE), 'YYYY-MM-DD HH24:MI:SS') end_time,
       c_Avg_Latency_500B_msg cluster_avg,
       i_Avg_Latency_500B_msg instance_avg,
       Avg_Latency_500B_msg_i1 inst_1,
       Avg_Latency_500B_msg_i2 inst_2,
       Avg_Latency_500B_msg_i3 inst_3,
       Avg_Latency_500B_msg_i4 inst_4,
       Avg_Latency_500B_msg_i5 inst_5,
       Avg_Latency_500B_msg_i6 inst_6,
       Avg_Latency_500B_msg_i7 inst_7,
       Avg_Latency_500B_msg_i8 inst_8,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM denorm_source
 ORDER BY
       snap_id

11:49:30 3f.391
Elapsed Hours so far:    0.454
Elapsed Hours so far: .454

Elapsed: 00:00:00.00

11:49:30 3f "00472_edb360_323688_3f_391_500b_msg_pings_sent_to_instance_2.html"
11:49:31 3f "00473_edb360_323688_3f_391_500b_msg_pings_sent_to_instance_2_line_chart.html"
Elapsed Hours so far:    0.455

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:33 3g "Interconnect Performance"
11:49:33 Interconnect Client Statistics for Cluster

WITH ic_client_stats AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 3g.392 */
       h.snap_id,
       h.dbid,
       h.instance_number,
       h.name,
       s.begin_interval_time,
       s.end_interval_time,
       s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.name ORD
ER BY h.snap_id) startup_time_interval,
       h.bytes_sent - LAG(h.bytes_sent) OVER (PARTITION BY h.dbid, h.instance_number, h.name ORDER B
Y h.snap_id) bytes_sent,
       h.bytes_received - LAG(h.bytes_received) OVER (PARTITION BY h.dbid, h.instance_number, h.name
 ORDER BY h.snap_id) bytes_received
  FROM dba_hist_ic_client_stats h,
       dba_hist_snapshot s
 WHERE h.instance_number = h.instance_number
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3g.392 */
       snap_id,
       begin_interval_time,
       end_interval_time,
       instance_number,
       ROUND(SUM(bytes_received) / POWER(10,6) / ROUND((CAST(end_interval_time AS DATE) - CAST(begin
_interval_time AS DATE)) * 24 * 60 * 60), 2) mbps_received,
       ROUND(SUM(bytes_sent) / POWER(10,6) / ROUND((CAST(end_interval_time AS DATE) - CAST(begin_int
erval_time AS DATE)) * 24 * 60 * 60), 2) mbps_sent
  FROM ic_client_stats
  WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
 startup
    AND bytes_received >= 0
    AND bytes_sent >= 0
 GROUP BY
       snap_id,
       begin_interval_time,
       end_interval_time,
       instance_number
)
SELECT /*+  NO_MERGE  */ /* 3g.392 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(mbps_sent) + SUM(mbps_received) mbps_total,
       SUM(mbps_sent) mbps_sent,
       SUM(mbps_received) mbps_received,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:49:33 3g.392
Elapsed Hours so far:    0.455
Elapsed Hours so far: .455

Elapsed: 00:00:00.00

11:49:33 3g "00474_edb360_323688_3g_392_interconnect_client_statistics_for_cluster.html"
11:49:34 3g "00475_edb360_323688_3g_392_interconnect_client_statistics_for_cluster_line_chart.html"
Elapsed Hours so far:    0.455

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:34 3g "Interconnect Performance"
11:49:34 Interconnect Client Statistics for Instance 1

WITH ic_client_stats AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 3g.392 */
       h.snap_id,
       h.dbid,
       h.instance_number,
       h.name,
       s.begin_interval_time,
       s.end_interval_time,
       s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.name ORD
ER BY h.snap_id) startup_time_interval,
       h.bytes_sent - LAG(h.bytes_sent) OVER (PARTITION BY h.dbid, h.instance_number, h.name ORDER B
Y h.snap_id) bytes_sent,
       h.bytes_received - LAG(h.bytes_received) OVER (PARTITION BY h.dbid, h.instance_number, h.name
 ORDER BY h.snap_id) bytes_received
  FROM dba_hist_ic_client_stats h,
       dba_hist_snapshot s
 WHERE h.instance_number = 1
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3g.392 */
       snap_id,
       begin_interval_time,
       end_interval_time,
       instance_number,
       ROUND(SUM(bytes_received) / POWER(10,6) / ROUND((CAST(end_interval_time AS DATE) - CAST(begin
_interval_time AS DATE)) * 24 * 60 * 60), 2) mbps_received,
       ROUND(SUM(bytes_sent) / POWER(10,6) / ROUND((CAST(end_interval_time AS DATE) - CAST(begin_int
erval_time AS DATE)) * 24 * 60 * 60), 2) mbps_sent
  FROM ic_client_stats
  WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
 startup
    AND bytes_received >= 0
    AND bytes_sent >= 0
 GROUP BY
       snap_id,
       begin_interval_time,
       end_interval_time,
       instance_number
)
SELECT /*+  NO_MERGE  */ /* 3g.392 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(mbps_sent) + SUM(mbps_received) mbps_total,
       SUM(mbps_sent) mbps_sent,
       SUM(mbps_received) mbps_received,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:49:34 3g.393
Elapsed Hours so far:    0.455
Elapsed Hours so far: .455

Elapsed: 00:00:00.00

11:49:34 3g "00476_edb360_323688_3g_393_interconnect_client_statistics_for_instance_1.html"
11:49:35 3g "00477_edb360_323688_3g_393_interconnect_client_statistics_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.455

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:35 3g "Interconnect Performance"
11:49:35 Interconnect Client Statistics for Instance 2

WITH ic_client_stats AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 3g.392 */
       h.snap_id,
       h.dbid,
       h.instance_number,
       h.name,
       s.begin_interval_time,
       s.end_interval_time,
       s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.name ORD
ER BY h.snap_id) startup_time_interval,
       h.bytes_sent - LAG(h.bytes_sent) OVER (PARTITION BY h.dbid, h.instance_number, h.name ORDER B
Y h.snap_id) bytes_sent,
       h.bytes_received - LAG(h.bytes_received) OVER (PARTITION BY h.dbid, h.instance_number, h.name
 ORDER BY h.snap_id) bytes_received
  FROM dba_hist_ic_client_stats h,
       dba_hist_snapshot s
 WHERE h.instance_number = 2
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3g.392 */
       snap_id,
       begin_interval_time,
       end_interval_time,
       instance_number,
       ROUND(SUM(bytes_received) / POWER(10,6) / ROUND((CAST(end_interval_time AS DATE) - CAST(begin
_interval_time AS DATE)) * 24 * 60 * 60), 2) mbps_received,
       ROUND(SUM(bytes_sent) / POWER(10,6) / ROUND((CAST(end_interval_time AS DATE) - CAST(begin_int
erval_time AS DATE)) * 24 * 60 * 60), 2) mbps_sent
  FROM ic_client_stats
  WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
 startup
    AND bytes_received >= 0
    AND bytes_sent >= 0
 GROUP BY
       snap_id,
       begin_interval_time,
       end_interval_time,
       instance_number
)
SELECT /*+  NO_MERGE  */ /* 3g.392 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(mbps_sent) + SUM(mbps_received) mbps_total,
       SUM(mbps_sent) mbps_sent,
       SUM(mbps_received) mbps_received,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:49:35 3g.394
Elapsed Hours so far:    0.455
Elapsed Hours so far: .455

Elapsed: 00:00:00.00

11:49:35 3g "00478_edb360_323688_3g_394_interconnect_client_statistics_for_instance_2.html"
11:49:35 3g "00479_edb360_323688_3g_394_interconnect_client_statistics_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.456

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:36 3g "Interconnect Performance"
11:49:36 IC Device Statistics summary for Cluster

WITH
ic_device_stats AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 3g.395 */
       h.snap_id,
       h.dbid,
       h.instance_number,
       h.if_name,
       s.begin_interval_time,
       s.end_interval_time,
       s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.if_name
ORDER BY h.snap_id) startup_time_interval,
       h.bytes_received - LAG(h.bytes_received) OVER (PARTITION BY h.dbid, h.instance_number, h.if_n
ame ORDER BY h.snap_id) bytes_received,
       h.packets_received - LAG(h.packets_received) OVER (PARTITION BY h.dbid, h.instance_number, h.
if_name ORDER BY h.snap_id) packets_received,
       h.receive_errors - LAG(h.receive_errors) OVER (PARTITION BY h.dbid, h.instance_number, h.if_n
ame ORDER BY h.snap_id) receive_errors,
       h.receive_dropped - LAG(h.receive_dropped) OVER (PARTITION BY h.dbid, h.instance_number, h.if
_name ORDER BY h.snap_id) receive_dropped,
       h.receive_buf_or - LAG(h.receive_buf_or) OVER (PARTITION BY h.dbid, h.instance_number, h.if_n
ame ORDER BY h.snap_id) receive_buf_or,
       h.receive_frame_err - LAG(h.receive_frame_err) OVER (PARTITION BY h.dbid, h.instance_number,
h.if_name ORDER BY h.snap_id) receive_frame_err,
       h.bytes_sent - LAG(h.bytes_sent) OVER (PARTITION BY h.dbid, h.instance_number, h.if_name ORDE
R BY h.snap_id) bytes_sent,
       h.packets_sent - LAG(h.packets_sent) OVER (PARTITION BY h.dbid, h.instance_number, h.if_name
ORDER BY h.snap_id) packets_sent,
       h.send_errors - LAG(h.send_errors) OVER (PARTITION BY h.dbid, h.instance_number, h.if_name OR
DER BY h.snap_id) send_errors,
       h.sends_dropped - LAG(h.sends_dropped) OVER (PARTITION BY h.dbid, h.instance_number, h.if_nam
e ORDER BY h.snap_id) sends_dropped,
       h.send_buf_or - LAG(h.send_buf_or) OVER (PARTITION BY h.dbid, h.instance_number, h.if_name OR
DER BY h.snap_id) send_buf_or,
       h.send_carrier_lost - LAG(h.send_carrier_lost) OVER (PARTITION BY h.dbid, h.instance_number,
h.if_name ORDER BY h.snap_id) send_carrier_lost
  FROM dba_hist_ic_device_stats h,
       dba_hist_snapshot s
 WHERE h.instance_number = h.instance_number
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3g.395 */
       snap_id,
       begin_interval_time,
       end_interval_time,
       instance_number,
       if_name,
       SUM(bytes_received) bytes_received,
       SUM(packets_received) packets_received,
       SUM(receive_errors) receive_errors,
       SUM(receive_dropped) receive_dropped,
       SUM(receive_buf_or) receive_buf_or,
       SUM(receive_frame_err) receive_frame_err,
       SUM(bytes_sent) bytes_sent,
       SUM(packets_sent) packets_sent,
       SUM(send_errors) send_errors,
       SUM(sends_dropped) sends_dropped,
       SUM(send_buf_or) send_buf_or,
       SUM(send_carrier_lost) send_carrier_lost
  FROM ic_device_stats
  WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
 startup
    AND bytes_received >= 0
    AND packets_received >= 0
    AND receive_errors >= 0
    AND receive_dropped >= 0
    AND receive_buf_or >= 0
    AND receive_frame_err >= 0
    AND bytes_sent >= 0
    AND packets_sent >= 0
    AND send_errors >= 0
    AND sends_dropped >= 0
    AND send_buf_or >= 0
    AND send_carrier_lost >= 0
 GROUP BY
       snap_id,
       begin_interval_time,
       end_interval_time,
       instance_number,
       if_name
),
per_cluster AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3g.395 */
       snap_id,
       begin_interval_time,
       end_interval_time,
       SUM(bytes_received) bytes_received,
       SUM(packets_received) packets_received,
       SUM(receive_errors) receive_errors,
       SUM(receive_dropped) receive_dropped,
       SUM(receive_buf_or) receive_buf_or,
       SUM(receive_frame_err) receive_frame_err,
       SUM(bytes_sent) bytes_sent,
       SUM(packets_sent) packets_sent,
       SUM(send_errors) send_errors,
       SUM(sends_dropped) sends_dropped,
       SUM(send_buf_or) send_buf_or,
       SUM(send_carrier_lost) send_carrier_lost
  FROM per_instance
 GROUP BY
       snap_id,
       begin_interval_time,
       end_interval_time
)
SELECT /*+  NO_MERGE  */ /* 3g.395 */
       snap_id
       ,TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time
       ,TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time
       , packets_received
       , packets_sent
       , receive_errors
       , receive_dropped
       , receive_buf_or
       , receive_frame_err
       , send_errors
       , sends_dropped
       , send_buf_or
       , send_carrier_lost
       ,0 dummy_11
       ,0 dummy_12
       ,0 dummy_13
       ,0 dummy_14
       ,0 dummy_15
  FROM per_cluster
 ORDER BY
       snap_id

11:49:36 3g.395
Elapsed Hours so far:    0.456
Elapsed Hours so far: .456

Elapsed: 00:00:00.01

11:49:36 3g "00480_edb360_323688_3g_395_ic_device_statistics_summary_for_cluster.html"
11:49:36 3g "00481_edb360_323688_3g_395_ic_device_statistics_summary_for_cluster_line_chart.html"
Elapsed Hours so far:    0.456

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:36 3g "Interconnect Performance"
11:49:36 IC Device Statistics summary for Instance 1

WITH
ic_device_stats AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 3g.395 */
       h.snap_id,
       h.dbid,
       h.instance_number,
       h.if_name,
       s.begin_interval_time,
       s.end_interval_time,
       s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.if_name
ORDER BY h.snap_id) startup_time_interval,
       h.bytes_received - LAG(h.bytes_received) OVER (PARTITION BY h.dbid, h.instance_number, h.if_n
ame ORDER BY h.snap_id) bytes_received,
       h.packets_received - LAG(h.packets_received) OVER (PARTITION BY h.dbid, h.instance_number, h.
if_name ORDER BY h.snap_id) packets_received,
       h.receive_errors - LAG(h.receive_errors) OVER (PARTITION BY h.dbid, h.instance_number, h.if_n
ame ORDER BY h.snap_id) receive_errors,
       h.receive_dropped - LAG(h.receive_dropped) OVER (PARTITION BY h.dbid, h.instance_number, h.if
_name ORDER BY h.snap_id) receive_dropped,
       h.receive_buf_or - LAG(h.receive_buf_or) OVER (PARTITION BY h.dbid, h.instance_number, h.if_n
ame ORDER BY h.snap_id) receive_buf_or,
       h.receive_frame_err - LAG(h.receive_frame_err) OVER (PARTITION BY h.dbid, h.instance_number,
h.if_name ORDER BY h.snap_id) receive_frame_err,
       h.bytes_sent - LAG(h.bytes_sent) OVER (PARTITION BY h.dbid, h.instance_number, h.if_name ORDE
R BY h.snap_id) bytes_sent,
       h.packets_sent - LAG(h.packets_sent) OVER (PARTITION BY h.dbid, h.instance_number, h.if_name
ORDER BY h.snap_id) packets_sent,
       h.send_errors - LAG(h.send_errors) OVER (PARTITION BY h.dbid, h.instance_number, h.if_name OR
DER BY h.snap_id) send_errors,
       h.sends_dropped - LAG(h.sends_dropped) OVER (PARTITION BY h.dbid, h.instance_number, h.if_nam
e ORDER BY h.snap_id) sends_dropped,
       h.send_buf_or - LAG(h.send_buf_or) OVER (PARTITION BY h.dbid, h.instance_number, h.if_name OR
DER BY h.snap_id) send_buf_or,
       h.send_carrier_lost - LAG(h.send_carrier_lost) OVER (PARTITION BY h.dbid, h.instance_number,
h.if_name ORDER BY h.snap_id) send_carrier_lost
  FROM dba_hist_ic_device_stats h,
       dba_hist_snapshot s
 WHERE h.instance_number = 1
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3g.395 */
       snap_id,
       begin_interval_time,
       end_interval_time,
       instance_number,
       if_name,
       SUM(bytes_received) bytes_received,
       SUM(packets_received) packets_received,
       SUM(receive_errors) receive_errors,
       SUM(receive_dropped) receive_dropped,
       SUM(receive_buf_or) receive_buf_or,
       SUM(receive_frame_err) receive_frame_err,
       SUM(bytes_sent) bytes_sent,
       SUM(packets_sent) packets_sent,
       SUM(send_errors) send_errors,
       SUM(sends_dropped) sends_dropped,
       SUM(send_buf_or) send_buf_or,
       SUM(send_carrier_lost) send_carrier_lost
  FROM ic_device_stats
  WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
 startup
    AND bytes_received >= 0
    AND packets_received >= 0
    AND receive_errors >= 0
    AND receive_dropped >= 0
    AND receive_buf_or >= 0
    AND receive_frame_err >= 0
    AND bytes_sent >= 0
    AND packets_sent >= 0
    AND send_errors >= 0
    AND sends_dropped >= 0
    AND send_buf_or >= 0
    AND send_carrier_lost >= 0
 GROUP BY
       snap_id,
       begin_interval_time,
       end_interval_time,
       instance_number,
       if_name
),
per_cluster AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3g.395 */
       snap_id,
       begin_interval_time,
       end_interval_time,
       SUM(bytes_received) bytes_received,
       SUM(packets_received) packets_received,
       SUM(receive_errors) receive_errors,
       SUM(receive_dropped) receive_dropped,
       SUM(receive_buf_or) receive_buf_or,
       SUM(receive_frame_err) receive_frame_err,
       SUM(bytes_sent) bytes_sent,
       SUM(packets_sent) packets_sent,
       SUM(send_errors) send_errors,
       SUM(sends_dropped) sends_dropped,
       SUM(send_buf_or) send_buf_or,
       SUM(send_carrier_lost) send_carrier_lost
  FROM per_instance
 GROUP BY
       snap_id,
       begin_interval_time,
       end_interval_time
)
SELECT /*+  NO_MERGE  */ /* 3g.395 */
       snap_id
       ,TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time
       ,TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time
       , packets_received
       , packets_sent
       , receive_errors
       , receive_dropped
       , receive_buf_or
       , receive_frame_err
       , send_errors
       , sends_dropped
       , send_buf_or
       , send_carrier_lost
       ,0 dummy_11
       ,0 dummy_12
       ,0 dummy_13
       ,0 dummy_14
       ,0 dummy_15
  FROM per_cluster
 ORDER BY
       snap_id

11:49:36 3g.396
Elapsed Hours so far:    0.456
Elapsed Hours so far: .456

Elapsed: 00:00:00.00

11:49:36 3g "00482_edb360_323688_3g_396_ic_device_statistics_summary_for_instance_1.html"
11:49:36 3g "00483_edb360_323688_3g_396_ic_device_statistics_summary_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.456

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:36 3g "Interconnect Performance"
11:49:36 IC Device Statistics summary for Instance 2

WITH
ic_device_stats AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 3g.395 */
       h.snap_id,
       h.dbid,
       h.instance_number,
       h.if_name,
       s.begin_interval_time,
       s.end_interval_time,
       s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.if_name
ORDER BY h.snap_id) startup_time_interval,
       h.bytes_received - LAG(h.bytes_received) OVER (PARTITION BY h.dbid, h.instance_number, h.if_n
ame ORDER BY h.snap_id) bytes_received,
       h.packets_received - LAG(h.packets_received) OVER (PARTITION BY h.dbid, h.instance_number, h.
if_name ORDER BY h.snap_id) packets_received,
       h.receive_errors - LAG(h.receive_errors) OVER (PARTITION BY h.dbid, h.instance_number, h.if_n
ame ORDER BY h.snap_id) receive_errors,
       h.receive_dropped - LAG(h.receive_dropped) OVER (PARTITION BY h.dbid, h.instance_number, h.if
_name ORDER BY h.snap_id) receive_dropped,
       h.receive_buf_or - LAG(h.receive_buf_or) OVER (PARTITION BY h.dbid, h.instance_number, h.if_n
ame ORDER BY h.snap_id) receive_buf_or,
       h.receive_frame_err - LAG(h.receive_frame_err) OVER (PARTITION BY h.dbid, h.instance_number,
h.if_name ORDER BY h.snap_id) receive_frame_err,
       h.bytes_sent - LAG(h.bytes_sent) OVER (PARTITION BY h.dbid, h.instance_number, h.if_name ORDE
R BY h.snap_id) bytes_sent,
       h.packets_sent - LAG(h.packets_sent) OVER (PARTITION BY h.dbid, h.instance_number, h.if_name
ORDER BY h.snap_id) packets_sent,
       h.send_errors - LAG(h.send_errors) OVER (PARTITION BY h.dbid, h.instance_number, h.if_name OR
DER BY h.snap_id) send_errors,
       h.sends_dropped - LAG(h.sends_dropped) OVER (PARTITION BY h.dbid, h.instance_number, h.if_nam
e ORDER BY h.snap_id) sends_dropped,
       h.send_buf_or - LAG(h.send_buf_or) OVER (PARTITION BY h.dbid, h.instance_number, h.if_name OR
DER BY h.snap_id) send_buf_or,
       h.send_carrier_lost - LAG(h.send_carrier_lost) OVER (PARTITION BY h.dbid, h.instance_number,
h.if_name ORDER BY h.snap_id) send_carrier_lost
  FROM dba_hist_ic_device_stats h,
       dba_hist_snapshot s
 WHERE h.instance_number = 2
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3g.395 */
       snap_id,
       begin_interval_time,
       end_interval_time,
       instance_number,
       if_name,
       SUM(bytes_received) bytes_received,
       SUM(packets_received) packets_received,
       SUM(receive_errors) receive_errors,
       SUM(receive_dropped) receive_dropped,
       SUM(receive_buf_or) receive_buf_or,
       SUM(receive_frame_err) receive_frame_err,
       SUM(bytes_sent) bytes_sent,
       SUM(packets_sent) packets_sent,
       SUM(send_errors) send_errors,
       SUM(sends_dropped) sends_dropped,
       SUM(send_buf_or) send_buf_or,
       SUM(send_carrier_lost) send_carrier_lost
  FROM ic_device_stats
  WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
 startup
    AND bytes_received >= 0
    AND packets_received >= 0
    AND receive_errors >= 0
    AND receive_dropped >= 0
    AND receive_buf_or >= 0
    AND receive_frame_err >= 0
    AND bytes_sent >= 0
    AND packets_sent >= 0
    AND send_errors >= 0
    AND sends_dropped >= 0
    AND send_buf_or >= 0
    AND send_carrier_lost >= 0
 GROUP BY
       snap_id,
       begin_interval_time,
       end_interval_time,
       instance_number,
       if_name
),
per_cluster AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3g.395 */
       snap_id,
       begin_interval_time,
       end_interval_time,
       SUM(bytes_received) bytes_received,
       SUM(packets_received) packets_received,
       SUM(receive_errors) receive_errors,
       SUM(receive_dropped) receive_dropped,
       SUM(receive_buf_or) receive_buf_or,
       SUM(receive_frame_err) receive_frame_err,
       SUM(bytes_sent) bytes_sent,
       SUM(packets_sent) packets_sent,
       SUM(send_errors) send_errors,
       SUM(sends_dropped) sends_dropped,
       SUM(send_buf_or) send_buf_or,
       SUM(send_carrier_lost) send_carrier_lost
  FROM per_instance
 GROUP BY
       snap_id,
       begin_interval_time,
       end_interval_time
)
SELECT /*+  NO_MERGE  */ /* 3g.395 */
       snap_id
       ,TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time
       ,TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time
       , packets_received
       , packets_sent
       , receive_errors
       , receive_dropped
       , receive_buf_or
       , receive_frame_err
       , send_errors
       , sends_dropped
       , send_buf_or
       , send_carrier_lost
       ,0 dummy_11
       ,0 dummy_12
       ,0 dummy_13
       ,0 dummy_14
       ,0 dummy_15
  FROM per_cluster
 ORDER BY
       snap_id

11:49:36 3g.397
Elapsed Hours so far:    0.456
Elapsed Hours so far: .456

Elapsed: 00:00:00.00

11:49:36 3g "00484_edb360_323688_3g_397_ic_device_statistics_summary_for_instance_2.html"
11:49:36 3g "00485_edb360_323688_3g_397_ic_device_statistics_summary_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.456

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:37 3g "Interconnect Performance"
11:49:37 IC Device Statistics details for Instance 1

SELECT /*+  NO_MERGE  */ /* 3g.398 */
       TO_CHAR(s.begin_interval_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(s.end_interval_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
       h.if_name,
       h.bytes_received - LAG(h.bytes_received) OVER (PARTITION BY h.dbid, h.instance_number, h.if_n
ame ORDER BY h.snap_id) bytes_received,
       h.packets_received - LAG(h.packets_received) OVER (PARTITION BY h.dbid, h.instance_number, h.
if_name ORDER BY h.snap_id) packets_received,
       h.receive_errors - LAG(h.receive_errors) OVER (PARTITION BY h.dbid, h.instance_number, h.if_n
ame ORDER BY h.snap_id) receive_errors,
       h.receive_dropped - LAG(h.receive_dropped) OVER (PARTITION BY h.dbid, h.instance_number, h.if
_name ORDER BY h.snap_id) receive_dropped,
       h.receive_buf_or - LAG(h.receive_buf_or) OVER (PARTITION BY h.dbid, h.instance_number, h.if_n
ame ORDER BY h.snap_id) receive_buf_or,
       h.receive_frame_err - LAG(h.receive_frame_err) OVER (PARTITION BY h.dbid, h.instance_number,
h.if_name ORDER BY h.snap_id) receive_frame_err,
       h.bytes_sent - LAG(h.bytes_sent) OVER (PARTITION BY h.dbid, h.instance_number, h.if_name ORDE
R BY h.snap_id) bytes_sent,
       h.packets_sent - LAG(h.packets_sent) OVER (PARTITION BY h.dbid, h.instance_number, h.if_name
ORDER BY h.snap_id) packets_sent,
       h.send_errors - LAG(h.send_errors) OVER (PARTITION BY h.dbid, h.instance_number, h.if_name OR
DER BY h.snap_id) send_errors,
       h.sends_dropped - LAG(h.sends_dropped) OVER (PARTITION BY h.dbid, h.instance_number, h.if_nam
e ORDER BY h.snap_id) sends_dropped,
       h.send_buf_or - LAG(h.send_buf_or) OVER (PARTITION BY h.dbid, h.instance_number, h.if_name OR
DER BY h.snap_id) send_buf_or,
       h.send_carrier_lost - LAG(h.send_carrier_lost) OVER (PARTITION BY h.dbid, h.instance_number,
h.if_name ORDER BY h.snap_id) send_carrier_lost
  FROM dba_hist_ic_device_stats h,
       dba_hist_snapshot s
 WHERE h.instance_number = 1
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
 ORDER BY
       s.snap_id DESC,
       h.if_name

11:49:37 3g.398
Elapsed Hours so far:    0.456
Elapsed Hours so far: .456

Elapsed: 00:00:00.00

11:49:37 3g "00486_edb360_323688_3g_398_ic_device_statistics_details_for_instance_1.html"
Elapsed Hours so far:    0.456

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:38 3g "Interconnect Performance"
11:49:38 IC Device Statistics details for Instance 2

SELECT /*+  NO_MERGE  */ /* 3g.398 */
       TO_CHAR(s.begin_interval_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(s.end_interval_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
       h.if_name,
       h.bytes_received - LAG(h.bytes_received) OVER (PARTITION BY h.dbid, h.instance_number, h.if_n
ame ORDER BY h.snap_id) bytes_received,
       h.packets_received - LAG(h.packets_received) OVER (PARTITION BY h.dbid, h.instance_number, h.
if_name ORDER BY h.snap_id) packets_received,
       h.receive_errors - LAG(h.receive_errors) OVER (PARTITION BY h.dbid, h.instance_number, h.if_n
ame ORDER BY h.snap_id) receive_errors,
       h.receive_dropped - LAG(h.receive_dropped) OVER (PARTITION BY h.dbid, h.instance_number, h.if
_name ORDER BY h.snap_id) receive_dropped,
       h.receive_buf_or - LAG(h.receive_buf_or) OVER (PARTITION BY h.dbid, h.instance_number, h.if_n
ame ORDER BY h.snap_id) receive_buf_or,
       h.receive_frame_err - LAG(h.receive_frame_err) OVER (PARTITION BY h.dbid, h.instance_number,
h.if_name ORDER BY h.snap_id) receive_frame_err,
       h.bytes_sent - LAG(h.bytes_sent) OVER (PARTITION BY h.dbid, h.instance_number, h.if_name ORDE
R BY h.snap_id) bytes_sent,
       h.packets_sent - LAG(h.packets_sent) OVER (PARTITION BY h.dbid, h.instance_number, h.if_name
ORDER BY h.snap_id) packets_sent,
       h.send_errors - LAG(h.send_errors) OVER (PARTITION BY h.dbid, h.instance_number, h.if_name OR
DER BY h.snap_id) send_errors,
       h.sends_dropped - LAG(h.sends_dropped) OVER (PARTITION BY h.dbid, h.instance_number, h.if_nam
e ORDER BY h.snap_id) sends_dropped,
       h.send_buf_or - LAG(h.send_buf_or) OVER (PARTITION BY h.dbid, h.instance_number, h.if_name OR
DER BY h.snap_id) send_buf_or,
       h.send_carrier_lost - LAG(h.send_carrier_lost) OVER (PARTITION BY h.dbid, h.instance_number,
h.if_name ORDER BY h.snap_id) send_carrier_lost
  FROM dba_hist_ic_device_stats h,
       dba_hist_snapshot s
 WHERE h.instance_number = 2
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
 ORDER BY
       s.snap_id DESC,
       h.if_name

11:49:38 3g.399
Elapsed Hours so far:    0.456
Elapsed Hours so far: .456

Elapsed: 00:00:00.00

11:49:38 3g "00487_edb360_323688_3g_399_ic_device_statistics_details_for_instance_2.html"
Elapsed Hours so far:    0.457

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:40 3h "Sessions"
11:49:40 Sessions Aggregate per Type

SELECT COUNT(*),
       inst_id,
       type,
       server,
       status,
       state
  FROM gv$session
 GROUP BY
       inst_id,
       type,
       server,
       status,
       state
 ORDER BY
       1 DESC, 2, 3, 4, 5, 6

11:49:40 3h.400
Elapsed Hours so far:    0.457
Elapsed Hours so far: .457

Elapsed: 00:00:00.00

11:49:40 3h "00488_edb360_323688_3h_400_sessions_aggregate_per_type.html"
Elapsed Hours so far:    0.457

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:40 3h "Sessions"
11:49:40 Sessions Aggregate per User and Type

SELECT COUNT(*),
       username,
       inst_id,
       type,
       server,
       status,
       state
  FROM gv$session
 GROUP BY
       username,
       inst_id,
       type,
       server,
       status,
       state
 ORDER BY
       1 DESC, 2, 3, 4, 5, 6, 7

11:49:40 3h.401
Elapsed Hours so far:    0.457
Elapsed Hours so far: .457

Elapsed: 00:00:00.00

11:49:40 3h "00489_edb360_323688_3h_401_sessions_aggregate_per_user_and_type.html"
Elapsed Hours so far:    0.457

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:40 3h "Sessions"
11:49:40 Sessions Aggregate per Module and Action

SELECT COUNT(*),
       module,
       action,
       inst_id,
       type,
       server,
       status,
       state
  FROM gv$session
 GROUP BY
       module,
       action,
       inst_id,
       type,
       server,
       status,
       state
 ORDER BY
       1 DESC, 2, 3, 4, 5, 6, 7, 8

11:49:40 3h.402
Elapsed Hours so far:    0.457
Elapsed Hours so far: .457

Elapsed: 00:00:00.01

11:49:40 3h "00490_edb360_323688_3h_402_sessions_aggregate_per_module_and_action.html"
Elapsed Hours so far:    0.457

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:40 3h "Sessions"
11:49:40 Sessions List

SELECT *
  FROM gv$session
 ORDER BY
       inst_id,
       sid

11:49:40 3h.403
Elapsed Hours so far:    0.457
Elapsed Hours so far: .457

Elapsed: 00:00:00.00

11:49:41 3h "00491_edb360_323688_3h_403_sessions_list.html"
Elapsed Hours so far:    0.457

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:42 3h "Sessions"
11:49:42 Database and Schema Triggers

SELECT *
  FROM dba_triggers
 WHERE base_object_type IN ('DATABASE', 'SCHEMA')
 ORDER BY
       base_object_type, owner, trigger_name

11:49:42 3h.404
Elapsed Hours so far:    0.457
Elapsed Hours so far: .457

Elapsed: 00:00:00.00

11:49:42 3h "00492_edb360_323688_3h_404_database_and_schema_triggers.html"
Elapsed Hours so far:    0.457

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:42 3h "Sessions"
11:49:42 SQL in logon storms

WITH
ash AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 3h.405 */
       con_id,
       NVL(h.sql_id, 'null_sql_id') sql_id,
       COUNT(DISTINCT h.program) programs,
       MIN(h.program) min_program,
       MAX(h.program) max_program,
       COUNT(DISTINCT h.module) modules,
       MIN(h.module) min_module,
       MAX(h.module) max_module,
       COUNT(DISTINCT h.action) actions,
       MIN(h.action) min_action,
       MAX(h.action) max_action,
       COUNT(DISTINCT h.snap_id||'.'||h.instance_number||'.'||h.session_id||'.'||h.session_serial#)
sessions
  FROM dba_hist_active_sess_history h
 WHERE h.session_type = 'FOREGROUND'
   AND h.program not like '%(J%'
   AND h.qc_session_id is null
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
 GROUP BY
       h.con_id,
       h.sql_id
 ORDER BY
       COUNT(DISTINCT h.snap_id||'.'||h.instance_number||'.'||h.session_id||'.'||h.session_serial#)
DESC
)
SELECT * from (
  SELECT /*+  NO_MERGE  */ /* 3h.405 */
         s.sessions,
         s.sql_id,
         s.programs,
         s.min_program,
         s.max_program,
         s.modules,
         s.min_module,
         s.max_module,
         s.actions,
         s.min_action,
         s.max_action,
         DBMS_LOB.SUBSTR(t.sql_text, 1000) sql_text
    FROM ash s, dba_hist_sqltext t
   WHERE t.sql_id(+) = s.sql_id
     AND t.dbid(+) = 2109323688
     AND t.con_id(+) = s.con_id
 )
  WHERE ROWNUM < 101

11:49:42 3h.405
Elapsed Hours so far:    0.457
Elapsed Hours so far: .457

Elapsed: 00:00:00.00

11:49:42 3h "00493_edb360_323688_3h_405_sql_in_logon_storms.html"
Elapsed Hours so far:    0.461

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:49:56 3h "Sessions"
11:49:56 SQL in logon storms - Time Series

WITH
ash AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 3h.406 */
       h.snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       NVL(h.sql_id, 'null_sql_id') sql_id,
       COUNT(DISTINCT h.instance_number||'.'||h.session_id||'.'||h.session_serial#) sessions
  FROM dba_hist_active_sess_history h
 WHERE h.session_type = 'FOREGROUND'
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND NVL(h.sql_id, 'null_sql_id') IN
       ('null_sql_id',
        'brg5vk35jcqtv',
        '0sjx29v99zfqc',
        'gd4x6gvgb9xa0',
        '3hwq5m5h3gkaq',
        '6ta0azw9znyz8',
        '4cpurmm165nzj',
        '4jpv3sd1r8ku8',
        'b43hz07mtvuh0',
        '2mrjsarqc32h3',
        'bzsm5n1q7g4z6',
        '99yvxaxkaatu3',
        '4tktkb5c6kjr3',
        '65bm88u58wsvy',
        '7rn4p17967pyq')
 GROUP BY
       h.snap_id,
       h.sql_id
)
SELECT /*+  NO_MERGE  */ /* 3h.406 */
       snap_id,
       MIN(begin_time) begin_time,
       MIN(end_time) end_time,
       SUM(CASE sql_id WHEN 'null_sql_id' THEN sessions ELSE 0 END) "null_sql_id",
       SUM(CASE sql_id WHEN 'brg5vk35jcqtv' THEN sessions ELSE 0 END) "brg5vk35jcqtv",
       SUM(CASE sql_id WHEN '0sjx29v99zfqc' THEN sessions ELSE 0 END) "0sjx29v99zfqc",
       SUM(CASE sql_id WHEN 'gd4x6gvgb9xa0' THEN sessions ELSE 0 END) "gd4x6gvgb9xa0",
       SUM(CASE sql_id WHEN '3hwq5m5h3gkaq' THEN sessions ELSE 0 END) "3hwq5m5h3gkaq",
       SUM(CASE sql_id WHEN '6ta0azw9znyz8' THEN sessions ELSE 0 END) "6ta0azw9znyz8",
       SUM(CASE sql_id WHEN '4cpurmm165nzj' THEN sessions ELSE 0 END) "4cpurmm165nzj",
       SUM(CASE sql_id WHEN '4jpv3sd1r8ku8' THEN sessions ELSE 0 END) "4jpv3sd1r8ku8",
       SUM(CASE sql_id WHEN 'b43hz07mtvuh0' THEN sessions ELSE 0 END) "b43hz07mtvuh0",
       SUM(CASE sql_id WHEN '2mrjsarqc32h3' THEN sessions ELSE 0 END) "2mrjsarqc32h3",
       SUM(CASE sql_id WHEN 'bzsm5n1q7g4z6' THEN sessions ELSE 0 END) "bzsm5n1q7g4z6",
       SUM(CASE sql_id WHEN '99yvxaxkaatu3' THEN sessions ELSE 0 END) "99yvxaxkaatu3",
       SUM(CASE sql_id WHEN '4tktkb5c6kjr3' THEN sessions ELSE 0 END) "4tktkb5c6kjr3",
       SUM(CASE sql_id WHEN '65bm88u58wsvy' THEN sessions ELSE 0 END) "65bm88u58wsvy",
       SUM(CASE sql_id WHEN '7rn4p17967pyq' THEN sessions ELSE 0 END) "7rn4p17967pyq"
  FROM ash
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:49:56 3h.406
Elapsed Hours so far:    0.461
Elapsed Hours so far: .461

Elapsed: 00:00:00.00

11:49:56 3h "00494_edb360_323688_3h_406_sql_in_logon_storms_time_series.html"
11:50:03 3h "00495_edb360_323688_3h_406_sql_in_logon_storms_time_series_line_chart.html"
Elapsed Hours so far:    0.463

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:04 3h "Sessions"
11:50:04 Most executed SQL

WITH
totals AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */
       /* 3h.407 */
       con_id,
       sql_id,
       SUM(executions_delta) executions,
       SUM(rows_processed_delta) rows_processed,
       SUM(parse_calls_delta) parses,
       SUM(fetches_delta) fetches,
       SUM(buffer_gets_delta) buffer_gets,
       SUM(disk_reads_delta) disk_reads,
       SUM(direct_writes_delta) direct_writes,
       ROUND(SUM(elapsed_time_delta)/1e6) elapsed_secs,
       ROUND(SUM(cpu_time_delta)/1e6) cpu_secs,
       ROUND(SUM(iowait_delta)/1e6) io_secs,
       ROUND(SUM(clwait_delta)/1e6) clust_secs,
       ROUND(SUM(apwait_delta)/1e6) appl_secs,
       ROUND(SUM(ccwait_delta)/1e6) conc_secs,
       ROUND(SUM(plsexec_time_delta)/1e6) pls_exec_secs,
       ROUND(SUM(javexec_time_delta)/1e6) java_secs,
       COUNT(DISTINCT plan_hash_value) plans,
       ROUND(AVG(optimizer_cost)) avg_cost,
       COUNT(DISTINCT module) modules,
       MIN(module) min_module,
       MAX(module) max_module,
       COUNT(DISTINCT action) actions,
       MIN(action) min_action,
       MAX(action) max_action
  FROM dba_hist_sqlstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id
)
SELECT * FROM (
SELECT /*+  NO_MERGE  */ /* 3h.407 */
       s.sql_id,
       s.executions,
       s.rows_processed,
       ROUND(s.rows_processed/s.executions, 3) rows_per_exec,
       s.parses,
       s.fetches,
       s.buffer_gets,
       s.disk_reads,
       s.direct_writes,
       s.elapsed_secs,
       s.cpu_secs,
       s.io_secs,
       s.clust_secs,
       s.appl_secs,
       s.conc_secs,
       s.pls_exec_secs,
       s.java_secs,
       s.plans,
       s.avg_cost,
       s.modules,
       s.min_module,
       s.max_module,
       s.actions,
       s.min_action,
       s.max_action,
       DBMS_LOB.SUBSTR(t.sql_text, 1000) sql_text
  FROM totals s, dba_hist_sqltext t
 WHERE t.sql_id(+) = s.sql_id
   AND t.dbid(+) = 2109323688
   AND t.con_id(+) = s.con_id
  ORDER BY s.executions DESC
 )
   WHERE ROWNUM < 101

11:50:04 3h.407
Elapsed Hours so far:    0.463
Elapsed Hours so far: .463

Elapsed: 00:00:00.00

11:50:05 3h "00496_edb360_323688_3h_407_most_executed_sql.html"
Elapsed Hours so far:    0.464

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:07 3h "Sessions"
11:50:07 Most executed SQL - Time Series

WITH
stat AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 3h.408 */
       snap_id,
       NVL(sql_id, 'null_sql_id') sql_id,
       SUM(executions_delta) executions
  FROM dba_hist_sqlstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND NVL(sql_id, 'null_sql_id') IN
       ('2qt6k5pdx64x1',
        'dsg6rv91fkyuq',
        '1xqnszk1kc75r',
        '739nujnggzyrq',
        '0dhq2xrpzzsq9',
        'fkafaq0jba7j7',
        'dbbx8k4x3crut',
        '1fmnkf3tjpxmm',
        '7ashfrs8yj29w',
        'bunvx480ynf57',
        '471x8c4pz5zkt',
        '40w5zz6b07bv1',
        '1aa2fpqtx557g',
        '1vtf4fw0h0j16',
        '16jq5wm9yapgt')
 GROUP BY
       snap_id,
       sql_id
)
SELECT /*+  NO_MERGE  */ /* 3h.408 */
       t.snap_id,
       TO_CHAR(MIN(s.begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(s.end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE t.sql_id WHEN '2qt6k5pdx64x1' THEN t.executions ELSE 0 END) "2qt6k5pdx64x1",
       SUM(CASE t.sql_id WHEN 'dsg6rv91fkyuq' THEN t.executions ELSE 0 END) "dsg6rv91fkyuq",
       SUM(CASE t.sql_id WHEN '1xqnszk1kc75r' THEN t.executions ELSE 0 END) "1xqnszk1kc75r",
       SUM(CASE t.sql_id WHEN '739nujnggzyrq' THEN t.executions ELSE 0 END) "739nujnggzyrq",
       SUM(CASE t.sql_id WHEN '0dhq2xrpzzsq9' THEN t.executions ELSE 0 END) "0dhq2xrpzzsq9",
       SUM(CASE t.sql_id WHEN 'fkafaq0jba7j7' THEN t.executions ELSE 0 END) "fkafaq0jba7j7",
       SUM(CASE t.sql_id WHEN 'dbbx8k4x3crut' THEN t.executions ELSE 0 END) "dbbx8k4x3crut",
       SUM(CASE t.sql_id WHEN '1fmnkf3tjpxmm' THEN t.executions ELSE 0 END) "1fmnkf3tjpxmm",
       SUM(CASE t.sql_id WHEN '7ashfrs8yj29w' THEN t.executions ELSE 0 END) "7ashfrs8yj29w",
       SUM(CASE t.sql_id WHEN 'bunvx480ynf57' THEN t.executions ELSE 0 END) "bunvx480ynf57",
       SUM(CASE t.sql_id WHEN '471x8c4pz5zkt' THEN t.executions ELSE 0 END) "471x8c4pz5zkt",
       SUM(CASE t.sql_id WHEN '40w5zz6b07bv1' THEN t.executions ELSE 0 END) "40w5zz6b07bv1",
       SUM(CASE t.sql_id WHEN '1aa2fpqtx557g' THEN t.executions ELSE 0 END) "1aa2fpqtx557g",
       SUM(CASE t.sql_id WHEN '1vtf4fw0h0j16' THEN t.executions ELSE 0 END) "1vtf4fw0h0j16",
       SUM(CASE t.sql_id WHEN '16jq5wm9yapgt' THEN t.executions ELSE 0 END) "16jq5wm9yapgt"
  FROM stat t,
       dba_hist_snapshot s
 WHERE s.snap_id BETWEEN 3473 AND 4962
   AND s.dbid = 2109323688
   AND t.snap_id = s.snap_id
 GROUP BY
       t.snap_id
 ORDER BY
       t.snap_id

11:50:07 3h.408
Elapsed Hours so far:    0.464
Elapsed Hours so far: .464

Elapsed: 00:00:00.00

11:50:07 3h "00497_edb360_323688_3h_408_most_executed_sql_time_series.html"
11:50:08 3h "00498_edb360_323688_3h_408_most_executed_sql_time_series_line_chart.html"
Elapsed Hours so far:    0.465

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:09 3h "Sessions"
11:50:09 SQL executed row-by-row

WITH
totals AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */
       /* 3h.409 */
       con_id,
       sql_id,
       SUM(executions_delta) executions,
       SUM(rows_processed_delta) rows_processed,
       SUM(parse_calls_delta) parses,
       SUM(fetches_delta) fetches,
       SUM(buffer_gets_delta) buffer_gets,
       SUM(disk_reads_delta) disk_reads,
       SUM(direct_writes_delta) direct_writes,
       ROUND(SUM(elapsed_time_delta)/1e6) elapsed_secs,
       ROUND(SUM(cpu_time_delta)/1e6) cpu_secs,
       ROUND(SUM(iowait_delta)/1e6) io_secs,
       ROUND(SUM(clwait_delta)/1e6) clust_secs,
       ROUND(SUM(apwait_delta)/1e6) appl_secs,
       ROUND(SUM(ccwait_delta)/1e6) conc_secs,
       ROUND(SUM(plsexec_time_delta)/1e6) pls_exec_secs,
       ROUND(SUM(javexec_time_delta)/1e6) java_secs,
       COUNT(DISTINCT plan_hash_value) plans,
       ROUND(AVG(optimizer_cost)) avg_cost,
       COUNT(DISTINCT module) modules,
       MIN(module) min_module,
       MAX(module) max_module,
       COUNT(DISTINCT action) actions,
       MIN(action) min_action,
       MAX(action) max_action
  FROM dba_hist_sqlstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id
)
SELECT * FROM (
SELECT /*+  NO_MERGE  */ /* 3h.409 */
       s.sql_id,
       s.executions,
       s.rows_processed,
       ROUND(s.rows_processed/s.executions, 3) rows_per_exec,
       s.parses,
       s.fetches,
       s.buffer_gets,
       s.disk_reads,
       s.direct_writes,
       s.elapsed_secs,
       s.cpu_secs,
       s.io_secs,
       s.clust_secs,
       s.appl_secs,
       s.conc_secs,
       s.pls_exec_secs,
       s.java_secs,
       s.plans,
       s.avg_cost,
       s.modules,
       s.min_module,
       s.max_module,
       s.actions,
       s.min_action,
       s.max_action,
       DBMS_LOB.SUBSTR(t.sql_text, 1000) sql_text
  FROM totals s, dba_hist_sqltext t
 WHERE t.sql_id(+) = s.sql_id
   AND t.dbid(+) = 2109323688
   AND s.executions>1
   AND (s.rows_processed/greatest(s.executions,1))<2
   AND t.con_id(+) = s.con_id
   ORDER BY s.executions DESC
   )
WHERE ROWNUM < 101

11:50:09 3h.409
Elapsed Hours so far:    0.465
Elapsed Hours so far: .465

Elapsed: 00:00:00.00

11:50:09 3h "00499_edb360_323688_3h_409_sql_executed_rowbyrow.html"
Elapsed Hours so far:    0.465

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:10 3h "Sessions"
11:50:10 Processes List

SELECT *
  FROM gv$process
 ORDER BY
       inst_id,
       pid,
       spid

11:50:10 3h.410
Elapsed Hours so far:    0.465
Elapsed Hours so far: .465

Elapsed: 00:00:00.00

11:50:10 3h "00500_edb360_323688_3h_410_processes_list.html"
Elapsed Hours so far:    0.465

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:10 3h "Sessions"
11:50:10 Processes Memory

SELECT *
  FROM gv$process_memory
 ORDER BY
       inst_id,
       pid,
       serial#,
       category

11:50:10 3h.411
Elapsed Hours so far:    0.465
Elapsed Hours so far: .465

Elapsed: 00:00:00.00

11:50:10 3h "00501_edb360_323688_3h_411_processes_memory.html"
Elapsed Hours so far:    0.465

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:10 3h "Sessions"
11:50:10 Processes Memory Aggregate

SELECT category,
       SUM(allocated) sum_allocated,
       SUM(used) sum_used,
       SUM(max_allocated) sum_max_allocated,
       ROUND(AVG(allocated)) avg_allocated,
       ROUND(AVG(used)) avg_used,
       ROUND(AVG(max_allocated)) avg_max_allocated,
       MEDIAN(allocated) median_allocated,
       MEDIAN(used) median_used,
       MEDIAN(max_allocated) median_max_allocated,
       MAX(allocated) max_allocated,
       MAX(used) max_used,
       MAX(max_allocated) max_max_allocated
  FROM gv$process_memory
 GROUP BY
       category

11:50:10 3h.412
Elapsed Hours so far:    0.465
Elapsed Hours so far: .465

Elapsed: 00:00:00.00

11:50:10 3h "00502_edb360_323688_3h_412_processes_memory_aggregate.html"
Elapsed Hours so far:    0.465

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:11 3h "Sessions"
11:50:11 Active Sessions (detail)

SELECT /* active_sessions */
       se.*, sq.sql_text
  FROM gv$session se,
       gv$sql sq
 WHERE se.status = 'ACTIVE'
   AND sq.inst_id = se.inst_id
   AND sq.sql_id = se.sql_id
   AND sq.child_number = se.sql_child_number
and sq.con_id = se.con_id
   AND sq.sql_text NOT LIKE 'SELECT /* active_sessions */%'
 ORDER BY
       se.inst_id, se.sid, se.serial#

11:50:11 3h.413
Elapsed Hours so far:    0.465
Elapsed Hours so far: .465

Elapsed: 00:00:00.00

11:50:11 3h "00503_edb360_323688_3h_413_active_sessions_detail.html"
Elapsed Hours so far:    0.465

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:12 3h "Sessions"
11:50:12 Active Sessions (more detail)

-- provided by Frits Hoogland
select /*+ rule as.sql */ a.sid||','||a.serial#||',@'||a.inst_id as sid_serial_inst,
	d.spid as ospid,
	substr(a.program,1,19) prog,
	a.module, a.action, a.client_info,
	'SQL:'||b.sql_id as sql_id, child_number child, plan_hash_value, executions execs,
	(elapsed_time/decode(nvl(executions,0),0,1,executions))/1000000 avg_etime,
	decode(a.plsql_object_id,null,sql_text,sqla.object_name||'.'||sqlb.procedure_name) sql_text,
	(c.wait_time_micro/1000000) wait_s,
	decode(a.plsql_object_id,null,decode(c.wait_time,0,decode(a.blocking_session,null,c.event,c.event||
'> Blocked by (inst:sid): '||a.final_blocking_instance||':'||a.final_blocking_session),'ON CPU:SQL')
,'ON CPU:PLSQL:'||o.object_name) as wait_or_cpu
FROM gv$session a, gv$sql b, gv$session_wait c, gv$process d,
     dba_procedures sqla, dba_procedures sqlb, dba_objects o
where a.status = 'ACTIVE'
and a.username is not null
and a.sql_id = b.sql_id
and a.inst_id = b.inst_id
and a.con_id = b.con_id
and a.sid = c.sid
and a.inst_id = c.inst_id
and a.inst_id = d.inst_id
and a.paddr = d.addr
and a.sql_child_number = b.child_number
and sql_text not like 'select /*+ rule as.sql */%' /* dont show this query */
and sqla.object_id(+)=a.plsql_object_id and sqlb.object_id(+) = a.plsql_object_id and a.plsql_subpro
gram_id = sqlb.subprogram_id(+)
and o.object_id(+)=a.plsql_object_id
order by sql_id, sql_child_number

11:50:12 3h.414
Elapsed Hours so far:    0.465
Elapsed Hours so far: .465

Elapsed: 00:00:00.00

11:50:12 3h "00504_edb360_323688_3h_414_active_sessions_more_detail.html"
Elapsed Hours so far:    0.467

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:17 3h "Sessions"
11:50:17 Sessions Waiting

-- borrowed from orachk
SELECT /*+  NO_MERGE  */ /* 3h.415 */
       inst_id, sid, event,
       ROUND(seconds_in_wait,2)  waiting_seconds,
       ROUND(wait_time/100,2)    waited_seconds,
       p1,p2,p3, BLOCKING_SESSION
FROM gv$session
where event not in
(
  'SQL*Net message from client',
  'SQL*Net message to client',
  'rdbms ipc message'
)
and state = 'WAITING'
and username not in ('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','C
TXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','
ORDSYS','OUTLN','OWBSYS')
and username not in ('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZ
R','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')
and (seconds_in_wait > 1 OR wait_time > 100)
order by 1, 2

11:50:17 3h.415
Elapsed Hours so far:    0.467
Elapsed Hours so far: .467

Elapsed: 00:00:00.00

11:50:17 3h "00505_edb360_323688_3h_415_sessions_waiting.html"
Elapsed Hours so far:    0.467

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:17 3h "Sessions"
11:50:17 Session Blockers and Waiters

SELECT /*+  NO_MERGE  */ /* 3h.416 */
       b.inst_id b_inst_id,
       b.sql_id b_sql_id,
       b.sql_child_number b_child,
       b.sid b_sid,
       b.serial# b_serial#,
       b.process b_process,
       b.machine b_machine,
       b.program b_program,
       b.module b_module,
       b.client_info b_client_info,
       b.client_identifier b_client_identifier,
       b.event b_event,
       TO_CHAR(b.logon_time, 'DD-MON-YY HH24:MI:SS') b_logon_time,
       TO_CHAR(b.sql_exec_start, 'DD-MON-YY HH24:MI:SS') b_sql_exec_start,
       SUBSTR(bs.sql_text, 1, 500) b_sql_text,
       w.inst_id w_inst_id,
       w.sql_id w_sql_id,
       w.sql_child_number w_child,
       w.sid w_sid,
       w.serial# w_serial#,
       w.process w_process,
       w.machine w_machine,
       w.program w_program,
       w.module w_module,
       w.client_info w_client_info,
       w.client_identifier w_client_identifier,
       w.event w_event,
       TO_CHAR(w.logon_time, 'DD-MON-YY HH24:MI:SS') w_logon_time,
       TO_CHAR(w.sql_exec_start, 'DD-MON-YY HH24:MI:SS') w_sql_exec_start,
       SUBSTR(ws.sql_text, 1, 500) w_sql_text
  FROM gv$session_blockers sb,
       gv$session w,
       gv$session b,
       gv$sql ws,
       gv$sql bs
 WHERE w.inst_id = sb.inst_id
   AND w.sid = sb.sid
   AND w.serial# = sb.sess_serial#
   AND b.inst_id = sb.blocker_instance_id
   AND b.sid = sb.blocker_sid
   AND b.serial# = sb.blocker_sess_serial#
   AND ws.inst_id(+) = w.inst_id
   AND ws.sql_id(+) = w.sql_id
   AND ws.child_number(+) = w.sql_child_number
   AND ws.con_id(+) = w.con_id
   AND bs.inst_id(+) = b.inst_id
   AND bs.sql_id(+) = b.sql_id
   AND bs.child_number(+) = b.sql_child_number
   AND bs.con_id(+) = b.con_id
 ORDER BY
       b.inst_id,
       b.sql_id,
       b.sql_child_number,
       b.sid,
       b.serial#,
       w.inst_id,
       w.sql_id,
       w.sql_child_number,
       w.sid,
       w.serial#

11:50:17 3h.416
Elapsed Hours so far:    0.467
Elapsed Hours so far: .467

Elapsed: 00:00:00.00

11:50:17 3h "00506_edb360_323688_3h_416_session_blockers_and_waiters.html"
Elapsed Hours so far:    0.467

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:17 3h "Sessions"
11:50:17 SQL blocking SQL

WITH
w AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 3h.417 */
       h.dbid,
       h.sql_id,
       h.event,
       h.blocking_session,
       h.blocking_session_serial#,
       TRUNC(h.sample_time, 'HH') sample_hh,
       MIN(h.sample_time) min_sample_time,
       MAX(h.sample_time) max_sample_time,
       COUNT(*) samples,
       RANK() OVER (ORDER BY COUNT(*) DESC NULLS LAST) AS w_rank
  FROM dba_hist_active_sess_history h
 WHERE h.sql_id IS NOT NULL
   AND h.blocking_session IS NOT NULL
   AND h.session_state = 'WAITING'
   AND h.blocking_session_status IN ('VALID', 'GLOBAL')
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
 GROUP BY
       h.dbid,
       h.sql_id,
       h.event,
       h.blocking_session,
       h.blocking_session_serial#,
       TRUNC(h.sample_time, 'HH')
),
b AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 3h.417 */
       w.dbid,
       w.sql_id w_sql_id,
       w.event w_event,
       RANK() OVER (ORDER BY COUNT(*) DESC NULLS LAST) AS b_rank,
       h.sql_id b_sql_id,
       COUNT(*) b_samples
       FROM w,
            dba_hist_active_sess_history h
 WHERE w.w_rank < 101
   AND h.dbid = w.dbid
   AND h.session_id = w.blocking_session
   AND h.session_serial# = w.blocking_session_serial#
   AND TRUNC(h.sample_time, 'HH') = w.sample_hh
   AND h.sample_time BETWEEN w.min_sample_time AND w.max_sample_time
   AND h.sql_id IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
 GROUP BY
       w.dbid,
       w.sql_id,
       w.event,
       h.sql_id
),
w2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3h.417 */
       dbid,
       sql_id w_sql_id,
       event w_event,
       SUM(samples) w_samples,
       MIN(w_rank) w_rank
  FROM w
 GROUP BY
       dbid,
       sql_id,
       event
),
w3 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3h.417 */
       dbid,
       w_sql_id,
       SUM(w_samples) w_samples
  FROM w2
 GROUP BY
       dbid,
       w_sql_id
)
SELECT /*+  NO_MERGE  */ /* 3h.417 */
       DISTINCT
       (10 * w2.w_samples) w_seconds,
       w2.w_sql_id,
       w2.w_event,
       (10 * b.b_samples) b_seconds,
       b.b_sql_id,
       DBMS_LOB.SUBSTR(s1.sql_text, 1000) w_sql_text,
       DBMS_LOB.SUBSTR(s2.sql_text, 1000) b_sql_text
  FROM w2, b, w3, dba_hist_sqltext s1, dba_hist_sqltext s2
 WHERE b.dbid = w2.dbid
   AND b.w_sql_id = w2.w_sql_id
   AND b.w_event = w2.w_event
   AND w3.dbid = w2.dbid
   AND w3.w_sql_id = w2.w_sql_id
   AND s1.sql_id(+) = w2.w_sql_id
   AND s1.dbid(+) = w2.dbid
   AND s2.sql_id(+) = b.b_sql_id
   AND s2.dbid(+) = b.dbid
 ORDER BY
       1 DESC, 2, 3, 4 DESC, 5

11:50:17 3h.417
Elapsed Hours so far:    0.467
Elapsed Hours so far: .467

Elapsed: 00:00:00.00

11:50:17 3h "00507_edb360_323688_3h_417_sql_blocking_sql.html"
Elapsed Hours so far:    0.472

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:36 3h "Sessions"
11:50:36 Distributed Transactions awaiting Recovery

-- requested by Milton Quinteros
SELECT /*+  NO_MERGE  */ /* 3h.418 */
       *
  FROM dba_2pc_pending
 ORDER BY
       1, 2

11:50:36 3h.418
Elapsed Hours so far:    0.472
Elapsed Hours so far: .472

Elapsed: 00:00:00.01

11:50:36 3h "00508_edb360_323688_3h_418_distributed_transactions_awaiting_recovery.html"
Elapsed Hours so far:    0.472

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:36 3h "Sessions"
11:50:36 Connections for Pending Transactions

-- requested by Milton Quinteros
SELECT /*+  NO_MERGE  */ /* 3h.419 */
       *
  FROM dba_2pc_neighbors
 ORDER BY
       1

11:50:36 3h.419
Elapsed Hours so far:    0.472
Elapsed Hours so far: .472

Elapsed: 00:00:00.00

11:50:36 3h "00509_edb360_323688_3h_419_connections_for_pending_transactions.html"
Elapsed Hours so far:    0.472

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:36 3h "Sessions"
11:50:36 Processes Time Series for Cluster

WITH
by_instance_and_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3h.420 */
       r.snap_id,
       r.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       MAX(r.current_utilization) current_utilization,
       MAX(r.max_utilization) max_utilization
  FROM dba_hist_resource_limit r,
       dba_hist_snapshot s
 WHERE s.snap_id BETWEEN 3473 AND 4962
   AND s.dbid = 2109323688
   AND r.snap_id = s.snap_id
   AND r.dbid = s.dbid
   AND r.instance_number = s.instance_number
   AND r.resource_name = 'processes'
   AND s.instance_number = r.instance_number
 GROUP BY
       r.snap_id,
       r.instance_number,
       s.begin_interval_time,
       s.end_interval_time
)
SELECT /*+  NO_MERGE  */ /* 3h.420 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(current_utilization) current_utilization,
       SUM(max_utilization) max_utilization,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM by_instance_and_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:50:36 3h.420
Elapsed Hours so far:    0.472
Elapsed Hours so far: .472

Elapsed: 00:00:00.00

11:50:37 3h "00510_edb360_323688_3h_420_processes_time_series_for_cluster.html"
11:50:37 3h "00511_edb360_323688_3h_420_processes_time_series_for_cluster_line_chart.html"
Elapsed Hours so far:    0.473

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:37 3h "Sessions"
11:50:37 Processes Time Series for Instance 1

WITH
by_instance_and_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3h.420 */
       r.snap_id,
       r.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       MAX(r.current_utilization) current_utilization,
       MAX(r.max_utilization) max_utilization
  FROM dba_hist_resource_limit r,
       dba_hist_snapshot s
 WHERE s.snap_id BETWEEN 3473 AND 4962
   AND s.dbid = 2109323688
   AND r.snap_id = s.snap_id
   AND r.dbid = s.dbid
   AND r.instance_number = s.instance_number
   AND r.resource_name = 'processes'
   AND s.instance_number = '1'
 GROUP BY
       r.snap_id,
       r.instance_number,
       s.begin_interval_time,
       s.end_interval_time
)
SELECT /*+  NO_MERGE  */ /* 3h.420 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(current_utilization) current_utilization,
       SUM(max_utilization) max_utilization,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM by_instance_and_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:50:37 3h.421
Elapsed Hours so far:    0.473
Elapsed Hours so far: .473

Elapsed: 00:00:00.00

11:50:37 3h "00512_edb360_323688_3h_421_processes_time_series_for_instance_1.html"
11:50:37 3h "00513_edb360_323688_3h_421_processes_time_series_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.473

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:38 3h "Sessions"
11:50:38 Processes Time Series for Instance 2

WITH
by_instance_and_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3h.420 */
       r.snap_id,
       r.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       MAX(r.current_utilization) current_utilization,
       MAX(r.max_utilization) max_utilization
  FROM dba_hist_resource_limit r,
       dba_hist_snapshot s
 WHERE s.snap_id BETWEEN 3473 AND 4962
   AND s.dbid = 2109323688
   AND r.snap_id = s.snap_id
   AND r.dbid = s.dbid
   AND r.instance_number = s.instance_number
   AND r.resource_name = 'processes'
   AND s.instance_number = '2'
 GROUP BY
       r.snap_id,
       r.instance_number,
       s.begin_interval_time,
       s.end_interval_time
)
SELECT /*+  NO_MERGE  */ /* 3h.420 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(current_utilization) current_utilization,
       SUM(max_utilization) max_utilization,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM by_instance_and_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:50:38 3h.422
Elapsed Hours so far:    0.473
Elapsed Hours so far: .473

Elapsed: 00:00:00.00

11:50:38 3h "00514_edb360_323688_3h_422_processes_time_series_for_instance_2.html"
11:50:38 3h "00515_edb360_323688_3h_422_processes_time_series_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.473

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:38 3h "Sessions"
11:50:38 Sessions Time Series for Cluster

WITH
by_instance_and_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3h.420 */
       r.snap_id,
       r.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       MAX(r.current_utilization) current_utilization,
       MAX(r.max_utilization) max_utilization
  FROM dba_hist_resource_limit r,
       dba_hist_snapshot s
 WHERE s.snap_id BETWEEN 3473 AND 4962
   AND s.dbid = 2109323688
   AND r.snap_id = s.snap_id
   AND r.dbid = s.dbid
   AND r.instance_number = s.instance_number
   AND r.resource_name = 'sessions'
   AND s.instance_number = r.instance_number
 GROUP BY
       r.snap_id,
       r.instance_number,
       s.begin_interval_time,
       s.end_interval_time
)
SELECT /*+  NO_MERGE  */ /* 3h.420 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(current_utilization) current_utilization,
       SUM(max_utilization) max_utilization,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM by_instance_and_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:50:38 3h.423
Elapsed Hours so far:    0.473
Elapsed Hours so far: .473

Elapsed: 00:00:00.00

11:50:38 3h "00516_edb360_323688_3h_423_sessions_time_series_for_cluster.html"
11:50:38 3h "00517_edb360_323688_3h_423_sessions_time_series_for_cluster_line_chart.html"
Elapsed Hours so far:    0.473

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:38 3h "Sessions"
11:50:38 Sessions Time Series for Instance 1

WITH
by_instance_and_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3h.420 */
       r.snap_id,
       r.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       MAX(r.current_utilization) current_utilization,
       MAX(r.max_utilization) max_utilization
  FROM dba_hist_resource_limit r,
       dba_hist_snapshot s
 WHERE s.snap_id BETWEEN 3473 AND 4962
   AND s.dbid = 2109323688
   AND r.snap_id = s.snap_id
   AND r.dbid = s.dbid
   AND r.instance_number = s.instance_number
   AND r.resource_name = 'sessions'
   AND s.instance_number = '1'
 GROUP BY
       r.snap_id,
       r.instance_number,
       s.begin_interval_time,
       s.end_interval_time
)
SELECT /*+  NO_MERGE  */ /* 3h.420 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(current_utilization) current_utilization,
       SUM(max_utilization) max_utilization,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM by_instance_and_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:50:38 3h.424
Elapsed Hours so far:    0.473
Elapsed Hours so far: .473

Elapsed: 00:00:00.00

11:50:39 3h "00518_edb360_323688_3h_424_sessions_time_series_for_instance_1.html"
11:50:39 3h "00519_edb360_323688_3h_424_sessions_time_series_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.473

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:39 3h "Sessions"
11:50:39 Sessions Time Series for Instance 2

WITH
by_instance_and_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 3h.420 */
       r.snap_id,
       r.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       MAX(r.current_utilization) current_utilization,
       MAX(r.max_utilization) max_utilization
  FROM dba_hist_resource_limit r,
       dba_hist_snapshot s
 WHERE s.snap_id BETWEEN 3473 AND 4962
   AND s.dbid = 2109323688
   AND r.snap_id = s.snap_id
   AND r.dbid = s.dbid
   AND r.instance_number = s.instance_number
   AND r.resource_name = 'sessions'
   AND s.instance_number = '2'
 GROUP BY
       r.snap_id,
       r.instance_number,
       s.begin_interval_time,
       s.end_interval_time
)
SELECT /*+  NO_MERGE  */ /* 3h.420 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(current_utilization) current_utilization,
       SUM(max_utilization) max_utilization,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM by_instance_and_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:50:39 3h.425
Elapsed Hours so far:    0.473
Elapsed Hours so far: .473

Elapsed: 00:00:00.00

11:50:39 3h "00520_edb360_323688_3h_425_sessions_time_series_for_instance_2.html"
11:50:39 3h "00521_edb360_323688_3h_425_sessions_time_series_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.474

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:41 3i "JDBC Sessions"
11:50:41 JDBC Connection usage per Module

-- from monitor_jdbc_conn.sql
select count(*) sessions, /* 3i.426 */
module,
SUM(CASE status WHEN 'ACTIVE' THEN 1 ELSE 0 END) active,
SUM(CASE status WHEN 'INACTIVE' THEN 1 ELSE 0 END) inactive,
SUM(CASE status WHEN 'KILLED' THEN 1 ELSE 0 END) killed,
SUM(CASE status WHEN 'CACHED' THEN 1 ELSE 0 END) cached,
SUM(CASE status WHEN 'SNIPED' THEN 1 ELSE 0 END) sniped,
MIN(last_call_et) min_last_call_secs,
MAX(last_call_et) max_last_call_secs,
MEDIAN(last_call_et) med_last_call_secs
FROM gv$session
where program like '%JDBC%'
group by module
order by 1 DESC, 2

11:50:41 3i.426
Elapsed Hours so far:    0.474
Elapsed Hours so far: .474

Elapsed: 00:00:00.00

11:50:41 3i "00522_edb360_323688_3i_426_jdbc_connection_usage_per_module.html"
11:50:41 3i "00523_edb360_323688_3i_426_jdbc_connection_usage_per_module_line_chart.html"
Elapsed Hours so far:    0.474

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:41 3i "JDBC Sessions"
11:50:41 JDBC Connection usage per Process and Module

-- from monitor_jdbc_conn.sql
select count(*) sessions, /* 3i.427 */
process,
module,
SUM(CASE status WHEN 'ACTIVE' THEN 1 ELSE 0 END) active,
SUM(CASE status WHEN 'INACTIVE' THEN 1 ELSE 0 END) inactive,
SUM(CASE status WHEN 'KILLED' THEN 1 ELSE 0 END) killed,
SUM(CASE status WHEN 'CACHED' THEN 1 ELSE 0 END) cached,
SUM(CASE status WHEN 'SNIPED' THEN 1 ELSE 0 END) sniped,
MIN(last_call_et) min_last_call_secs,
MAX(last_call_et) max_last_call_secs,
MEDIAN(last_call_et) med_last_call_secs
FROM gv$session
where program like '%JDBC%'
group by process, module
order by 1 DESC, 2, 3

11:50:41 3i.427
Elapsed Hours so far:    0.474
Elapsed Hours so far: .474

Elapsed: 00:00:00.00

11:50:42 3i "00524_edb360_323688_3i_427_jdbc_connection_usage_per_process_and_module.html"
Elapsed Hours so far:    0.474

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:42 3i "JDBC Sessions"
11:50:42 JDBC Connection usage per JVM

-- from monitor_jdbc_conn.sql
select count(*) sessions, /* 3i.428 */
machine,
SUM(CASE status WHEN 'ACTIVE' THEN 1 ELSE 0 END) active,
SUM(CASE status WHEN 'INACTIVE' THEN 1 ELSE 0 END) inactive,
SUM(CASE status WHEN 'KILLED' THEN 1 ELSE 0 END) killed,
SUM(CASE status WHEN 'CACHED' THEN 1 ELSE 0 END) cached,
SUM(CASE status WHEN 'SNIPED' THEN 1 ELSE 0 END) sniped,
MIN(last_call_et) min_last_call_secs,
MAX(last_call_et) max_last_call_secs,
MEDIAN(last_call_et) med_last_call_secs
FROM gv$session
where program like '%JDBC%'
group by machine
order by 1 DESC, 2

11:50:42 3i.428
Elapsed Hours so far:    0.474
Elapsed Hours so far: .474

Elapsed: 00:00:00.00

11:50:42 3i "00525_edb360_323688_3i_428_jdbc_connection_usage_per_jvm.html"
Elapsed Hours so far:    0.474

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:42 3i "JDBC Sessions"
11:50:42 JDBC Connection usage per JVM Process

-- from monitor_jdbc_conn.sql
select count(*) sessions, /* 3i.429 */
machine,
process,
SUM(CASE status WHEN 'ACTIVE' THEN 1 ELSE 0 END) active,
SUM(CASE status WHEN 'INACTIVE' THEN 1 ELSE 0 END) inactive,
SUM(CASE status WHEN 'KILLED' THEN 1 ELSE 0 END) killed,
SUM(CASE status WHEN 'CACHED' THEN 1 ELSE 0 END) cached,
SUM(CASE status WHEN 'SNIPED' THEN 1 ELSE 0 END) sniped,
MIN(last_call_et) min_last_call_secs,
MAX(last_call_et) max_last_call_secs,
MEDIAN(last_call_et) med_last_call_secs
FROM gv$session
where program like '%JDBC%'
group by machine, process
order by 1 DESC, 2, 3

11:50:42 3i.429
Elapsed Hours so far:    0.474
Elapsed Hours so far: .474

Elapsed: 00:00:00.00

11:50:42 3i "00526_edb360_323688_3i_429_jdbc_connection_usage_per_jvm_process.html"
Elapsed Hours so far:    0.474

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:42 3i "JDBC Sessions"
11:50:42 JDBC Idle connections for more than N hours

-- from monitor_jdbc_conn.sql
select TRUNC(last_call_et/3600) hours_idle,status, /* 3i.430 */
count(*) sessions,
CASE TRUNC(last_call_et/3600) WHEN 0 THEN ROUND(AVG(last_call_et)) END avg_secs,
CASE TRUNC(last_call_et/3600) WHEN 0 THEN MEDIAN(last_call_et) END med_secs
FROM gv$session
where program like '%JDBC%'
and status <> 'ACTIVE'
group by status,TRUNC(last_call_et/3600)
order by 1,2

11:50:42 3i.430
Elapsed Hours so far:    0.474
Elapsed Hours so far: .474

Elapsed: 00:00:00.00

11:50:42 3i "00527_edb360_323688_3i_430_jdbc_idle_connections_for_more_than_n_hours.html"
Elapsed Hours so far:    0.474

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:42 3i "JDBC Sessions"
11:50:42 JDBC Idle connections per Status, JVM and Program

-- from monitor_jdbc_conn.sql
select TRUNC(last_call_et/3600) hours_idle, /* 3i.431 */
status,
machine,
program,
count(*) sessions,
CASE TRUNC(last_call_et/3600) WHEN 0 THEN ROUND(AVG(last_call_et)) END avg_secs,
CASE TRUNC(last_call_et/3600) WHEN 0 THEN MEDIAN(last_call_et) END med_secs
FROM gv$session
where program like '%JDBC%'
--and  last_call_et > 3600
and status <> 'ACTIVE'
group by TRUNC(last_call_et/3600),status,machine, program
order by 1,2,3,4

11:50:42 3i.431
Elapsed Hours so far:    0.474
Elapsed Hours so far: .474

Elapsed: 00:00:00.00

11:50:42 3i "00528_edb360_323688_3i_431_jdbc_idle_connections_per_status_jvm_and_program.html"
Elapsed Hours so far:    0.474

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:42 3i "JDBC Sessions"
11:50:42 JDBC Active connections

-- from monitor_jdbc_conn.sql
select s.last_call_et last_call_et_secs,  /* 3i.432 */
s.*,  t.sql_text current_sql, t2.sql_text prev_sql
FROM gv$session s, gv$sql t, gv$sql t2
where s.inst_id =t.inst_id(+)
and s.sql_address =t.address(+)
and s.sql_hash_value =t.hash_value(+)
and s.sql_id = t.sql_id(+)
and s.sql_child_number = t.child_number(+)
and s.con_id = t.con_id(+)
and s.inst_id =t2.inst_id(+)
and s.prev_sql_addr =t2.address(+)
and s.prev_hash_value =t2.hash_value(+)
and s.prev_sql_id = t2.sql_id(+)
and s.prev_child_number = t2.child_number(+)
and s.con_id = t2.con_id(+)
and s.program like '%JDBC%'
and s.status = 'ACTIVE'
order by last_call_et

11:50:42 3i.432
Elapsed Hours so far:    0.474
Elapsed Hours so far: .474

Elapsed: 00:00:00.00

11:50:43 3i "00529_edb360_323688_3i_432_jdbc_active_connections.html"
Elapsed Hours so far:    0.474

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:43 3i "JDBC Sessions"
11:50:43 JDBC Idle connections

-- from monitor_jdbc_conn.sql
select s.last_call_et last_call_et_secs,  /* 3i.433 */
s.*,  t.sql_text current_sql, t2.sql_text prev_sql
FROM gv$session s, gv$sql t, gv$sql t2
where s.inst_id =t.inst_id(+)
and s.sql_address =t.address(+)
and s.sql_hash_value =t.hash_value(+)
and s.sql_id = t.sql_id(+)
and s.sql_child_number = t.child_number(+)
and s.con_id = t.con_id(+)
and s.inst_id =t2.inst_id(+)
and s.prev_sql_addr =t2.address(+)
and s.prev_hash_value =t2.hash_value(+)
and s.prev_sql_id = t2.sql_id(+)
and s.prev_child_number = t2.child_number(+)
and s.con_id = t2.con_id(+)
and s.program like '%JDBC%'
and s.status <> 'ACTIVE'
order by last_call_et

11:50:43 3i.433
Elapsed Hours so far:    0.474
Elapsed Hours so far: .474

Elapsed: 00:00:00.00

11:50:43 3i "00530_edb360_323688_3i_433_jdbc_idle_connections.html"
Elapsed Hours so far:    0.475

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:47 3j "Non-JDBC Sessions"
11:50:47 Non-JDBC Connection usage per Module

-- from monitor_jdbc_conn.sql
select count(*) sessions, /* 3j.434 */
type,
module,
SUM(CASE status WHEN 'ACTIVE' THEN 1 ELSE 0 END) active,
SUM(CASE status WHEN 'INACTIVE' THEN 1 ELSE 0 END) inactive,
SUM(CASE status WHEN 'KILLED' THEN 1 ELSE 0 END) killed,
SUM(CASE status WHEN 'CACHED' THEN 1 ELSE 0 END) cached,
SUM(CASE status WHEN 'SNIPED' THEN 1 ELSE 0 END) sniped,
MIN(last_call_et) min_last_call_secs,
MAX(last_call_et) max_last_call_secs,
MEDIAN(last_call_et) med_last_call_secs
FROM gv$session
where (program IS NULL OR program not like '%JDBC%')
group by type,module
order by 1 DESC, 2,3

11:50:47 3j.434
Elapsed Hours so far:    0.475
Elapsed Hours so far: .475

Elapsed: 00:00:00.00

11:50:47 3j "00531_edb360_323688_3j_434_nonjdbc_connection_usage_per_module.html"
Elapsed Hours so far:    0.475

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:47 3j "Non-JDBC Sessions"
11:50:47 Non-JDBC Connection usage per Process and Module

-- from monitor_jdbc_conn.sql
select count(*) sessions, /* 3j.435 */
type,
process,
module,
SUM(CASE status WHEN 'ACTIVE' THEN 1 ELSE 0 END) active,
SUM(CASE status WHEN 'INACTIVE' THEN 1 ELSE 0 END) inactive,
SUM(CASE status WHEN 'KILLED' THEN 1 ELSE 0 END) killed,
SUM(CASE status WHEN 'CACHED' THEN 1 ELSE 0 END) cached,
SUM(CASE status WHEN 'SNIPED' THEN 1 ELSE 0 END) sniped,
MIN(last_call_et) min_last_call_secs,
MAX(last_call_et) max_last_call_secs,
MEDIAN(last_call_et) med_last_call_secs
FROM gv$session
where (program IS NULL OR program not like '%JDBC%')
group by type,process, module
order by 1 DESC, 2, 3, 4

11:50:47 3j.435
Elapsed Hours so far:    0.475
Elapsed Hours so far: .475

Elapsed: 00:00:00.00

11:50:47 3j "00532_edb360_323688_3j_435_nonjdbc_connection_usage_per_process_and_module.html"
Elapsed Hours so far:    0.475

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:47 3j "Non-JDBC Sessions"
11:50:47 Non-JDBC Connection usage per JVM

-- from monitor_jdbc_conn.sql
select count(*) sessions, /* 3j.436 */
type,
machine,
SUM(CASE status WHEN 'ACTIVE' THEN 1 ELSE 0 END) active,
SUM(CASE status WHEN 'INACTIVE' THEN 1 ELSE 0 END) inactive,
SUM(CASE status WHEN 'KILLED' THEN 1 ELSE 0 END) killed,
SUM(CASE status WHEN 'CACHED' THEN 1 ELSE 0 END) cached,
SUM(CASE status WHEN 'SNIPED' THEN 1 ELSE 0 END) sniped,
MIN(last_call_et) min_last_call_secs,
MAX(last_call_et) max_last_call_secs,
MEDIAN(last_call_et) med_last_call_secs
FROM gv$session
where (program IS NULL OR program not like '%JDBC%')
group by type,machine
order by 1 DESC, 2, 3

11:50:47 3j.436
Elapsed Hours so far:    0.475
Elapsed Hours so far: .475

Elapsed: 00:00:00.00

11:50:47 3j "00533_edb360_323688_3j_436_nonjdbc_connection_usage_per_jvm.html"
Elapsed Hours so far:    0.475

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:47 3j "Non-JDBC Sessions"
11:50:47 Non-JDBC Connection usage per JVM Process

-- from monitor_jdbc_conn.sql
select count(*) sessions, /* 3j.437 */
type,
machine,
process,
SUM(CASE status WHEN 'ACTIVE' THEN 1 ELSE 0 END) active,
SUM(CASE status WHEN 'INACTIVE' THEN 1 ELSE 0 END) inactive,
SUM(CASE status WHEN 'KILLED' THEN 1 ELSE 0 END) killed,
SUM(CASE status WHEN 'CACHED' THEN 1 ELSE 0 END) cached,
SUM(CASE status WHEN 'SNIPED' THEN 1 ELSE 0 END) sniped,
MIN(last_call_et) min_last_call_secs,
MAX(last_call_et) max_last_call_secs,
MEDIAN(last_call_et) med_last_call_secs
FROM gv$session
where (program IS NULL OR program not like '%JDBC%')
group by type,machine, process
order by 1 DESC, 2, 3, 4

11:50:47 3j.437
Elapsed Hours so far:    0.475
Elapsed Hours so far: .475

Elapsed: 00:00:00.00

11:50:47 3j "00534_edb360_323688_3j_437_nonjdbc_connection_usage_per_jvm_process.html"
Elapsed Hours so far:    0.475

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:47 3j "Non-JDBC Sessions"
11:50:47 Non-JDBC Idle connections for more than N hours

-- from monitor_jdbc_conn.sql
select TRUNC(last_call_et/3600) hours_idle, /* 3j.438 */
type,
status,
count(*) sessions,
CASE TRUNC(last_call_et/3600) WHEN 0 THEN ROUND(AVG(last_call_et)) END avg_secs,
CASE TRUNC(last_call_et/3600) WHEN 0 THEN MEDIAN(last_call_et) END med_secs
FROM gv$session
where (program IS NULL OR program not like '%JDBC%')
and status <> 'ACTIVE'
group by type,status,TRUNC(last_call_et/3600)
order by 1,2,3

11:50:47 3j.438
Elapsed Hours so far:    0.475
Elapsed Hours so far: .475

Elapsed: 00:00:00.00

11:50:48 3j "00535_edb360_323688_3j_438_nonjdbc_idle_connections_for_more_than_n_hours.html"
Elapsed Hours so far:    0.475

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:48 3j "Non-JDBC Sessions"
11:50:48 Non-JDBC Idle connections per Status, JVM and Program

-- from monitor_jdbc_conn.sql
select TRUNC(last_call_et/3600) hours_idle, /* 3j.439 */
type,
status,
machine,
program,
count(*) sessions,
CASE TRUNC(last_call_et/3600) WHEN 0 THEN ROUND(AVG(last_call_et)) END avg_secs,
CASE TRUNC(last_call_et/3600) WHEN 0 THEN MEDIAN(last_call_et) END med_secs
FROM gv$session
where (program IS NULL OR program not like '%JDBC%')
--and  last_call_et > 3600
and status <> 'ACTIVE'
group by TRUNC(last_call_et/3600),type,status,machine, program
order by 1,2,3,4,5

11:50:48 3j.439
Elapsed Hours so far:    0.475
Elapsed Hours so far: .475

Elapsed: 00:00:00.00

11:50:48 3j "00536_edb360_323688_3j_439_nonjdbc_idle_connections_per_status_jvm_and_program.html"
Elapsed Hours so far:    0.476

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:48 3j "Non-JDBC Sessions"
11:50:48 Non-JDBC Active connections

-- from monitor_jdbc_conn.sql
select s.last_call_et last_call_et_secs,  /* 3j.440 */
s.*,  t.sql_text current_sql, t2.sql_text prev_sql
FROM gv$session s, gv$sql t, gv$sql t2
where s.inst_id =t.inst_id(+)
and s.sql_address =t.address(+)
and s.sql_hash_value =t.hash_value(+)
and s.sql_id = t.sql_id(+)
and s.sql_child_number = t.child_number(+)
and s.con_id = t.con_id(+)
and s.inst_id =t2.inst_id(+)
and s.prev_sql_addr =t2.address(+)
and s.prev_hash_value =t2.hash_value(+)
and s.prev_sql_id = t2.sql_id(+)
and s.prev_child_number = t2.child_number(+)
and s.con_id = t2.con_id(+)
and (s.program IS NULL OR s.program not like '%JDBC%')
and s.status = 'ACTIVE'
order by last_call_et

11:50:48 3j.440
Elapsed Hours so far:    0.476
Elapsed Hours so far: .476

Elapsed: 00:00:00.00

11:50:48 3j "00537_edb360_323688_3j_440_nonjdbc_active_connections.html"
Elapsed Hours so far:    0.476

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:50 3j "Non-JDBC Sessions"
11:50:50 Non-JDBC Idle connections

-- from monitor_jdbc_conn.sql
select s.last_call_et last_call_et_secs,  /* 3j.441 */
s.*,  t.sql_text current_sql, t2.sql_text prev_sql
FROM gv$session s, gv$sql t, gv$sql t2
where s.inst_id =t.inst_id(+)
and s.sql_address =t.address(+)
and s.sql_hash_value =t.hash_value(+)
and s.sql_id = t.sql_id(+)
and s.sql_child_number = t.child_number(+)
and s.con_id = t.con_id(+)
and s.inst_id =t2.inst_id(+)
and s.prev_sql_addr =t2.address(+)
and s.prev_hash_value =t2.hash_value(+)
and s.prev_sql_id = t2.sql_id(+)
and s.prev_child_number = t2.child_number(+)
and s.con_id = t2.con_id(+)
and (s.program IS NULL OR s.program not like '%JDBC%')
and s.status <> 'ACTIVE'
order by last_call_et

11:50:50 3j.441
Elapsed Hours so far:    0.476
Elapsed Hours so far: .476

Elapsed: 00:00:00.00

11:50:50 3j "00538_edb360_323688_3j_441_nonjdbc_idle_connections.html"
Elapsed Hours so far:    0.477

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:54 4a "System Global Area (SGA) Statistics History"
11:50:54 SGA Allocation

select * from x$ksmssinfo

11:50:54 4a.442
Elapsed Hours so far:    0.477
Elapsed Hours so far: .477

Elapsed: 00:00:00.01

11:50:54 4a "00539_edb360_323688_4a_442_sga_allocation.html"
Elapsed Hours so far:    0.477

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:50:54 4a "System Global Area (SGA) Statistics History"
11:50:54 SGA Statistics for Cluster

WITH
sgastat_denorm_1 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4a.443 */
       snap_id,
       dbid,
       instance_number,
       SUM(bytes) sga_total,
       SUM(CASE WHEN pool IS NULL AND name = 'fixed_sga' THEN bytes ELSE 0 END) fixed_sga,
       SUM(CASE WHEN pool IS NULL AND name = 'buffer_cache' THEN bytes ELSE 0 END) buffer_cache,
       SUM(CASE WHEN pool IS NULL AND name = 'log_buffer' THEN bytes ELSE 0 END) log_buffer,
       SUM(CASE WHEN pool IS NULL AND name = 'shared_io_pool' THEN bytes ELSE 0 END) shared_io_pool,

       SUM(CASE pool WHEN 'shared pool' THEN bytes ELSE 0 END) shared_pool,
       SUM(CASE pool WHEN 'large pool' THEN bytes ELSE 0 END) large_pool,
       SUM(CASE pool WHEN 'java pool' THEN bytes ELSE 0 END) java_pool,
       SUM(CASE pool WHEN 'streams pool' THEN bytes ELSE 0 END) streams_pool
  FROM dba_hist_sgastat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = instance_number
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sgastat_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4a.443 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       h1.sga_total,
       h1.fixed_sga,
       h1.buffer_cache,
       h1.log_buffer,
       h1.shared_io_pool,
       h1.shared_pool,
       h1.large_pool,
       h1.java_pool,
       h1.streams_pool
  FROM sgastat_denorm_1 h0,
       sgastat_denorm_1 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(sga_total) / POWER(2,30), 3) sga_total,
       ROUND(SUM(fixed_sga) / POWER(2,30), 3) fixed_sga,
       ROUND(SUM(buffer_cache) / POWER(2,30), 3) buffer_cache,
       ROUND(SUM(log_buffer) / POWER(2,30), 3) log_buffer,
       ROUND(SUM(shared_io_pool) / POWER(2,30), 3) shared_io_pool,
       ROUND(SUM(shared_pool) / POWER(2,30), 3) shared_pool,
       ROUND(SUM(large_pool) / POWER(2,30), 3) large_pool,
       ROUND(SUM(java_pool) / POWER(2,30), 3) java_pool,
       ROUND(SUM(streams_pool) / POWER(2,30), 3) streams_pool,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sgastat_denorm_2
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:50:54 4a.443
Elapsed Hours so far:    0.477
Elapsed Hours so far: .477

Elapsed: 00:00:00.01

11:50:54 4a "00540_edb360_323688_4a_443_sga_statistics_for_cluster.html"
11:51:01 4a "00541_edb360_323688_4a_443_sga_statistics_for_cluster_line_chart.html"
Elapsed Hours so far:    0.481

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:51:08 4a "System Global Area (SGA) Statistics History"
11:51:08 SGA Statistics for Instance 1

WITH
sgastat_denorm_1 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4a.443 */
       snap_id,
       dbid,
       instance_number,
       SUM(bytes) sga_total,
       SUM(CASE WHEN pool IS NULL AND name = 'fixed_sga' THEN bytes ELSE 0 END) fixed_sga,
       SUM(CASE WHEN pool IS NULL AND name = 'buffer_cache' THEN bytes ELSE 0 END) buffer_cache,
       SUM(CASE WHEN pool IS NULL AND name = 'log_buffer' THEN bytes ELSE 0 END) log_buffer,
       SUM(CASE WHEN pool IS NULL AND name = 'shared_io_pool' THEN bytes ELSE 0 END) shared_io_pool,

       SUM(CASE pool WHEN 'shared pool' THEN bytes ELSE 0 END) shared_pool,
       SUM(CASE pool WHEN 'large pool' THEN bytes ELSE 0 END) large_pool,
       SUM(CASE pool WHEN 'java pool' THEN bytes ELSE 0 END) java_pool,
       SUM(CASE pool WHEN 'streams pool' THEN bytes ELSE 0 END) streams_pool
  FROM dba_hist_sgastat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 1
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sgastat_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4a.443 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       h1.sga_total,
       h1.fixed_sga,
       h1.buffer_cache,
       h1.log_buffer,
       h1.shared_io_pool,
       h1.shared_pool,
       h1.large_pool,
       h1.java_pool,
       h1.streams_pool
  FROM sgastat_denorm_1 h0,
       sgastat_denorm_1 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(sga_total) / POWER(2,30), 3) sga_total,
       ROUND(SUM(fixed_sga) / POWER(2,30), 3) fixed_sga,
       ROUND(SUM(buffer_cache) / POWER(2,30), 3) buffer_cache,
       ROUND(SUM(log_buffer) / POWER(2,30), 3) log_buffer,
       ROUND(SUM(shared_io_pool) / POWER(2,30), 3) shared_io_pool,
       ROUND(SUM(shared_pool) / POWER(2,30), 3) shared_pool,
       ROUND(SUM(large_pool) / POWER(2,30), 3) large_pool,
       ROUND(SUM(java_pool) / POWER(2,30), 3) java_pool,
       ROUND(SUM(streams_pool) / POWER(2,30), 3) streams_pool,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sgastat_denorm_2
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:51:08 4a.444
Elapsed Hours so far:    0.481
Elapsed Hours so far: .481

Elapsed: 00:00:00.00

11:51:08 4a "00542_edb360_323688_4a_444_sga_statistics_for_instance_1.html"
11:51:12 4a "00543_edb360_323688_4a_444_sga_statistics_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.483

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:51:15 4a "System Global Area (SGA) Statistics History"
11:51:15 SGA Statistics for Instance 2

WITH
sgastat_denorm_1 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4a.443 */
       snap_id,
       dbid,
       instance_number,
       SUM(bytes) sga_total,
       SUM(CASE WHEN pool IS NULL AND name = 'fixed_sga' THEN bytes ELSE 0 END) fixed_sga,
       SUM(CASE WHEN pool IS NULL AND name = 'buffer_cache' THEN bytes ELSE 0 END) buffer_cache,
       SUM(CASE WHEN pool IS NULL AND name = 'log_buffer' THEN bytes ELSE 0 END) log_buffer,
       SUM(CASE WHEN pool IS NULL AND name = 'shared_io_pool' THEN bytes ELSE 0 END) shared_io_pool,

       SUM(CASE pool WHEN 'shared pool' THEN bytes ELSE 0 END) shared_pool,
       SUM(CASE pool WHEN 'large pool' THEN bytes ELSE 0 END) large_pool,
       SUM(CASE pool WHEN 'java pool' THEN bytes ELSE 0 END) java_pool,
       SUM(CASE pool WHEN 'streams pool' THEN bytes ELSE 0 END) streams_pool
  FROM dba_hist_sgastat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 2
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sgastat_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4a.443 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       h1.sga_total,
       h1.fixed_sga,
       h1.buffer_cache,
       h1.log_buffer,
       h1.shared_io_pool,
       h1.shared_pool,
       h1.large_pool,
       h1.java_pool,
       h1.streams_pool
  FROM sgastat_denorm_1 h0,
       sgastat_denorm_1 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(sga_total) / POWER(2,30), 3) sga_total,
       ROUND(SUM(fixed_sga) / POWER(2,30), 3) fixed_sga,
       ROUND(SUM(buffer_cache) / POWER(2,30), 3) buffer_cache,
       ROUND(SUM(log_buffer) / POWER(2,30), 3) log_buffer,
       ROUND(SUM(shared_io_pool) / POWER(2,30), 3) shared_io_pool,
       ROUND(SUM(shared_pool) / POWER(2,30), 3) shared_pool,
       ROUND(SUM(large_pool) / POWER(2,30), 3) large_pool,
       ROUND(SUM(java_pool) / POWER(2,30), 3) java_pool,
       ROUND(SUM(streams_pool) / POWER(2,30), 3) streams_pool,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sgastat_denorm_2
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:51:15 4a.445
Elapsed Hours so far:    0.483
Elapsed Hours so far: .483

Elapsed: 00:00:00.01

11:51:16 4a "00544_edb360_323688_4a_445_sga_statistics_for_instance_2.html"
11:51:19 4a "00545_edb360_323688_4a_445_sga_statistics_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.485

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:51:23 4a "System Global Area (SGA) Statistics History"
11:51:23 Subpools in the Shared Pool with largest changes

WITH
calc AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4a.446 */
       dbid,
       instance_number,
       name,
       stddev(bytes) standard_dev
  FROM dba_hist_sgastat
 WHERE pool='shared pool'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       dbid,
       instance_number,
       name
),
calc2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       dbid,
       name,
       max(standard_dev) standard_dev
  FROM calc
 WHERE standard_dev>0
 GROUP BY
       dbid,
       name
),
ranked AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4a.446 */
       ROW_NUMBER () OVER (ORDER BY standard_dev DESC) srank,
       ROUND(standard_dev / 1024 / 1024, 1) mb_std_deviation,
       name subpool_name
  FROM calc2
)
SELECT * FROM ranked

11:51:23 4a.446
Elapsed Hours so far:    0.485
Elapsed Hours so far: .485

Elapsed: 00:00:00.00

11:51:23 4a "00546_edb360_323688_4a_446_subpools_in_the_shared_pool_with_largest_changes.html"
Elapsed Hours so far:    0.485

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:51:23 4a "System Global Area (SGA) Statistics History"
11:51:23 Memory allocation for "SQLA"

WITH
sgastat_denorm_1 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4a.447 */
       snap_id,
       dbid,
       instance_number,
       SUM(bytes) allocated
  FROM dba_hist_sgastat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND pool = 'shared pool'
   AND name = 'SQLA'
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sgastat_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       h1.allocated
  FROM sgastat_denorm_1 h0,
       sgastat_denorm_1 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN allocated ELSE 0 END)/POWER(2,20), 3) inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN allocated ELSE 0 END)/POWER(2,20), 3) inst_02,
       0 dummy_03, --ROUND(SUM(CASE instance_number WHEN 3 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_03,
       0 dummy_04, --ROUND(SUM(CASE instance_number WHEN 4 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_04,
       0 dummy_05, --ROUND(SUM(CASE instance_number WHEN 5 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_05,
       0 dummy_06, --ROUND(SUM(CASE instance_number WHEN 6 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_06,
       0 dummy_07, --ROUND(SUM(CASE instance_number WHEN 7 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_07,
       0 dummy_08, --ROUND(SUM(CASE instance_number WHEN 8 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sgastat_denorm_2
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:51:23 4a.447
Elapsed Hours so far:    0.485
Elapsed Hours so far: .485

Elapsed: 00:00:00.00

11:51:23 4a "00547_edb360_323688_4a_447_memory_allocation_for_sqla.html"
11:51:30 4a "00548_edb360_323688_4a_447_memory_allocation_for_sqla_line_chart.html"
Elapsed Hours so far:    0.489

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:51:37 4a "System Global Area (SGA) Statistics History"
11:51:37 Memory allocation for "Result Cache"

WITH
sgastat_denorm_1 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4a.447 */
       snap_id,
       dbid,
       instance_number,
       SUM(bytes) allocated
  FROM dba_hist_sgastat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND pool = 'shared pool'
   AND name = 'Result Cache'
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sgastat_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       h1.allocated
  FROM sgastat_denorm_1 h0,
       sgastat_denorm_1 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN allocated ELSE 0 END)/POWER(2,20), 3) inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN allocated ELSE 0 END)/POWER(2,20), 3) inst_02,
       0 dummy_03, --ROUND(SUM(CASE instance_number WHEN 3 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_03,
       0 dummy_04, --ROUND(SUM(CASE instance_number WHEN 4 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_04,
       0 dummy_05, --ROUND(SUM(CASE instance_number WHEN 5 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_05,
       0 dummy_06, --ROUND(SUM(CASE instance_number WHEN 6 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_06,
       0 dummy_07, --ROUND(SUM(CASE instance_number WHEN 7 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_07,
       0 dummy_08, --ROUND(SUM(CASE instance_number WHEN 8 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sgastat_denorm_2
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:51:37 4a.448
Elapsed Hours so far:    0.489
Elapsed Hours so far: .489

Elapsed: 00:00:00.00

11:51:37 4a "00549_edb360_323688_4a_448_memory_allocation_for_result_cache.html"
11:51:41 4a "00550_edb360_323688_4a_448_memory_allocation_for_result_cache_line_chart.html"
Elapsed Hours so far:    0.492

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:51:46 4a "System Global Area (SGA) Statistics History"
11:51:46 Memory allocation for "KGLH0"

WITH
sgastat_denorm_1 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4a.447 */
       snap_id,
       dbid,
       instance_number,
       SUM(bytes) allocated
  FROM dba_hist_sgastat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND pool = 'shared pool'
   AND name = 'KGLH0'
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sgastat_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       h1.allocated
  FROM sgastat_denorm_1 h0,
       sgastat_denorm_1 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN allocated ELSE 0 END)/POWER(2,20), 3) inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN allocated ELSE 0 END)/POWER(2,20), 3) inst_02,
       0 dummy_03, --ROUND(SUM(CASE instance_number WHEN 3 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_03,
       0 dummy_04, --ROUND(SUM(CASE instance_number WHEN 4 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_04,
       0 dummy_05, --ROUND(SUM(CASE instance_number WHEN 5 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_05,
       0 dummy_06, --ROUND(SUM(CASE instance_number WHEN 6 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_06,
       0 dummy_07, --ROUND(SUM(CASE instance_number WHEN 7 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_07,
       0 dummy_08, --ROUND(SUM(CASE instance_number WHEN 8 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sgastat_denorm_2
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:51:46 4a.449
Elapsed Hours so far:    0.492
Elapsed Hours so far: .492

Elapsed: 00:00:00.00

11:51:46 4a "00551_edb360_323688_4a_449_memory_allocation_for_kglh0.html"
11:51:50 4a "00552_edb360_323688_4a_449_memory_allocation_for_kglh0_line_chart.html"
Elapsed Hours so far:    0.494

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:51:54 4a "System Global Area (SGA) Statistics History"
11:51:54 Memory allocation for "gcs resources"

WITH
sgastat_denorm_1 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4a.447 */
       snap_id,
       dbid,
       instance_number,
       SUM(bytes) allocated
  FROM dba_hist_sgastat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND pool = 'shared pool'
   AND name = 'gcs resources'
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sgastat_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       h1.allocated
  FROM sgastat_denorm_1 h0,
       sgastat_denorm_1 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN allocated ELSE 0 END)/POWER(2,20), 3) inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN allocated ELSE 0 END)/POWER(2,20), 3) inst_02,
       0 dummy_03, --ROUND(SUM(CASE instance_number WHEN 3 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_03,
       0 dummy_04, --ROUND(SUM(CASE instance_number WHEN 4 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_04,
       0 dummy_05, --ROUND(SUM(CASE instance_number WHEN 5 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_05,
       0 dummy_06, --ROUND(SUM(CASE instance_number WHEN 6 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_06,
       0 dummy_07, --ROUND(SUM(CASE instance_number WHEN 7 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_07,
       0 dummy_08, --ROUND(SUM(CASE instance_number WHEN 8 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sgastat_denorm_2
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:51:54 4a.450
Elapsed Hours so far:    0.494
Elapsed Hours so far: .494

Elapsed: 00:00:00.00

11:51:54 4a "00553_edb360_323688_4a_450_memory_allocation_for_gcs_resources.html"
11:52:01 4a "00554_edb360_323688_4a_450_memory_allocation_for_gcs_resources_line_chart.html"
Elapsed Hours so far:    0.498

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:52:08 4a "System Global Area (SGA) Statistics History"
11:52:08 Memory allocation for "gcs shadows"

WITH
sgastat_denorm_1 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4a.447 */
       snap_id,
       dbid,
       instance_number,
       SUM(bytes) allocated
  FROM dba_hist_sgastat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND pool = 'shared pool'
   AND name = 'gcs shadows'
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sgastat_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       h1.allocated
  FROM sgastat_denorm_1 h0,
       sgastat_denorm_1 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN allocated ELSE 0 END)/POWER(2,20), 3) inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN allocated ELSE 0 END)/POWER(2,20), 3) inst_02,
       0 dummy_03, --ROUND(SUM(CASE instance_number WHEN 3 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_03,
       0 dummy_04, --ROUND(SUM(CASE instance_number WHEN 4 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_04,
       0 dummy_05, --ROUND(SUM(CASE instance_number WHEN 5 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_05,
       0 dummy_06, --ROUND(SUM(CASE instance_number WHEN 6 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_06,
       0 dummy_07, --ROUND(SUM(CASE instance_number WHEN 7 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_07,
       0 dummy_08, --ROUND(SUM(CASE instance_number WHEN 8 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sgastat_denorm_2
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:52:08 4a.451
Elapsed Hours so far:    0.498
Elapsed Hours so far: .498

Elapsed: 00:00:00.00

11:52:08 4a "00555_edb360_323688_4a_451_memory_allocation_for_gcs_shadows.html"
11:52:15 4a "00556_edb360_323688_4a_451_memory_allocation_for_gcs_shadows_line_chart.html"
Elapsed Hours so far:    0.501

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:52:21 4a "System Global Area (SGA) Statistics History"
11:52:21 Free Memory in Shared Pool

WITH
sgastat_denorm_1 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4a.447 */
       snap_id,
       dbid,
       instance_number,
       SUM(bytes) allocated
  FROM dba_hist_sgastat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND pool = 'shared pool'
   AND name = 'free memory'
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sgastat_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       h1.allocated
  FROM sgastat_denorm_1 h0,
       sgastat_denorm_1 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN allocated ELSE 0 END)/POWER(2,20), 3) inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN allocated ELSE 0 END)/POWER(2,20), 3) inst_02,
       0 dummy_03, --ROUND(SUM(CASE instance_number WHEN 3 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_03,
       0 dummy_04, --ROUND(SUM(CASE instance_number WHEN 4 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_04,
       0 dummy_05, --ROUND(SUM(CASE instance_number WHEN 5 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_05,
       0 dummy_06, --ROUND(SUM(CASE instance_number WHEN 6 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_06,
       0 dummy_07, --ROUND(SUM(CASE instance_number WHEN 7 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_07,
       0 dummy_08, --ROUND(SUM(CASE instance_number WHEN 8 THEN allocated ELSE 0 END)/POWER(2,20), 3
) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sgastat_denorm_2
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:52:21 4a.452
Elapsed Hours so far:    0.501
Elapsed Hours so far: .501

Elapsed: 00:00:00.00

11:52:21 4a "00557_edb360_323688_4a_452_free_memory_in_shared_pool.html"
11:52:28 4a "00558_edb360_323688_4a_452_free_memory_in_shared_pool_line_chart.html"
Elapsed Hours so far:    0.505

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:52:35 4a "System Global Area (SGA) Statistics History"
11:52:35 Memory allocations in Shared Pool for instance 1

WITH
sgastat_denorm_1 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4a.453 */
       snap_id,
       dbid,
       name subpool,
       instance_number,
       SUM(bytes) allocated
  FROM dba_hist_sgastat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND pool = 'shared pool'
   AND instance_number = 1
 GROUP BY
       snap_id,
       dbid,
       name,
       instance_number
),
sgastat_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       h1.snap_id,
       h1.dbid,
       h1.subpool,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       h1.allocated
  FROM sgastat_denorm_1 h0,
       sgastat_denorm_1 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND h1.subpool=h0.subpool
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE subpool WHEN 'free memory' THEN allocated ELSE 0 END)/POWER(2,20), 3) free_mem
ory,
       ROUND(SUM(CASE WHEN subpool not in ('SQLA','Result Cache','KGLH0','gcs resources',
           'gcs shadows','','','','','',
           'free memory' )
       THEN allocated ELSE 0 END)/POWER(2,20), 3) others,
       ROUND(SUM(CASE subpool WHEN 'SQLA' THEN allocated ELSE 0 END)/POWER(2,20), 3) "SQLA",
       ROUND(SUM(CASE subpool WHEN 'Result Cache' THEN allocated ELSE 0 END)/POWER(2,20), 3) "Result
 Cache",
       ROUND(SUM(CASE subpool WHEN 'KGLH0' THEN allocated ELSE 0 END)/POWER(2,20), 3) "KGLH0",
       ROUND(SUM(CASE subpool WHEN 'gcs resources' THEN allocated ELSE 0 END)/POWER(2,20), 3) "gcs r
esources",
       ROUND(SUM(CASE subpool WHEN 'gcs shadows' THEN allocated ELSE 0 END)/POWER(2,20), 3) "gcs sha
dows",
       0 dummy_06, --ROUND(SUM(CASE subpool WHEN '' THEN allocated ELSE 0 END)/POWER(2,20), 3) "",
       0 dummy_07, --ROUND(SUM(CASE subpool WHEN '' THEN allocated ELSE 0 END)/POWER(2,20), 3) "",
       0 dummy_08, --ROUND(SUM(CASE subpool WHEN '' THEN allocated ELSE 0 END)/POWER(2,20), 3) "",
       0 dummy_09, --ROUND(SUM(CASE subpool WHEN '' THEN allocated ELSE 0 END)/POWER(2,20), 3) "",
       0 dummy_10, --ROUND(SUM(CASE subpool WHEN '' THEN allocated ELSE 0 END)/POWER(2,20), 3) "",
       0 dummy_11,
       0 dummy_12,
       0 dummy_13
  FROM sgastat_denorm_2
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:52:35 4a.453
Elapsed Hours so far:    0.505
Elapsed Hours so far: .505

Elapsed: 00:00:00.00

11:52:35 4a "00559_edb360_323688_4a_453_memory_allocations_in_shared_pool_for_instance_1.html"
11:53:03 4a "00560_edb360_323688_4a_453_memory_allocations_in_shared_pool_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.521

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:53:31 4a "System Global Area (SGA) Statistics History"
11:53:31 Memory allocations in Shared Pool for instance 2

WITH
sgastat_denorm_1 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4a.453 */
       snap_id,
       dbid,
       name subpool,
       instance_number,
       SUM(bytes) allocated
  FROM dba_hist_sgastat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND pool = 'shared pool'
   AND instance_number = 2
 GROUP BY
       snap_id,
       dbid,
       name,
       instance_number
),
sgastat_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       h1.snap_id,
       h1.dbid,
       h1.subpool,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       h1.allocated
  FROM sgastat_denorm_1 h0,
       sgastat_denorm_1 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND h1.subpool=h0.subpool
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE subpool WHEN 'free memory' THEN allocated ELSE 0 END)/POWER(2,20), 3) free_mem
ory,
       ROUND(SUM(CASE WHEN subpool not in ('SQLA','Result Cache','KGLH0','gcs resources',
           'gcs shadows','','','','','',
           'free memory' )
       THEN allocated ELSE 0 END)/POWER(2,20), 3) others,
       ROUND(SUM(CASE subpool WHEN 'SQLA' THEN allocated ELSE 0 END)/POWER(2,20), 3) "SQLA",
       ROUND(SUM(CASE subpool WHEN 'Result Cache' THEN allocated ELSE 0 END)/POWER(2,20), 3) "Result
 Cache",
       ROUND(SUM(CASE subpool WHEN 'KGLH0' THEN allocated ELSE 0 END)/POWER(2,20), 3) "KGLH0",
       ROUND(SUM(CASE subpool WHEN 'gcs resources' THEN allocated ELSE 0 END)/POWER(2,20), 3) "gcs r
esources",
       ROUND(SUM(CASE subpool WHEN 'gcs shadows' THEN allocated ELSE 0 END)/POWER(2,20), 3) "gcs sha
dows",
       0 dummy_06, --ROUND(SUM(CASE subpool WHEN '' THEN allocated ELSE 0 END)/POWER(2,20), 3) "",
       0 dummy_07, --ROUND(SUM(CASE subpool WHEN '' THEN allocated ELSE 0 END)/POWER(2,20), 3) "",
       0 dummy_08, --ROUND(SUM(CASE subpool WHEN '' THEN allocated ELSE 0 END)/POWER(2,20), 3) "",
       0 dummy_09, --ROUND(SUM(CASE subpool WHEN '' THEN allocated ELSE 0 END)/POWER(2,20), 3) "",
       0 dummy_10, --ROUND(SUM(CASE subpool WHEN '' THEN allocated ELSE 0 END)/POWER(2,20), 3) "",
       0 dummy_11,
       0 dummy_12,
       0 dummy_13
  FROM sgastat_denorm_2
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:53:31 4a.454
Elapsed Hours so far:    0.521
Elapsed Hours so far: .521

Elapsed: 00:00:00.00

11:53:31 4a "00561_edb360_323688_4a_454_memory_allocations_in_shared_pool_for_instance_2.html"
11:53:57 4a "00562_edb360_323688_4a_454_memory_allocations_in_shared_pool_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.536

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:54:25 4b "Program Global Area (PGA) Statistics History"
11:54:25 PGA Statistics for Cluster

WITH
pgastat_denorm_1 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4b.455 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE name WHEN 'PGA memory freed back to OS'           THEN value ELSE 0 END) pga_mem_fre
ed_to_os,
       SUM(CASE name WHEN 'aggregate PGA auto target'             THEN value ELSE 0 END) aggr_pga_au
to_target,
       SUM(CASE name WHEN 'aggregate PGA target parameter'        THEN value ELSE 0 END) aggr_pga_ta
rget_param,
       SUM(CASE name WHEN 'bytes processed'                       THEN value ELSE 0 END) bytes_proce
ssed,
       SUM(CASE name WHEN 'extra bytes read/written'              THEN value ELSE 0 END) extra_bytes
_rw,
       SUM(CASE name WHEN 'global memory bound'                   THEN value ELSE 0 END) global_memo
ry_bound,
       SUM(CASE name WHEN 'maximum PGA allocated'                 THEN value ELSE 0 END) max_pga_all
ocated,
       SUM(CASE name WHEN 'maximum PGA used for auto workareas'   THEN value ELSE 0 END) max_pga_use
d_aut_wa,
       SUM(CASE name WHEN 'maximum PGA used for manual workareas' THEN value ELSE 0 END) max_pga_use
d_man_wa,
       SUM(CASE name WHEN 'total PGA allocated'                   THEN value ELSE 0 END) tot_pga_all
ocated,
       SUM(CASE name WHEN 'total PGA inuse'                       THEN value ELSE 0 END) tot_pga_inu
se,
       SUM(CASE name WHEN 'total PGA used for auto workareas'     THEN value ELSE 0 END) tot_pga_use
d_aut_wa,
       SUM(CASE name WHEN 'total PGA used for manual workareas'   THEN value ELSE 0 END) tot_pga_use
d_man_wa,
       SUM(CASE name WHEN 'total freeable PGA memory'             THEN value ELSE 0 END) tot_freeabl
e_pga_mem
  FROM dba_hist_pgastat
 WHERE name IN
('PGA memory freed back to OS'
,'aggregate PGA auto target'
,'aggregate PGA target parameter'
,'bytes processed'
,'extra bytes read/written'
,'global memory bound'
,'maximum PGA allocated'
,'maximum PGA used for auto workareas'
,'maximum PGA used for manual workareas'
,'total PGA allocated'
,'total PGA inuse'
,'total PGA used for auto workareas'
,'total PGA used for manual workareas'
,'total freeable PGA memory'
)
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = instance_number
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
pgastat_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4b.455 */
       h.dbid,
       h.instance_number,
       s.startup_time,
       MIN(h.pga_mem_freed_to_os) pga_mem_freed_to_os,
       MIN(h.bytes_processed) bytes_processed,
       MIN(h.extra_bytes_rw) extra_bytes_rw
  FROM pgastat_denorm_1 h,
       dba_hist_snapshot s
 WHERE s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.snap_id BETWEEN 3473 AND 4962
   AND s.dbid = 2109323688
 GROUP BY
       h.dbid,
       h.instance_number,
       s.startup_time
),
pgastat_delta AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4b.455 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       (h1.pga_mem_freed_to_os - h0.pga_mem_freed_to_os) pga_mem_freed_to_os,
       h1.aggr_pga_auto_target,
       h1.aggr_pga_target_param,
       (h1.bytes_processed - h0.bytes_processed) bytes_processed,
       (h1.extra_bytes_rw - h0.extra_bytes_rw) extra_bytes_rw,
       h1.global_memory_bound,
       h1.max_pga_allocated,
       h1.max_pga_used_aut_wa,
       h1.max_pga_used_man_wa,
       h1.tot_pga_allocated,
       h1.tot_pga_inuse,
       h1.tot_pga_used_aut_wa,
       h1.tot_pga_used_man_wa,
       h1.tot_freeable_pga_mem
  FROM pgastat_denorm_1 h0,
       pgastat_denorm_1 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1,
       pgastat_denorm_2 min /* to see cumulative use (replace h0 with min on select list above) */
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
   AND min.dbid = s1.dbid
   AND min.instance_number = s1.instance_number
   AND min.startup_time = s1.startup_time
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       --ROUND(SUM(pga_mem_freed_to_os) / POWER(2,30), 3) pga_mem_freed_to_os,
       ROUND(SUM(aggr_pga_auto_target) / POWER(2,30), 3) aggr_pga_auto_target,
       ROUND(SUM(aggr_pga_target_param) / POWER(2,30), 3) aggr_pga_target_param,
       ROUND(SUM(bytes_processed) / POWER(2,40), 3) bytes_processed,
       ROUND(SUM(extra_bytes_rw) / POWER(2,40), 3) extra_bytes_rw,
       ROUND(SUM(global_memory_bound) / POWER(2,30), 3) global_memory_bound,
       ROUND(SUM(max_pga_allocated) / POWER(2,30), 3) max_pga_allocated,
       ROUND(SUM(max_pga_used_aut_wa) / POWER(2,30), 3) max_pga_used_aut_wa,
       ROUND(SUM(max_pga_used_man_wa) / POWER(2,30), 3) max_pga_used_man_wa,
       ROUND(SUM(tot_pga_allocated) / POWER(2,30), 3) tot_pga_allocated,
       ROUND(SUM(tot_pga_inuse) / POWER(2,30), 3) tot_pga_inuse,
       ROUND(SUM(tot_pga_used_aut_wa) / POWER(2,30), 3) tot_pga_used_aut_wa,
       ROUND(SUM(tot_pga_used_man_wa) / POWER(2,30), 3) tot_pga_used_man_wa,
       ROUND(SUM(tot_freeable_pga_mem) / POWER(2,30), 3) tot_freeable_pga_mem,
       0 dummy_14,
       0 dummy_15
  FROM pgastat_delta
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:54:25 4b.455
Elapsed Hours so far:    0.536
Elapsed Hours so far: .536

Elapsed: 00:00:00.01

11:54:25 4b "00563_edb360_323688_4b_455_pga_statistics_for_cluster.html"
11:55:41 4b "00564_edb360_323688_4b_455_pga_statistics_for_cluster_line_chart.html"
Elapsed Hours so far:    0.572

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:56:34 4b "Program Global Area (PGA) Statistics History"
11:56:34 PGA Statistics for Instance 1

WITH
pgastat_denorm_1 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4b.455 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE name WHEN 'PGA memory freed back to OS'           THEN value ELSE 0 END) pga_mem_fre
ed_to_os,
       SUM(CASE name WHEN 'aggregate PGA auto target'             THEN value ELSE 0 END) aggr_pga_au
to_target,
       SUM(CASE name WHEN 'aggregate PGA target parameter'        THEN value ELSE 0 END) aggr_pga_ta
rget_param,
       SUM(CASE name WHEN 'bytes processed'                       THEN value ELSE 0 END) bytes_proce
ssed,
       SUM(CASE name WHEN 'extra bytes read/written'              THEN value ELSE 0 END) extra_bytes
_rw,
       SUM(CASE name WHEN 'global memory bound'                   THEN value ELSE 0 END) global_memo
ry_bound,
       SUM(CASE name WHEN 'maximum PGA allocated'                 THEN value ELSE 0 END) max_pga_all
ocated,
       SUM(CASE name WHEN 'maximum PGA used for auto workareas'   THEN value ELSE 0 END) max_pga_use
d_aut_wa,
       SUM(CASE name WHEN 'maximum PGA used for manual workareas' THEN value ELSE 0 END) max_pga_use
d_man_wa,
       SUM(CASE name WHEN 'total PGA allocated'                   THEN value ELSE 0 END) tot_pga_all
ocated,
       SUM(CASE name WHEN 'total PGA inuse'                       THEN value ELSE 0 END) tot_pga_inu
se,
       SUM(CASE name WHEN 'total PGA used for auto workareas'     THEN value ELSE 0 END) tot_pga_use
d_aut_wa,
       SUM(CASE name WHEN 'total PGA used for manual workareas'   THEN value ELSE 0 END) tot_pga_use
d_man_wa,
       SUM(CASE name WHEN 'total freeable PGA memory'             THEN value ELSE 0 END) tot_freeabl
e_pga_mem
  FROM dba_hist_pgastat
 WHERE name IN
('PGA memory freed back to OS'
,'aggregate PGA auto target'
,'aggregate PGA target parameter'
,'bytes processed'
,'extra bytes read/written'
,'global memory bound'
,'maximum PGA allocated'
,'maximum PGA used for auto workareas'
,'maximum PGA used for manual workareas'
,'total PGA allocated'
,'total PGA inuse'
,'total PGA used for auto workareas'
,'total PGA used for manual workareas'
,'total freeable PGA memory'
)
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 1
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
pgastat_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4b.455 */
       h.dbid,
       h.instance_number,
       s.startup_time,
       MIN(h.pga_mem_freed_to_os) pga_mem_freed_to_os,
       MIN(h.bytes_processed) bytes_processed,
       MIN(h.extra_bytes_rw) extra_bytes_rw
  FROM pgastat_denorm_1 h,
       dba_hist_snapshot s
 WHERE s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.snap_id BETWEEN 3473 AND 4962
   AND s.dbid = 2109323688
 GROUP BY
       h.dbid,
       h.instance_number,
       s.startup_time
),
pgastat_delta AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4b.455 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       (h1.pga_mem_freed_to_os - h0.pga_mem_freed_to_os) pga_mem_freed_to_os,
       h1.aggr_pga_auto_target,
       h1.aggr_pga_target_param,
       (h1.bytes_processed - h0.bytes_processed) bytes_processed,
       (h1.extra_bytes_rw - h0.extra_bytes_rw) extra_bytes_rw,
       h1.global_memory_bound,
       h1.max_pga_allocated,
       h1.max_pga_used_aut_wa,
       h1.max_pga_used_man_wa,
       h1.tot_pga_allocated,
       h1.tot_pga_inuse,
       h1.tot_pga_used_aut_wa,
       h1.tot_pga_used_man_wa,
       h1.tot_freeable_pga_mem
  FROM pgastat_denorm_1 h0,
       pgastat_denorm_1 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1,
       pgastat_denorm_2 min /* to see cumulative use (replace h0 with min on select list above) */
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
   AND min.dbid = s1.dbid
   AND min.instance_number = s1.instance_number
   AND min.startup_time = s1.startup_time
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       --ROUND(SUM(pga_mem_freed_to_os) / POWER(2,30), 3) pga_mem_freed_to_os,
       ROUND(SUM(aggr_pga_auto_target) / POWER(2,30), 3) aggr_pga_auto_target,
       ROUND(SUM(aggr_pga_target_param) / POWER(2,30), 3) aggr_pga_target_param,
       ROUND(SUM(bytes_processed) / POWER(2,40), 3) bytes_processed,
       ROUND(SUM(extra_bytes_rw) / POWER(2,40), 3) extra_bytes_rw,
       ROUND(SUM(global_memory_bound) / POWER(2,30), 3) global_memory_bound,
       ROUND(SUM(max_pga_allocated) / POWER(2,30), 3) max_pga_allocated,
       ROUND(SUM(max_pga_used_aut_wa) / POWER(2,30), 3) max_pga_used_aut_wa,
       ROUND(SUM(max_pga_used_man_wa) / POWER(2,30), 3) max_pga_used_man_wa,
       ROUND(SUM(tot_pga_allocated) / POWER(2,30), 3) tot_pga_allocated,
       ROUND(SUM(tot_pga_inuse) / POWER(2,30), 3) tot_pga_inuse,
       ROUND(SUM(tot_pga_used_aut_wa) / POWER(2,30), 3) tot_pga_used_aut_wa,
       ROUND(SUM(tot_pga_used_man_wa) / POWER(2,30), 3) tot_pga_used_man_wa,
       ROUND(SUM(tot_freeable_pga_mem) / POWER(2,30), 3) tot_freeable_pga_mem,
       0 dummy_14,
       0 dummy_15
  FROM pgastat_delta
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:56:34 4b.456
Elapsed Hours so far:    0.572
Elapsed Hours so far: .572

Elapsed: 00:00:00.01

11:56:35 4b "00565_edb360_323688_4b_456_pga_statistics_for_instance_1.html"
11:56:52 4b "00566_edb360_323688_4b_456_pga_statistics_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.582

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:57:10 4b "Program Global Area (PGA) Statistics History"
11:57:10 PGA Statistics for Instance 2

WITH
pgastat_denorm_1 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4b.455 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE name WHEN 'PGA memory freed back to OS'           THEN value ELSE 0 END) pga_mem_fre
ed_to_os,
       SUM(CASE name WHEN 'aggregate PGA auto target'             THEN value ELSE 0 END) aggr_pga_au
to_target,
       SUM(CASE name WHEN 'aggregate PGA target parameter'        THEN value ELSE 0 END) aggr_pga_ta
rget_param,
       SUM(CASE name WHEN 'bytes processed'                       THEN value ELSE 0 END) bytes_proce
ssed,
       SUM(CASE name WHEN 'extra bytes read/written'              THEN value ELSE 0 END) extra_bytes
_rw,
       SUM(CASE name WHEN 'global memory bound'                   THEN value ELSE 0 END) global_memo
ry_bound,
       SUM(CASE name WHEN 'maximum PGA allocated'                 THEN value ELSE 0 END) max_pga_all
ocated,
       SUM(CASE name WHEN 'maximum PGA used for auto workareas'   THEN value ELSE 0 END) max_pga_use
d_aut_wa,
       SUM(CASE name WHEN 'maximum PGA used for manual workareas' THEN value ELSE 0 END) max_pga_use
d_man_wa,
       SUM(CASE name WHEN 'total PGA allocated'                   THEN value ELSE 0 END) tot_pga_all
ocated,
       SUM(CASE name WHEN 'total PGA inuse'                       THEN value ELSE 0 END) tot_pga_inu
se,
       SUM(CASE name WHEN 'total PGA used for auto workareas'     THEN value ELSE 0 END) tot_pga_use
d_aut_wa,
       SUM(CASE name WHEN 'total PGA used for manual workareas'   THEN value ELSE 0 END) tot_pga_use
d_man_wa,
       SUM(CASE name WHEN 'total freeable PGA memory'             THEN value ELSE 0 END) tot_freeabl
e_pga_mem
  FROM dba_hist_pgastat
 WHERE name IN
('PGA memory freed back to OS'
,'aggregate PGA auto target'
,'aggregate PGA target parameter'
,'bytes processed'
,'extra bytes read/written'
,'global memory bound'
,'maximum PGA allocated'
,'maximum PGA used for auto workareas'
,'maximum PGA used for manual workareas'
,'total PGA allocated'
,'total PGA inuse'
,'total PGA used for auto workareas'
,'total PGA used for manual workareas'
,'total freeable PGA memory'
)
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 2
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
pgastat_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4b.455 */
       h.dbid,
       h.instance_number,
       s.startup_time,
       MIN(h.pga_mem_freed_to_os) pga_mem_freed_to_os,
       MIN(h.bytes_processed) bytes_processed,
       MIN(h.extra_bytes_rw) extra_bytes_rw
  FROM pgastat_denorm_1 h,
       dba_hist_snapshot s
 WHERE s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.snap_id BETWEEN 3473 AND 4962
   AND s.dbid = 2109323688
 GROUP BY
       h.dbid,
       h.instance_number,
       s.startup_time
),
pgastat_delta AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4b.455 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       (h1.pga_mem_freed_to_os - h0.pga_mem_freed_to_os) pga_mem_freed_to_os,
       h1.aggr_pga_auto_target,
       h1.aggr_pga_target_param,
       (h1.bytes_processed - h0.bytes_processed) bytes_processed,
       (h1.extra_bytes_rw - h0.extra_bytes_rw) extra_bytes_rw,
       h1.global_memory_bound,
       h1.max_pga_allocated,
       h1.max_pga_used_aut_wa,
       h1.max_pga_used_man_wa,
       h1.tot_pga_allocated,
       h1.tot_pga_inuse,
       h1.tot_pga_used_aut_wa,
       h1.tot_pga_used_man_wa,
       h1.tot_freeable_pga_mem
  FROM pgastat_denorm_1 h0,
       pgastat_denorm_1 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1,
       pgastat_denorm_2 min /* to see cumulative use (replace h0 with min on select list above) */
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
   AND min.dbid = s1.dbid
   AND min.instance_number = s1.instance_number
   AND min.startup_time = s1.startup_time
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       --ROUND(SUM(pga_mem_freed_to_os) / POWER(2,30), 3) pga_mem_freed_to_os,
       ROUND(SUM(aggr_pga_auto_target) / POWER(2,30), 3) aggr_pga_auto_target,
       ROUND(SUM(aggr_pga_target_param) / POWER(2,30), 3) aggr_pga_target_param,
       ROUND(SUM(bytes_processed) / POWER(2,40), 3) bytes_processed,
       ROUND(SUM(extra_bytes_rw) / POWER(2,40), 3) extra_bytes_rw,
       ROUND(SUM(global_memory_bound) / POWER(2,30), 3) global_memory_bound,
       ROUND(SUM(max_pga_allocated) / POWER(2,30), 3) max_pga_allocated,
       ROUND(SUM(max_pga_used_aut_wa) / POWER(2,30), 3) max_pga_used_aut_wa,
       ROUND(SUM(max_pga_used_man_wa) / POWER(2,30), 3) max_pga_used_man_wa,
       ROUND(SUM(tot_pga_allocated) / POWER(2,30), 3) tot_pga_allocated,
       ROUND(SUM(tot_pga_inuse) / POWER(2,30), 3) tot_pga_inuse,
       ROUND(SUM(tot_pga_used_aut_wa) / POWER(2,30), 3) tot_pga_used_aut_wa,
       ROUND(SUM(tot_pga_used_man_wa) / POWER(2,30), 3) tot_pga_used_man_wa,
       ROUND(SUM(tot_freeable_pga_mem) / POWER(2,30), 3) tot_freeable_pga_mem,
       0 dummy_14,
       0 dummy_15
  FROM pgastat_delta
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:57:10 4b.457
Elapsed Hours so far:    0.582
Elapsed Hours so far: .582

Elapsed: 00:00:00.00

11:57:10 4b "00567_edb360_323688_4b_457_pga_statistics_for_instance_2.html"
11:57:24 4b "00568_edb360_323688_4b_457_pga_statistics_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.590

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:57:39 4c "Reads to Buffer Cache"
11:57:39 Buffer Cache Statistics in MB for Cluster

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = instance_number
   AND stat_name IN (
   'physical read flash cache hits',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads prefetch warmup')
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(r_flash_cache_hits )) r_flash_cache_hits_bl,
       ROUND(MAX(r_cache )) r_cache_bl,
       ROUND(MAX(r_cache_prefetch )) r_cache_prefetch_bl,
       ROUND(MAX(r_prefetch_warmup )) r_prefetch_warmup_bl,
       ROUND(MAX(r_cache) * 8192 / POWER(2,20)) r_cache_mb,
       ROUND(MAX(r_flash_cache_hits) * 8192 / POWER(2,20)) r_flash_cache_hits_mb,
       ROUND(MAX(r_cache_prefetch) * 8192 / POWER(2,20)) r_cache_prefetch_mb,
       ROUND(MAX(r_prefetch_warmup) * 8192 / POWER(2,20))r_prefetch_warmup_mb,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec),3) r_flash_cache_hits_ps,
       ROUND(MAX(r_cache / elapsed_sec),3) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec),3) r_cache_prefetch_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec),3) r_prefetch_warmup_ps
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
),
bufch AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       snap_id,
       instance_number,
       ROUND(SUM(bytes) / POWER(2,20), 3) buffer_cache_mb,
       ROUND(SUM(bytes) / 8192) buffer_cache_bl
  FROM dba_hist_sgastat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND name = 'buffer_cache'
 GROUP BY
       snap_id,
       instance_number)
SELECT i.snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(buffer_cache_mb) buffer_cache_mb,
       SUM(r_cache_mb) r_cache_mb,
       SUM(r_flash_cache_hits_mb) r_flash_cache_hits_mb,
       SUM(r_cache_prefetch_mb) r_cache_prefetch_mb,
       SUM(r_prefetch_warmup_mb) r_prefetch_warmup_mb,
       0 dummy_6,
       0 dummy_7,
       0 dummy_8,
       0 dummy_9,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr i ,bufch b
 WHERE i.snap_id=b.snap_id
   AND i.instance_number = b.instance_number
 GROUP BY
       i.snap_id
 ORDER BY
       i.snap_id

11:57:39 4c.458
Elapsed Hours so far:    0.590
Elapsed Hours so far: .59

Elapsed: 00:00:00.00

11:57:39 4c "00569_edb360_323688_4c_458_buffer_cache_statistics_in_mb_for_cluster.html"
11:57:44 4c "00570_edb360_323688_4c_458_buffer_cache_statistics_in_mb_for_cluster_line_chart.html"
Elapsed Hours so far:    0.592

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:57:49 4c "Reads to Buffer Cache"
11:57:49 Buffer Cache Statistics in MB for Instance 1

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 1
   AND stat_name IN (
   'physical read flash cache hits',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads prefetch warmup')
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(r_flash_cache_hits )) r_flash_cache_hits_bl,
       ROUND(MAX(r_cache )) r_cache_bl,
       ROUND(MAX(r_cache_prefetch )) r_cache_prefetch_bl,
       ROUND(MAX(r_prefetch_warmup )) r_prefetch_warmup_bl,
       ROUND(MAX(r_cache) * 8192 / POWER(2,20)) r_cache_mb,
       ROUND(MAX(r_flash_cache_hits) * 8192 / POWER(2,20)) r_flash_cache_hits_mb,
       ROUND(MAX(r_cache_prefetch) * 8192 / POWER(2,20)) r_cache_prefetch_mb,
       ROUND(MAX(r_prefetch_warmup) * 8192 / POWER(2,20))r_prefetch_warmup_mb,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec),3) r_flash_cache_hits_ps,
       ROUND(MAX(r_cache / elapsed_sec),3) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec),3) r_cache_prefetch_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec),3) r_prefetch_warmup_ps
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
),
bufch AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       snap_id,
       instance_number,
       ROUND(SUM(bytes) / POWER(2,20), 3) buffer_cache_mb,
       ROUND(SUM(bytes) / 8192) buffer_cache_bl
  FROM dba_hist_sgastat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND name = 'buffer_cache'
 GROUP BY
       snap_id,
       instance_number)
SELECT i.snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(buffer_cache_mb) buffer_cache_mb,
       SUM(r_cache_mb) r_cache_mb,
       SUM(r_flash_cache_hits_mb) r_flash_cache_hits_mb,
       SUM(r_cache_prefetch_mb) r_cache_prefetch_mb,
       SUM(r_prefetch_warmup_mb) r_prefetch_warmup_mb,
       0 dummy_6,
       0 dummy_7,
       0 dummy_8,
       0 dummy_9,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr i ,bufch b
 WHERE i.snap_id=b.snap_id
   AND i.instance_number = b.instance_number
 GROUP BY
       i.snap_id
 ORDER BY
       i.snap_id

11:57:49 4c.459
Elapsed Hours so far:    0.592
Elapsed Hours so far: .593

Elapsed: 00:00:00.00

11:57:49 4c "00571_edb360_323688_4c_459_buffer_cache_statistics_in_mb_for_instance_1.html"
11:57:52 4c "00572_edb360_323688_4c_459_buffer_cache_statistics_in_mb_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.594

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:57:54 4c "Reads to Buffer Cache"
11:57:54 Buffer Cache Statistics in MB for Instance 2

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 2
   AND stat_name IN (
   'physical read flash cache hits',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads prefetch warmup')
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(r_flash_cache_hits )) r_flash_cache_hits_bl,
       ROUND(MAX(r_cache )) r_cache_bl,
       ROUND(MAX(r_cache_prefetch )) r_cache_prefetch_bl,
       ROUND(MAX(r_prefetch_warmup )) r_prefetch_warmup_bl,
       ROUND(MAX(r_cache) * 8192 / POWER(2,20)) r_cache_mb,
       ROUND(MAX(r_flash_cache_hits) * 8192 / POWER(2,20)) r_flash_cache_hits_mb,
       ROUND(MAX(r_cache_prefetch) * 8192 / POWER(2,20)) r_cache_prefetch_mb,
       ROUND(MAX(r_prefetch_warmup) * 8192 / POWER(2,20))r_prefetch_warmup_mb,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec),3) r_flash_cache_hits_ps,
       ROUND(MAX(r_cache / elapsed_sec),3) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec),3) r_cache_prefetch_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec),3) r_prefetch_warmup_ps
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
),
bufch AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       snap_id,
       instance_number,
       ROUND(SUM(bytes) / POWER(2,20), 3) buffer_cache_mb,
       ROUND(SUM(bytes) / 8192) buffer_cache_bl
  FROM dba_hist_sgastat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND name = 'buffer_cache'
 GROUP BY
       snap_id,
       instance_number)
SELECT i.snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(buffer_cache_mb) buffer_cache_mb,
       SUM(r_cache_mb) r_cache_mb,
       SUM(r_flash_cache_hits_mb) r_flash_cache_hits_mb,
       SUM(r_cache_prefetch_mb) r_cache_prefetch_mb,
       SUM(r_prefetch_warmup_mb) r_prefetch_warmup_mb,
       0 dummy_6,
       0 dummy_7,
       0 dummy_8,
       0 dummy_9,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr i ,bufch b
 WHERE i.snap_id=b.snap_id
   AND i.instance_number = b.instance_number
 GROUP BY
       i.snap_id
 ORDER BY
       i.snap_id

11:57:54 4c.460
Elapsed Hours so far:    0.594
Elapsed Hours so far: .594

Elapsed: 00:00:00.00

11:57:55 4c "00573_edb360_323688_4c_460_buffer_cache_statistics_in_mb_for_instance_2.html"
11:57:57 4c "00574_edb360_323688_4c_460_buffer_cache_statistics_in_mb_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.595

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:58:00 4c "Reads to Buffer Cache"
11:58:00 Buffer Cache Statistics in Blocks for Cluster

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = instance_number
   AND stat_name IN (
   'physical read flash cache hits',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads prefetch warmup')
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(r_flash_cache_hits )) r_flash_cache_hits_bl,
       ROUND(MAX(r_cache )) r_cache_bl,
       ROUND(MAX(r_cache_prefetch )) r_cache_prefetch_bl,
       ROUND(MAX(r_prefetch_warmup )) r_prefetch_warmup_bl,
       ROUND(MAX(r_cache) * 8192 / POWER(2,20)) r_cache_mb,
       ROUND(MAX(r_flash_cache_hits) * 8192 / POWER(2,20)) r_flash_cache_hits_mb,
       ROUND(MAX(r_cache_prefetch) * 8192 / POWER(2,20)) r_cache_prefetch_mb,
       ROUND(MAX(r_prefetch_warmup) * 8192 / POWER(2,20))r_prefetch_warmup_mb,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec),3) r_flash_cache_hits_ps,
       ROUND(MAX(r_cache / elapsed_sec),3) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec),3) r_cache_prefetch_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec),3) r_prefetch_warmup_ps
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
),
bufch AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       snap_id,
       instance_number,
       ROUND(SUM(bytes) / POWER(2,20), 3) buffer_cache_mb,
       ROUND(SUM(bytes) / 8192) buffer_cache_bl
  FROM dba_hist_sgastat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND name = 'buffer_cache'
 GROUP BY
       snap_id,
       instance_number)
SELECT i.snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(buffer_cache_bl) buffer_cache_bl,
       SUM(r_cache_bl) r_cache_bl,
       SUM(r_flash_cache_hits_bl) r_flash_cache_hits_bl,
       SUM(r_cache_prefetch_bl) r_cache_prefetch_bl,
       SUM(r_prefetch_warmup_bl) r_prefetch_warmup_bl,
       0 dummy_6,
       0 dummy_7,
       0 dummy_8,
       0 dummy_9,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr i ,bufch b
 WHERE i.snap_id=b.snap_id
   AND i.instance_number = b.instance_number
 GROUP BY
       i.snap_id
 ORDER BY
       i.snap_id

11:58:00 4c.461
Elapsed Hours so far:    0.595
Elapsed Hours so far: .595

Elapsed: 00:00:00.00

11:58:00 4c "00575_edb360_323688_4c_461_buffer_cache_statistics_in_blocks_for_cluster.html"
11:58:05 4c "00576_edb360_323688_4c_461_buffer_cache_statistics_in_blocks_for_cluster_line_chart.html"
Elapsed Hours so far:    0.598

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:58:10 4c "Reads to Buffer Cache"
11:58:10 Buffer Cache Statistics in Blocks for Instance 1

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 1
   AND stat_name IN (
   'physical read flash cache hits',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads prefetch warmup')
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(r_flash_cache_hits )) r_flash_cache_hits_bl,
       ROUND(MAX(r_cache )) r_cache_bl,
       ROUND(MAX(r_cache_prefetch )) r_cache_prefetch_bl,
       ROUND(MAX(r_prefetch_warmup )) r_prefetch_warmup_bl,
       ROUND(MAX(r_cache) * 8192 / POWER(2,20)) r_cache_mb,
       ROUND(MAX(r_flash_cache_hits) * 8192 / POWER(2,20)) r_flash_cache_hits_mb,
       ROUND(MAX(r_cache_prefetch) * 8192 / POWER(2,20)) r_cache_prefetch_mb,
       ROUND(MAX(r_prefetch_warmup) * 8192 / POWER(2,20))r_prefetch_warmup_mb,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec),3) r_flash_cache_hits_ps,
       ROUND(MAX(r_cache / elapsed_sec),3) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec),3) r_cache_prefetch_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec),3) r_prefetch_warmup_ps
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
),
bufch AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       snap_id,
       instance_number,
       ROUND(SUM(bytes) / POWER(2,20), 3) buffer_cache_mb,
       ROUND(SUM(bytes) / 8192) buffer_cache_bl
  FROM dba_hist_sgastat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND name = 'buffer_cache'
 GROUP BY
       snap_id,
       instance_number)
SELECT i.snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(buffer_cache_bl) buffer_cache_bl,
       SUM(r_cache_bl) r_cache_bl,
       SUM(r_flash_cache_hits_bl) r_flash_cache_hits_bl,
       SUM(r_cache_prefetch_bl) r_cache_prefetch_bl,
       SUM(r_prefetch_warmup_bl) r_prefetch_warmup_bl,
       0 dummy_6,
       0 dummy_7,
       0 dummy_8,
       0 dummy_9,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr i ,bufch b
 WHERE i.snap_id=b.snap_id
   AND i.instance_number = b.instance_number
 GROUP BY
       i.snap_id
 ORDER BY
       i.snap_id

11:58:10 4c.462
Elapsed Hours so far:    0.598
Elapsed Hours so far: .598

Elapsed: 00:00:00.00

11:58:10 4c "00577_edb360_323688_4c_462_buffer_cache_statistics_in_blocks_for_instance_1.html"
11:58:12 4c "00578_edb360_323688_4c_462_buffer_cache_statistics_in_blocks_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.600

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:58:15 4c "Reads to Buffer Cache"
11:58:15 Buffer Cache Statistics in Blocks for Instance 2

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 2
   AND stat_name IN (
   'physical read flash cache hits',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads prefetch warmup')
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(r_flash_cache_hits )) r_flash_cache_hits_bl,
       ROUND(MAX(r_cache )) r_cache_bl,
       ROUND(MAX(r_cache_prefetch )) r_cache_prefetch_bl,
       ROUND(MAX(r_prefetch_warmup )) r_prefetch_warmup_bl,
       ROUND(MAX(r_cache) * 8192 / POWER(2,20)) r_cache_mb,
       ROUND(MAX(r_flash_cache_hits) * 8192 / POWER(2,20)) r_flash_cache_hits_mb,
       ROUND(MAX(r_cache_prefetch) * 8192 / POWER(2,20)) r_cache_prefetch_mb,
       ROUND(MAX(r_prefetch_warmup) * 8192 / POWER(2,20))r_prefetch_warmup_mb,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec),3) r_flash_cache_hits_ps,
       ROUND(MAX(r_cache / elapsed_sec),3) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec),3) r_cache_prefetch_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec),3) r_prefetch_warmup_ps
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
),
bufch AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       snap_id,
       instance_number,
       ROUND(SUM(bytes) / POWER(2,20), 3) buffer_cache_mb,
       ROUND(SUM(bytes) / 8192) buffer_cache_bl
  FROM dba_hist_sgastat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND name = 'buffer_cache'
 GROUP BY
       snap_id,
       instance_number)
SELECT i.snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(buffer_cache_bl) buffer_cache_bl,
       SUM(r_cache_bl) r_cache_bl,
       SUM(r_flash_cache_hits_bl) r_flash_cache_hits_bl,
       SUM(r_cache_prefetch_bl) r_cache_prefetch_bl,
       SUM(r_prefetch_warmup_bl) r_prefetch_warmup_bl,
       0 dummy_6,
       0 dummy_7,
       0 dummy_8,
       0 dummy_9,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr i ,bufch b
 WHERE i.snap_id=b.snap_id
   AND i.instance_number = b.instance_number
 GROUP BY
       i.snap_id
 ORDER BY
       i.snap_id

11:58:15 4c.463
Elapsed Hours so far:    0.600
Elapsed Hours so far: .6

Elapsed: 00:00:00.01

11:58:15 4c "00579_edb360_323688_4c_463_buffer_cache_statistics_in_blocks_for_instance_2.html"
11:58:18 4c "00580_edb360_323688_4c_463_buffer_cache_statistics_in_blocks_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.601

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:58:20 4c "Reads to Buffer Cache"
11:58:20 Buffer Cache Statistics in Blocks per second for Cluster

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = instance_number
   AND stat_name IN (
   'physical read flash cache hits',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads prefetch warmup')
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(r_flash_cache_hits )) r_flash_cache_hits_bl,
       ROUND(MAX(r_cache )) r_cache_bl,
       ROUND(MAX(r_cache_prefetch )) r_cache_prefetch_bl,
       ROUND(MAX(r_prefetch_warmup )) r_prefetch_warmup_bl,
       ROUND(MAX(r_cache) * 8192 / POWER(2,20)) r_cache_mb,
       ROUND(MAX(r_flash_cache_hits) * 8192 / POWER(2,20)) r_flash_cache_hits_mb,
       ROUND(MAX(r_cache_prefetch) * 8192 / POWER(2,20)) r_cache_prefetch_mb,
       ROUND(MAX(r_prefetch_warmup) * 8192 / POWER(2,20))r_prefetch_warmup_mb,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec),3) r_flash_cache_hits_ps,
       ROUND(MAX(r_cache / elapsed_sec),3) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec),3) r_cache_prefetch_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec),3) r_prefetch_warmup_ps
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
),
bufch AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       snap_id,
       instance_number,
       ROUND(SUM(bytes) / POWER(2,20), 3) buffer_cache_mb,
       ROUND(SUM(bytes) / 8192) buffer_cache_bl
  FROM dba_hist_sgastat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND name = 'buffer_cache'
 GROUP BY
       snap_id,
       instance_number)
SELECT i.snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(r_cache_ps)) r_cache_ps,
       ROUND(SUM(r_flash_cache_hits_ps)) r_flash_cache_hits_ps,
       ROUND(SUM(r_cache_prefetch_ps)) r_cache_prefetch_ps,
       ROUND(SUM(r_prefetch_warmup_ps)) r_prefetch_warmup_ps,
       0 dummy_5,
       0 dummy_6,
       0 dummy_7,
       0 dummy_8,
       0 dummy_9,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr i ,bufch b
 WHERE i.snap_id=b.snap_id
   AND i.instance_number = b.instance_number
 GROUP BY
       i.snap_id
 ORDER BY
       i.snap_id

11:58:20 4c.464
Elapsed Hours so far:    0.601
Elapsed Hours so far: .601

Elapsed: 00:00:00.00

11:58:20 4c "00581_edb360_323688_4c_464_buffer_cache_statistics_in_blocks_per_second_for_cluster.html"
11:58:25 4c "00582_edb360_323688_4c_464_buffer_cache_statistics_in_blocks_per_second_for_cluster_line_chart.html"
Elapsed Hours so far:    0.604

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:58:30 4c "Reads to Buffer Cache"
11:58:30 Buffer Cache Statistics in Blocks per second for Instance 1

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 1
   AND stat_name IN (
   'physical read flash cache hits',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads prefetch warmup')
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(r_flash_cache_hits )) r_flash_cache_hits_bl,
       ROUND(MAX(r_cache )) r_cache_bl,
       ROUND(MAX(r_cache_prefetch )) r_cache_prefetch_bl,
       ROUND(MAX(r_prefetch_warmup )) r_prefetch_warmup_bl,
       ROUND(MAX(r_cache) * 8192 / POWER(2,20)) r_cache_mb,
       ROUND(MAX(r_flash_cache_hits) * 8192 / POWER(2,20)) r_flash_cache_hits_mb,
       ROUND(MAX(r_cache_prefetch) * 8192 / POWER(2,20)) r_cache_prefetch_mb,
       ROUND(MAX(r_prefetch_warmup) * 8192 / POWER(2,20))r_prefetch_warmup_mb,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec),3) r_flash_cache_hits_ps,
       ROUND(MAX(r_cache / elapsed_sec),3) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec),3) r_cache_prefetch_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec),3) r_prefetch_warmup_ps
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
),
bufch AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       snap_id,
       instance_number,
       ROUND(SUM(bytes) / POWER(2,20), 3) buffer_cache_mb,
       ROUND(SUM(bytes) / 8192) buffer_cache_bl
  FROM dba_hist_sgastat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND name = 'buffer_cache'
 GROUP BY
       snap_id,
       instance_number)
SELECT i.snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(r_cache_ps)) r_cache_ps,
       ROUND(SUM(r_flash_cache_hits_ps)) r_flash_cache_hits_ps,
       ROUND(SUM(r_cache_prefetch_ps)) r_cache_prefetch_ps,
       ROUND(SUM(r_prefetch_warmup_ps)) r_prefetch_warmup_ps,
       0 dummy_5,
       0 dummy_6,
       0 dummy_7,
       0 dummy_8,
       0 dummy_9,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr i ,bufch b
 WHERE i.snap_id=b.snap_id
   AND i.instance_number = b.instance_number
 GROUP BY
       i.snap_id
 ORDER BY
       i.snap_id

11:58:30 4c.465
Elapsed Hours so far:    0.604
Elapsed Hours so far: .604

Elapsed: 00:00:00.00

11:58:30 4c "00583_edb360_323688_4c_465_buffer_cache_statistics_in_blocks_per_second_for_instance_1.html"
11:58:33 4c "00584_edb360_323688_4c_465_buffer_cache_statistics_in_blocks_per_second_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.605

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:58:36 4c "Reads to Buffer Cache"
11:58:36 Buffer Cache Statistics in Blocks per second for Instance 2

WITH
sysstat_io AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       instance_number,
       snap_id,
       SUM(CASE WHEN stat_name = 'physical read flash cache hits' THEN value ELSE 0 END) r_flash_cac
he_hits,
       SUM(CASE WHEN stat_name = 'physical reads cache' THEN value ELSE 0 END) r_cache,
       SUM(CASE WHEN stat_name = 'physical reads cache prefetch' THEN value ELSE 0 END) r_cache_pref
etch,
       SUM(CASE WHEN stat_name = 'physical reads prefetch warmup' THEN value ELSE 0 END) r_prefetch_
warmup
  FROM dba_hist_sysstat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 2
   AND stat_name IN (
   'physical read flash cache hits',
   'physical reads cache',
   'physical reads cache prefetch',
   'physical reads prefetch warmup')
 GROUP BY
       instance_number,
       snap_id
),
io_per_inst_and_snap_id AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       s1.snap_id,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       (h1.r_flash_cache_hits - h0.r_flash_cache_hits) r_flash_cache_hits,
       (h1.r_cache - h0.r_cache) r_cache,
       (h1.r_cache_prefetch - h0.r_cache_prefetch) r_cache_prefetch,
       (h1.r_prefetch_warmup - h0.r_prefetch_warmup) r_prefetch_warmup,
       --(h1.reads - h0.reads) - (h1.r_direct - h0.r_direct) - (h1.r_cache - h0.r_cache) r_buffered_
multi_block_req,
       (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 elapsed_s
ec
  FROM sysstat_io h0,
       dba_hist_snapshot s0,
       sysstat_io h1,
       dba_hist_snapshot s1
 WHERE s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s0.snap_id = h0.snap_id
   AND s0.instance_number = h0.instance_number
   AND h1.instance_number = h0.instance_number
   AND h1.snap_id = h0.snap_id + 1
   AND s1.snap_id = h1.snap_id
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.startup_time = s0.startup_time
   AND (CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 86400 > 60 -- i
gnore snaps too close
),
io_per_inst_and_hr AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       snap_id,
       instance_number,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       ROUND(MAX(r_flash_cache_hits )) r_flash_cache_hits_bl,
       ROUND(MAX(r_cache )) r_cache_bl,
       ROUND(MAX(r_cache_prefetch )) r_cache_prefetch_bl,
       ROUND(MAX(r_prefetch_warmup )) r_prefetch_warmup_bl,
       ROUND(MAX(r_cache) * 8192 / POWER(2,20)) r_cache_mb,
       ROUND(MAX(r_flash_cache_hits) * 8192 / POWER(2,20)) r_flash_cache_hits_mb,
       ROUND(MAX(r_cache_prefetch) * 8192 / POWER(2,20)) r_cache_prefetch_mb,
       ROUND(MAX(r_prefetch_warmup) * 8192 / POWER(2,20))r_prefetch_warmup_mb,
       ROUND(MAX(r_flash_cache_hits / elapsed_sec),3) r_flash_cache_hits_ps,
       ROUND(MAX(r_cache / elapsed_sec),3) r_cache_ps,
       ROUND(MAX(r_cache_prefetch / elapsed_sec),3) r_cache_prefetch_ps,
       ROUND(MAX(r_prefetch_warmup / elapsed_sec),3) r_prefetch_warmup_ps
       --ROUND(MAX(r_buffered_multi_block_req / elapsed_sec)) r_buffered_multi_block_iops,
  FROM io_per_inst_and_snap_id
 GROUP BY
       snap_id,
       instance_number
),
bufch AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4c.458 */
       snap_id,
       instance_number,
       ROUND(SUM(bytes) / POWER(2,20), 3) buffer_cache_mb,
       ROUND(SUM(bytes) / 8192) buffer_cache_bl
  FROM dba_hist_sgastat
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND name = 'buffer_cache'
 GROUP BY
       snap_id,
       instance_number)
SELECT i.snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(r_cache_ps)) r_cache_ps,
       ROUND(SUM(r_flash_cache_hits_ps)) r_flash_cache_hits_ps,
       ROUND(SUM(r_cache_prefetch_ps)) r_cache_prefetch_ps,
       ROUND(SUM(r_prefetch_warmup_ps)) r_prefetch_warmup_ps,
       0 dummy_5,
       0 dummy_6,
       0 dummy_7,
       0 dummy_8,
       0 dummy_9,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM io_per_inst_and_hr i ,bufch b
 WHERE i.snap_id=b.snap_id
   AND i.instance_number = b.instance_number
 GROUP BY
       i.snap_id
 ORDER BY
       i.snap_id

11:58:36 4c.466
Elapsed Hours so far:    0.605
Elapsed Hours so far: .605

Elapsed: 00:00:00.01

11:58:36 4c "00585_edb360_323688_4c_466_buffer_cache_statistics_in_blocks_per_second_for_instance_2.html"
11:58:39 4c "00586_edb360_323688_4c_466_buffer_cache_statistics_in_blocks_per_second_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.608

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:58:44 4d "System Time Model"
11:58:44 System Time Model (STM) per Cluster

WITH
sys_time_model_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4d.467 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'background elapsed time' THEN value / 1e6 ELSE 0 END) background_tim
e,
       SUM(CASE stat_name WHEN 'background cpu time'  THEN value / 1e6 ELSE 0 END) background_cpu,
       SUM(CASE stat_name WHEN 'RMAN cpu time (backup/restore)' THEN value / 1e6 ELSE 0 END) rman_cp
u,
       SUM(CASE stat_name WHEN 'DB time' THEN value / 1e6 ELSE 0 END) db_time,
       SUM(CASE stat_name WHEN 'DB CPU' THEN value / 1e6 ELSE 0 END) db_cpu,
       SUM(CASE stat_name WHEN 'connection management call elapsed time' THEN value / 1e6 ELSE 0 END
) connection_management_call,
       SUM(CASE stat_name WHEN 'sequence load elapsed time' THEN value / 1e6 ELSE 0 END) sequence_lo
ad,
       SUM(CASE stat_name WHEN 'sql execute elapsed time' THEN value / 1e6 ELSE 0 END) sql_execute,
       SUM(CASE stat_name WHEN 'parse time elapsed' THEN value / 1e6 ELSE 0 END) parse_time,
       SUM(CASE stat_name WHEN 'hard parse elapsed time' THEN value / 1e6 ELSE 0 END) hard_parse,
       SUM(CASE stat_name WHEN 'PL/SQL execution elapsed time' THEN value / 1e6 ELSE 0 END) plsql_ex
ecution,
       SUM(CASE stat_name WHEN 'inbound PL/SQL rpc elapsed time' THEN value / 1e6 ELSE 0 END) inboun
d_plsql_rpc,
       SUM(CASE stat_name WHEN 'PL/SQL compilation elapsed time' THEN value / 1e6 ELSE 0 END) plsql_
compilation,
       SUM(CASE stat_name WHEN 'Java execution elapsed time' THEN value / 1e6 ELSE 0 END) java_execu
tion,
       SUM(CASE stat_name WHEN 'repeated bind elapsed time' THEN value / 1e6 ELSE 0 END) repeated_bi
nd
  FROM dba_hist_sys_time_model
 WHERE stat_name IN (
'background elapsed time',
'background cpu time',
'RMAN cpu time (backup/restore)',
'DB time',
'DB CPU',
'connection management call elapsed time',
'sequence load elapsed time',
'sql execute elapsed time',
'parse time elapsed',
'hard parse elapsed time',
'PL/SQL execution elapsed time',
'inbound PL/SQL rpc elapsed time',
'PL/SQL compilation elapsed time',
'Java execution elapsed time',
'repeated bind elapsed time'
)
   AND 'Y' = 'Y'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = instance_number
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sys_time_model_denorm_3 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4d.467 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       (h1.background_time - h0.background_time) background_time,
       (h1.background_cpu - h0.background_cpu) background_cpu,
       (h1.rman_cpu - h0.rman_cpu) rman_cpu,
       (h1.db_time - h0.db_time) db_time,
       (h1.db_cpu - h0.db_cpu) db_cpu,
       (h1.connection_management_call - h0.connection_management_call) connection_management_call,
       (h1.sequence_load - h0.sequence_load) sequence_load,
       (h1.sql_execute - h0.sql_execute) sql_execute,
       (h1.parse_time - h0.parse_time) parse_time,
       (h1.hard_parse - h0.hard_parse) hard_parse,
       (h1.plsql_execution - h0.plsql_execution) plsql_execution,
       (h1.inbound_plsql_rpc - h0.inbound_plsql_rpc) inbound_plsql_rpc,
       (h1.plsql_compilation - h0.plsql_compilation) plsql_compilation,
       (h1.java_execution - h0.java_execution) java_execution,
       (h1.repeated_bind - h0.repeated_bind) repeated_bind
  FROM sys_time_model_denorm_2 h0,
       sys_time_model_denorm_2 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.dbid = s0.dbid
   AND s1.instance_number = s0.instance_number
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
   AND (h1.db_time - h0.db_time) > 0 /* eliminates occasional negative spikes */
),
sys_time_model_denorm_4 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4d.467 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(background_time / interval_secs), 3) background_time,
       ROUND(SUM(background_cpu / interval_secs), 3) background_cpu,
       ROUND(SUM(rman_cpu / interval_secs), 3) rman_cpu,
       ROUND(SUM(db_time / interval_secs), 3) db_time,
       ROUND(SUM(db_cpu / interval_secs), 3) db_cpu,
       ROUND(SUM(connection_management_call / interval_secs), 3) connection_management_call,
       ROUND(SUM(sequence_load / interval_secs), 3) sequence_load,
       ROUND(SUM(sql_execute / interval_secs), 3) sql_execute,
       ROUND(SUM(parse_time / interval_secs), 3) parse_time,
       ROUND(SUM(hard_parse / interval_secs), 3) hard_parse,
       ROUND(SUM(plsql_execution / interval_secs), 3) plsql_execution,
       ROUND(SUM(inbound_plsql_rpc / interval_secs), 3) inbound_plsql_rpc,
       ROUND(SUM(plsql_compilation / interval_secs), 3) plsql_compilation,
       ROUND(SUM(java_execution / interval_secs), 3) java_execution,
       ROUND(SUM(repeated_bind / interval_secs), 3) repeated_bind
  FROM sys_time_model_denorm_3
 GROUP BY
       snap_id
)
SELECT snap_id,
       begin_time,
       end_time,
       background_time,
       background_cpu,
       rman_cpu,
       db_time,
       db_cpu,
       connection_management_call,
       sequence_load,
       sql_execute,
       parse_time,
       hard_parse,
       plsql_execution,
       inbound_plsql_rpc,
       plsql_compilation,
       java_execution,
       repeated_bind
  FROM sys_time_model_denorm_4
 ORDER BY
       snap_id

11:58:44 4d.467
Elapsed Hours so far:    0.608
Elapsed Hours so far: .608

Elapsed: 00:00:00.00

11:58:44 4d "00587_edb360_323688_4d_467_system_time_model_stm_per_cluster.html"
11:58:51 4d "00588_edb360_323688_4d_467_system_time_model_stm_per_cluster_line_chart.html"
Elapsed Hours so far:    0.612

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:58:59 4d "System Time Model"
11:58:59 System Time Model (STM) for Instance 1

WITH
sys_time_model_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4d.467 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'background elapsed time' THEN value / 1e6 ELSE 0 END) background_tim
e,
       SUM(CASE stat_name WHEN 'background cpu time'  THEN value / 1e6 ELSE 0 END) background_cpu,
       SUM(CASE stat_name WHEN 'RMAN cpu time (backup/restore)' THEN value / 1e6 ELSE 0 END) rman_cp
u,
       SUM(CASE stat_name WHEN 'DB time' THEN value / 1e6 ELSE 0 END) db_time,
       SUM(CASE stat_name WHEN 'DB CPU' THEN value / 1e6 ELSE 0 END) db_cpu,
       SUM(CASE stat_name WHEN 'connection management call elapsed time' THEN value / 1e6 ELSE 0 END
) connection_management_call,
       SUM(CASE stat_name WHEN 'sequence load elapsed time' THEN value / 1e6 ELSE 0 END) sequence_lo
ad,
       SUM(CASE stat_name WHEN 'sql execute elapsed time' THEN value / 1e6 ELSE 0 END) sql_execute,
       SUM(CASE stat_name WHEN 'parse time elapsed' THEN value / 1e6 ELSE 0 END) parse_time,
       SUM(CASE stat_name WHEN 'hard parse elapsed time' THEN value / 1e6 ELSE 0 END) hard_parse,
       SUM(CASE stat_name WHEN 'PL/SQL execution elapsed time' THEN value / 1e6 ELSE 0 END) plsql_ex
ecution,
       SUM(CASE stat_name WHEN 'inbound PL/SQL rpc elapsed time' THEN value / 1e6 ELSE 0 END) inboun
d_plsql_rpc,
       SUM(CASE stat_name WHEN 'PL/SQL compilation elapsed time' THEN value / 1e6 ELSE 0 END) plsql_
compilation,
       SUM(CASE stat_name WHEN 'Java execution elapsed time' THEN value / 1e6 ELSE 0 END) java_execu
tion,
       SUM(CASE stat_name WHEN 'repeated bind elapsed time' THEN value / 1e6 ELSE 0 END) repeated_bi
nd
  FROM dba_hist_sys_time_model
 WHERE stat_name IN (
'background elapsed time',
'background cpu time',
'RMAN cpu time (backup/restore)',
'DB time',
'DB CPU',
'connection management call elapsed time',
'sequence load elapsed time',
'sql execute elapsed time',
'parse time elapsed',
'hard parse elapsed time',
'PL/SQL execution elapsed time',
'inbound PL/SQL rpc elapsed time',
'PL/SQL compilation elapsed time',
'Java execution elapsed time',
'repeated bind elapsed time'
)
   AND 'Y' = 'Y'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 1
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sys_time_model_denorm_3 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4d.467 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       (h1.background_time - h0.background_time) background_time,
       (h1.background_cpu - h0.background_cpu) background_cpu,
       (h1.rman_cpu - h0.rman_cpu) rman_cpu,
       (h1.db_time - h0.db_time) db_time,
       (h1.db_cpu - h0.db_cpu) db_cpu,
       (h1.connection_management_call - h0.connection_management_call) connection_management_call,
       (h1.sequence_load - h0.sequence_load) sequence_load,
       (h1.sql_execute - h0.sql_execute) sql_execute,
       (h1.parse_time - h0.parse_time) parse_time,
       (h1.hard_parse - h0.hard_parse) hard_parse,
       (h1.plsql_execution - h0.plsql_execution) plsql_execution,
       (h1.inbound_plsql_rpc - h0.inbound_plsql_rpc) inbound_plsql_rpc,
       (h1.plsql_compilation - h0.plsql_compilation) plsql_compilation,
       (h1.java_execution - h0.java_execution) java_execution,
       (h1.repeated_bind - h0.repeated_bind) repeated_bind
  FROM sys_time_model_denorm_2 h0,
       sys_time_model_denorm_2 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.dbid = s0.dbid
   AND s1.instance_number = s0.instance_number
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
   AND (h1.db_time - h0.db_time) > 0 /* eliminates occasional negative spikes */
),
sys_time_model_denorm_4 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4d.467 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(background_time / interval_secs), 3) background_time,
       ROUND(SUM(background_cpu / interval_secs), 3) background_cpu,
       ROUND(SUM(rman_cpu / interval_secs), 3) rman_cpu,
       ROUND(SUM(db_time / interval_secs), 3) db_time,
       ROUND(SUM(db_cpu / interval_secs), 3) db_cpu,
       ROUND(SUM(connection_management_call / interval_secs), 3) connection_management_call,
       ROUND(SUM(sequence_load / interval_secs), 3) sequence_load,
       ROUND(SUM(sql_execute / interval_secs), 3) sql_execute,
       ROUND(SUM(parse_time / interval_secs), 3) parse_time,
       ROUND(SUM(hard_parse / interval_secs), 3) hard_parse,
       ROUND(SUM(plsql_execution / interval_secs), 3) plsql_execution,
       ROUND(SUM(inbound_plsql_rpc / interval_secs), 3) inbound_plsql_rpc,
       ROUND(SUM(plsql_compilation / interval_secs), 3) plsql_compilation,
       ROUND(SUM(java_execution / interval_secs), 3) java_execution,
       ROUND(SUM(repeated_bind / interval_secs), 3) repeated_bind
  FROM sys_time_model_denorm_3
 GROUP BY
       snap_id
)
SELECT snap_id,
       begin_time,
       end_time,
       background_time,
       background_cpu,
       rman_cpu,
       db_time,
       db_cpu,
       connection_management_call,
       sequence_load,
       sql_execute,
       parse_time,
       hard_parse,
       plsql_execution,
       inbound_plsql_rpc,
       plsql_compilation,
       java_execution,
       repeated_bind
  FROM sys_time_model_denorm_4
 ORDER BY
       snap_id

11:58:59 4d.468
Elapsed Hours so far:    0.612
Elapsed Hours so far: .612

Elapsed: 00:00:00.01

11:58:59 4d "00589_edb360_323688_4d_468_system_time_model_stm_for_instance_1.html"
11:59:03 4d "00590_edb360_323688_4d_468_system_time_model_stm_for_instance_1_line_chart.html"
Elapsed Hours so far:    0.614

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:59:07 4d "System Time Model"
11:59:07 System Time Model (STM) for Instance 2

WITH
sys_time_model_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4d.467 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'background elapsed time' THEN value / 1e6 ELSE 0 END) background_tim
e,
       SUM(CASE stat_name WHEN 'background cpu time'  THEN value / 1e6 ELSE 0 END) background_cpu,
       SUM(CASE stat_name WHEN 'RMAN cpu time (backup/restore)' THEN value / 1e6 ELSE 0 END) rman_cp
u,
       SUM(CASE stat_name WHEN 'DB time' THEN value / 1e6 ELSE 0 END) db_time,
       SUM(CASE stat_name WHEN 'DB CPU' THEN value / 1e6 ELSE 0 END) db_cpu,
       SUM(CASE stat_name WHEN 'connection management call elapsed time' THEN value / 1e6 ELSE 0 END
) connection_management_call,
       SUM(CASE stat_name WHEN 'sequence load elapsed time' THEN value / 1e6 ELSE 0 END) sequence_lo
ad,
       SUM(CASE stat_name WHEN 'sql execute elapsed time' THEN value / 1e6 ELSE 0 END) sql_execute,
       SUM(CASE stat_name WHEN 'parse time elapsed' THEN value / 1e6 ELSE 0 END) parse_time,
       SUM(CASE stat_name WHEN 'hard parse elapsed time' THEN value / 1e6 ELSE 0 END) hard_parse,
       SUM(CASE stat_name WHEN 'PL/SQL execution elapsed time' THEN value / 1e6 ELSE 0 END) plsql_ex
ecution,
       SUM(CASE stat_name WHEN 'inbound PL/SQL rpc elapsed time' THEN value / 1e6 ELSE 0 END) inboun
d_plsql_rpc,
       SUM(CASE stat_name WHEN 'PL/SQL compilation elapsed time' THEN value / 1e6 ELSE 0 END) plsql_
compilation,
       SUM(CASE stat_name WHEN 'Java execution elapsed time' THEN value / 1e6 ELSE 0 END) java_execu
tion,
       SUM(CASE stat_name WHEN 'repeated bind elapsed time' THEN value / 1e6 ELSE 0 END) repeated_bi
nd
  FROM dba_hist_sys_time_model
 WHERE stat_name IN (
'background elapsed time',
'background cpu time',
'RMAN cpu time (backup/restore)',
'DB time',
'DB CPU',
'connection management call elapsed time',
'sequence load elapsed time',
'sql execute elapsed time',
'parse time elapsed',
'hard parse elapsed time',
'PL/SQL execution elapsed time',
'inbound PL/SQL rpc elapsed time',
'PL/SQL compilation elapsed time',
'Java execution elapsed time',
'repeated bind elapsed time'
)
   AND 'Y' = 'Y'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 2
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sys_time_model_denorm_3 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4d.467 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       (h1.background_time - h0.background_time) background_time,
       (h1.background_cpu - h0.background_cpu) background_cpu,
       (h1.rman_cpu - h0.rman_cpu) rman_cpu,
       (h1.db_time - h0.db_time) db_time,
       (h1.db_cpu - h0.db_cpu) db_cpu,
       (h1.connection_management_call - h0.connection_management_call) connection_management_call,
       (h1.sequence_load - h0.sequence_load) sequence_load,
       (h1.sql_execute - h0.sql_execute) sql_execute,
       (h1.parse_time - h0.parse_time) parse_time,
       (h1.hard_parse - h0.hard_parse) hard_parse,
       (h1.plsql_execution - h0.plsql_execution) plsql_execution,
       (h1.inbound_plsql_rpc - h0.inbound_plsql_rpc) inbound_plsql_rpc,
       (h1.plsql_compilation - h0.plsql_compilation) plsql_compilation,
       (h1.java_execution - h0.java_execution) java_execution,
       (h1.repeated_bind - h0.repeated_bind) repeated_bind
  FROM sys_time_model_denorm_2 h0,
       sys_time_model_denorm_2 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.dbid = s0.dbid
   AND s1.instance_number = s0.instance_number
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
   AND (h1.db_time - h0.db_time) > 0 /* eliminates occasional negative spikes */
),
sys_time_model_denorm_4 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4d.467 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(background_time / interval_secs), 3) background_time,
       ROUND(SUM(background_cpu / interval_secs), 3) background_cpu,
       ROUND(SUM(rman_cpu / interval_secs), 3) rman_cpu,
       ROUND(SUM(db_time / interval_secs), 3) db_time,
       ROUND(SUM(db_cpu / interval_secs), 3) db_cpu,
       ROUND(SUM(connection_management_call / interval_secs), 3) connection_management_call,
       ROUND(SUM(sequence_load / interval_secs), 3) sequence_load,
       ROUND(SUM(sql_execute / interval_secs), 3) sql_execute,
       ROUND(SUM(parse_time / interval_secs), 3) parse_time,
       ROUND(SUM(hard_parse / interval_secs), 3) hard_parse,
       ROUND(SUM(plsql_execution / interval_secs), 3) plsql_execution,
       ROUND(SUM(inbound_plsql_rpc / interval_secs), 3) inbound_plsql_rpc,
       ROUND(SUM(plsql_compilation / interval_secs), 3) plsql_compilation,
       ROUND(SUM(java_execution / interval_secs), 3) java_execution,
       ROUND(SUM(repeated_bind / interval_secs), 3) repeated_bind
  FROM sys_time_model_denorm_3
 GROUP BY
       snap_id
)
SELECT snap_id,
       begin_time,
       end_time,
       background_time,
       background_cpu,
       rman_cpu,
       db_time,
       db_cpu,
       connection_management_call,
       sequence_load,
       sql_execute,
       parse_time,
       hard_parse,
       plsql_execution,
       inbound_plsql_rpc,
       plsql_compilation,
       java_execution,
       repeated_bind
  FROM sys_time_model_denorm_4
 ORDER BY
       snap_id

11:59:07 4d.469
Elapsed Hours so far:    0.614
Elapsed Hours so far: .614

Elapsed: 00:00:00.00

11:59:07 4d "00591_edb360_323688_4d_469_system_time_model_stm_for_instance_2.html"
11:59:11 4d "00592_edb360_323688_4d_469_system_time_model_stm_for_instance_2_line_chart.html"
Elapsed Hours so far:    0.617

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:59:17 4e "System Time Model Components"
11:59:17 STM: background elapsed time per Instance

WITH
sys_time_model_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'background elapsed time' THEN value / 1e6 ELSE 0 END) background_tim
e,
       SUM(CASE stat_name WHEN 'background cpu time'  THEN value / 1e6 ELSE 0 END) background_cpu,
       SUM(CASE stat_name WHEN 'RMAN cpu time (backup/restore)' THEN value / 1e6 ELSE 0 END) rman_cp
u,
       SUM(CASE stat_name WHEN 'DB time' THEN value / 1e6 ELSE 0 END) db_time,
       SUM(CASE stat_name WHEN 'DB CPU' THEN value / 1e6 ELSE 0 END) db_cpu,
       SUM(CASE stat_name WHEN 'connection management call elapsed time' THEN value / 1e6 ELSE 0 END
) connection_management_call,
       SUM(CASE stat_name WHEN 'sequence load elapsed time' THEN value / 1e6 ELSE 0 END) sequence_lo
ad,
       SUM(CASE stat_name WHEN 'sql execute elapsed time' THEN value / 1e6 ELSE 0 END) sql_execute,
       SUM(CASE stat_name WHEN 'parse time elapsed' THEN value / 1e6 ELSE 0 END) parse_time,
       SUM(CASE stat_name WHEN 'hard parse elapsed time' THEN value / 1e6 ELSE 0 END) hard_parse,
       SUM(CASE stat_name WHEN 'PL/SQL execution elapsed time' THEN value / 1e6 ELSE 0 END) plsql_ex
ecution,
       SUM(CASE stat_name WHEN 'inbound PL/SQL rpc elapsed time' THEN value / 1e6 ELSE 0 END) inboun
d_plsql_rpc,
       SUM(CASE stat_name WHEN 'PL/SQL compilation elapsed time' THEN value / 1e6 ELSE 0 END) plsql_
compilation,
       SUM(CASE stat_name WHEN 'Java execution elapsed time' THEN value / 1e6 ELSE 0 END) java_execu
tion,
       SUM(CASE stat_name WHEN 'repeated bind elapsed time' THEN value / 1e6 ELSE 0 END) repeated_bi
nd
  FROM dba_hist_sys_time_model
 WHERE stat_name IN (
'background elapsed time',
'background cpu time',
'RMAN cpu time (backup/restore)',
'DB time',
'DB CPU',
'connection management call elapsed time',
'sequence load elapsed time',
'sql execute elapsed time',
'parse time elapsed',
'hard parse elapsed time',
'PL/SQL execution elapsed time',
'inbound PL/SQL rpc elapsed time',
'PL/SQL compilation elapsed time',
'Java execution elapsed time',
'repeated bind elapsed time'
)
   AND 'Y' = 'Y'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sys_time_model_denorm_3 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       (h1.background_time - h0.background_time) background_time,
       (h1.background_cpu - h0.background_cpu) background_cpu,
       (h1.rman_cpu - h0.rman_cpu) rman_cpu,
       (h1.db_time - h0.db_time) db_time,
       (h1.db_cpu - h0.db_cpu) db_cpu,
       (h1.connection_management_call - h0.connection_management_call) connection_management_call,
       (h1.sequence_load - h0.sequence_load) sequence_load,
       (h1.sql_execute - h0.sql_execute) sql_execute,
       (h1.parse_time - h0.parse_time) parse_time,
       (h1.hard_parse - h0.hard_parse) hard_parse,
       (h1.plsql_execution - h0.plsql_execution) plsql_execution,
       (h1.inbound_plsql_rpc - h0.inbound_plsql_rpc) inbound_plsql_rpc,
       (h1.plsql_compilation - h0.plsql_compilation) plsql_compilation,
       (h1.java_execution - h0.java_execution) java_execution,
       (h1.repeated_bind - h0.repeated_bind) repeated_bind
  FROM sys_time_model_denorm_2 h0,
       sys_time_model_denorm_2 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.dbid = s0.dbid
   AND s1.instance_number = s0.instance_number
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
),
sys_time_model_denorm_4 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
       (background_time / interval_secs) background_time,
       (background_cpu / interval_secs) background_cpu,
       (rman_cpu / interval_secs) rman_cpu,
       (db_time / interval_secs) db_time,
       (db_cpu / interval_secs) db_cpu,
       (connection_management_call / interval_secs) connection_management_call,
       (sequence_load / interval_secs) sequence_load,
       (sql_execute / interval_secs) sql_execute,
       (parse_time / interval_secs) parse_time,
       (hard_parse / interval_secs) hard_parse,
       (plsql_execution / interval_secs) plsql_execution,
       (inbound_plsql_rpc / interval_secs) inbound_plsql_rpc,
       (plsql_compilation / interval_secs) plsql_compilation,
       (java_execution / interval_secs) java_execution,
       (repeated_bind / interval_secs) repeated_bind
  FROM sys_time_model_denorm_3
),
sys_time_model_denorm_5 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       begin_time,
       end_time,
       CASE instance_number WHEN 1 THEN background_time ELSE 0 END inst_01,
       CASE instance_number WHEN 2 THEN background_time ELSE 0 END inst_02,
       CASE instance_number WHEN 3 THEN background_time ELSE 0 END inst_03,
       CASE instance_number WHEN 4 THEN background_time ELSE 0 END inst_04,
       CASE instance_number WHEN 5 THEN background_time ELSE 0 END inst_05,
       CASE instance_number WHEN 6 THEN background_time ELSE 0 END inst_06,
       CASE instance_number WHEN 7 THEN background_time ELSE 0 END inst_07,
       CASE instance_number WHEN 8 THEN background_time ELSE 0 END inst_08
  FROM sys_time_model_denorm_4
)
SELECT snap_id,
       MIN(begin_time) begin_time,
       MIN(end_time) end_time,
       ROUND(SUM(inst_01), 3) inst_01,
       ROUND(SUM(inst_02), 3) inst_02,
       ROUND(SUM(inst_03), 3) inst_03,
       ROUND(SUM(inst_04), 3) inst_04,
       ROUND(SUM(inst_05), 3) inst_05,
       ROUND(SUM(inst_06), 3) inst_06,
       ROUND(SUM(inst_07), 3) inst_07,
       ROUND(SUM(inst_08), 3) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sys_time_model_denorm_5
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:59:17 4e.470
Elapsed Hours so far:    0.617
Elapsed Hours so far: .617

Elapsed: 00:00:00.00

11:59:17 4e "00593_edb360_323688_4e_470_stm_background_elapsed_time_per_instance.html"
11:59:25 4e "00594_edb360_323688_4e_470_stm_background_elapsed_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.621

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:59:33 4e "System Time Model Components"
11:59:33 STM: background cpu time per Instance

WITH
sys_time_model_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'background elapsed time' THEN value / 1e6 ELSE 0 END) background_tim
e,
       SUM(CASE stat_name WHEN 'background cpu time'  THEN value / 1e6 ELSE 0 END) background_cpu,
       SUM(CASE stat_name WHEN 'RMAN cpu time (backup/restore)' THEN value / 1e6 ELSE 0 END) rman_cp
u,
       SUM(CASE stat_name WHEN 'DB time' THEN value / 1e6 ELSE 0 END) db_time,
       SUM(CASE stat_name WHEN 'DB CPU' THEN value / 1e6 ELSE 0 END) db_cpu,
       SUM(CASE stat_name WHEN 'connection management call elapsed time' THEN value / 1e6 ELSE 0 END
) connection_management_call,
       SUM(CASE stat_name WHEN 'sequence load elapsed time' THEN value / 1e6 ELSE 0 END) sequence_lo
ad,
       SUM(CASE stat_name WHEN 'sql execute elapsed time' THEN value / 1e6 ELSE 0 END) sql_execute,
       SUM(CASE stat_name WHEN 'parse time elapsed' THEN value / 1e6 ELSE 0 END) parse_time,
       SUM(CASE stat_name WHEN 'hard parse elapsed time' THEN value / 1e6 ELSE 0 END) hard_parse,
       SUM(CASE stat_name WHEN 'PL/SQL execution elapsed time' THEN value / 1e6 ELSE 0 END) plsql_ex
ecution,
       SUM(CASE stat_name WHEN 'inbound PL/SQL rpc elapsed time' THEN value / 1e6 ELSE 0 END) inboun
d_plsql_rpc,
       SUM(CASE stat_name WHEN 'PL/SQL compilation elapsed time' THEN value / 1e6 ELSE 0 END) plsql_
compilation,
       SUM(CASE stat_name WHEN 'Java execution elapsed time' THEN value / 1e6 ELSE 0 END) java_execu
tion,
       SUM(CASE stat_name WHEN 'repeated bind elapsed time' THEN value / 1e6 ELSE 0 END) repeated_bi
nd
  FROM dba_hist_sys_time_model
 WHERE stat_name IN (
'background elapsed time',
'background cpu time',
'RMAN cpu time (backup/restore)',
'DB time',
'DB CPU',
'connection management call elapsed time',
'sequence load elapsed time',
'sql execute elapsed time',
'parse time elapsed',
'hard parse elapsed time',
'PL/SQL execution elapsed time',
'inbound PL/SQL rpc elapsed time',
'PL/SQL compilation elapsed time',
'Java execution elapsed time',
'repeated bind elapsed time'
)
   AND 'Y' = 'Y'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sys_time_model_denorm_3 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       (h1.background_time - h0.background_time) background_time,
       (h1.background_cpu - h0.background_cpu) background_cpu,
       (h1.rman_cpu - h0.rman_cpu) rman_cpu,
       (h1.db_time - h0.db_time) db_time,
       (h1.db_cpu - h0.db_cpu) db_cpu,
       (h1.connection_management_call - h0.connection_management_call) connection_management_call,
       (h1.sequence_load - h0.sequence_load) sequence_load,
       (h1.sql_execute - h0.sql_execute) sql_execute,
       (h1.parse_time - h0.parse_time) parse_time,
       (h1.hard_parse - h0.hard_parse) hard_parse,
       (h1.plsql_execution - h0.plsql_execution) plsql_execution,
       (h1.inbound_plsql_rpc - h0.inbound_plsql_rpc) inbound_plsql_rpc,
       (h1.plsql_compilation - h0.plsql_compilation) plsql_compilation,
       (h1.java_execution - h0.java_execution) java_execution,
       (h1.repeated_bind - h0.repeated_bind) repeated_bind
  FROM sys_time_model_denorm_2 h0,
       sys_time_model_denorm_2 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.dbid = s0.dbid
   AND s1.instance_number = s0.instance_number
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
),
sys_time_model_denorm_4 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
       (background_time / interval_secs) background_time,
       (background_cpu / interval_secs) background_cpu,
       (rman_cpu / interval_secs) rman_cpu,
       (db_time / interval_secs) db_time,
       (db_cpu / interval_secs) db_cpu,
       (connection_management_call / interval_secs) connection_management_call,
       (sequence_load / interval_secs) sequence_load,
       (sql_execute / interval_secs) sql_execute,
       (parse_time / interval_secs) parse_time,
       (hard_parse / interval_secs) hard_parse,
       (plsql_execution / interval_secs) plsql_execution,
       (inbound_plsql_rpc / interval_secs) inbound_plsql_rpc,
       (plsql_compilation / interval_secs) plsql_compilation,
       (java_execution / interval_secs) java_execution,
       (repeated_bind / interval_secs) repeated_bind
  FROM sys_time_model_denorm_3
),
sys_time_model_denorm_5 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       begin_time,
       end_time,
       CASE instance_number WHEN 1 THEN background_cpu ELSE 0 END inst_01,
       CASE instance_number WHEN 2 THEN background_cpu ELSE 0 END inst_02,
       CASE instance_number WHEN 3 THEN background_cpu ELSE 0 END inst_03,
       CASE instance_number WHEN 4 THEN background_cpu ELSE 0 END inst_04,
       CASE instance_number WHEN 5 THEN background_cpu ELSE 0 END inst_05,
       CASE instance_number WHEN 6 THEN background_cpu ELSE 0 END inst_06,
       CASE instance_number WHEN 7 THEN background_cpu ELSE 0 END inst_07,
       CASE instance_number WHEN 8 THEN background_cpu ELSE 0 END inst_08
  FROM sys_time_model_denorm_4
)
SELECT snap_id,
       MIN(begin_time) begin_time,
       MIN(end_time) end_time,
       ROUND(SUM(inst_01), 3) inst_01,
       ROUND(SUM(inst_02), 3) inst_02,
       ROUND(SUM(inst_03), 3) inst_03,
       ROUND(SUM(inst_04), 3) inst_04,
       ROUND(SUM(inst_05), 3) inst_05,
       ROUND(SUM(inst_06), 3) inst_06,
       ROUND(SUM(inst_07), 3) inst_07,
       ROUND(SUM(inst_08), 3) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sys_time_model_denorm_5
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:59:33 4e.471
Elapsed Hours so far:    0.621
Elapsed Hours so far: .621

Elapsed: 00:00:00.00

11:59:33 4e "00595_edb360_323688_4e_471_stm_background_cpu_time_per_instance.html"
11:59:40 4e "00596_edb360_323688_4e_471_stm_background_cpu_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.625

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

11:59:48 4e "System Time Model Components"
11:59:48 STM: RMAN cpu time (backup/restore) per Instance

WITH
sys_time_model_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'background elapsed time' THEN value / 1e6 ELSE 0 END) background_tim
e,
       SUM(CASE stat_name WHEN 'background cpu time'  THEN value / 1e6 ELSE 0 END) background_cpu,
       SUM(CASE stat_name WHEN 'RMAN cpu time (backup/restore)' THEN value / 1e6 ELSE 0 END) rman_cp
u,
       SUM(CASE stat_name WHEN 'DB time' THEN value / 1e6 ELSE 0 END) db_time,
       SUM(CASE stat_name WHEN 'DB CPU' THEN value / 1e6 ELSE 0 END) db_cpu,
       SUM(CASE stat_name WHEN 'connection management call elapsed time' THEN value / 1e6 ELSE 0 END
) connection_management_call,
       SUM(CASE stat_name WHEN 'sequence load elapsed time' THEN value / 1e6 ELSE 0 END) sequence_lo
ad,
       SUM(CASE stat_name WHEN 'sql execute elapsed time' THEN value / 1e6 ELSE 0 END) sql_execute,
       SUM(CASE stat_name WHEN 'parse time elapsed' THEN value / 1e6 ELSE 0 END) parse_time,
       SUM(CASE stat_name WHEN 'hard parse elapsed time' THEN value / 1e6 ELSE 0 END) hard_parse,
       SUM(CASE stat_name WHEN 'PL/SQL execution elapsed time' THEN value / 1e6 ELSE 0 END) plsql_ex
ecution,
       SUM(CASE stat_name WHEN 'inbound PL/SQL rpc elapsed time' THEN value / 1e6 ELSE 0 END) inboun
d_plsql_rpc,
       SUM(CASE stat_name WHEN 'PL/SQL compilation elapsed time' THEN value / 1e6 ELSE 0 END) plsql_
compilation,
       SUM(CASE stat_name WHEN 'Java execution elapsed time' THEN value / 1e6 ELSE 0 END) java_execu
tion,
       SUM(CASE stat_name WHEN 'repeated bind elapsed time' THEN value / 1e6 ELSE 0 END) repeated_bi
nd
  FROM dba_hist_sys_time_model
 WHERE stat_name IN (
'background elapsed time',
'background cpu time',
'RMAN cpu time (backup/restore)',
'DB time',
'DB CPU',
'connection management call elapsed time',
'sequence load elapsed time',
'sql execute elapsed time',
'parse time elapsed',
'hard parse elapsed time',
'PL/SQL execution elapsed time',
'inbound PL/SQL rpc elapsed time',
'PL/SQL compilation elapsed time',
'Java execution elapsed time',
'repeated bind elapsed time'
)
   AND 'Y' = 'Y'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sys_time_model_denorm_3 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       (h1.background_time - h0.background_time) background_time,
       (h1.background_cpu - h0.background_cpu) background_cpu,
       (h1.rman_cpu - h0.rman_cpu) rman_cpu,
       (h1.db_time - h0.db_time) db_time,
       (h1.db_cpu - h0.db_cpu) db_cpu,
       (h1.connection_management_call - h0.connection_management_call) connection_management_call,
       (h1.sequence_load - h0.sequence_load) sequence_load,
       (h1.sql_execute - h0.sql_execute) sql_execute,
       (h1.parse_time - h0.parse_time) parse_time,
       (h1.hard_parse - h0.hard_parse) hard_parse,
       (h1.plsql_execution - h0.plsql_execution) plsql_execution,
       (h1.inbound_plsql_rpc - h0.inbound_plsql_rpc) inbound_plsql_rpc,
       (h1.plsql_compilation - h0.plsql_compilation) plsql_compilation,
       (h1.java_execution - h0.java_execution) java_execution,
       (h1.repeated_bind - h0.repeated_bind) repeated_bind
  FROM sys_time_model_denorm_2 h0,
       sys_time_model_denorm_2 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.dbid = s0.dbid
   AND s1.instance_number = s0.instance_number
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
),
sys_time_model_denorm_4 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
       (background_time / interval_secs) background_time,
       (background_cpu / interval_secs) background_cpu,
       (rman_cpu / interval_secs) rman_cpu,
       (db_time / interval_secs) db_time,
       (db_cpu / interval_secs) db_cpu,
       (connection_management_call / interval_secs) connection_management_call,
       (sequence_load / interval_secs) sequence_load,
       (sql_execute / interval_secs) sql_execute,
       (parse_time / interval_secs) parse_time,
       (hard_parse / interval_secs) hard_parse,
       (plsql_execution / interval_secs) plsql_execution,
       (inbound_plsql_rpc / interval_secs) inbound_plsql_rpc,
       (plsql_compilation / interval_secs) plsql_compilation,
       (java_execution / interval_secs) java_execution,
       (repeated_bind / interval_secs) repeated_bind
  FROM sys_time_model_denorm_3
),
sys_time_model_denorm_5 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       begin_time,
       end_time,
       CASE instance_number WHEN 1 THEN rman_cpu ELSE 0 END inst_01,
       CASE instance_number WHEN 2 THEN rman_cpu ELSE 0 END inst_02,
       CASE instance_number WHEN 3 THEN rman_cpu ELSE 0 END inst_03,
       CASE instance_number WHEN 4 THEN rman_cpu ELSE 0 END inst_04,
       CASE instance_number WHEN 5 THEN rman_cpu ELSE 0 END inst_05,
       CASE instance_number WHEN 6 THEN rman_cpu ELSE 0 END inst_06,
       CASE instance_number WHEN 7 THEN rman_cpu ELSE 0 END inst_07,
       CASE instance_number WHEN 8 THEN rman_cpu ELSE 0 END inst_08
  FROM sys_time_model_denorm_4
)
SELECT snap_id,
       MIN(begin_time) begin_time,
       MIN(end_time) end_time,
       ROUND(SUM(inst_01), 3) inst_01,
       ROUND(SUM(inst_02), 3) inst_02,
       ROUND(SUM(inst_03), 3) inst_03,
       ROUND(SUM(inst_04), 3) inst_04,
       ROUND(SUM(inst_05), 3) inst_05,
       ROUND(SUM(inst_06), 3) inst_06,
       ROUND(SUM(inst_07), 3) inst_07,
       ROUND(SUM(inst_08), 3) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sys_time_model_denorm_5
 GROUP BY
       snap_id
 ORDER BY
       snap_id

11:59:48 4e.472
Elapsed Hours so far:    0.625
Elapsed Hours so far: .625

Elapsed: 00:00:00.00

11:59:48 4e "00597_edb360_323688_4e_472_stm_rman_cpu_time_backuprestore_per_instance.html"
11:59:55 4e "00598_edb360_323688_4e_472_stm_rman_cpu_time_backuprestore_per_instance_line_chart.html"
Elapsed Hours so far:    0.630

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:00:03 4e "System Time Model Components"
12:00:03 STM: DB time per Instance

WITH
sys_time_model_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'background elapsed time' THEN value / 1e6 ELSE 0 END) background_tim
e,
       SUM(CASE stat_name WHEN 'background cpu time'  THEN value / 1e6 ELSE 0 END) background_cpu,
       SUM(CASE stat_name WHEN 'RMAN cpu time (backup/restore)' THEN value / 1e6 ELSE 0 END) rman_cp
u,
       SUM(CASE stat_name WHEN 'DB time' THEN value / 1e6 ELSE 0 END) db_time,
       SUM(CASE stat_name WHEN 'DB CPU' THEN value / 1e6 ELSE 0 END) db_cpu,
       SUM(CASE stat_name WHEN 'connection management call elapsed time' THEN value / 1e6 ELSE 0 END
) connection_management_call,
       SUM(CASE stat_name WHEN 'sequence load elapsed time' THEN value / 1e6 ELSE 0 END) sequence_lo
ad,
       SUM(CASE stat_name WHEN 'sql execute elapsed time' THEN value / 1e6 ELSE 0 END) sql_execute,
       SUM(CASE stat_name WHEN 'parse time elapsed' THEN value / 1e6 ELSE 0 END) parse_time,
       SUM(CASE stat_name WHEN 'hard parse elapsed time' THEN value / 1e6 ELSE 0 END) hard_parse,
       SUM(CASE stat_name WHEN 'PL/SQL execution elapsed time' THEN value / 1e6 ELSE 0 END) plsql_ex
ecution,
       SUM(CASE stat_name WHEN 'inbound PL/SQL rpc elapsed time' THEN value / 1e6 ELSE 0 END) inboun
d_plsql_rpc,
       SUM(CASE stat_name WHEN 'PL/SQL compilation elapsed time' THEN value / 1e6 ELSE 0 END) plsql_
compilation,
       SUM(CASE stat_name WHEN 'Java execution elapsed time' THEN value / 1e6 ELSE 0 END) java_execu
tion,
       SUM(CASE stat_name WHEN 'repeated bind elapsed time' THEN value / 1e6 ELSE 0 END) repeated_bi
nd
  FROM dba_hist_sys_time_model
 WHERE stat_name IN (
'background elapsed time',
'background cpu time',
'RMAN cpu time (backup/restore)',
'DB time',
'DB CPU',
'connection management call elapsed time',
'sequence load elapsed time',
'sql execute elapsed time',
'parse time elapsed',
'hard parse elapsed time',
'PL/SQL execution elapsed time',
'inbound PL/SQL rpc elapsed time',
'PL/SQL compilation elapsed time',
'Java execution elapsed time',
'repeated bind elapsed time'
)
   AND 'Y' = 'Y'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sys_time_model_denorm_3 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       (h1.background_time - h0.background_time) background_time,
       (h1.background_cpu - h0.background_cpu) background_cpu,
       (h1.rman_cpu - h0.rman_cpu) rman_cpu,
       (h1.db_time - h0.db_time) db_time,
       (h1.db_cpu - h0.db_cpu) db_cpu,
       (h1.connection_management_call - h0.connection_management_call) connection_management_call,
       (h1.sequence_load - h0.sequence_load) sequence_load,
       (h1.sql_execute - h0.sql_execute) sql_execute,
       (h1.parse_time - h0.parse_time) parse_time,
       (h1.hard_parse - h0.hard_parse) hard_parse,
       (h1.plsql_execution - h0.plsql_execution) plsql_execution,
       (h1.inbound_plsql_rpc - h0.inbound_plsql_rpc) inbound_plsql_rpc,
       (h1.plsql_compilation - h0.plsql_compilation) plsql_compilation,
       (h1.java_execution - h0.java_execution) java_execution,
       (h1.repeated_bind - h0.repeated_bind) repeated_bind
  FROM sys_time_model_denorm_2 h0,
       sys_time_model_denorm_2 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.dbid = s0.dbid
   AND s1.instance_number = s0.instance_number
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
),
sys_time_model_denorm_4 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
       (background_time / interval_secs) background_time,
       (background_cpu / interval_secs) background_cpu,
       (rman_cpu / interval_secs) rman_cpu,
       (db_time / interval_secs) db_time,
       (db_cpu / interval_secs) db_cpu,
       (connection_management_call / interval_secs) connection_management_call,
       (sequence_load / interval_secs) sequence_load,
       (sql_execute / interval_secs) sql_execute,
       (parse_time / interval_secs) parse_time,
       (hard_parse / interval_secs) hard_parse,
       (plsql_execution / interval_secs) plsql_execution,
       (inbound_plsql_rpc / interval_secs) inbound_plsql_rpc,
       (plsql_compilation / interval_secs) plsql_compilation,
       (java_execution / interval_secs) java_execution,
       (repeated_bind / interval_secs) repeated_bind
  FROM sys_time_model_denorm_3
),
sys_time_model_denorm_5 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       begin_time,
       end_time,
       CASE instance_number WHEN 1 THEN db_time ELSE 0 END inst_01,
       CASE instance_number WHEN 2 THEN db_time ELSE 0 END inst_02,
       CASE instance_number WHEN 3 THEN db_time ELSE 0 END inst_03,
       CASE instance_number WHEN 4 THEN db_time ELSE 0 END inst_04,
       CASE instance_number WHEN 5 THEN db_time ELSE 0 END inst_05,
       CASE instance_number WHEN 6 THEN db_time ELSE 0 END inst_06,
       CASE instance_number WHEN 7 THEN db_time ELSE 0 END inst_07,
       CASE instance_number WHEN 8 THEN db_time ELSE 0 END inst_08
  FROM sys_time_model_denorm_4
)
SELECT snap_id,
       MIN(begin_time) begin_time,
       MIN(end_time) end_time,
       ROUND(SUM(inst_01), 3) inst_01,
       ROUND(SUM(inst_02), 3) inst_02,
       ROUND(SUM(inst_03), 3) inst_03,
       ROUND(SUM(inst_04), 3) inst_04,
       ROUND(SUM(inst_05), 3) inst_05,
       ROUND(SUM(inst_06), 3) inst_06,
       ROUND(SUM(inst_07), 3) inst_07,
       ROUND(SUM(inst_08), 3) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sys_time_model_denorm_5
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:00:03 4e.473
Elapsed Hours so far:    0.630
Elapsed Hours so far: .63

Elapsed: 00:00:00.00

12:00:03 4e "00599_edb360_323688_4e_473_stm_db_time_per_instance.html"
12:00:12 4e "00600_edb360_323688_4e_473_stm_db_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.634

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:00:20 4e "System Time Model Components"
12:00:20 STM: DB CPU per Instance

WITH
sys_time_model_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'background elapsed time' THEN value / 1e6 ELSE 0 END) background_tim
e,
       SUM(CASE stat_name WHEN 'background cpu time'  THEN value / 1e6 ELSE 0 END) background_cpu,
       SUM(CASE stat_name WHEN 'RMAN cpu time (backup/restore)' THEN value / 1e6 ELSE 0 END) rman_cp
u,
       SUM(CASE stat_name WHEN 'DB time' THEN value / 1e6 ELSE 0 END) db_time,
       SUM(CASE stat_name WHEN 'DB CPU' THEN value / 1e6 ELSE 0 END) db_cpu,
       SUM(CASE stat_name WHEN 'connection management call elapsed time' THEN value / 1e6 ELSE 0 END
) connection_management_call,
       SUM(CASE stat_name WHEN 'sequence load elapsed time' THEN value / 1e6 ELSE 0 END) sequence_lo
ad,
       SUM(CASE stat_name WHEN 'sql execute elapsed time' THEN value / 1e6 ELSE 0 END) sql_execute,
       SUM(CASE stat_name WHEN 'parse time elapsed' THEN value / 1e6 ELSE 0 END) parse_time,
       SUM(CASE stat_name WHEN 'hard parse elapsed time' THEN value / 1e6 ELSE 0 END) hard_parse,
       SUM(CASE stat_name WHEN 'PL/SQL execution elapsed time' THEN value / 1e6 ELSE 0 END) plsql_ex
ecution,
       SUM(CASE stat_name WHEN 'inbound PL/SQL rpc elapsed time' THEN value / 1e6 ELSE 0 END) inboun
d_plsql_rpc,
       SUM(CASE stat_name WHEN 'PL/SQL compilation elapsed time' THEN value / 1e6 ELSE 0 END) plsql_
compilation,
       SUM(CASE stat_name WHEN 'Java execution elapsed time' THEN value / 1e6 ELSE 0 END) java_execu
tion,
       SUM(CASE stat_name WHEN 'repeated bind elapsed time' THEN value / 1e6 ELSE 0 END) repeated_bi
nd
  FROM dba_hist_sys_time_model
 WHERE stat_name IN (
'background elapsed time',
'background cpu time',
'RMAN cpu time (backup/restore)',
'DB time',
'DB CPU',
'connection management call elapsed time',
'sequence load elapsed time',
'sql execute elapsed time',
'parse time elapsed',
'hard parse elapsed time',
'PL/SQL execution elapsed time',
'inbound PL/SQL rpc elapsed time',
'PL/SQL compilation elapsed time',
'Java execution elapsed time',
'repeated bind elapsed time'
)
   AND 'Y' = 'Y'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sys_time_model_denorm_3 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       (h1.background_time - h0.background_time) background_time,
       (h1.background_cpu - h0.background_cpu) background_cpu,
       (h1.rman_cpu - h0.rman_cpu) rman_cpu,
       (h1.db_time - h0.db_time) db_time,
       (h1.db_cpu - h0.db_cpu) db_cpu,
       (h1.connection_management_call - h0.connection_management_call) connection_management_call,
       (h1.sequence_load - h0.sequence_load) sequence_load,
       (h1.sql_execute - h0.sql_execute) sql_execute,
       (h1.parse_time - h0.parse_time) parse_time,
       (h1.hard_parse - h0.hard_parse) hard_parse,
       (h1.plsql_execution - h0.plsql_execution) plsql_execution,
       (h1.inbound_plsql_rpc - h0.inbound_plsql_rpc) inbound_plsql_rpc,
       (h1.plsql_compilation - h0.plsql_compilation) plsql_compilation,
       (h1.java_execution - h0.java_execution) java_execution,
       (h1.repeated_bind - h0.repeated_bind) repeated_bind
  FROM sys_time_model_denorm_2 h0,
       sys_time_model_denorm_2 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.dbid = s0.dbid
   AND s1.instance_number = s0.instance_number
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
),
sys_time_model_denorm_4 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
       (background_time / interval_secs) background_time,
       (background_cpu / interval_secs) background_cpu,
       (rman_cpu / interval_secs) rman_cpu,
       (db_time / interval_secs) db_time,
       (db_cpu / interval_secs) db_cpu,
       (connection_management_call / interval_secs) connection_management_call,
       (sequence_load / interval_secs) sequence_load,
       (sql_execute / interval_secs) sql_execute,
       (parse_time / interval_secs) parse_time,
       (hard_parse / interval_secs) hard_parse,
       (plsql_execution / interval_secs) plsql_execution,
       (inbound_plsql_rpc / interval_secs) inbound_plsql_rpc,
       (plsql_compilation / interval_secs) plsql_compilation,
       (java_execution / interval_secs) java_execution,
       (repeated_bind / interval_secs) repeated_bind
  FROM sys_time_model_denorm_3
),
sys_time_model_denorm_5 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       begin_time,
       end_time,
       CASE instance_number WHEN 1 THEN db_cpu ELSE 0 END inst_01,
       CASE instance_number WHEN 2 THEN db_cpu ELSE 0 END inst_02,
       CASE instance_number WHEN 3 THEN db_cpu ELSE 0 END inst_03,
       CASE instance_number WHEN 4 THEN db_cpu ELSE 0 END inst_04,
       CASE instance_number WHEN 5 THEN db_cpu ELSE 0 END inst_05,
       CASE instance_number WHEN 6 THEN db_cpu ELSE 0 END inst_06,
       CASE instance_number WHEN 7 THEN db_cpu ELSE 0 END inst_07,
       CASE instance_number WHEN 8 THEN db_cpu ELSE 0 END inst_08
  FROM sys_time_model_denorm_4
)
SELECT snap_id,
       MIN(begin_time) begin_time,
       MIN(end_time) end_time,
       ROUND(SUM(inst_01), 3) inst_01,
       ROUND(SUM(inst_02), 3) inst_02,
       ROUND(SUM(inst_03), 3) inst_03,
       ROUND(SUM(inst_04), 3) inst_04,
       ROUND(SUM(inst_05), 3) inst_05,
       ROUND(SUM(inst_06), 3) inst_06,
       ROUND(SUM(inst_07), 3) inst_07,
       ROUND(SUM(inst_08), 3) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sys_time_model_denorm_5
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:00:20 4e.474
Elapsed Hours so far:    0.634
Elapsed Hours so far: .634

Elapsed: 00:00:00.00

12:00:20 4e "00601_edb360_323688_4e_474_stm_db_cpu_per_instance.html"
12:00:28 4e "00602_edb360_323688_4e_474_stm_db_cpu_per_instance_line_chart.html"
Elapsed Hours so far:    0.639

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:00:36 4e "System Time Model Components"
12:00:36 STM: connection management call elapsed time per Instance

WITH
sys_time_model_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'background elapsed time' THEN value / 1e6 ELSE 0 END) background_tim
e,
       SUM(CASE stat_name WHEN 'background cpu time'  THEN value / 1e6 ELSE 0 END) background_cpu,
       SUM(CASE stat_name WHEN 'RMAN cpu time (backup/restore)' THEN value / 1e6 ELSE 0 END) rman_cp
u,
       SUM(CASE stat_name WHEN 'DB time' THEN value / 1e6 ELSE 0 END) db_time,
       SUM(CASE stat_name WHEN 'DB CPU' THEN value / 1e6 ELSE 0 END) db_cpu,
       SUM(CASE stat_name WHEN 'connection management call elapsed time' THEN value / 1e6 ELSE 0 END
) connection_management_call,
       SUM(CASE stat_name WHEN 'sequence load elapsed time' THEN value / 1e6 ELSE 0 END) sequence_lo
ad,
       SUM(CASE stat_name WHEN 'sql execute elapsed time' THEN value / 1e6 ELSE 0 END) sql_execute,
       SUM(CASE stat_name WHEN 'parse time elapsed' THEN value / 1e6 ELSE 0 END) parse_time,
       SUM(CASE stat_name WHEN 'hard parse elapsed time' THEN value / 1e6 ELSE 0 END) hard_parse,
       SUM(CASE stat_name WHEN 'PL/SQL execution elapsed time' THEN value / 1e6 ELSE 0 END) plsql_ex
ecution,
       SUM(CASE stat_name WHEN 'inbound PL/SQL rpc elapsed time' THEN value / 1e6 ELSE 0 END) inboun
d_plsql_rpc,
       SUM(CASE stat_name WHEN 'PL/SQL compilation elapsed time' THEN value / 1e6 ELSE 0 END) plsql_
compilation,
       SUM(CASE stat_name WHEN 'Java execution elapsed time' THEN value / 1e6 ELSE 0 END) java_execu
tion,
       SUM(CASE stat_name WHEN 'repeated bind elapsed time' THEN value / 1e6 ELSE 0 END) repeated_bi
nd
  FROM dba_hist_sys_time_model
 WHERE stat_name IN (
'background elapsed time',
'background cpu time',
'RMAN cpu time (backup/restore)',
'DB time',
'DB CPU',
'connection management call elapsed time',
'sequence load elapsed time',
'sql execute elapsed time',
'parse time elapsed',
'hard parse elapsed time',
'PL/SQL execution elapsed time',
'inbound PL/SQL rpc elapsed time',
'PL/SQL compilation elapsed time',
'Java execution elapsed time',
'repeated bind elapsed time'
)
   AND 'Y' = 'Y'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sys_time_model_denorm_3 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       (h1.background_time - h0.background_time) background_time,
       (h1.background_cpu - h0.background_cpu) background_cpu,
       (h1.rman_cpu - h0.rman_cpu) rman_cpu,
       (h1.db_time - h0.db_time) db_time,
       (h1.db_cpu - h0.db_cpu) db_cpu,
       (h1.connection_management_call - h0.connection_management_call) connection_management_call,
       (h1.sequence_load - h0.sequence_load) sequence_load,
       (h1.sql_execute - h0.sql_execute) sql_execute,
       (h1.parse_time - h0.parse_time) parse_time,
       (h1.hard_parse - h0.hard_parse) hard_parse,
       (h1.plsql_execution - h0.plsql_execution) plsql_execution,
       (h1.inbound_plsql_rpc - h0.inbound_plsql_rpc) inbound_plsql_rpc,
       (h1.plsql_compilation - h0.plsql_compilation) plsql_compilation,
       (h1.java_execution - h0.java_execution) java_execution,
       (h1.repeated_bind - h0.repeated_bind) repeated_bind
  FROM sys_time_model_denorm_2 h0,
       sys_time_model_denorm_2 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.dbid = s0.dbid
   AND s1.instance_number = s0.instance_number
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
),
sys_time_model_denorm_4 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
       (background_time / interval_secs) background_time,
       (background_cpu / interval_secs) background_cpu,
       (rman_cpu / interval_secs) rman_cpu,
       (db_time / interval_secs) db_time,
       (db_cpu / interval_secs) db_cpu,
       (connection_management_call / interval_secs) connection_management_call,
       (sequence_load / interval_secs) sequence_load,
       (sql_execute / interval_secs) sql_execute,
       (parse_time / interval_secs) parse_time,
       (hard_parse / interval_secs) hard_parse,
       (plsql_execution / interval_secs) plsql_execution,
       (inbound_plsql_rpc / interval_secs) inbound_plsql_rpc,
       (plsql_compilation / interval_secs) plsql_compilation,
       (java_execution / interval_secs) java_execution,
       (repeated_bind / interval_secs) repeated_bind
  FROM sys_time_model_denorm_3
),
sys_time_model_denorm_5 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       begin_time,
       end_time,
       CASE instance_number WHEN 1 THEN connection_management_call ELSE 0 END inst_01,
       CASE instance_number WHEN 2 THEN connection_management_call ELSE 0 END inst_02,
       CASE instance_number WHEN 3 THEN connection_management_call ELSE 0 END inst_03,
       CASE instance_number WHEN 4 THEN connection_management_call ELSE 0 END inst_04,
       CASE instance_number WHEN 5 THEN connection_management_call ELSE 0 END inst_05,
       CASE instance_number WHEN 6 THEN connection_management_call ELSE 0 END inst_06,
       CASE instance_number WHEN 7 THEN connection_management_call ELSE 0 END inst_07,
       CASE instance_number WHEN 8 THEN connection_management_call ELSE 0 END inst_08
  FROM sys_time_model_denorm_4
)
SELECT snap_id,
       MIN(begin_time) begin_time,
       MIN(end_time) end_time,
       ROUND(SUM(inst_01), 3) inst_01,
       ROUND(SUM(inst_02), 3) inst_02,
       ROUND(SUM(inst_03), 3) inst_03,
       ROUND(SUM(inst_04), 3) inst_04,
       ROUND(SUM(inst_05), 3) inst_05,
       ROUND(SUM(inst_06), 3) inst_06,
       ROUND(SUM(inst_07), 3) inst_07,
       ROUND(SUM(inst_08), 3) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sys_time_model_denorm_5
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:00:36 4e.475
Elapsed Hours so far:    0.639
Elapsed Hours so far: .639

Elapsed: 00:00:00.00

12:00:36 4e "00603_edb360_323688_4e_475_stm_connection_management_call_elapsed_time_per_instance.html"
12:00:44 4e "00604_edb360_323688_4e_475_stm_connection_management_call_elapsed_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.643

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:00:51 4e "System Time Model Components"
12:00:51 STM: sequence load elapsed time per Instance

WITH
sys_time_model_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'background elapsed time' THEN value / 1e6 ELSE 0 END) background_tim
e,
       SUM(CASE stat_name WHEN 'background cpu time'  THEN value / 1e6 ELSE 0 END) background_cpu,
       SUM(CASE stat_name WHEN 'RMAN cpu time (backup/restore)' THEN value / 1e6 ELSE 0 END) rman_cp
u,
       SUM(CASE stat_name WHEN 'DB time' THEN value / 1e6 ELSE 0 END) db_time,
       SUM(CASE stat_name WHEN 'DB CPU' THEN value / 1e6 ELSE 0 END) db_cpu,
       SUM(CASE stat_name WHEN 'connection management call elapsed time' THEN value / 1e6 ELSE 0 END
) connection_management_call,
       SUM(CASE stat_name WHEN 'sequence load elapsed time' THEN value / 1e6 ELSE 0 END) sequence_lo
ad,
       SUM(CASE stat_name WHEN 'sql execute elapsed time' THEN value / 1e6 ELSE 0 END) sql_execute,
       SUM(CASE stat_name WHEN 'parse time elapsed' THEN value / 1e6 ELSE 0 END) parse_time,
       SUM(CASE stat_name WHEN 'hard parse elapsed time' THEN value / 1e6 ELSE 0 END) hard_parse,
       SUM(CASE stat_name WHEN 'PL/SQL execution elapsed time' THEN value / 1e6 ELSE 0 END) plsql_ex
ecution,
       SUM(CASE stat_name WHEN 'inbound PL/SQL rpc elapsed time' THEN value / 1e6 ELSE 0 END) inboun
d_plsql_rpc,
       SUM(CASE stat_name WHEN 'PL/SQL compilation elapsed time' THEN value / 1e6 ELSE 0 END) plsql_
compilation,
       SUM(CASE stat_name WHEN 'Java execution elapsed time' THEN value / 1e6 ELSE 0 END) java_execu
tion,
       SUM(CASE stat_name WHEN 'repeated bind elapsed time' THEN value / 1e6 ELSE 0 END) repeated_bi
nd
  FROM dba_hist_sys_time_model
 WHERE stat_name IN (
'background elapsed time',
'background cpu time',
'RMAN cpu time (backup/restore)',
'DB time',
'DB CPU',
'connection management call elapsed time',
'sequence load elapsed time',
'sql execute elapsed time',
'parse time elapsed',
'hard parse elapsed time',
'PL/SQL execution elapsed time',
'inbound PL/SQL rpc elapsed time',
'PL/SQL compilation elapsed time',
'Java execution elapsed time',
'repeated bind elapsed time'
)
   AND 'Y' = 'Y'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sys_time_model_denorm_3 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       (h1.background_time - h0.background_time) background_time,
       (h1.background_cpu - h0.background_cpu) background_cpu,
       (h1.rman_cpu - h0.rman_cpu) rman_cpu,
       (h1.db_time - h0.db_time) db_time,
       (h1.db_cpu - h0.db_cpu) db_cpu,
       (h1.connection_management_call - h0.connection_management_call) connection_management_call,
       (h1.sequence_load - h0.sequence_load) sequence_load,
       (h1.sql_execute - h0.sql_execute) sql_execute,
       (h1.parse_time - h0.parse_time) parse_time,
       (h1.hard_parse - h0.hard_parse) hard_parse,
       (h1.plsql_execution - h0.plsql_execution) plsql_execution,
       (h1.inbound_plsql_rpc - h0.inbound_plsql_rpc) inbound_plsql_rpc,
       (h1.plsql_compilation - h0.plsql_compilation) plsql_compilation,
       (h1.java_execution - h0.java_execution) java_execution,
       (h1.repeated_bind - h0.repeated_bind) repeated_bind
  FROM sys_time_model_denorm_2 h0,
       sys_time_model_denorm_2 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.dbid = s0.dbid
   AND s1.instance_number = s0.instance_number
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
),
sys_time_model_denorm_4 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
       (background_time / interval_secs) background_time,
       (background_cpu / interval_secs) background_cpu,
       (rman_cpu / interval_secs) rman_cpu,
       (db_time / interval_secs) db_time,
       (db_cpu / interval_secs) db_cpu,
       (connection_management_call / interval_secs) connection_management_call,
       (sequence_load / interval_secs) sequence_load,
       (sql_execute / interval_secs) sql_execute,
       (parse_time / interval_secs) parse_time,
       (hard_parse / interval_secs) hard_parse,
       (plsql_execution / interval_secs) plsql_execution,
       (inbound_plsql_rpc / interval_secs) inbound_plsql_rpc,
       (plsql_compilation / interval_secs) plsql_compilation,
       (java_execution / interval_secs) java_execution,
       (repeated_bind / interval_secs) repeated_bind
  FROM sys_time_model_denorm_3
),
sys_time_model_denorm_5 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       begin_time,
       end_time,
       CASE instance_number WHEN 1 THEN sequence_load ELSE 0 END inst_01,
       CASE instance_number WHEN 2 THEN sequence_load ELSE 0 END inst_02,
       CASE instance_number WHEN 3 THEN sequence_load ELSE 0 END inst_03,
       CASE instance_number WHEN 4 THEN sequence_load ELSE 0 END inst_04,
       CASE instance_number WHEN 5 THEN sequence_load ELSE 0 END inst_05,
       CASE instance_number WHEN 6 THEN sequence_load ELSE 0 END inst_06,
       CASE instance_number WHEN 7 THEN sequence_load ELSE 0 END inst_07,
       CASE instance_number WHEN 8 THEN sequence_load ELSE 0 END inst_08
  FROM sys_time_model_denorm_4
)
SELECT snap_id,
       MIN(begin_time) begin_time,
       MIN(end_time) end_time,
       ROUND(SUM(inst_01), 3) inst_01,
       ROUND(SUM(inst_02), 3) inst_02,
       ROUND(SUM(inst_03), 3) inst_03,
       ROUND(SUM(inst_04), 3) inst_04,
       ROUND(SUM(inst_05), 3) inst_05,
       ROUND(SUM(inst_06), 3) inst_06,
       ROUND(SUM(inst_07), 3) inst_07,
       ROUND(SUM(inst_08), 3) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sys_time_model_denorm_5
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:00:51 4e.476
Elapsed Hours so far:    0.643
Elapsed Hours so far: .643

Elapsed: 00:00:00.00

12:00:51 4e "00605_edb360_323688_4e_476_stm_sequence_load_elapsed_time_per_instance.html"
12:00:59 4e "00606_edb360_323688_4e_476_stm_sequence_load_elapsed_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.647

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:01:07 4e "System Time Model Components"
12:01:07 STM: sql execute elapsed time per Instance

WITH
sys_time_model_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'background elapsed time' THEN value / 1e6 ELSE 0 END) background_tim
e,
       SUM(CASE stat_name WHEN 'background cpu time'  THEN value / 1e6 ELSE 0 END) background_cpu,
       SUM(CASE stat_name WHEN 'RMAN cpu time (backup/restore)' THEN value / 1e6 ELSE 0 END) rman_cp
u,
       SUM(CASE stat_name WHEN 'DB time' THEN value / 1e6 ELSE 0 END) db_time,
       SUM(CASE stat_name WHEN 'DB CPU' THEN value / 1e6 ELSE 0 END) db_cpu,
       SUM(CASE stat_name WHEN 'connection management call elapsed time' THEN value / 1e6 ELSE 0 END
) connection_management_call,
       SUM(CASE stat_name WHEN 'sequence load elapsed time' THEN value / 1e6 ELSE 0 END) sequence_lo
ad,
       SUM(CASE stat_name WHEN 'sql execute elapsed time' THEN value / 1e6 ELSE 0 END) sql_execute,
       SUM(CASE stat_name WHEN 'parse time elapsed' THEN value / 1e6 ELSE 0 END) parse_time,
       SUM(CASE stat_name WHEN 'hard parse elapsed time' THEN value / 1e6 ELSE 0 END) hard_parse,
       SUM(CASE stat_name WHEN 'PL/SQL execution elapsed time' THEN value / 1e6 ELSE 0 END) plsql_ex
ecution,
       SUM(CASE stat_name WHEN 'inbound PL/SQL rpc elapsed time' THEN value / 1e6 ELSE 0 END) inboun
d_plsql_rpc,
       SUM(CASE stat_name WHEN 'PL/SQL compilation elapsed time' THEN value / 1e6 ELSE 0 END) plsql_
compilation,
       SUM(CASE stat_name WHEN 'Java execution elapsed time' THEN value / 1e6 ELSE 0 END) java_execu
tion,
       SUM(CASE stat_name WHEN 'repeated bind elapsed time' THEN value / 1e6 ELSE 0 END) repeated_bi
nd
  FROM dba_hist_sys_time_model
 WHERE stat_name IN (
'background elapsed time',
'background cpu time',
'RMAN cpu time (backup/restore)',
'DB time',
'DB CPU',
'connection management call elapsed time',
'sequence load elapsed time',
'sql execute elapsed time',
'parse time elapsed',
'hard parse elapsed time',
'PL/SQL execution elapsed time',
'inbound PL/SQL rpc elapsed time',
'PL/SQL compilation elapsed time',
'Java execution elapsed time',
'repeated bind elapsed time'
)
   AND 'Y' = 'Y'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sys_time_model_denorm_3 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       (h1.background_time - h0.background_time) background_time,
       (h1.background_cpu - h0.background_cpu) background_cpu,
       (h1.rman_cpu - h0.rman_cpu) rman_cpu,
       (h1.db_time - h0.db_time) db_time,
       (h1.db_cpu - h0.db_cpu) db_cpu,
       (h1.connection_management_call - h0.connection_management_call) connection_management_call,
       (h1.sequence_load - h0.sequence_load) sequence_load,
       (h1.sql_execute - h0.sql_execute) sql_execute,
       (h1.parse_time - h0.parse_time) parse_time,
       (h1.hard_parse - h0.hard_parse) hard_parse,
       (h1.plsql_execution - h0.plsql_execution) plsql_execution,
       (h1.inbound_plsql_rpc - h0.inbound_plsql_rpc) inbound_plsql_rpc,
       (h1.plsql_compilation - h0.plsql_compilation) plsql_compilation,
       (h1.java_execution - h0.java_execution) java_execution,
       (h1.repeated_bind - h0.repeated_bind) repeated_bind
  FROM sys_time_model_denorm_2 h0,
       sys_time_model_denorm_2 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.dbid = s0.dbid
   AND s1.instance_number = s0.instance_number
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
),
sys_time_model_denorm_4 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
       (background_time / interval_secs) background_time,
       (background_cpu / interval_secs) background_cpu,
       (rman_cpu / interval_secs) rman_cpu,
       (db_time / interval_secs) db_time,
       (db_cpu / interval_secs) db_cpu,
       (connection_management_call / interval_secs) connection_management_call,
       (sequence_load / interval_secs) sequence_load,
       (sql_execute / interval_secs) sql_execute,
       (parse_time / interval_secs) parse_time,
       (hard_parse / interval_secs) hard_parse,
       (plsql_execution / interval_secs) plsql_execution,
       (inbound_plsql_rpc / interval_secs) inbound_plsql_rpc,
       (plsql_compilation / interval_secs) plsql_compilation,
       (java_execution / interval_secs) java_execution,
       (repeated_bind / interval_secs) repeated_bind
  FROM sys_time_model_denorm_3
),
sys_time_model_denorm_5 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       begin_time,
       end_time,
       CASE instance_number WHEN 1 THEN sql_execute ELSE 0 END inst_01,
       CASE instance_number WHEN 2 THEN sql_execute ELSE 0 END inst_02,
       CASE instance_number WHEN 3 THEN sql_execute ELSE 0 END inst_03,
       CASE instance_number WHEN 4 THEN sql_execute ELSE 0 END inst_04,
       CASE instance_number WHEN 5 THEN sql_execute ELSE 0 END inst_05,
       CASE instance_number WHEN 6 THEN sql_execute ELSE 0 END inst_06,
       CASE instance_number WHEN 7 THEN sql_execute ELSE 0 END inst_07,
       CASE instance_number WHEN 8 THEN sql_execute ELSE 0 END inst_08
  FROM sys_time_model_denorm_4
)
SELECT snap_id,
       MIN(begin_time) begin_time,
       MIN(end_time) end_time,
       ROUND(SUM(inst_01), 3) inst_01,
       ROUND(SUM(inst_02), 3) inst_02,
       ROUND(SUM(inst_03), 3) inst_03,
       ROUND(SUM(inst_04), 3) inst_04,
       ROUND(SUM(inst_05), 3) inst_05,
       ROUND(SUM(inst_06), 3) inst_06,
       ROUND(SUM(inst_07), 3) inst_07,
       ROUND(SUM(inst_08), 3) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sys_time_model_denorm_5
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:01:07 4e.477
Elapsed Hours so far:    0.647
Elapsed Hours so far: .647

Elapsed: 00:00:00.00

12:01:07 4e "00607_edb360_323688_4e_477_stm_sql_execute_elapsed_time_per_instance.html"
12:01:14 4e "00608_edb360_323688_4e_477_stm_sql_execute_elapsed_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.652

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:01:22 4e "System Time Model Components"
12:01:22 STM: parse time elapsed per Instance

WITH
sys_time_model_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'background elapsed time' THEN value / 1e6 ELSE 0 END) background_tim
e,
       SUM(CASE stat_name WHEN 'background cpu time'  THEN value / 1e6 ELSE 0 END) background_cpu,
       SUM(CASE stat_name WHEN 'RMAN cpu time (backup/restore)' THEN value / 1e6 ELSE 0 END) rman_cp
u,
       SUM(CASE stat_name WHEN 'DB time' THEN value / 1e6 ELSE 0 END) db_time,
       SUM(CASE stat_name WHEN 'DB CPU' THEN value / 1e6 ELSE 0 END) db_cpu,
       SUM(CASE stat_name WHEN 'connection management call elapsed time' THEN value / 1e6 ELSE 0 END
) connection_management_call,
       SUM(CASE stat_name WHEN 'sequence load elapsed time' THEN value / 1e6 ELSE 0 END) sequence_lo
ad,
       SUM(CASE stat_name WHEN 'sql execute elapsed time' THEN value / 1e6 ELSE 0 END) sql_execute,
       SUM(CASE stat_name WHEN 'parse time elapsed' THEN value / 1e6 ELSE 0 END) parse_time,
       SUM(CASE stat_name WHEN 'hard parse elapsed time' THEN value / 1e6 ELSE 0 END) hard_parse,
       SUM(CASE stat_name WHEN 'PL/SQL execution elapsed time' THEN value / 1e6 ELSE 0 END) plsql_ex
ecution,
       SUM(CASE stat_name WHEN 'inbound PL/SQL rpc elapsed time' THEN value / 1e6 ELSE 0 END) inboun
d_plsql_rpc,
       SUM(CASE stat_name WHEN 'PL/SQL compilation elapsed time' THEN value / 1e6 ELSE 0 END) plsql_
compilation,
       SUM(CASE stat_name WHEN 'Java execution elapsed time' THEN value / 1e6 ELSE 0 END) java_execu
tion,
       SUM(CASE stat_name WHEN 'repeated bind elapsed time' THEN value / 1e6 ELSE 0 END) repeated_bi
nd
  FROM dba_hist_sys_time_model
 WHERE stat_name IN (
'background elapsed time',
'background cpu time',
'RMAN cpu time (backup/restore)',
'DB time',
'DB CPU',
'connection management call elapsed time',
'sequence load elapsed time',
'sql execute elapsed time',
'parse time elapsed',
'hard parse elapsed time',
'PL/SQL execution elapsed time',
'inbound PL/SQL rpc elapsed time',
'PL/SQL compilation elapsed time',
'Java execution elapsed time',
'repeated bind elapsed time'
)
   AND 'Y' = 'Y'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sys_time_model_denorm_3 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       (h1.background_time - h0.background_time) background_time,
       (h1.background_cpu - h0.background_cpu) background_cpu,
       (h1.rman_cpu - h0.rman_cpu) rman_cpu,
       (h1.db_time - h0.db_time) db_time,
       (h1.db_cpu - h0.db_cpu) db_cpu,
       (h1.connection_management_call - h0.connection_management_call) connection_management_call,
       (h1.sequence_load - h0.sequence_load) sequence_load,
       (h1.sql_execute - h0.sql_execute) sql_execute,
       (h1.parse_time - h0.parse_time) parse_time,
       (h1.hard_parse - h0.hard_parse) hard_parse,
       (h1.plsql_execution - h0.plsql_execution) plsql_execution,
       (h1.inbound_plsql_rpc - h0.inbound_plsql_rpc) inbound_plsql_rpc,
       (h1.plsql_compilation - h0.plsql_compilation) plsql_compilation,
       (h1.java_execution - h0.java_execution) java_execution,
       (h1.repeated_bind - h0.repeated_bind) repeated_bind
  FROM sys_time_model_denorm_2 h0,
       sys_time_model_denorm_2 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.dbid = s0.dbid
   AND s1.instance_number = s0.instance_number
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
),
sys_time_model_denorm_4 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
       (background_time / interval_secs) background_time,
       (background_cpu / interval_secs) background_cpu,
       (rman_cpu / interval_secs) rman_cpu,
       (db_time / interval_secs) db_time,
       (db_cpu / interval_secs) db_cpu,
       (connection_management_call / interval_secs) connection_management_call,
       (sequence_load / interval_secs) sequence_load,
       (sql_execute / interval_secs) sql_execute,
       (parse_time / interval_secs) parse_time,
       (hard_parse / interval_secs) hard_parse,
       (plsql_execution / interval_secs) plsql_execution,
       (inbound_plsql_rpc / interval_secs) inbound_plsql_rpc,
       (plsql_compilation / interval_secs) plsql_compilation,
       (java_execution / interval_secs) java_execution,
       (repeated_bind / interval_secs) repeated_bind
  FROM sys_time_model_denorm_3
),
sys_time_model_denorm_5 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       begin_time,
       end_time,
       CASE instance_number WHEN 1 THEN parse_time ELSE 0 END inst_01,
       CASE instance_number WHEN 2 THEN parse_time ELSE 0 END inst_02,
       CASE instance_number WHEN 3 THEN parse_time ELSE 0 END inst_03,
       CASE instance_number WHEN 4 THEN parse_time ELSE 0 END inst_04,
       CASE instance_number WHEN 5 THEN parse_time ELSE 0 END inst_05,
       CASE instance_number WHEN 6 THEN parse_time ELSE 0 END inst_06,
       CASE instance_number WHEN 7 THEN parse_time ELSE 0 END inst_07,
       CASE instance_number WHEN 8 THEN parse_time ELSE 0 END inst_08
  FROM sys_time_model_denorm_4
)
SELECT snap_id,
       MIN(begin_time) begin_time,
       MIN(end_time) end_time,
       ROUND(SUM(inst_01), 3) inst_01,
       ROUND(SUM(inst_02), 3) inst_02,
       ROUND(SUM(inst_03), 3) inst_03,
       ROUND(SUM(inst_04), 3) inst_04,
       ROUND(SUM(inst_05), 3) inst_05,
       ROUND(SUM(inst_06), 3) inst_06,
       ROUND(SUM(inst_07), 3) inst_07,
       ROUND(SUM(inst_08), 3) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sys_time_model_denorm_5
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:01:22 4e.478
Elapsed Hours so far:    0.652
Elapsed Hours so far: .652

Elapsed: 00:00:00.00

12:01:22 4e "00609_edb360_323688_4e_478_stm_parse_time_elapsed_per_instance.html"
12:01:30 4e "00610_edb360_323688_4e_478_stm_parse_time_elapsed_per_instance_line_chart.html"
Elapsed Hours so far:    0.656

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:01:37 4e "System Time Model Components"
12:01:37 STM: hard parse elapsed time per Instance

WITH
sys_time_model_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'background elapsed time' THEN value / 1e6 ELSE 0 END) background_tim
e,
       SUM(CASE stat_name WHEN 'background cpu time'  THEN value / 1e6 ELSE 0 END) background_cpu,
       SUM(CASE stat_name WHEN 'RMAN cpu time (backup/restore)' THEN value / 1e6 ELSE 0 END) rman_cp
u,
       SUM(CASE stat_name WHEN 'DB time' THEN value / 1e6 ELSE 0 END) db_time,
       SUM(CASE stat_name WHEN 'DB CPU' THEN value / 1e6 ELSE 0 END) db_cpu,
       SUM(CASE stat_name WHEN 'connection management call elapsed time' THEN value / 1e6 ELSE 0 END
) connection_management_call,
       SUM(CASE stat_name WHEN 'sequence load elapsed time' THEN value / 1e6 ELSE 0 END) sequence_lo
ad,
       SUM(CASE stat_name WHEN 'sql execute elapsed time' THEN value / 1e6 ELSE 0 END) sql_execute,
       SUM(CASE stat_name WHEN 'parse time elapsed' THEN value / 1e6 ELSE 0 END) parse_time,
       SUM(CASE stat_name WHEN 'hard parse elapsed time' THEN value / 1e6 ELSE 0 END) hard_parse,
       SUM(CASE stat_name WHEN 'PL/SQL execution elapsed time' THEN value / 1e6 ELSE 0 END) plsql_ex
ecution,
       SUM(CASE stat_name WHEN 'inbound PL/SQL rpc elapsed time' THEN value / 1e6 ELSE 0 END) inboun
d_plsql_rpc,
       SUM(CASE stat_name WHEN 'PL/SQL compilation elapsed time' THEN value / 1e6 ELSE 0 END) plsql_
compilation,
       SUM(CASE stat_name WHEN 'Java execution elapsed time' THEN value / 1e6 ELSE 0 END) java_execu
tion,
       SUM(CASE stat_name WHEN 'repeated bind elapsed time' THEN value / 1e6 ELSE 0 END) repeated_bi
nd
  FROM dba_hist_sys_time_model
 WHERE stat_name IN (
'background elapsed time',
'background cpu time',
'RMAN cpu time (backup/restore)',
'DB time',
'DB CPU',
'connection management call elapsed time',
'sequence load elapsed time',
'sql execute elapsed time',
'parse time elapsed',
'hard parse elapsed time',
'PL/SQL execution elapsed time',
'inbound PL/SQL rpc elapsed time',
'PL/SQL compilation elapsed time',
'Java execution elapsed time',
'repeated bind elapsed time'
)
   AND 'Y' = 'Y'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sys_time_model_denorm_3 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       (h1.background_time - h0.background_time) background_time,
       (h1.background_cpu - h0.background_cpu) background_cpu,
       (h1.rman_cpu - h0.rman_cpu) rman_cpu,
       (h1.db_time - h0.db_time) db_time,
       (h1.db_cpu - h0.db_cpu) db_cpu,
       (h1.connection_management_call - h0.connection_management_call) connection_management_call,
       (h1.sequence_load - h0.sequence_load) sequence_load,
       (h1.sql_execute - h0.sql_execute) sql_execute,
       (h1.parse_time - h0.parse_time) parse_time,
       (h1.hard_parse - h0.hard_parse) hard_parse,
       (h1.plsql_execution - h0.plsql_execution) plsql_execution,
       (h1.inbound_plsql_rpc - h0.inbound_plsql_rpc) inbound_plsql_rpc,
       (h1.plsql_compilation - h0.plsql_compilation) plsql_compilation,
       (h1.java_execution - h0.java_execution) java_execution,
       (h1.repeated_bind - h0.repeated_bind) repeated_bind
  FROM sys_time_model_denorm_2 h0,
       sys_time_model_denorm_2 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.dbid = s0.dbid
   AND s1.instance_number = s0.instance_number
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
),
sys_time_model_denorm_4 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
       (background_time / interval_secs) background_time,
       (background_cpu / interval_secs) background_cpu,
       (rman_cpu / interval_secs) rman_cpu,
       (db_time / interval_secs) db_time,
       (db_cpu / interval_secs) db_cpu,
       (connection_management_call / interval_secs) connection_management_call,
       (sequence_load / interval_secs) sequence_load,
       (sql_execute / interval_secs) sql_execute,
       (parse_time / interval_secs) parse_time,
       (hard_parse / interval_secs) hard_parse,
       (plsql_execution / interval_secs) plsql_execution,
       (inbound_plsql_rpc / interval_secs) inbound_plsql_rpc,
       (plsql_compilation / interval_secs) plsql_compilation,
       (java_execution / interval_secs) java_execution,
       (repeated_bind / interval_secs) repeated_bind
  FROM sys_time_model_denorm_3
),
sys_time_model_denorm_5 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       begin_time,
       end_time,
       CASE instance_number WHEN 1 THEN hard_parse ELSE 0 END inst_01,
       CASE instance_number WHEN 2 THEN hard_parse ELSE 0 END inst_02,
       CASE instance_number WHEN 3 THEN hard_parse ELSE 0 END inst_03,
       CASE instance_number WHEN 4 THEN hard_parse ELSE 0 END inst_04,
       CASE instance_number WHEN 5 THEN hard_parse ELSE 0 END inst_05,
       CASE instance_number WHEN 6 THEN hard_parse ELSE 0 END inst_06,
       CASE instance_number WHEN 7 THEN hard_parse ELSE 0 END inst_07,
       CASE instance_number WHEN 8 THEN hard_parse ELSE 0 END inst_08
  FROM sys_time_model_denorm_4
)
SELECT snap_id,
       MIN(begin_time) begin_time,
       MIN(end_time) end_time,
       ROUND(SUM(inst_01), 3) inst_01,
       ROUND(SUM(inst_02), 3) inst_02,
       ROUND(SUM(inst_03), 3) inst_03,
       ROUND(SUM(inst_04), 3) inst_04,
       ROUND(SUM(inst_05), 3) inst_05,
       ROUND(SUM(inst_06), 3) inst_06,
       ROUND(SUM(inst_07), 3) inst_07,
       ROUND(SUM(inst_08), 3) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sys_time_model_denorm_5
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:01:37 4e.479
Elapsed Hours so far:    0.656
Elapsed Hours so far: .656

Elapsed: 00:00:00.00

12:01:37 4e "00611_edb360_323688_4e_479_stm_hard_parse_elapsed_time_per_instance.html"
12:01:45 4e "00612_edb360_323688_4e_479_stm_hard_parse_elapsed_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.660

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:01:52 4e "System Time Model Components"
12:01:52 STM: PL/SQL execution elapsed time per Instance

WITH
sys_time_model_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'background elapsed time' THEN value / 1e6 ELSE 0 END) background_tim
e,
       SUM(CASE stat_name WHEN 'background cpu time'  THEN value / 1e6 ELSE 0 END) background_cpu,
       SUM(CASE stat_name WHEN 'RMAN cpu time (backup/restore)' THEN value / 1e6 ELSE 0 END) rman_cp
u,
       SUM(CASE stat_name WHEN 'DB time' THEN value / 1e6 ELSE 0 END) db_time,
       SUM(CASE stat_name WHEN 'DB CPU' THEN value / 1e6 ELSE 0 END) db_cpu,
       SUM(CASE stat_name WHEN 'connection management call elapsed time' THEN value / 1e6 ELSE 0 END
) connection_management_call,
       SUM(CASE stat_name WHEN 'sequence load elapsed time' THEN value / 1e6 ELSE 0 END) sequence_lo
ad,
       SUM(CASE stat_name WHEN 'sql execute elapsed time' THEN value / 1e6 ELSE 0 END) sql_execute,
       SUM(CASE stat_name WHEN 'parse time elapsed' THEN value / 1e6 ELSE 0 END) parse_time,
       SUM(CASE stat_name WHEN 'hard parse elapsed time' THEN value / 1e6 ELSE 0 END) hard_parse,
       SUM(CASE stat_name WHEN 'PL/SQL execution elapsed time' THEN value / 1e6 ELSE 0 END) plsql_ex
ecution,
       SUM(CASE stat_name WHEN 'inbound PL/SQL rpc elapsed time' THEN value / 1e6 ELSE 0 END) inboun
d_plsql_rpc,
       SUM(CASE stat_name WHEN 'PL/SQL compilation elapsed time' THEN value / 1e6 ELSE 0 END) plsql_
compilation,
       SUM(CASE stat_name WHEN 'Java execution elapsed time' THEN value / 1e6 ELSE 0 END) java_execu
tion,
       SUM(CASE stat_name WHEN 'repeated bind elapsed time' THEN value / 1e6 ELSE 0 END) repeated_bi
nd
  FROM dba_hist_sys_time_model
 WHERE stat_name IN (
'background elapsed time',
'background cpu time',
'RMAN cpu time (backup/restore)',
'DB time',
'DB CPU',
'connection management call elapsed time',
'sequence load elapsed time',
'sql execute elapsed time',
'parse time elapsed',
'hard parse elapsed time',
'PL/SQL execution elapsed time',
'inbound PL/SQL rpc elapsed time',
'PL/SQL compilation elapsed time',
'Java execution elapsed time',
'repeated bind elapsed time'
)
   AND 'Y' = 'Y'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sys_time_model_denorm_3 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       (h1.background_time - h0.background_time) background_time,
       (h1.background_cpu - h0.background_cpu) background_cpu,
       (h1.rman_cpu - h0.rman_cpu) rman_cpu,
       (h1.db_time - h0.db_time) db_time,
       (h1.db_cpu - h0.db_cpu) db_cpu,
       (h1.connection_management_call - h0.connection_management_call) connection_management_call,
       (h1.sequence_load - h0.sequence_load) sequence_load,
       (h1.sql_execute - h0.sql_execute) sql_execute,
       (h1.parse_time - h0.parse_time) parse_time,
       (h1.hard_parse - h0.hard_parse) hard_parse,
       (h1.plsql_execution - h0.plsql_execution) plsql_execution,
       (h1.inbound_plsql_rpc - h0.inbound_plsql_rpc) inbound_plsql_rpc,
       (h1.plsql_compilation - h0.plsql_compilation) plsql_compilation,
       (h1.java_execution - h0.java_execution) java_execution,
       (h1.repeated_bind - h0.repeated_bind) repeated_bind
  FROM sys_time_model_denorm_2 h0,
       sys_time_model_denorm_2 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.dbid = s0.dbid
   AND s1.instance_number = s0.instance_number
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
),
sys_time_model_denorm_4 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
       (background_time / interval_secs) background_time,
       (background_cpu / interval_secs) background_cpu,
       (rman_cpu / interval_secs) rman_cpu,
       (db_time / interval_secs) db_time,
       (db_cpu / interval_secs) db_cpu,
       (connection_management_call / interval_secs) connection_management_call,
       (sequence_load / interval_secs) sequence_load,
       (sql_execute / interval_secs) sql_execute,
       (parse_time / interval_secs) parse_time,
       (hard_parse / interval_secs) hard_parse,
       (plsql_execution / interval_secs) plsql_execution,
       (inbound_plsql_rpc / interval_secs) inbound_plsql_rpc,
       (plsql_compilation / interval_secs) plsql_compilation,
       (java_execution / interval_secs) java_execution,
       (repeated_bind / interval_secs) repeated_bind
  FROM sys_time_model_denorm_3
),
sys_time_model_denorm_5 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       begin_time,
       end_time,
       CASE instance_number WHEN 1 THEN plsql_execution ELSE 0 END inst_01,
       CASE instance_number WHEN 2 THEN plsql_execution ELSE 0 END inst_02,
       CASE instance_number WHEN 3 THEN plsql_execution ELSE 0 END inst_03,
       CASE instance_number WHEN 4 THEN plsql_execution ELSE 0 END inst_04,
       CASE instance_number WHEN 5 THEN plsql_execution ELSE 0 END inst_05,
       CASE instance_number WHEN 6 THEN plsql_execution ELSE 0 END inst_06,
       CASE instance_number WHEN 7 THEN plsql_execution ELSE 0 END inst_07,
       CASE instance_number WHEN 8 THEN plsql_execution ELSE 0 END inst_08
  FROM sys_time_model_denorm_4
)
SELECT snap_id,
       MIN(begin_time) begin_time,
       MIN(end_time) end_time,
       ROUND(SUM(inst_01), 3) inst_01,
       ROUND(SUM(inst_02), 3) inst_02,
       ROUND(SUM(inst_03), 3) inst_03,
       ROUND(SUM(inst_04), 3) inst_04,
       ROUND(SUM(inst_05), 3) inst_05,
       ROUND(SUM(inst_06), 3) inst_06,
       ROUND(SUM(inst_07), 3) inst_07,
       ROUND(SUM(inst_08), 3) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sys_time_model_denorm_5
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:01:52 4e.480
Elapsed Hours so far:    0.660
Elapsed Hours so far: .66

Elapsed: 00:00:00.00

12:01:52 4e "00613_edb360_323688_4e_480_stm_plsql_execution_elapsed_time_per_instance.html"
12:02:00 4e "00614_edb360_323688_4e_480_stm_plsql_execution_elapsed_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.664

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:02:07 4e "System Time Model Components"
12:02:07 STM: inbound PL/SQL rpc elapsed time per Instance

WITH
sys_time_model_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'background elapsed time' THEN value / 1e6 ELSE 0 END) background_tim
e,
       SUM(CASE stat_name WHEN 'background cpu time'  THEN value / 1e6 ELSE 0 END) background_cpu,
       SUM(CASE stat_name WHEN 'RMAN cpu time (backup/restore)' THEN value / 1e6 ELSE 0 END) rman_cp
u,
       SUM(CASE stat_name WHEN 'DB time' THEN value / 1e6 ELSE 0 END) db_time,
       SUM(CASE stat_name WHEN 'DB CPU' THEN value / 1e6 ELSE 0 END) db_cpu,
       SUM(CASE stat_name WHEN 'connection management call elapsed time' THEN value / 1e6 ELSE 0 END
) connection_management_call,
       SUM(CASE stat_name WHEN 'sequence load elapsed time' THEN value / 1e6 ELSE 0 END) sequence_lo
ad,
       SUM(CASE stat_name WHEN 'sql execute elapsed time' THEN value / 1e6 ELSE 0 END) sql_execute,
       SUM(CASE stat_name WHEN 'parse time elapsed' THEN value / 1e6 ELSE 0 END) parse_time,
       SUM(CASE stat_name WHEN 'hard parse elapsed time' THEN value / 1e6 ELSE 0 END) hard_parse,
       SUM(CASE stat_name WHEN 'PL/SQL execution elapsed time' THEN value / 1e6 ELSE 0 END) plsql_ex
ecution,
       SUM(CASE stat_name WHEN 'inbound PL/SQL rpc elapsed time' THEN value / 1e6 ELSE 0 END) inboun
d_plsql_rpc,
       SUM(CASE stat_name WHEN 'PL/SQL compilation elapsed time' THEN value / 1e6 ELSE 0 END) plsql_
compilation,
       SUM(CASE stat_name WHEN 'Java execution elapsed time' THEN value / 1e6 ELSE 0 END) java_execu
tion,
       SUM(CASE stat_name WHEN 'repeated bind elapsed time' THEN value / 1e6 ELSE 0 END) repeated_bi
nd
  FROM dba_hist_sys_time_model
 WHERE stat_name IN (
'background elapsed time',
'background cpu time',
'RMAN cpu time (backup/restore)',
'DB time',
'DB CPU',
'connection management call elapsed time',
'sequence load elapsed time',
'sql execute elapsed time',
'parse time elapsed',
'hard parse elapsed time',
'PL/SQL execution elapsed time',
'inbound PL/SQL rpc elapsed time',
'PL/SQL compilation elapsed time',
'Java execution elapsed time',
'repeated bind elapsed time'
)
   AND 'Y' = 'Y'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sys_time_model_denorm_3 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       (h1.background_time - h0.background_time) background_time,
       (h1.background_cpu - h0.background_cpu) background_cpu,
       (h1.rman_cpu - h0.rman_cpu) rman_cpu,
       (h1.db_time - h0.db_time) db_time,
       (h1.db_cpu - h0.db_cpu) db_cpu,
       (h1.connection_management_call - h0.connection_management_call) connection_management_call,
       (h1.sequence_load - h0.sequence_load) sequence_load,
       (h1.sql_execute - h0.sql_execute) sql_execute,
       (h1.parse_time - h0.parse_time) parse_time,
       (h1.hard_parse - h0.hard_parse) hard_parse,
       (h1.plsql_execution - h0.plsql_execution) plsql_execution,
       (h1.inbound_plsql_rpc - h0.inbound_plsql_rpc) inbound_plsql_rpc,
       (h1.plsql_compilation - h0.plsql_compilation) plsql_compilation,
       (h1.java_execution - h0.java_execution) java_execution,
       (h1.repeated_bind - h0.repeated_bind) repeated_bind
  FROM sys_time_model_denorm_2 h0,
       sys_time_model_denorm_2 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.dbid = s0.dbid
   AND s1.instance_number = s0.instance_number
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
),
sys_time_model_denorm_4 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
       (background_time / interval_secs) background_time,
       (background_cpu / interval_secs) background_cpu,
       (rman_cpu / interval_secs) rman_cpu,
       (db_time / interval_secs) db_time,
       (db_cpu / interval_secs) db_cpu,
       (connection_management_call / interval_secs) connection_management_call,
       (sequence_load / interval_secs) sequence_load,
       (sql_execute / interval_secs) sql_execute,
       (parse_time / interval_secs) parse_time,
       (hard_parse / interval_secs) hard_parse,
       (plsql_execution / interval_secs) plsql_execution,
       (inbound_plsql_rpc / interval_secs) inbound_plsql_rpc,
       (plsql_compilation / interval_secs) plsql_compilation,
       (java_execution / interval_secs) java_execution,
       (repeated_bind / interval_secs) repeated_bind
  FROM sys_time_model_denorm_3
),
sys_time_model_denorm_5 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       begin_time,
       end_time,
       CASE instance_number WHEN 1 THEN inbound_plsql_rpc ELSE 0 END inst_01,
       CASE instance_number WHEN 2 THEN inbound_plsql_rpc ELSE 0 END inst_02,
       CASE instance_number WHEN 3 THEN inbound_plsql_rpc ELSE 0 END inst_03,
       CASE instance_number WHEN 4 THEN inbound_plsql_rpc ELSE 0 END inst_04,
       CASE instance_number WHEN 5 THEN inbound_plsql_rpc ELSE 0 END inst_05,
       CASE instance_number WHEN 6 THEN inbound_plsql_rpc ELSE 0 END inst_06,
       CASE instance_number WHEN 7 THEN inbound_plsql_rpc ELSE 0 END inst_07,
       CASE instance_number WHEN 8 THEN inbound_plsql_rpc ELSE 0 END inst_08
  FROM sys_time_model_denorm_4
)
SELECT snap_id,
       MIN(begin_time) begin_time,
       MIN(end_time) end_time,
       ROUND(SUM(inst_01), 3) inst_01,
       ROUND(SUM(inst_02), 3) inst_02,
       ROUND(SUM(inst_03), 3) inst_03,
       ROUND(SUM(inst_04), 3) inst_04,
       ROUND(SUM(inst_05), 3) inst_05,
       ROUND(SUM(inst_06), 3) inst_06,
       ROUND(SUM(inst_07), 3) inst_07,
       ROUND(SUM(inst_08), 3) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sys_time_model_denorm_5
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:02:07 4e.481
Elapsed Hours so far:    0.664
Elapsed Hours so far: .664

Elapsed: 00:00:00.00

12:02:07 4e "00615_edb360_323688_4e_481_stm_inbound_plsql_rpc_elapsed_time_per_instance.html"
12:02:15 4e "00616_edb360_323688_4e_481_stm_inbound_plsql_rpc_elapsed_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.669

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:02:23 4e "System Time Model Components"
12:02:23 STM: PL/SQL compilation elapsed time per Instance

WITH
sys_time_model_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'background elapsed time' THEN value / 1e6 ELSE 0 END) background_tim
e,
       SUM(CASE stat_name WHEN 'background cpu time'  THEN value / 1e6 ELSE 0 END) background_cpu,
       SUM(CASE stat_name WHEN 'RMAN cpu time (backup/restore)' THEN value / 1e6 ELSE 0 END) rman_cp
u,
       SUM(CASE stat_name WHEN 'DB time' THEN value / 1e6 ELSE 0 END) db_time,
       SUM(CASE stat_name WHEN 'DB CPU' THEN value / 1e6 ELSE 0 END) db_cpu,
       SUM(CASE stat_name WHEN 'connection management call elapsed time' THEN value / 1e6 ELSE 0 END
) connection_management_call,
       SUM(CASE stat_name WHEN 'sequence load elapsed time' THEN value / 1e6 ELSE 0 END) sequence_lo
ad,
       SUM(CASE stat_name WHEN 'sql execute elapsed time' THEN value / 1e6 ELSE 0 END) sql_execute,
       SUM(CASE stat_name WHEN 'parse time elapsed' THEN value / 1e6 ELSE 0 END) parse_time,
       SUM(CASE stat_name WHEN 'hard parse elapsed time' THEN value / 1e6 ELSE 0 END) hard_parse,
       SUM(CASE stat_name WHEN 'PL/SQL execution elapsed time' THEN value / 1e6 ELSE 0 END) plsql_ex
ecution,
       SUM(CASE stat_name WHEN 'inbound PL/SQL rpc elapsed time' THEN value / 1e6 ELSE 0 END) inboun
d_plsql_rpc,
       SUM(CASE stat_name WHEN 'PL/SQL compilation elapsed time' THEN value / 1e6 ELSE 0 END) plsql_
compilation,
       SUM(CASE stat_name WHEN 'Java execution elapsed time' THEN value / 1e6 ELSE 0 END) java_execu
tion,
       SUM(CASE stat_name WHEN 'repeated bind elapsed time' THEN value / 1e6 ELSE 0 END) repeated_bi
nd
  FROM dba_hist_sys_time_model
 WHERE stat_name IN (
'background elapsed time',
'background cpu time',
'RMAN cpu time (backup/restore)',
'DB time',
'DB CPU',
'connection management call elapsed time',
'sequence load elapsed time',
'sql execute elapsed time',
'parse time elapsed',
'hard parse elapsed time',
'PL/SQL execution elapsed time',
'inbound PL/SQL rpc elapsed time',
'PL/SQL compilation elapsed time',
'Java execution elapsed time',
'repeated bind elapsed time'
)
   AND 'Y' = 'Y'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sys_time_model_denorm_3 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       (h1.background_time - h0.background_time) background_time,
       (h1.background_cpu - h0.background_cpu) background_cpu,
       (h1.rman_cpu - h0.rman_cpu) rman_cpu,
       (h1.db_time - h0.db_time) db_time,
       (h1.db_cpu - h0.db_cpu) db_cpu,
       (h1.connection_management_call - h0.connection_management_call) connection_management_call,
       (h1.sequence_load - h0.sequence_load) sequence_load,
       (h1.sql_execute - h0.sql_execute) sql_execute,
       (h1.parse_time - h0.parse_time) parse_time,
       (h1.hard_parse - h0.hard_parse) hard_parse,
       (h1.plsql_execution - h0.plsql_execution) plsql_execution,
       (h1.inbound_plsql_rpc - h0.inbound_plsql_rpc) inbound_plsql_rpc,
       (h1.plsql_compilation - h0.plsql_compilation) plsql_compilation,
       (h1.java_execution - h0.java_execution) java_execution,
       (h1.repeated_bind - h0.repeated_bind) repeated_bind
  FROM sys_time_model_denorm_2 h0,
       sys_time_model_denorm_2 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.dbid = s0.dbid
   AND s1.instance_number = s0.instance_number
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
),
sys_time_model_denorm_4 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
       (background_time / interval_secs) background_time,
       (background_cpu / interval_secs) background_cpu,
       (rman_cpu / interval_secs) rman_cpu,
       (db_time / interval_secs) db_time,
       (db_cpu / interval_secs) db_cpu,
       (connection_management_call / interval_secs) connection_management_call,
       (sequence_load / interval_secs) sequence_load,
       (sql_execute / interval_secs) sql_execute,
       (parse_time / interval_secs) parse_time,
       (hard_parse / interval_secs) hard_parse,
       (plsql_execution / interval_secs) plsql_execution,
       (inbound_plsql_rpc / interval_secs) inbound_plsql_rpc,
       (plsql_compilation / interval_secs) plsql_compilation,
       (java_execution / interval_secs) java_execution,
       (repeated_bind / interval_secs) repeated_bind
  FROM sys_time_model_denorm_3
),
sys_time_model_denorm_5 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       begin_time,
       end_time,
       CASE instance_number WHEN 1 THEN plsql_compilation ELSE 0 END inst_01,
       CASE instance_number WHEN 2 THEN plsql_compilation ELSE 0 END inst_02,
       CASE instance_number WHEN 3 THEN plsql_compilation ELSE 0 END inst_03,
       CASE instance_number WHEN 4 THEN plsql_compilation ELSE 0 END inst_04,
       CASE instance_number WHEN 5 THEN plsql_compilation ELSE 0 END inst_05,
       CASE instance_number WHEN 6 THEN plsql_compilation ELSE 0 END inst_06,
       CASE instance_number WHEN 7 THEN plsql_compilation ELSE 0 END inst_07,
       CASE instance_number WHEN 8 THEN plsql_compilation ELSE 0 END inst_08
  FROM sys_time_model_denorm_4
)
SELECT snap_id,
       MIN(begin_time) begin_time,
       MIN(end_time) end_time,
       ROUND(SUM(inst_01), 3) inst_01,
       ROUND(SUM(inst_02), 3) inst_02,
       ROUND(SUM(inst_03), 3) inst_03,
       ROUND(SUM(inst_04), 3) inst_04,
       ROUND(SUM(inst_05), 3) inst_05,
       ROUND(SUM(inst_06), 3) inst_06,
       ROUND(SUM(inst_07), 3) inst_07,
       ROUND(SUM(inst_08), 3) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sys_time_model_denorm_5
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:02:23 4e.482
Elapsed Hours so far:    0.669
Elapsed Hours so far: .669

Elapsed: 00:00:00.00

12:02:23 4e "00617_edb360_323688_4e_482_stm_plsql_compilation_elapsed_time_per_instance.html"
12:02:31 4e "00618_edb360_323688_4e_482_stm_plsql_compilation_elapsed_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.673

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:02:38 4e "System Time Model Components"
12:02:38 STM: Java execution elapsed time per Instance

WITH
sys_time_model_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'background elapsed time' THEN value / 1e6 ELSE 0 END) background_tim
e,
       SUM(CASE stat_name WHEN 'background cpu time'  THEN value / 1e6 ELSE 0 END) background_cpu,
       SUM(CASE stat_name WHEN 'RMAN cpu time (backup/restore)' THEN value / 1e6 ELSE 0 END) rman_cp
u,
       SUM(CASE stat_name WHEN 'DB time' THEN value / 1e6 ELSE 0 END) db_time,
       SUM(CASE stat_name WHEN 'DB CPU' THEN value / 1e6 ELSE 0 END) db_cpu,
       SUM(CASE stat_name WHEN 'connection management call elapsed time' THEN value / 1e6 ELSE 0 END
) connection_management_call,
       SUM(CASE stat_name WHEN 'sequence load elapsed time' THEN value / 1e6 ELSE 0 END) sequence_lo
ad,
       SUM(CASE stat_name WHEN 'sql execute elapsed time' THEN value / 1e6 ELSE 0 END) sql_execute,
       SUM(CASE stat_name WHEN 'parse time elapsed' THEN value / 1e6 ELSE 0 END) parse_time,
       SUM(CASE stat_name WHEN 'hard parse elapsed time' THEN value / 1e6 ELSE 0 END) hard_parse,
       SUM(CASE stat_name WHEN 'PL/SQL execution elapsed time' THEN value / 1e6 ELSE 0 END) plsql_ex
ecution,
       SUM(CASE stat_name WHEN 'inbound PL/SQL rpc elapsed time' THEN value / 1e6 ELSE 0 END) inboun
d_plsql_rpc,
       SUM(CASE stat_name WHEN 'PL/SQL compilation elapsed time' THEN value / 1e6 ELSE 0 END) plsql_
compilation,
       SUM(CASE stat_name WHEN 'Java execution elapsed time' THEN value / 1e6 ELSE 0 END) java_execu
tion,
       SUM(CASE stat_name WHEN 'repeated bind elapsed time' THEN value / 1e6 ELSE 0 END) repeated_bi
nd
  FROM dba_hist_sys_time_model
 WHERE stat_name IN (
'background elapsed time',
'background cpu time',
'RMAN cpu time (backup/restore)',
'DB time',
'DB CPU',
'connection management call elapsed time',
'sequence load elapsed time',
'sql execute elapsed time',
'parse time elapsed',
'hard parse elapsed time',
'PL/SQL execution elapsed time',
'inbound PL/SQL rpc elapsed time',
'PL/SQL compilation elapsed time',
'Java execution elapsed time',
'repeated bind elapsed time'
)
   AND 'Y' = 'Y'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sys_time_model_denorm_3 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       (h1.background_time - h0.background_time) background_time,
       (h1.background_cpu - h0.background_cpu) background_cpu,
       (h1.rman_cpu - h0.rman_cpu) rman_cpu,
       (h1.db_time - h0.db_time) db_time,
       (h1.db_cpu - h0.db_cpu) db_cpu,
       (h1.connection_management_call - h0.connection_management_call) connection_management_call,
       (h1.sequence_load - h0.sequence_load) sequence_load,
       (h1.sql_execute - h0.sql_execute) sql_execute,
       (h1.parse_time - h0.parse_time) parse_time,
       (h1.hard_parse - h0.hard_parse) hard_parse,
       (h1.plsql_execution - h0.plsql_execution) plsql_execution,
       (h1.inbound_plsql_rpc - h0.inbound_plsql_rpc) inbound_plsql_rpc,
       (h1.plsql_compilation - h0.plsql_compilation) plsql_compilation,
       (h1.java_execution - h0.java_execution) java_execution,
       (h1.repeated_bind - h0.repeated_bind) repeated_bind
  FROM sys_time_model_denorm_2 h0,
       sys_time_model_denorm_2 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.dbid = s0.dbid
   AND s1.instance_number = s0.instance_number
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
),
sys_time_model_denorm_4 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
       (background_time / interval_secs) background_time,
       (background_cpu / interval_secs) background_cpu,
       (rman_cpu / interval_secs) rman_cpu,
       (db_time / interval_secs) db_time,
       (db_cpu / interval_secs) db_cpu,
       (connection_management_call / interval_secs) connection_management_call,
       (sequence_load / interval_secs) sequence_load,
       (sql_execute / interval_secs) sql_execute,
       (parse_time / interval_secs) parse_time,
       (hard_parse / interval_secs) hard_parse,
       (plsql_execution / interval_secs) plsql_execution,
       (inbound_plsql_rpc / interval_secs) inbound_plsql_rpc,
       (plsql_compilation / interval_secs) plsql_compilation,
       (java_execution / interval_secs) java_execution,
       (repeated_bind / interval_secs) repeated_bind
  FROM sys_time_model_denorm_3
),
sys_time_model_denorm_5 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       begin_time,
       end_time,
       CASE instance_number WHEN 1 THEN java_execution ELSE 0 END inst_01,
       CASE instance_number WHEN 2 THEN java_execution ELSE 0 END inst_02,
       CASE instance_number WHEN 3 THEN java_execution ELSE 0 END inst_03,
       CASE instance_number WHEN 4 THEN java_execution ELSE 0 END inst_04,
       CASE instance_number WHEN 5 THEN java_execution ELSE 0 END inst_05,
       CASE instance_number WHEN 6 THEN java_execution ELSE 0 END inst_06,
       CASE instance_number WHEN 7 THEN java_execution ELSE 0 END inst_07,
       CASE instance_number WHEN 8 THEN java_execution ELSE 0 END inst_08
  FROM sys_time_model_denorm_4
)
SELECT snap_id,
       MIN(begin_time) begin_time,
       MIN(end_time) end_time,
       ROUND(SUM(inst_01), 3) inst_01,
       ROUND(SUM(inst_02), 3) inst_02,
       ROUND(SUM(inst_03), 3) inst_03,
       ROUND(SUM(inst_04), 3) inst_04,
       ROUND(SUM(inst_05), 3) inst_05,
       ROUND(SUM(inst_06), 3) inst_06,
       ROUND(SUM(inst_07), 3) inst_07,
       ROUND(SUM(inst_08), 3) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sys_time_model_denorm_5
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:02:38 4e.483
Elapsed Hours so far:    0.673
Elapsed Hours so far: .673

Elapsed: 00:00:00.00

12:02:38 4e "00619_edb360_323688_4e_483_stm_java_execution_elapsed_time_per_instance.html"
12:02:46 4e "00620_edb360_323688_4e_483_stm_java_execution_elapsed_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.677

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:02:53 4e "System Time Model Components"
12:02:53 STM: repeated bind elapsed time per Instance

WITH
sys_time_model_denorm_2 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       SUM(CASE stat_name WHEN 'background elapsed time' THEN value / 1e6 ELSE 0 END) background_tim
e,
       SUM(CASE stat_name WHEN 'background cpu time'  THEN value / 1e6 ELSE 0 END) background_cpu,
       SUM(CASE stat_name WHEN 'RMAN cpu time (backup/restore)' THEN value / 1e6 ELSE 0 END) rman_cp
u,
       SUM(CASE stat_name WHEN 'DB time' THEN value / 1e6 ELSE 0 END) db_time,
       SUM(CASE stat_name WHEN 'DB CPU' THEN value / 1e6 ELSE 0 END) db_cpu,
       SUM(CASE stat_name WHEN 'connection management call elapsed time' THEN value / 1e6 ELSE 0 END
) connection_management_call,
       SUM(CASE stat_name WHEN 'sequence load elapsed time' THEN value / 1e6 ELSE 0 END) sequence_lo
ad,
       SUM(CASE stat_name WHEN 'sql execute elapsed time' THEN value / 1e6 ELSE 0 END) sql_execute,
       SUM(CASE stat_name WHEN 'parse time elapsed' THEN value / 1e6 ELSE 0 END) parse_time,
       SUM(CASE stat_name WHEN 'hard parse elapsed time' THEN value / 1e6 ELSE 0 END) hard_parse,
       SUM(CASE stat_name WHEN 'PL/SQL execution elapsed time' THEN value / 1e6 ELSE 0 END) plsql_ex
ecution,
       SUM(CASE stat_name WHEN 'inbound PL/SQL rpc elapsed time' THEN value / 1e6 ELSE 0 END) inboun
d_plsql_rpc,
       SUM(CASE stat_name WHEN 'PL/SQL compilation elapsed time' THEN value / 1e6 ELSE 0 END) plsql_
compilation,
       SUM(CASE stat_name WHEN 'Java execution elapsed time' THEN value / 1e6 ELSE 0 END) java_execu
tion,
       SUM(CASE stat_name WHEN 'repeated bind elapsed time' THEN value / 1e6 ELSE 0 END) repeated_bi
nd
  FROM dba_hist_sys_time_model
 WHERE stat_name IN (
'background elapsed time',
'background cpu time',
'RMAN cpu time (backup/restore)',
'DB time',
'DB CPU',
'connection management call elapsed time',
'sequence load elapsed time',
'sql execute elapsed time',
'parse time elapsed',
'hard parse elapsed time',
'PL/SQL execution elapsed time',
'inbound PL/SQL rpc elapsed time',
'PL/SQL compilation elapsed time',
'Java execution elapsed time',
'repeated bind elapsed time'
)
   AND 'Y' = 'Y'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
sys_time_model_denorm_3 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       h1.snap_id,
       h1.dbid,
       h1.instance_number,
       s1.begin_interval_time,
       s1.end_interval_time,
       ROUND((CAST(s1.end_interval_time AS DATE) - CAST(s1.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       (h1.background_time - h0.background_time) background_time,
       (h1.background_cpu - h0.background_cpu) background_cpu,
       (h1.rman_cpu - h0.rman_cpu) rman_cpu,
       (h1.db_time - h0.db_time) db_time,
       (h1.db_cpu - h0.db_cpu) db_cpu,
       (h1.connection_management_call - h0.connection_management_call) connection_management_call,
       (h1.sequence_load - h0.sequence_load) sequence_load,
       (h1.sql_execute - h0.sql_execute) sql_execute,
       (h1.parse_time - h0.parse_time) parse_time,
       (h1.hard_parse - h0.hard_parse) hard_parse,
       (h1.plsql_execution - h0.plsql_execution) plsql_execution,
       (h1.inbound_plsql_rpc - h0.inbound_plsql_rpc) inbound_plsql_rpc,
       (h1.plsql_compilation - h0.plsql_compilation) plsql_compilation,
       (h1.java_execution - h0.java_execution) java_execution,
       (h1.repeated_bind - h0.repeated_bind) repeated_bind
  FROM sys_time_model_denorm_2 h0,
       sys_time_model_denorm_2 h1,
       dba_hist_snapshot s0,
       dba_hist_snapshot s1
 WHERE h1.snap_id = h0.snap_id + 1
   AND h1.dbid = h0.dbid
   AND h1.instance_number = h0.instance_number
   AND s0.snap_id = h0.snap_id
   AND s0.dbid = h0.dbid
   AND s0.instance_number = h0.instance_number
   AND s0.snap_id BETWEEN 3473 AND 4962
   AND s0.dbid = 2109323688
   AND s1.snap_id = h1.snap_id
   AND s1.dbid = h1.dbid
   AND s1.instance_number = h1.instance_number
   AND s1.snap_id = s0.snap_id + 1
   AND s1.dbid = s0.dbid
   AND s1.instance_number = s0.instance_number
   AND s1.startup_time = s0.startup_time
   AND s1.begin_interval_time > (s0.begin_interval_time + (1 / (24 * 60))) /* filter out snaps apart
 < 1 min */
),
sys_time_model_denorm_4 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       dbid,
       instance_number,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
       (background_time / interval_secs) background_time,
       (background_cpu / interval_secs) background_cpu,
       (rman_cpu / interval_secs) rman_cpu,
       (db_time / interval_secs) db_time,
       (db_cpu / interval_secs) db_cpu,
       (connection_management_call / interval_secs) connection_management_call,
       (sequence_load / interval_secs) sequence_load,
       (sql_execute / interval_secs) sql_execute,
       (parse_time / interval_secs) parse_time,
       (hard_parse / interval_secs) hard_parse,
       (plsql_execution / interval_secs) plsql_execution,
       (inbound_plsql_rpc / interval_secs) inbound_plsql_rpc,
       (plsql_compilation / interval_secs) plsql_compilation,
       (java_execution / interval_secs) java_execution,
       (repeated_bind / interval_secs) repeated_bind
  FROM sys_time_model_denorm_3
),
sys_time_model_denorm_5 AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4e.470 */
       snap_id,
       begin_time,
       end_time,
       CASE instance_number WHEN 1 THEN repeated_bind ELSE 0 END inst_01,
       CASE instance_number WHEN 2 THEN repeated_bind ELSE 0 END inst_02,
       CASE instance_number WHEN 3 THEN repeated_bind ELSE 0 END inst_03,
       CASE instance_number WHEN 4 THEN repeated_bind ELSE 0 END inst_04,
       CASE instance_number WHEN 5 THEN repeated_bind ELSE 0 END inst_05,
       CASE instance_number WHEN 6 THEN repeated_bind ELSE 0 END inst_06,
       CASE instance_number WHEN 7 THEN repeated_bind ELSE 0 END inst_07,
       CASE instance_number WHEN 8 THEN repeated_bind ELSE 0 END inst_08
  FROM sys_time_model_denorm_4
)
SELECT snap_id,
       MIN(begin_time) begin_time,
       MIN(end_time) end_time,
       ROUND(SUM(inst_01), 3) inst_01,
       ROUND(SUM(inst_02), 3) inst_02,
       ROUND(SUM(inst_03), 3) inst_03,
       ROUND(SUM(inst_04), 3) inst_04,
       ROUND(SUM(inst_05), 3) inst_05,
       ROUND(SUM(inst_06), 3) inst_06,
       ROUND(SUM(inst_07), 3) inst_07,
       ROUND(SUM(inst_08), 3) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM sys_time_model_denorm_5
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:02:53 4e.484
Elapsed Hours so far:    0.677
Elapsed Hours so far: .677

Elapsed: 00:00:00.00

12:02:53 4e "00621_edb360_323688_4e_484_stm_repeated_bind_elapsed_time_per_instance.html"
12:03:01 4e "00622_edb360_323688_4e_484_stm_repeated_bind_elapsed_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.682

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:03:11 4f "Wait Times and Latency per Class"
12:03:11 Average Latency per Wait Class

-- inspired by http://www.oraclerealworld.com/wait-event-and-wait-class-metrics-vs-vsystem_event/
SELECT /*+  NO_MERGE  */ /* 4f.485 */
       c.wait_class,
       m.inst_id,
       ROUND(10 * m.time_waited / m.wait_count, 3) avg_ms,
       m.wait_count,
       m.time_waited,
       ROUND(m.time_waited / 100) seconds_waited
  FROM gv$waitclassmetric m,
       gv$system_wait_class c
 WHERE m.wait_count > 0
   AND c.inst_id = m.inst_id
   AND c.wait_class# = m.wait_class#
   AND c.wait_class <> 'Idle'
 ORDER BY
       1, 2

12:03:11 4f.485
Elapsed Hours so far:    0.682
Elapsed Hours so far: .682

Elapsed: 00:00:00.00

12:03:11 4f "00623_edb360_323688_4f_485_average_latency_per_wait_class.html"
Elapsed Hours so far:    0.682

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:03:11 4f "Wait Times and Latency per Class"
12:03:11 Average Latency per Wait Event

-- inspired by http://www.oraclerealworld.com/wait-event-and-wait-class-metrics-vs-vsystem_event/
SELECT /*+  NO_MERGE  */ /* 4f.486 */
       e.wait_class,
       e.name event,
       m.inst_id,
       ROUND(10 * m.time_waited / m.wait_count, 3) avg_ms,
       m.wait_count,
       m.time_waited,
       ROUND(m.time_waited / 100) seconds_waited
  FROM gv$eventmetric m,
       gv$event_name e
 WHERE m.wait_count > 0
   AND e.inst_id = m.inst_id
   AND e.event_id = m.event_id
   AND e.wait_class <> 'Idle'
 ORDER BY
       1,2,3

12:03:11 4f.486
Elapsed Hours so far:    0.682
Elapsed Hours so far: .682

Elapsed: 00:00:00.00

12:03:11 4f "00624_edb360_323688_4f_486_average_latency_per_wait_event.html"
Elapsed Hours so far:    0.682

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:03:11 4f "Wait Times and Latency per Class"
12:03:11 User I/O Wait Time per Instance

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - LAG(wait_time_milli) OVER (PARTITION BY snap_id, dbid, instance_number, ev
ent_id, wait_class_id  ORDER BY wait_time_milli)) / 2 /* average wait_time_milli */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'User I/O'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.instance_number,
       (h.wait_time_milli_total / 1000 / 60) wait_minutes
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN wait_minutes ELSE 0 END), 1) inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN wait_minutes ELSE 0 END), 1) inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN wait_minutes ELSE 0 END), 1) inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN wait_minutes ELSE 0 END), 1) inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN wait_minutes ELSE 0 END), 1) inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN wait_minutes ELSE 0 END), 1) inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN wait_minutes ELSE 0 END), 1) inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN wait_minutes ELSE 0 END), 1) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:03:11 4f.487
Elapsed Hours so far:    0.682
Elapsed Hours so far: .682

Elapsed: 00:00:00.00

12:03:11 4f "00625_edb360_323688_4f_487_user_io_wait_time_per_instance.html"
12:03:18 4f "00626_edb360_323688_4f_487_user_io_wait_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.685

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:03:21 4f "Wait Times and Latency per Class"
12:03:21 System I/O Wait Time per Instance

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - LAG(wait_time_milli) OVER (PARTITION BY snap_id, dbid, instance_number, ev
ent_id, wait_class_id  ORDER BY wait_time_milli)) / 2 /* average wait_time_milli */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'System I/O'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.instance_number,
       (h.wait_time_milli_total / 1000 / 60) wait_minutes
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN wait_minutes ELSE 0 END), 1) inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN wait_minutes ELSE 0 END), 1) inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN wait_minutes ELSE 0 END), 1) inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN wait_minutes ELSE 0 END), 1) inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN wait_minutes ELSE 0 END), 1) inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN wait_minutes ELSE 0 END), 1) inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN wait_minutes ELSE 0 END), 1) inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN wait_minutes ELSE 0 END), 1) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:03:21 4f.488
Elapsed Hours so far:    0.685
Elapsed Hours so far: .685

Elapsed: 00:00:00.00

12:03:21 4f "00627_edb360_323688_4f_488_system_io_wait_time_per_instance.html"
12:03:24 4f "00628_edb360_323688_4f_488_system_io_wait_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.686

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:03:27 4f "Wait Times and Latency per Class"
12:03:27 Cluster Wait Time per Instance

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - LAG(wait_time_milli) OVER (PARTITION BY snap_id, dbid, instance_number, ev
ent_id, wait_class_id  ORDER BY wait_time_milli)) / 2 /* average wait_time_milli */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Cluster'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.instance_number,
       (h.wait_time_milli_total / 1000 / 60) wait_minutes
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN wait_minutes ELSE 0 END), 1) inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN wait_minutes ELSE 0 END), 1) inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN wait_minutes ELSE 0 END), 1) inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN wait_minutes ELSE 0 END), 1) inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN wait_minutes ELSE 0 END), 1) inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN wait_minutes ELSE 0 END), 1) inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN wait_minutes ELSE 0 END), 1) inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN wait_minutes ELSE 0 END), 1) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:03:27 4f.489
Elapsed Hours so far:    0.686
Elapsed Hours so far: .686

Elapsed: 00:00:00.01

12:03:27 4f "00629_edb360_323688_4f_489_cluster_wait_time_per_instance.html"
12:03:32 4f "00630_edb360_323688_4f_489_cluster_wait_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.689

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:03:36 4f "Wait Times and Latency per Class"
12:03:36 Commit Wait Time per Instance

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - LAG(wait_time_milli) OVER (PARTITION BY snap_id, dbid, instance_number, ev
ent_id, wait_class_id  ORDER BY wait_time_milli)) / 2 /* average wait_time_milli */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Commit'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.instance_number,
       (h.wait_time_milli_total / 1000 / 60) wait_minutes
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN wait_minutes ELSE 0 END), 1) inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN wait_minutes ELSE 0 END), 1) inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN wait_minutes ELSE 0 END), 1) inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN wait_minutes ELSE 0 END), 1) inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN wait_minutes ELSE 0 END), 1) inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN wait_minutes ELSE 0 END), 1) inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN wait_minutes ELSE 0 END), 1) inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN wait_minutes ELSE 0 END), 1) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:03:36 4f.490
Elapsed Hours so far:    0.689
Elapsed Hours so far: .689

Elapsed: 00:00:00.00

12:03:36 4f "00631_edb360_323688_4f_490_commit_wait_time_per_instance.html"
12:03:37 4f "00632_edb360_323688_4f_490_commit_wait_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.689

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:03:37 4f "Wait Times and Latency per Class"
12:03:37 Concurrency Wait Time per Instance

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - LAG(wait_time_milli) OVER (PARTITION BY snap_id, dbid, instance_number, ev
ent_id, wait_class_id  ORDER BY wait_time_milli)) / 2 /* average wait_time_milli */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Concurrency'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.instance_number,
       (h.wait_time_milli_total / 1000 / 60) wait_minutes
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN wait_minutes ELSE 0 END), 1) inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN wait_minutes ELSE 0 END), 1) inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN wait_minutes ELSE 0 END), 1) inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN wait_minutes ELSE 0 END), 1) inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN wait_minutes ELSE 0 END), 1) inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN wait_minutes ELSE 0 END), 1) inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN wait_minutes ELSE 0 END), 1) inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN wait_minutes ELSE 0 END), 1) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:03:37 4f.491
Elapsed Hours so far:    0.689
Elapsed Hours so far: .689

Elapsed: 00:00:00.00

12:03:37 4f "00633_edb360_323688_4f_491_concurrency_wait_time_per_instance.html"
12:03:41 4f "00634_edb360_323688_4f_491_concurrency_wait_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.691

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:03:44 4f "Wait Times and Latency per Class"
12:03:44 Application Wait Time per Instance

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - LAG(wait_time_milli) OVER (PARTITION BY snap_id, dbid, instance_number, ev
ent_id, wait_class_id  ORDER BY wait_time_milli)) / 2 /* average wait_time_milli */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Application'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.instance_number,
       (h.wait_time_milli_total / 1000 / 60) wait_minutes
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN wait_minutes ELSE 0 END), 1) inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN wait_minutes ELSE 0 END), 1) inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN wait_minutes ELSE 0 END), 1) inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN wait_minutes ELSE 0 END), 1) inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN wait_minutes ELSE 0 END), 1) inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN wait_minutes ELSE 0 END), 1) inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN wait_minutes ELSE 0 END), 1) inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN wait_minutes ELSE 0 END), 1) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:03:44 4f.492
Elapsed Hours so far:    0.691
Elapsed Hours so far: .691

Elapsed: 00:00:00.00

12:03:44 4f "00635_edb360_323688_4f_492_application_wait_time_per_instance.html"
12:03:46 4f "00636_edb360_323688_4f_492_application_wait_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.692

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:03:48 4f "Wait Times and Latency per Class"
12:03:48 Administrative Wait Time per Instance

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - LAG(wait_time_milli) OVER (PARTITION BY snap_id, dbid, instance_number, ev
ent_id, wait_class_id  ORDER BY wait_time_milli)) / 2 /* average wait_time_milli */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Administrative'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.instance_number,
       (h.wait_time_milli_total / 1000 / 60) wait_minutes
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN wait_minutes ELSE 0 END), 1) inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN wait_minutes ELSE 0 END), 1) inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN wait_minutes ELSE 0 END), 1) inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN wait_minutes ELSE 0 END), 1) inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN wait_minutes ELSE 0 END), 1) inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN wait_minutes ELSE 0 END), 1) inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN wait_minutes ELSE 0 END), 1) inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN wait_minutes ELSE 0 END), 1) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:03:48 4f.493
Elapsed Hours so far:    0.692
Elapsed Hours so far: .692

Elapsed: 00:00:00.00

12:03:48 4f "00637_edb360_323688_4f_493_administrative_wait_time_per_instance.html"
12:03:50 4f "00638_edb360_323688_4f_493_administrative_wait_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.693

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:03:51 4f "Wait Times and Latency per Class"
12:03:51 Configuration Wait Time per Instance

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - LAG(wait_time_milli) OVER (PARTITION BY snap_id, dbid, instance_number, ev
ent_id, wait_class_id  ORDER BY wait_time_milli)) / 2 /* average wait_time_milli */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Configuration'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.instance_number,
       (h.wait_time_milli_total / 1000 / 60) wait_minutes
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN wait_minutes ELSE 0 END), 1) inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN wait_minutes ELSE 0 END), 1) inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN wait_minutes ELSE 0 END), 1) inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN wait_minutes ELSE 0 END), 1) inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN wait_minutes ELSE 0 END), 1) inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN wait_minutes ELSE 0 END), 1) inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN wait_minutes ELSE 0 END), 1) inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN wait_minutes ELSE 0 END), 1) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:03:51 4f.494
Elapsed Hours so far:    0.693
Elapsed Hours so far: .693

Elapsed: 00:00:00.00

12:03:51 4f "00639_edb360_323688_4f_494_configuration_wait_time_per_instance.html"
12:03:54 4f "00640_edb360_323688_4f_494_configuration_wait_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.694

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:03:55 4f "Wait Times and Latency per Class"
12:03:55 Network Wait Time per Instance

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - LAG(wait_time_milli) OVER (PARTITION BY snap_id, dbid, instance_number, ev
ent_id, wait_class_id  ORDER BY wait_time_milli)) / 2 /* average wait_time_milli */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Network'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.instance_number,
       (h.wait_time_milli_total / 1000 / 60) wait_minutes
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN wait_minutes ELSE 0 END), 1) inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN wait_minutes ELSE 0 END), 1) inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN wait_minutes ELSE 0 END), 1) inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN wait_minutes ELSE 0 END), 1) inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN wait_minutes ELSE 0 END), 1) inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN wait_minutes ELSE 0 END), 1) inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN wait_minutes ELSE 0 END), 1) inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN wait_minutes ELSE 0 END), 1) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:03:55 4f.495
Elapsed Hours so far:    0.694
Elapsed Hours so far: .694

Elapsed: 00:00:00.00

12:03:55 4f "00641_edb360_323688_4f_495_network_wait_time_per_instance.html"
12:03:57 4f "00642_edb360_323688_4f_495_network_wait_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.695

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:03:58 4f "Wait Times and Latency per Class"
12:03:58 Queueing Wait Time per Instance

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - LAG(wait_time_milli) OVER (PARTITION BY snap_id, dbid, instance_number, ev
ent_id, wait_class_id  ORDER BY wait_time_milli)) / 2 /* average wait_time_milli */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Queueing'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.instance_number,
       (h.wait_time_milli_total / 1000 / 60) wait_minutes
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN wait_minutes ELSE 0 END), 1) inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN wait_minutes ELSE 0 END), 1) inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN wait_minutes ELSE 0 END), 1) inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN wait_minutes ELSE 0 END), 1) inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN wait_minutes ELSE 0 END), 1) inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN wait_minutes ELSE 0 END), 1) inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN wait_minutes ELSE 0 END), 1) inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN wait_minutes ELSE 0 END), 1) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:03:58 4f.496
Elapsed Hours so far:    0.695
Elapsed Hours so far: .695

Elapsed: 00:00:00.00

12:03:58 4f "00643_edb360_323688_4f_496_queueing_wait_time_per_instance.html"
12:03:58 4f "00644_edb360_323688_4f_496_queueing_wait_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.695

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:03:58 4f "Wait Times and Latency per Class"
12:03:58 Scheduler Wait Time per Instance

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - LAG(wait_time_milli) OVER (PARTITION BY snap_id, dbid, instance_number, ev
ent_id, wait_class_id  ORDER BY wait_time_milli)) / 2 /* average wait_time_milli */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Scheduler'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.instance_number,
       (h.wait_time_milli_total / 1000 / 60) wait_minutes
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN wait_minutes ELSE 0 END), 1) inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN wait_minutes ELSE 0 END), 1) inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN wait_minutes ELSE 0 END), 1) inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN wait_minutes ELSE 0 END), 1) inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN wait_minutes ELSE 0 END), 1) inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN wait_minutes ELSE 0 END), 1) inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN wait_minutes ELSE 0 END), 1) inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN wait_minutes ELSE 0 END), 1) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:03:58 4f.497
Elapsed Hours so far:    0.695
Elapsed Hours so far: .695

Elapsed: 00:00:00.00

12:03:59 4f "00645_edb360_323688_4f_497_scheduler_wait_time_per_instance.html"
12:04:00 4f "00646_edb360_323688_4f_497_scheduler_wait_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.696

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:04:00 4f "Wait Times and Latency per Class"
12:04:00 Other Wait Time per Instance

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - LAG(wait_time_milli) OVER (PARTITION BY snap_id, dbid, instance_number, ev
ent_id, wait_class_id  ORDER BY wait_time_milli)) / 2 /* average wait_time_milli */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Other'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.487 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.instance_number,
       (h.wait_time_milli_total / 1000 / 60) wait_minutes
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN wait_minutes ELSE 0 END), 1) inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN wait_minutes ELSE 0 END), 1) inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN wait_minutes ELSE 0 END), 1) inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN wait_minutes ELSE 0 END), 1) inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN wait_minutes ELSE 0 END), 1) inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN wait_minutes ELSE 0 END), 1) inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN wait_minutes ELSE 0 END), 1) inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN wait_minutes ELSE 0 END), 1) inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:04:00 4f.498
Elapsed Hours so far:    0.696
Elapsed Hours so far: .696

Elapsed: 00:00:00.01

12:04:00 4f "00647_edb360_323688_4f_498_other_wait_time_per_instance.html"
12:04:23 4f "00648_edb360_323688_4f_498_other_wait_time_per_instance_line_chart.html"
Elapsed Hours so far:    0.708

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:04:46 4f "Wait Times and Latency per Class"
12:04:46 User I/O Wait Latency Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'User I/O'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_count_this_snap) wait_count_this_snap
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_count_this_snap
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,00) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,01) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,02) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,03) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,04) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_16_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,05) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_32_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,06) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_64_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,07) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_128_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,08) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_256_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,09) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_512_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,10) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1024_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,11) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2048_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,12) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4096_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,13) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8192_ms,
       ROUND(100 * SUM(CASE WHEN wait_time_milli > POWER(2,13) THEN wait_count_this_snap ELSE 0 END)
 / SUM(wait_count_this_snap), 1) more_8192_ms
  FROM per_inst
 GROUP BY
       snap_id
HAVING SUM(wait_count_this_snap) > 0
 ORDER BY
       snap_id

12:04:46 4f.499
Elapsed Hours so far:    0.708
Elapsed Hours so far: .708

Elapsed: 00:00:00.00

12:04:46 4f "00649_edb360_323688_4f_499_user_io_wait_latency_histogram.html"
12:04:49 4f "00650_edb360_323688_4f_499_user_io_wait_latency_histogram_line_chart.html"
Elapsed Hours so far:    0.710

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:04:51 4f "Wait Times and Latency per Class"
12:04:51 System I/O Wait Latency Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'System I/O'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_count_this_snap) wait_count_this_snap
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_count_this_snap
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,00) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,01) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,02) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,03) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,04) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_16_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,05) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_32_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,06) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_64_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,07) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_128_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,08) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_256_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,09) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_512_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,10) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1024_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,11) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2048_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,12) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4096_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,13) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8192_ms,
       ROUND(100 * SUM(CASE WHEN wait_time_milli > POWER(2,13) THEN wait_count_this_snap ELSE 0 END)
 / SUM(wait_count_this_snap), 1) more_8192_ms
  FROM per_inst
 GROUP BY
       snap_id
HAVING SUM(wait_count_this_snap) > 0
 ORDER BY
       snap_id

12:04:51 4f.500
Elapsed Hours so far:    0.710
Elapsed Hours so far: .71

Elapsed: 00:00:00.00

12:04:51 4f "00651_edb360_323688_4f_500_system_io_wait_latency_histogram.html"
12:04:53 4f "00652_edb360_323688_4f_500_system_io_wait_latency_histogram_line_chart.html"
Elapsed Hours so far:    0.711

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:04:54 4f "Wait Times and Latency per Class"
12:04:54 Cluster Wait Latency Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Cluster'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_count_this_snap) wait_count_this_snap
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_count_this_snap
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,00) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,01) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,02) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,03) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,04) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_16_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,05) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_32_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,06) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_64_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,07) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_128_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,08) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_256_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,09) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_512_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,10) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1024_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,11) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2048_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,12) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4096_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,13) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8192_ms,
       ROUND(100 * SUM(CASE WHEN wait_time_milli > POWER(2,13) THEN wait_count_this_snap ELSE 0 END)
 / SUM(wait_count_this_snap), 1) more_8192_ms
  FROM per_inst
 GROUP BY
       snap_id
HAVING SUM(wait_count_this_snap) > 0
 ORDER BY
       snap_id

12:04:54 4f.501
Elapsed Hours so far:    0.711
Elapsed Hours so far: .711

Elapsed: 00:00:00.00

12:04:54 4f "00653_edb360_323688_4f_501_cluster_wait_latency_histogram.html"
12:04:57 4f "00654_edb360_323688_4f_501_cluster_wait_latency_histogram_line_chart.html"
Elapsed Hours so far:    0.712

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:05:00 4f "Wait Times and Latency per Class"
12:05:00 Commit Wait Latency Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Commit'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_count_this_snap) wait_count_this_snap
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_count_this_snap
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,00) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,01) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,02) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,03) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,04) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_16_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,05) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_32_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,06) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_64_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,07) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_128_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,08) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_256_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,09) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_512_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,10) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1024_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,11) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2048_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,12) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4096_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,13) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8192_ms,
       ROUND(100 * SUM(CASE WHEN wait_time_milli > POWER(2,13) THEN wait_count_this_snap ELSE 0 END)
 / SUM(wait_count_this_snap), 1) more_8192_ms
  FROM per_inst
 GROUP BY
       snap_id
HAVING SUM(wait_count_this_snap) > 0
 ORDER BY
       snap_id

12:05:00 4f.502
Elapsed Hours so far:    0.712
Elapsed Hours so far: .712

Elapsed: 00:00:00.00

12:05:00 4f "00655_edb360_323688_4f_502_commit_wait_latency_histogram.html"
12:05:00 4f "00656_edb360_323688_4f_502_commit_wait_latency_histogram_line_chart.html"
Elapsed Hours so far:    0.712

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:05:00 4f "Wait Times and Latency per Class"
12:05:00 Concurrency Wait Latency Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Concurrency'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_count_this_snap) wait_count_this_snap
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_count_this_snap
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,00) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,01) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,02) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,03) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,04) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_16_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,05) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_32_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,06) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_64_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,07) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_128_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,08) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_256_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,09) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_512_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,10) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1024_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,11) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2048_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,12) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4096_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,13) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8192_ms,
       ROUND(100 * SUM(CASE WHEN wait_time_milli > POWER(2,13) THEN wait_count_this_snap ELSE 0 END)
 / SUM(wait_count_this_snap), 1) more_8192_ms
  FROM per_inst
 GROUP BY
       snap_id
HAVING SUM(wait_count_this_snap) > 0
 ORDER BY
       snap_id

12:05:00 4f.503
Elapsed Hours so far:    0.712
Elapsed Hours so far: .712

Elapsed: 00:00:00.00

12:05:01 4f "00657_edb360_323688_4f_503_concurrency_wait_latency_histogram.html"
12:05:02 4f "00658_edb360_323688_4f_503_concurrency_wait_latency_histogram_line_chart.html"
Elapsed Hours so far:    0.713

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:05:04 4f "Wait Times and Latency per Class"
12:05:04 Application Wait Latency Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Application'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_count_this_snap) wait_count_this_snap
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_count_this_snap
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,00) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,01) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,02) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,03) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,04) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_16_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,05) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_32_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,06) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_64_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,07) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_128_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,08) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_256_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,09) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_512_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,10) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1024_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,11) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2048_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,12) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4096_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,13) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8192_ms,
       ROUND(100 * SUM(CASE WHEN wait_time_milli > POWER(2,13) THEN wait_count_this_snap ELSE 0 END)
 / SUM(wait_count_this_snap), 1) more_8192_ms
  FROM per_inst
 GROUP BY
       snap_id
HAVING SUM(wait_count_this_snap) > 0
 ORDER BY
       snap_id

12:05:04 4f.504
Elapsed Hours so far:    0.713
Elapsed Hours so far: .713

Elapsed: 00:00:00.00

12:05:04 4f "00659_edb360_323688_4f_504_application_wait_latency_histogram.html"
12:05:06 4f "00660_edb360_323688_4f_504_application_wait_latency_histogram_line_chart.html"
Elapsed Hours so far:    0.714

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:05:07 4f "Wait Times and Latency per Class"
12:05:07 Administrative Wait Latency Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Administrative'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_count_this_snap) wait_count_this_snap
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_count_this_snap
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,00) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,01) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,02) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,03) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,04) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_16_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,05) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_32_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,06) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_64_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,07) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_128_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,08) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_256_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,09) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_512_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,10) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1024_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,11) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2048_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,12) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4096_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,13) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8192_ms,
       ROUND(100 * SUM(CASE WHEN wait_time_milli > POWER(2,13) THEN wait_count_this_snap ELSE 0 END)
 / SUM(wait_count_this_snap), 1) more_8192_ms
  FROM per_inst
 GROUP BY
       snap_id
HAVING SUM(wait_count_this_snap) > 0
 ORDER BY
       snap_id

12:05:07 4f.505
Elapsed Hours so far:    0.714
Elapsed Hours so far: .714

Elapsed: 00:00:00.00

12:05:07 4f "00661_edb360_323688_4f_505_administrative_wait_latency_histogram.html"
12:05:08 4f "00662_edb360_323688_4f_505_administrative_wait_latency_histogram_line_chart.html"
Elapsed Hours so far:    0.715

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:05:09 4f "Wait Times and Latency per Class"
12:05:09 Configuration Wait Latency Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Configuration'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_count_this_snap) wait_count_this_snap
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_count_this_snap
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,00) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,01) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,02) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,03) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,04) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_16_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,05) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_32_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,06) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_64_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,07) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_128_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,08) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_256_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,09) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_512_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,10) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1024_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,11) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2048_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,12) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4096_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,13) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8192_ms,
       ROUND(100 * SUM(CASE WHEN wait_time_milli > POWER(2,13) THEN wait_count_this_snap ELSE 0 END)
 / SUM(wait_count_this_snap), 1) more_8192_ms
  FROM per_inst
 GROUP BY
       snap_id
HAVING SUM(wait_count_this_snap) > 0
 ORDER BY
       snap_id

12:05:09 4f.506
Elapsed Hours so far:    0.715
Elapsed Hours so far: .715

Elapsed: 00:00:00.00

12:05:09 4f "00663_edb360_323688_4f_506_configuration_wait_latency_histogram.html"
12:05:10 4f "00664_edb360_323688_4f_506_configuration_wait_latency_histogram_line_chart.html"
Elapsed Hours so far:    0.715

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:05:11 4f "Wait Times and Latency per Class"
12:05:11 Network Wait Latency Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Network'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_count_this_snap) wait_count_this_snap
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_count_this_snap
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,00) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,01) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,02) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,03) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,04) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_16_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,05) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_32_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,06) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_64_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,07) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_128_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,08) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_256_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,09) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_512_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,10) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1024_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,11) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2048_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,12) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4096_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,13) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8192_ms,
       ROUND(100 * SUM(CASE WHEN wait_time_milli > POWER(2,13) THEN wait_count_this_snap ELSE 0 END)
 / SUM(wait_count_this_snap), 1) more_8192_ms
  FROM per_inst
 GROUP BY
       snap_id
HAVING SUM(wait_count_this_snap) > 0
 ORDER BY
       snap_id

12:05:11 4f.507
Elapsed Hours so far:    0.715
Elapsed Hours so far: .715

Elapsed: 00:00:00.00

12:05:11 4f "00665_edb360_323688_4f_507_network_wait_latency_histogram.html"
12:05:12 4f "00666_edb360_323688_4f_507_network_wait_latency_histogram_line_chart.html"
Elapsed Hours so far:    0.716

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:05:12 4f "Wait Times and Latency per Class"
12:05:12 Queueing Wait Latency Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Queueing'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_count_this_snap) wait_count_this_snap
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_count_this_snap
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,00) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,01) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,02) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,03) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,04) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_16_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,05) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_32_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,06) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_64_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,07) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_128_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,08) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_256_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,09) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_512_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,10) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1024_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,11) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2048_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,12) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4096_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,13) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8192_ms,
       ROUND(100 * SUM(CASE WHEN wait_time_milli > POWER(2,13) THEN wait_count_this_snap ELSE 0 END)
 / SUM(wait_count_this_snap), 1) more_8192_ms
  FROM per_inst
 GROUP BY
       snap_id
HAVING SUM(wait_count_this_snap) > 0
 ORDER BY
       snap_id

12:05:12 4f.508
Elapsed Hours so far:    0.716
Elapsed Hours so far: .716

Elapsed: 00:00:00.00

12:05:13 4f "00667_edb360_323688_4f_508_queueing_wait_latency_histogram.html"
12:05:13 4f "00668_edb360_323688_4f_508_queueing_wait_latency_histogram_line_chart.html"
Elapsed Hours so far:    0.716

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:05:13 4f "Wait Times and Latency per Class"
12:05:13 Scheduler Wait Latency Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Scheduler'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_count_this_snap) wait_count_this_snap
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_count_this_snap
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,00) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,01) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,02) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,03) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,04) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_16_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,05) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_32_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,06) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_64_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,07) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_128_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,08) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_256_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,09) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_512_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,10) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1024_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,11) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2048_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,12) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4096_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,13) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8192_ms,
       ROUND(100 * SUM(CASE WHEN wait_time_milli > POWER(2,13) THEN wait_count_this_snap ELSE 0 END)
 / SUM(wait_count_this_snap), 1) more_8192_ms
  FROM per_inst
 GROUP BY
       snap_id
HAVING SUM(wait_count_this_snap) > 0
 ORDER BY
       snap_id

12:05:13 4f.509
Elapsed Hours so far:    0.716
Elapsed Hours so far: .716

Elapsed: 00:00:00.00

12:05:13 4f "00669_edb360_323688_4f_509_scheduler_wait_latency_histogram.html"
12:05:13 4f "00670_edb360_323688_4f_509_scheduler_wait_latency_histogram_line_chart.html"
Elapsed Hours so far:    0.716

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:05:14 4f "Wait Times and Latency per Class"
12:05:14 Other Wait Latency Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Other'
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_count_this_snap) wait_count_this_snap
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4f.499 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_count_this_snap
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,00) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,01) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,02) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,03) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,04) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_16_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,05) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_32_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,06) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_64_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,07) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_128_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,08) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_256_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,09) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_512_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,10) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_1024_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,11) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_2048_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,12) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_4096_ms,
       ROUND(100 * SUM(CASE wait_time_milli WHEN POWER(2,13) THEN wait_count_this_snap ELSE 0 END) /
 SUM(wait_count_this_snap), 1) less_8192_ms,
       ROUND(100 * SUM(CASE WHEN wait_time_milli > POWER(2,13) THEN wait_count_this_snap ELSE 0 END)
 / SUM(wait_count_this_snap), 1) more_8192_ms
  FROM per_inst
 GROUP BY
       snap_id
HAVING SUM(wait_count_this_snap) > 0
 ORDER BY
       snap_id

12:05:14 4f.510
Elapsed Hours so far:    0.716
Elapsed Hours so far: .716

Elapsed: 00:00:00.00

12:05:14 4f "00671_edb360_323688_4f_510_other_wait_latency_histogram.html"
12:05:29 4f "00672_edb360_323688_4f_510_other_wait_latency_histogram_line_chart.html"
Elapsed Hours so far:    0.725

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:05:46 4g "AAS Histogram for Top 24 Wait Events"
12:05:46 Top 24 Wait Events

WITH
details AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.511 */
       wait_class,
       event_name,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class <> 'Idle'
),
events AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.511 */
       wait_class,
       event_name,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM details
 WHERE wait_time_milli_total > 0
 GROUP BY
       wait_class,
       event_name
),
ranked AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.511 */
       RANK () OVER (ORDER BY wait_time_milli_total DESC) wrank,
       ROUND(wait_time_milli_total / 1000 / 3600, 1) hours_waited,
       wait_class,
       event_name
  FROM events
)
SELECT hours_waited,
       wait_class,
       event_name
  FROM ranked
 WHERE wrank < 25
 ORDER BY
       wrank

12:05:46 4g.511
Elapsed Hours so far:    0.725
Elapsed Hours so far: .725

Elapsed: 00:00:00.00

12:05:46 4g "00673_edb360_323688_4g_511_top_24_wait_events.html"
Elapsed Hours so far:    0.741

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:06:43 4g "AAS Histogram for Top 24 Wait Events"
12:06:43 Other "ges generic event" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Other') AND event_name = TRIM('ges generic event')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:06:43 4g.512
Elapsed Hours so far:    0.741
Elapsed Hours so far: .741

Elapsed: 00:00:00.00

12:06:43 4g "00674_edb360_323688_4g_512_other_ges_generic_event_average_active_session_histogram.html"
12:06:45 4g "00675_edb360_323688_4g_512_other_ges_generic_event_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.742

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:06:46 4g "AAS Histogram for Top 24 Wait Events"
12:06:46 Network "SQL*Net message to client" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Network') AND event_name = TRIM('SQL*Net message to client')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:06:46 4g.513
Elapsed Hours so far:    0.742
Elapsed Hours so far: .742

Elapsed: 00:00:00.00

12:06:46 4g "00676_edb360_323688_4g_513_network_sqlnet_message_to_client_average_active_session_histogram.html"
12:06:47 4g "00677_edb360_323688_4g_513_network_sqlnet_message_to_client_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.742

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:06:48 4g "AAS Histogram for Top 24 Wait Events"
12:06:48 User I/O "cell single block physical read" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('User I/O') AND event_name = TRIM('cell single block physical read')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:06:48 4g.514
Elapsed Hours so far:    0.742
Elapsed Hours so far: .742

Elapsed: 00:00:00.00

12:06:48 4g "00678_edb360_323688_4g_514_user_io_cell_single_block_physical_read_average_active_session_histogram.html"
12:06:49 4g "00679_edb360_323688_4g_514_user_io_cell_single_block_physical_read_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.743

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:06:50 4g "AAS Histogram for Top 24 Wait Events"
12:06:50 System I/O "control file sequential read" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('System I/O') AND event_name = TRIM('control file sequential read')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:06:50 4g.515
Elapsed Hours so far:    0.743
Elapsed Hours so far: .743

Elapsed: 00:00:00.00

12:06:50 4g "00680_edb360_323688_4g_515_system_io_control_file_sequential_read_average_active_session_histogram.html"
12:06:51 4g "00681_edb360_323688_4g_515_system_io_control_file_sequential_read_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.743

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:06:52 4g "AAS Histogram for Top 24 Wait Events"
12:06:52 Network "SQL*Net more data to client" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Network') AND event_name = TRIM('SQL*Net more data to client')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:06:52 4g.516
Elapsed Hours so far:    0.743
Elapsed Hours so far: .743

Elapsed: 00:00:00.01

12:06:52 4g "00682_edb360_323688_4g_516_network_sqlnet_more_data_to_client_average_active_session_histogram.html"
12:06:54 4g "00683_edb360_323688_4g_516_network_sqlnet_more_data_to_client_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.744

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:06:54 4g "AAS Histogram for Top 24 Wait Events"
12:06:54 Administrative "Backup: MML write backup piece" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Administrative') AND event_name = TRIM('Backup: MML write backup piece')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:06:54 4g.517
Elapsed Hours so far:    0.744
Elapsed Hours so far: .744

Elapsed: 00:00:00.00

12:06:54 4g "00684_edb360_323688_4g_517_administrative_backup_mml_write_backup_piece_average_active_session_histogram.html"
12:06:55 4g "00685_edb360_323688_4g_517_administrative_backup_mml_write_backup_piece_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.744

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:06:56 4g "AAS Histogram for Top 24 Wait Events"
12:06:56 Application "enq: TM - contention" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Application') AND event_name = TRIM('enq: TM - contention')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:06:56 4g.518
Elapsed Hours so far:    0.744
Elapsed Hours so far: .744

Elapsed: 00:00:00.00

12:06:56 4g "00686_edb360_323688_4g_518_application_enq_tm_contention_average_active_session_histogram.html"
12:06:57 4g "00687_edb360_323688_4g_518_application_enq_tm_contention_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.745

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:06:58 4g "AAS Histogram for Top 24 Wait Events"
12:06:58 Other "Redo Transport Attach" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Other') AND event_name = TRIM('Redo Transport Attach')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:06:58 4g.519
Elapsed Hours so far:    0.745
Elapsed Hours so far: .745

Elapsed: 00:00:00.00

12:06:58 4g "00688_edb360_323688_4g_519_other_redo_transport_attach_average_active_session_histogram.html"
12:06:59 4g "00689_edb360_323688_4g_519_other_redo_transport_attach_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.745

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:07:00 4g "AAS Histogram for Top 24 Wait Events"
12:07:00 Cluster "gc cr disk read" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Cluster') AND event_name = TRIM('gc cr disk read')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:07:00 4g.520
Elapsed Hours so far:    0.745
Elapsed Hours so far: .745

Elapsed: 00:00:00.00

12:07:00 4g "00690_edb360_323688_4g_520_cluster_gc_cr_disk_read_average_active_session_histogram.html"
12:07:01 4g "00691_edb360_323688_4g_520_cluster_gc_cr_disk_read_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.746

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:07:02 4g "AAS Histogram for Top 24 Wait Events"
12:07:02 Cluster "gc current block 2-way" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Cluster') AND event_name = TRIM('gc current block 2-way')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:07:02 4g.521
Elapsed Hours so far:    0.746
Elapsed Hours so far: .746

Elapsed: 00:00:00.00

12:07:02 4g "00692_edb360_323688_4g_521_cluster_gc_current_block_2way_average_active_session_histogram.html"
12:07:04 4g "00693_edb360_323688_4g_521_cluster_gc_current_block_2way_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.747

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:07:04 4g "AAS Histogram for Top 24 Wait Events"
12:07:04 Cluster "gc cr grant 2-way" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Cluster') AND event_name = TRIM('gc cr grant 2-way')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:07:04 4g.522
Elapsed Hours so far:    0.747
Elapsed Hours so far: .747

Elapsed: 00:00:00.00

12:07:04 4g "00694_edb360_323688_4g_522_cluster_gc_cr_grant_2way_average_active_session_histogram.html"
12:07:05 4g "00695_edb360_323688_4g_522_cluster_gc_cr_grant_2way_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.747

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:07:05 4g "AAS Histogram for Top 24 Wait Events"
12:07:05 Other "PX Deq: reap credit" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Other') AND event_name = TRIM('PX Deq: reap credit')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:07:05 4g.523
Elapsed Hours so far:    0.747
Elapsed Hours so far: .747

Elapsed: 00:00:00.00

12:07:06 4g "00696_edb360_323688_4g_523_other_px_deq_reap_credit_average_active_session_histogram.html"
12:07:06 4g "00697_edb360_323688_4g_523_other_px_deq_reap_credit_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.747

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:07:07 4g "AAS Histogram for Top 24 Wait Events"
12:07:07 Other "PX qref latch" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Other') AND event_name = TRIM('PX qref latch')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:07:07 4g.524
Elapsed Hours so far:    0.747
Elapsed Hours so far: .747

Elapsed: 00:00:00.00

12:07:07 4g "00698_edb360_323688_4g_524_other_px_qref_latch_average_active_session_histogram.html"
12:07:07 4g "00699_edb360_323688_4g_524_other_px_qref_latch_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.748

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:07:08 4g "AAS Histogram for Top 24 Wait Events"
12:07:08 User I/O "direct path read" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('User I/O') AND event_name = TRIM('direct path read')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:07:08 4g.525
Elapsed Hours so far:    0.748
Elapsed Hours so far: .748

Elapsed: 00:00:00.00

12:07:08 4g "00700_edb360_323688_4g_525_user_io_direct_path_read_average_active_session_histogram.html"
12:07:10 4g "00701_edb360_323688_4g_525_user_io_direct_path_read_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.748

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:07:10 4g "AAS Histogram for Top 24 Wait Events"
12:07:10 User I/O "Disk file operations I/O" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('User I/O') AND event_name = TRIM('Disk file operations I/O')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:07:10 4g.526
Elapsed Hours so far:    0.748
Elapsed Hours so far: .748

Elapsed: 00:00:00.00

12:07:10 4g "00702_edb360_323688_4g_526_user_io_disk_file_operations_io_average_active_session_histogram.html"
12:07:11 4g "00703_edb360_323688_4g_526_user_io_disk_file_operations_io_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.749

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:07:11 4g "AAS Histogram for Top 24 Wait Events"
12:07:11 Other "row cache process" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Other') AND event_name = TRIM('row cache process')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:07:11 4g.527
Elapsed Hours so far:    0.749
Elapsed Hours so far: .749

Elapsed: 00:00:00.00

12:07:11 4g "00704_edb360_323688_4g_527_other_row_cache_process_average_active_session_histogram.html"
12:07:12 4g "00705_edb360_323688_4g_527_other_row_cache_process_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.749

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:07:13 4g "AAS Histogram for Top 24 Wait Events"
12:07:13 User I/O "utl_file I/O" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('User I/O') AND event_name = TRIM('utl_file I/O')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:07:13 4g.528
Elapsed Hours so far:    0.749
Elapsed Hours so far: .749

Elapsed: 00:00:00.00

12:07:13 4g "00706_edb360_323688_4g_528_user_io_utlfile_io_average_active_session_histogram.html"
12:07:13 4g "00707_edb360_323688_4g_528_user_io_utlfile_io_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.749

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:07:14 4g "AAS Histogram for Top 24 Wait Events"
12:07:14 User I/O "Disk file Mirror Read" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('User I/O') AND event_name = TRIM('Disk file Mirror Read')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:07:14 4g.529
Elapsed Hours so far:    0.749
Elapsed Hours so far: .749

Elapsed: 00:00:00.00

12:07:14 4g "00708_edb360_323688_4g_529_user_io_disk_file_mirror_read_average_active_session_histogram.html"
12:07:15 4g "00709_edb360_323688_4g_529_user_io_disk_file_mirror_read_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.750

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:07:16 4g "AAS Histogram for Top 24 Wait Events"
12:07:16 Scheduler "resmgr:cpu quantum" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Scheduler') AND event_name = TRIM('resmgr:cpu quantum')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:07:16 4g.530
Elapsed Hours so far:    0.750
Elapsed Hours so far: .75

Elapsed: 00:00:00.00

12:07:16 4g "00710_edb360_323688_4g_530_scheduler_resmgrcpu_quantum_average_active_session_histogram.html"
12:07:17 4g "00711_edb360_323688_4g_530_scheduler_resmgrcpu_quantum_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.750

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:07:17 4g "AAS Histogram for Top 24 Wait Events"
12:07:17 Cluster "gc current grant 2-way" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Cluster') AND event_name = TRIM('gc current grant 2-way')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:07:17 4g.531
Elapsed Hours so far:    0.750
Elapsed Hours so far: .75

Elapsed: 00:00:00.00

12:07:17 4g "00712_edb360_323688_4g_531_cluster_gc_current_grant_2way_average_active_session_histogram.html"
12:07:18 4g "00713_edb360_323688_4g_531_cluster_gc_current_grant_2way_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.751

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:07:18 4g "AAS Histogram for Top 24 Wait Events"
12:07:18 Cluster "gc buffer busy acquire" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Cluster') AND event_name = TRIM('gc buffer busy acquire')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:07:18 4g.532
Elapsed Hours so far:    0.751
Elapsed Hours so far: .751

Elapsed: 00:00:00.00

12:07:19 4g "00714_edb360_323688_4g_532_cluster_gc_buffer_busy_acquire_average_active_session_histogram.html"
12:07:20 4g "00715_edb360_323688_4g_532_cluster_gc_buffer_busy_acquire_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.751

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:07:20 4g "AAS Histogram for Top 24 Wait Events"
12:07:20 System I/O "log file parallel write" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('System I/O') AND event_name = TRIM('log file parallel write')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:07:20 4g.533
Elapsed Hours so far:    0.751
Elapsed Hours so far: .751

Elapsed: 00:00:00.00

12:07:21 4g "00716_edb360_323688_4g_533_system_io_log_file_parallel_write_average_active_session_histogram.html"
12:07:21 4g "00717_edb360_323688_4g_533_system_io_log_file_parallel_write_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.752

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:07:22 4g "AAS Histogram for Top 24 Wait Events"
12:07:22 User I/O "cell multiblock physical read" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('User I/O') AND event_name = TRIM('cell multiblock physical read')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:07:22 4g.534
Elapsed Hours so far:    0.752
Elapsed Hours so far: .752

Elapsed: 00:00:00.00

12:07:22 4g "00718_edb360_323688_4g_534_user_io_cell_multiblock_physical_read_average_active_session_histogram.html"
12:07:23 4g "00719_edb360_323688_4g_534_user_io_cell_multiblock_physical_read_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.752

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:07:24 4g "AAS Histogram for Top 24 Wait Events"
12:07:24 Other "row cache cleanup" Average Active Session Histogram

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - wait_time_milli/4)  /* middle of the bucket */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Other') AND event_name = TRIM('row cache cleanup')
),
history AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM histogram
 WHERE wait_time_milli_total >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_time_milli
),
per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4g.512 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.wait_time_milli,
       h.wait_time_milli_total,
       (cast(s.end_interval_time as date)-cast(s.begin_interval_time as date)) time_range
  FROM history           h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
),
gendata AS (
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli <=  POWER(2,00)
                             THEN wait_time_milli_total ELSE 0 END),2) less_1_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli >  POWER(2,00) AND wa
it_time_milli < POWER(2,01) THEN wait_time_milli_total ELSE 0 END),2) less_2_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,01) AND wait_time_milli < POWER(2,02) THEN wait_time_milli_total ELSE 0 END),2) less_4_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,02) AND wait_time_milli < POWER(2,03) THEN wait_time_milli_total ELSE 0 END),2) less_8_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,03) AND wait_time_milli < POWER(2,04) THEN wait_time_milli_total ELSE 0 END),2) less_16_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,04) AND wait_time_milli < POWER(2,05) THEN wait_time_milli_total ELSE 0 END),2) less_32_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,05) AND wait_time_milli < POWER(2,06) THEN wait_time_milli_total ELSE 0 END),2) less_64_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,06) AND wait_time_milli < POWER(2,07) THEN wait_time_milli_total ELSE 0 END),2) less_128_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,07) AND wait_time_milli < POWER(2,08) THEN wait_time_milli_total ELSE 0 END),2) less_256_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,08) AND wait_time_milli < POWER(2,09) THEN wait_time_milli_total ELSE 0 END),2) less_512_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,09) AND wait_time_milli < POWER(2,10) THEN wait_time_milli_total ELSE 0 END),2) less_1024_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,10) AND wait_time_milli < POWER(2,11) THEN wait_time_milli_total ELSE 0 END),2) less_2048_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,11) AND wait_time_milli < POWER(2,12) THEN wait_time_milli_total ELSE 0 END),2) less_4096_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,12) AND wait_time_milli < POWER(2,13) THEN wait_time_milli_total ELSE 0 END),2) less_8192_ms,
       ROUND((1/(24*60*60*1000*MIN(time_range)))*SUM(CASE WHEN wait_time_milli             >= POWER(
2,13) THEN wait_time_milli_total ELSE 0 END),2) more_8192_ms
       FROM per_snap
       GROUP BY
              snap_id
)
SELECT *
  FROM gendata
ORDER by snap_id

12:07:24 4g.535
Elapsed Hours so far:    0.752
Elapsed Hours so far: .752

Elapsed: 00:00:00.00

12:07:24 4g "00720_edb360_323688_4g_535_other_row_cache_cleanup_average_active_session_histogram.html"
12:07:25 4g "00721_edb360_323688_4g_535_other_row_cache_cleanup_average_active_session_histogram_line_chart.html"
Elapsed Hours so far:    0.753

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:07:28 4h "Average Latency for Top 24 Wait Events"
12:07:28 Top 24 Wait Events

WITH
details AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.536 */
       wait_class,
       event_name,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - LAG(wait_time_milli) OVER (PARTITION BY snap_id, dbid, instance_number, ev
ent_id, wait_class_id  ORDER BY wait_time_milli)) / 2 /* average wait_time_milli */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class <> 'Idle'
),
events AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.536 */
       wait_class,
       event_name,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM details
 WHERE wait_time_milli_total > 0
 GROUP BY
       wait_class,
       event_name
),
ranked AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.536 */
       RANK () OVER (ORDER BY wait_time_milli_total DESC) wrank,
       ROUND(wait_time_milli_total / 100 / 3600, 1) hours_waited,
       wait_class,
       event_name
  FROM events
)
SELECT hours_waited,
       wait_class,
       event_name
  FROM ranked
 WHERE wrank < 25
 ORDER BY
       wrank

12:07:28 4h.536
Elapsed Hours so far:    0.753
Elapsed Hours so far: .753

Elapsed: 00:00:00.00

12:07:28 4h "00722_edb360_323688_4h_536_top_24_wait_events.html"
Elapsed Hours so far:    0.775

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:08:47 4h "Average Latency for Top 24 Wait Events"
12:08:47 Other "ges generic event" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Other') AND event_name = TRIM('ges generic event')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:08:47 4h.537
Elapsed Hours so far:    0.775
Elapsed Hours so far: .775

Elapsed: 00:00:00.00

12:08:47 4h "00723_edb360_323688_4h_537_other_ges_generic_event_average_latency.html"
12:08:49 4h "00724_edb360_323688_4h_537_other_ges_generic_event_average_latency_line_chart.html"
Elapsed Hours so far:    0.776

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:08:51 4h "Average Latency for Top 24 Wait Events"
12:08:51 Other "Redo Transport Attach" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Other') AND event_name = TRIM('Redo Transport Attach')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:08:51 4h.538
Elapsed Hours so far:    0.776
Elapsed Hours so far: .776

Elapsed: 00:00:00.00

12:08:51 4h "00725_edb360_323688_4h_538_other_redo_transport_attach_average_latency.html"
12:08:51 4h "00726_edb360_323688_4h_538_other_redo_transport_attach_average_latency_line_chart.html"
Elapsed Hours so far:    0.776

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:08:51 4h "Average Latency for Top 24 Wait Events"
12:08:51 Application "enq: TM - contention" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Application') AND event_name = TRIM('enq: TM - contention')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:08:51 4h.539
Elapsed Hours so far:    0.776
Elapsed Hours so far: .776

Elapsed: 00:00:00.01

12:08:51 4h "00727_edb360_323688_4h_539_application_enq_tm_contention_average_latency.html"
12:08:53 4h "00728_edb360_323688_4h_539_application_enq_tm_contention_average_latency_line_chart.html"
Elapsed Hours so far:    0.777

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:08:55 4h "Average Latency for Top 24 Wait Events"
12:08:55 Administrative "Backup: MML write backup piece" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Administrative') AND event_name = TRIM('Backup: MML write backup piece')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:08:55 4h.540
Elapsed Hours so far:    0.777
Elapsed Hours so far: .777

Elapsed: 00:00:00.00

12:08:55 4h "00729_edb360_323688_4h_540_administrative_backup_mml_write_backup_piece_average_latency.html"
12:08:56 4h "00730_edb360_323688_4h_540_administrative_backup_mml_write_backup_piece_average_latency_line_chart.html"
Elapsed Hours so far:    0.778

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:08:57 4h "Average Latency for Top 24 Wait Events"
12:08:57 Network "SQL*Net more data to client" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Network') AND event_name = TRIM('SQL*Net more data to client')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:08:57 4h.541
Elapsed Hours so far:    0.778
Elapsed Hours so far: .778

Elapsed: 00:00:00.00

12:08:57 4h "00731_edb360_323688_4h_541_network_sqlnet_more_data_to_client_average_latency.html"
12:08:58 4h "00732_edb360_323688_4h_541_network_sqlnet_more_data_to_client_average_latency_line_chart.html"
Elapsed Hours so far:    0.779

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:09:00 4h "Average Latency for Top 24 Wait Events"
12:09:00 Scheduler "resmgr:cpu quantum" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Scheduler') AND event_name = TRIM('resmgr:cpu quantum')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:09:00 4h.542
Elapsed Hours so far:    0.779
Elapsed Hours so far: .779

Elapsed: 00:00:00.00

12:09:00 4h "00733_edb360_323688_4h_542_scheduler_resmgrcpu_quantum_average_latency.html"
12:09:00 4h "00734_edb360_323688_4h_542_scheduler_resmgrcpu_quantum_average_latency_line_chart.html"
Elapsed Hours so far:    0.779

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:09:00 4h "Average Latency for Top 24 Wait Events"
12:09:00 User I/O "direct path read" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('User I/O') AND event_name = TRIM('direct path read')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:09:00 4h.543
Elapsed Hours so far:    0.779
Elapsed Hours so far: .779

Elapsed: 00:00:00.00

12:09:00 4h "00735_edb360_323688_4h_543_user_io_direct_path_read_average_latency.html"
12:09:02 4h "00736_edb360_323688_4h_543_user_io_direct_path_read_average_latency_line_chart.html"
Elapsed Hours so far:    0.780

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:09:04 4h "Average Latency for Top 24 Wait Events"
12:09:04 System I/O "log file sequential read" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('System I/O') AND event_name = TRIM('log file sequential read')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:09:04 4h.544
Elapsed Hours so far:    0.780
Elapsed Hours so far: .78

Elapsed: 00:00:00.00

12:09:04 4h "00737_edb360_323688_4h_544_system_io_log_file_sequential_read_average_latency.html"
12:09:06 4h "00738_edb360_323688_4h_544_system_io_log_file_sequential_read_average_latency_line_chart.html"
Elapsed Hours so far:    0.781

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:09:07 4h "Average Latency for Top 24 Wait Events"
12:09:07 User I/O "cell single block physical read" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('User I/O') AND event_name = TRIM('cell single block physical read')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:09:07 4h.545
Elapsed Hours so far:    0.781
Elapsed Hours so far: .781

Elapsed: 00:00:00.00

12:09:07 4h "00739_edb360_323688_4h_545_user_io_cell_single_block_physical_read_average_latency.html"
12:09:09 4h "00740_edb360_323688_4h_545_user_io_cell_single_block_physical_read_average_latency_line_chart.html"
Elapsed Hours so far:    0.782

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:09:10 4h "Average Latency for Top 24 Wait Events"
12:09:10 Concurrency "cursor: pin S wait on X" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Concurrency') AND event_name = TRIM('cursor: pin S wait on X')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:09:10 4h.546
Elapsed Hours so far:    0.782
Elapsed Hours so far: .782

Elapsed: 00:00:00.00

12:09:11 4h "00741_edb360_323688_4h_546_concurrency_cursor_pin_s_wait_on_x_average_latency.html"
12:09:12 4h "00742_edb360_323688_4h_546_concurrency_cursor_pin_s_wait_on_x_average_latency_line_chart.html"
Elapsed Hours so far:    0.783

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:09:14 4h "Average Latency for Top 24 Wait Events"
12:09:14 User I/O "cell multiblock physical read" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('User I/O') AND event_name = TRIM('cell multiblock physical read')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:09:14 4h.547
Elapsed Hours so far:    0.783
Elapsed Hours so far: .783

Elapsed: 00:00:00.00

12:09:14 4h "00743_edb360_323688_4h_547_user_io_cell_multiblock_physical_read_average_latency.html"
12:09:15 4h "00744_edb360_323688_4h_547_user_io_cell_multiblock_physical_read_average_latency_line_chart.html"
Elapsed Hours so far:    0.784

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:09:17 4h "Average Latency for Top 24 Wait Events"
12:09:17 User I/O "cell smart table scan" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('User I/O') AND event_name = TRIM('cell smart table scan')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:09:17 4h.548
Elapsed Hours so far:    0.784
Elapsed Hours so far: .784

Elapsed: 00:00:00.00

12:09:17 4h "00745_edb360_323688_4h_548_user_io_cell_smart_table_scan_average_latency.html"
12:09:17 4h "00746_edb360_323688_4h_548_user_io_cell_smart_table_scan_average_latency_line_chart.html"
Elapsed Hours so far:    0.784

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:09:18 4h "Average Latency for Top 24 Wait Events"
12:09:18 Other "log switch/archive" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Other') AND event_name = TRIM('log switch/archive')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:09:18 4h.549
Elapsed Hours so far:    0.784
Elapsed Hours so far: .784

Elapsed: 00:00:00.00

12:09:18 4h "00747_edb360_323688_4h_549_other_log_switcharchive_average_latency.html"
12:09:19 4h "00748_edb360_323688_4h_549_other_log_switcharchive_average_latency_line_chart.html"
Elapsed Hours so far:    0.784

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:09:19 4h "Average Latency for Top 24 Wait Events"
12:09:19 User I/O "direct path write temp" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('User I/O') AND event_name = TRIM('direct path write temp')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:09:19 4h.550
Elapsed Hours so far:    0.784
Elapsed Hours so far: .784

Elapsed: 00:00:00.00

12:09:19 4h "00749_edb360_323688_4h_550_user_io_direct_path_write_temp_average_latency.html"
12:09:21 4h "00750_edb360_323688_4h_550_user_io_direct_path_write_temp_average_latency_line_chart.html"
Elapsed Hours so far:    0.785

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:09:23 4h "Average Latency for Top 24 Wait Events"
12:09:23 System I/O "log file parallel write" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('System I/O') AND event_name = TRIM('log file parallel write')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:09:23 4h.551
Elapsed Hours so far:    0.785
Elapsed Hours so far: .785

Elapsed: 00:00:00.00

12:09:23 4h "00751_edb360_323688_4h_551_system_io_log_file_parallel_write_average_latency.html"
12:09:25 4h "00752_edb360_323688_4h_551_system_io_log_file_parallel_write_average_latency_line_chart.html"
Elapsed Hours so far:    0.786

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:09:26 4h "Average Latency for Top 24 Wait Events"
12:09:26 User I/O "direct path read temp" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('User I/O') AND event_name = TRIM('direct path read temp')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:09:26 4h.552
Elapsed Hours so far:    0.786
Elapsed Hours so far: .786

Elapsed: 00:00:00.00

12:09:26 4h "00753_edb360_323688_4h_552_user_io_direct_path_read_temp_average_latency.html"
12:09:27 4h "00754_edb360_323688_4h_552_user_io_direct_path_read_temp_average_latency_line_chart.html"
Elapsed Hours so far:    0.787

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:09:28 4h "Average Latency for Top 24 Wait Events"
12:09:28 Other "name-service call wait" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Other') AND event_name = TRIM('name-service call wait')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:09:28 4h.553
Elapsed Hours so far:    0.787
Elapsed Hours so far: .787

Elapsed: 00:00:00.00

12:09:28 4h "00755_edb360_323688_4h_553_other_nameservice_call_wait_average_latency.html"
12:09:30 4h "00756_edb360_323688_4h_553_other_nameservice_call_wait_average_latency_line_chart.html"
Elapsed Hours so far:    0.788

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:09:31 4h "Average Latency for Top 24 Wait Events"
12:09:31 Other "ASM file metadata operation" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Other') AND event_name = TRIM('ASM file metadata operation')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:09:31 4h.554
Elapsed Hours so far:    0.788
Elapsed Hours so far: .788

Elapsed: 00:00:00.00

12:09:31 4h "00757_edb360_323688_4h_554_other_asm_file_metadata_operation_average_latency.html"
12:09:33 4h "00758_edb360_323688_4h_554_other_asm_file_metadata_operation_average_latency_line_chart.html"
Elapsed Hours so far:    0.789

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:09:35 4h "Average Latency for Top 24 Wait Events"
12:09:35 System I/O "flashback log file write" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('System I/O') AND event_name = TRIM('flashback log file write')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:09:35 4h.555
Elapsed Hours so far:    0.789
Elapsed Hours so far: .789

Elapsed: 00:00:00.00

12:09:35 4h "00759_edb360_323688_4h_555_system_io_flashback_log_file_write_average_latency.html"
12:09:37 4h "00760_edb360_323688_4h_555_system_io_flashback_log_file_write_average_latency_line_chart.html"
Elapsed Hours so far:    0.790

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:09:39 4h "Average Latency for Top 24 Wait Events"
12:09:39 System I/O "control file sequential read" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('System I/O') AND event_name = TRIM('control file sequential read')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:09:39 4h.556
Elapsed Hours so far:    0.790
Elapsed Hours so far: .79

Elapsed: 00:00:00.00

12:09:39 4h "00761_edb360_323688_4h_556_system_io_control_file_sequential_read_average_latency.html"
12:09:40 4h "00762_edb360_323688_4h_556_system_io_control_file_sequential_read_average_latency_line_chart.html"
Elapsed Hours so far:    0.791

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:09:42 4h "Average Latency for Top 24 Wait Events"
12:09:42 Other "ges lms sync during dynamic remastering and reconfig" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Other') AND event_name = TRIM('ges lms sync during dynamic remastering and
 reconfig')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:09:42 4h.557
Elapsed Hours so far:    0.791
Elapsed Hours so far: .791

Elapsed: 00:00:00.01

12:09:42 4h "00763_edb360_323688_4h_557_other_ges_lms_sync_during_dynamic_remastering_and_reconfig_average_latency.html"
12:09:43 4h "00764_edb360_323688_4h_557_other_ges_lms_sync_during_dynamic_remastering_and_reconfig_average_latency_line_chart.html"
Elapsed Hours so far:    0.791

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:09:44 4h "Average Latency for Top 24 Wait Events"
12:09:44 Administrative "Backup: MML commit backup piece" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Administrative') AND event_name = TRIM('Backup: MML commit backup piece')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:09:44 4h.558
Elapsed Hours so far:    0.791
Elapsed Hours so far: .791

Elapsed: 00:00:00.00

12:09:44 4h "00765_edb360_323688_4h_558_administrative_backup_mml_commit_backup_piece_average_latency.html"
12:09:45 4h "00766_edb360_323688_4h_558_administrative_backup_mml_commit_backup_piece_average_latency_line_chart.html"
Elapsed Hours so far:    0.792

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:09:46 4h "Average Latency for Top 24 Wait Events"
12:09:46 Application "enq: TX - row lock contention" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Application') AND event_name = TRIM('enq: TX - row lock contention')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:09:46 4h.559
Elapsed Hours so far:    0.792
Elapsed Hours so far: .792

Elapsed: 00:00:00.00

12:09:46 4h "00767_edb360_323688_4h_559_application_enq_tx_row_lock_contention_average_latency.html"
12:09:48 4h "00768_edb360_323688_4h_559_application_enq_tx_row_lock_contention_average_latency_line_chart.html"
Elapsed Hours so far:    0.793

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:09:50 4h "Average Latency for Top 24 Wait Events"
12:09:50 Other "target log write size" Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Other') AND event_name = TRIM('target log write size')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       snap_id,
       dbid,
       instance_number,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
average_average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       a.snap_id,
       a.dbid,
       a.instance_number,
       MIN(a.avg_wait_time_milli) avg_wait_time_milli,
       AVG(b.avg_wait_time_milli) avg_avg_wait_time_milli
  FROM average a,
       average b
 WHERE b.snap_id         <= a.snap_id
   AND b.dbid             = a.dbid
   AND b.instance_number  = a.instance_number
 GROUP BY
       a.snap_id,
       a.dbid,
       a.instance_number
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4h.537 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.avg_wait_time_milli,
       h.avg_avg_wait_time_milli
  FROM average_average   h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms,
       ROUND(SUM(avg_avg_wait_time_milli), 3) latency_trend_ms,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:09:50 4h.560
Elapsed Hours so far:    0.793
Elapsed Hours so far: .793

Elapsed: 00:00:00.00

12:09:50 4h "00769_edb360_323688_4h_560_other_target_log_write_size_average_latency.html"
12:09:52 4h "00770_edb360_323688_4h_560_other_target_log_write_size_average_latency_line_chart.html"
Elapsed Hours so far:    0.794

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:09:56 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:09:56 Top 24 Wait Events

WITH
details AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.561 */
       wait_class,
       event_name,
       (wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_
id, wait_time_milli ORDER BY snap_id)) * /* wait_count_this_snap */
       (wait_time_milli - LAG(wait_time_milli) OVER (PARTITION BY snap_id, dbid, instance_number, ev
ent_id, wait_class_id  ORDER BY wait_time_milli)) / 2 /* average wait_time_milli */
       wait_time_milli_total
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class <> 'Idle'
),
events AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.561 */
       wait_class,
       event_name,
       SUM(wait_time_milli_total) wait_time_milli_total
  FROM details
 WHERE wait_time_milli_total > 0
 GROUP BY
       wait_class,
       event_name
),
ranked AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.561 */
       RANK () OVER (ORDER BY wait_time_milli_total DESC) wrank,
       ROUND(wait_time_milli_total / 100 / 3600, 1) hours_waited,
       wait_class,
       event_name
  FROM events
)
SELECT hours_waited,
       wait_class,
       event_name
  FROM ranked
 WHERE wrank < 25
 ORDER BY
       wrank

12:09:56 4i.561
Elapsed Hours so far:    0.794
Elapsed Hours so far: .794

Elapsed: 00:00:00.00

12:09:56 4i "00771_edb360_323688_4i_561_top_24_wait_events.html"
Elapsed Hours so far:    0.819

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:23 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:23 Other "ges generic event" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Other') AND event_name = TRIM('ges generic event')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:23 4i.562
Elapsed Hours so far:    0.819
Elapsed Hours so far: .819

Elapsed: 00:00:00.00

12:11:23 4i "00772_edb360_323688_4i_562_other_ges_generic_event_waits_count_and_average_latency.html"
12:11:23 4i "00773_edb360_323688_4i_562_other_ges_generic_event_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.819

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:23 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:23 Other "Redo Transport Attach" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Other') AND event_name = TRIM('Redo Transport Attach')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:23 4i.563
Elapsed Hours so far:    0.819
Elapsed Hours so far: .819

Elapsed: 00:00:00.00

12:11:24 4i "00774_edb360_323688_4i_563_other_redo_transport_attach_waits_count_and_average_latency.html"
12:11:24 4i "00775_edb360_323688_4i_563_other_redo_transport_attach_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.819

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:24 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:24 Application "enq: TM - contention" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Application') AND event_name = TRIM('enq: TM - contention')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:24 4i.564
Elapsed Hours so far:    0.819
Elapsed Hours so far: .819

Elapsed: 00:00:00.00

12:11:24 4i "00776_edb360_323688_4i_564_application_enq_tm_contention_waits_count_and_average_latency.html"
12:11:24 4i "00777_edb360_323688_4i_564_application_enq_tm_contention_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.819

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:25 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:25 Administrative "Backup: MML write backup piece" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Administrative') AND event_name = TRIM('Backup: MML write backup piece')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:25 4i.565
Elapsed Hours so far:    0.819
Elapsed Hours so far: .819

Elapsed: 00:00:00.00

12:11:25 4i "00778_edb360_323688_4i_565_administrative_backup_mml_write_backup_piece_waits_count_and_average_latency.html"
12:11:25 4i "00779_edb360_323688_4i_565_administrative_backup_mml_write_backup_piece_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.819

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:26 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:26 Network "SQL*Net more data to client" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Network') AND event_name = TRIM('SQL*Net more data to client')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:26 4i.566
Elapsed Hours so far:    0.819
Elapsed Hours so far: .819

Elapsed: 00:00:00.00

12:11:26 4i "00780_edb360_323688_4i_566_network_sqlnet_more_data_to_client_waits_count_and_average_latency.html"
12:11:26 4i "00781_edb360_323688_4i_566_network_sqlnet_more_data_to_client_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.820

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:26 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:26 Scheduler "resmgr:cpu quantum" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Scheduler') AND event_name = TRIM('resmgr:cpu quantum')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:26 4i.567
Elapsed Hours so far:    0.820
Elapsed Hours so far: .82

Elapsed: 00:00:00.00

12:11:27 4i "00782_edb360_323688_4i_567_scheduler_resmgrcpu_quantum_waits_count_and_average_latency.html"
12:11:27 4i "00783_edb360_323688_4i_567_scheduler_resmgrcpu_quantum_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.820

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:27 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:27 User I/O "direct path read" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('User I/O') AND event_name = TRIM('direct path read')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:27 4i.568
Elapsed Hours so far:    0.820
Elapsed Hours so far: .82

Elapsed: 00:00:00.00

12:11:27 4i "00784_edb360_323688_4i_568_user_io_direct_path_read_waits_count_and_average_latency.html"
12:11:27 4i "00785_edb360_323688_4i_568_user_io_direct_path_read_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.820

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:28 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:28 System I/O "log file sequential read" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('System I/O') AND event_name = TRIM('log file sequential read')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:28 4i.569
Elapsed Hours so far:    0.820
Elapsed Hours so far: .82

Elapsed: 00:00:00.00

12:11:28 4i "00786_edb360_323688_4i_569_system_io_log_file_sequential_read_waits_count_and_average_latency.html"
12:11:28 4i "00787_edb360_323688_4i_569_system_io_log_file_sequential_read_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.820

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:29 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:29 User I/O "cell single block physical read" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('User I/O') AND event_name = TRIM('cell single block physical read')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:29 4i.570
Elapsed Hours so far:    0.820
Elapsed Hours so far: .82

Elapsed: 00:00:00.00

12:11:29 4i "00788_edb360_323688_4i_570_user_io_cell_single_block_physical_read_waits_count_and_average_latency.html"
12:11:29 4i "00789_edb360_323688_4i_570_user_io_cell_single_block_physical_read_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.820

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:29 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:29 Concurrency "cursor: pin S wait on X" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Concurrency') AND event_name = TRIM('cursor: pin S wait on X')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:29 4i.571
Elapsed Hours so far:    0.820
Elapsed Hours so far: .82

Elapsed: 00:00:00.00

12:11:30 4i "00790_edb360_323688_4i_571_concurrency_cursor_pin_s_wait_on_x_waits_count_and_average_latency.html"
12:11:30 4i "00791_edb360_323688_4i_571_concurrency_cursor_pin_s_wait_on_x_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.821

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:30 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:30 User I/O "cell multiblock physical read" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('User I/O') AND event_name = TRIM('cell multiblock physical read')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:30 4i.572
Elapsed Hours so far:    0.821
Elapsed Hours so far: .821

Elapsed: 00:00:00.00

12:11:30 4i "00792_edb360_323688_4i_572_user_io_cell_multiblock_physical_read_waits_count_and_average_latency.html"
12:11:31 4i "00793_edb360_323688_4i_572_user_io_cell_multiblock_physical_read_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.821

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:31 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:31 User I/O "cell smart table scan" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('User I/O') AND event_name = TRIM('cell smart table scan')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:31 4i.573
Elapsed Hours so far:    0.821
Elapsed Hours so far: .821

Elapsed: 00:00:00.00

12:11:31 4i "00794_edb360_323688_4i_573_user_io_cell_smart_table_scan_waits_count_and_average_latency.html"
12:11:31 4i "00795_edb360_323688_4i_573_user_io_cell_smart_table_scan_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.821

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:32 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:32 Other "log switch/archive" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Other') AND event_name = TRIM('log switch/archive')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:32 4i.574
Elapsed Hours so far:    0.821
Elapsed Hours so far: .821

Elapsed: 00:00:00.01

12:11:32 4i "00796_edb360_323688_4i_574_other_log_switcharchive_waits_count_and_average_latency.html"
12:11:32 4i "00797_edb360_323688_4i_574_other_log_switcharchive_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.821

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:32 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:32 User I/O "direct path write temp" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('User I/O') AND event_name = TRIM('direct path write temp')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:32 4i.575
Elapsed Hours so far:    0.821
Elapsed Hours so far: .821

Elapsed: 00:00:00.01

12:11:33 4i "00798_edb360_323688_4i_575_user_io_direct_path_write_temp_waits_count_and_average_latency.html"
12:11:33 4i "00799_edb360_323688_4i_575_user_io_direct_path_write_temp_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.821

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:33 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:33 System I/O "log file parallel write" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('System I/O') AND event_name = TRIM('log file parallel write')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:33 4i.576
Elapsed Hours so far:    0.821
Elapsed Hours so far: .821

Elapsed: 00:00:00.00

12:11:33 4i "00800_edb360_323688_4i_576_system_io_log_file_parallel_write_waits_count_and_average_latency.html"
12:11:34 4i "00801_edb360_323688_4i_576_system_io_log_file_parallel_write_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.822

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:34 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:34 User I/O "direct path read temp" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('User I/O') AND event_name = TRIM('direct path read temp')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:34 4i.577
Elapsed Hours so far:    0.822
Elapsed Hours so far: .822

Elapsed: 00:00:00.00

12:11:34 4i "00802_edb360_323688_4i_577_user_io_direct_path_read_temp_waits_count_and_average_latency.html"
12:11:34 4i "00803_edb360_323688_4i_577_user_io_direct_path_read_temp_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.822

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:35 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:35 Other "name-service call wait" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Other') AND event_name = TRIM('name-service call wait')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:35 4i.578
Elapsed Hours so far:    0.822
Elapsed Hours so far: .822

Elapsed: 00:00:00.00

12:11:35 4i "00804_edb360_323688_4i_578_other_nameservice_call_wait_waits_count_and_average_latency.html"
12:11:35 4i "00805_edb360_323688_4i_578_other_nameservice_call_wait_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.822

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:35 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:35 Other "ASM file metadata operation" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Other') AND event_name = TRIM('ASM file metadata operation')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:35 4i.579
Elapsed Hours so far:    0.822
Elapsed Hours so far: .822

Elapsed: 00:00:00.00

12:11:35 4i "00806_edb360_323688_4i_579_other_asm_file_metadata_operation_waits_count_and_average_latency.html"
12:11:36 4i "00807_edb360_323688_4i_579_other_asm_file_metadata_operation_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.822

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:36 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:36 System I/O "flashback log file write" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('System I/O') AND event_name = TRIM('flashback log file write')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:36 4i.580
Elapsed Hours so far:    0.822
Elapsed Hours so far: .822

Elapsed: 00:00:00.00

12:11:36 4i "00808_edb360_323688_4i_580_system_io_flashback_log_file_write_waits_count_and_average_latency.html"
12:11:37 4i "00809_edb360_323688_4i_580_system_io_flashback_log_file_write_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.822

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:37 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:37 System I/O "control file sequential read" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('System I/O') AND event_name = TRIM('control file sequential read')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:37 4i.581
Elapsed Hours so far:    0.822
Elapsed Hours so far: .822

Elapsed: 00:00:00.00

12:11:37 4i "00810_edb360_323688_4i_581_system_io_control_file_sequential_read_waits_count_and_average_latency.html"
12:11:37 4i "00811_edb360_323688_4i_581_system_io_control_file_sequential_read_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.823

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:38 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:38 Other "ges lms sync during dynamic remastering and reconfig" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Other') AND event_name = TRIM('ges lms sync during dynamic remastering and
 reconfig')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:38 4i.582
Elapsed Hours so far:    0.823
Elapsed Hours so far: .823

Elapsed: 00:00:00.00

12:11:38 4i "00812_edb360_323688_4i_582_other_ges_lms_sync_during_dynamic_remastering_and_reconfig_waits_count_and_average_latency.html"
12:11:38 4i "00813_edb360_323688_4i_582_other_ges_lms_sync_during_dynamic_remastering_and_reconfig_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.823

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:38 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:38 Administrative "Backup: MML commit backup piece" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Administrative') AND event_name = TRIM('Backup: MML commit backup piece')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:38 4i.583
Elapsed Hours so far:    0.823
Elapsed Hours so far: .823

Elapsed: 00:00:00.00

12:11:39 4i "00814_edb360_323688_4i_583_administrative_backup_mml_commit_backup_piece_waits_count_and_average_latency.html"
12:11:39 4i "00815_edb360_323688_4i_583_administrative_backup_mml_commit_backup_piece_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.823

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:39 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:39 Application "enq: TX - row lock contention" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Application') AND event_name = TRIM('enq: TX - row lock contention')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:39 4i.584
Elapsed Hours so far:    0.823
Elapsed Hours so far: .823

Elapsed: 00:00:00.00

12:11:39 4i "00816_edb360_323688_4i_584_application_enq_tx_row_lock_contention_waits_count_and_average_latency.html"
12:11:40 4i "00817_edb360_323688_4i_584_application_enq_tx_row_lock_contention_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.823

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:40 4i "Waits Count v.s. Average Latency for Top 24 Wait Events"
12:11:40 Other "target log write size" Waits Count and Average Latency

WITH
histogram AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       wait_time_milli,
       wait_count - LAG(wait_count) OVER (PARTITION BY dbid, instance_number, event_id, wait_class_i
d, wait_time_milli ORDER BY snap_id) wait_count_this_snap
  FROM dba_hist_event_histogram
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = TRIM('Other') AND event_name = TRIM('target log write size')
),
average AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       snap_id,
       dbid,
       instance_number,
       SUM(wait_count_this_snap) waits_count_this_snap,
       SUM((CASE wait_time_milli WHEN 1 THEN 0.50 ELSE 0.75 END) * wait_time_milli * wait_count_this
_snap)/SUM(wait_count_this_snap) avg_wait_time_milli
  FROM histogram
 WHERE wait_count_this_snap >= 0
 GROUP BY
       snap_id,
       dbid,
       instance_number
HAVING SUM(wait_count_this_snap) > 0
),
per_inst AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4i.562 */
       h.snap_id,
       s.begin_interval_time,
       s.end_interval_time,
       h.waits_count_this_snap,
       h.avg_wait_time_milli
  FROM average h,
       dba_hist_snapshot s
 WHERE s.snap_id         = h.snap_id
   AND s.dbid            = h.dbid
   AND s.instance_number = h.instance_number
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(waits_count_this_snap)) waits_count,
       ROUND(SUM(avg_wait_time_milli), 3) avg_latency_ms
  FROM per_inst
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:40 4i.585
Elapsed Hours so far:    0.823
Elapsed Hours so far: .823

Elapsed: 00:00:00.00

12:11:40 4i "00818_edb360_323688_4i_585_other_target_log_write_size_waits_count_and_average_latency.html"
12:11:41 4i "00819_edb360_323688_4i_585_other_target_log_write_size_waits_count_and_average_latency_line_chart.html"
Elapsed Hours so far:    0.825

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:44 4j "Parallel Execution"
12:11:44 DOP Limit Method

SELECT /*+  NO_MERGE  */ /* 4j.586 */
       *
    FROM v$parallel_degree_limit_mth

12:11:44 4j.586
Elapsed Hours so far:    0.825
Elapsed Hours so far: .825

Elapsed: 00:00:00.00

12:11:44 4j "00820_edb360_323688_4j_586_dop_limit_method.html"
Elapsed Hours so far:    0.825

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:45 4j "Parallel Execution"
12:11:45 PX Buffer Advice

SELECT /*+  NO_MERGE  */ /* 4j.587 */
       *
  FROM gv$px_buffer_advice
 ORDER BY 1, 2

12:11:45 4j.587
Elapsed Hours so far:    0.825
Elapsed Hours so far: .825

Elapsed: 00:00:00.00

12:11:45 4j "00821_edb360_323688_4j_587_px_buffer_advice.html"
Elapsed Hours so far:    0.825

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:45 4j "Parallel Execution"
12:11:45 PQ System Stats

SELECT /*+  NO_MERGE  */ /* 4j.588 */
       *
  FROM gv$pq_sysstat
 ORDER BY 1, 2

12:11:45 4j.588
Elapsed Hours so far:    0.825
Elapsed Hours so far: .825

Elapsed: 00:00:00.00

12:11:45 4j "00822_edb360_323688_4j_588_pq_system_stats.html"
Elapsed Hours so far:    0.825

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:45 4j "Parallel Execution"
12:11:45 PX Process System Stats

SELECT /*+  NO_MERGE  */ /* 4j.589 */
       *
  FROM gv$px_process_sysstat
 ORDER BY 1, 2

12:11:45 4j.589
Elapsed Hours so far:    0.825
Elapsed Hours so far: .825

Elapsed: 00:00:00.01

12:11:45 4j "00823_edb360_323688_4j_589_px_process_system_stats.html"
Elapsed Hours so far:    0.825

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:45 4j "Parallel Execution"
12:11:45 System Stats

SELECT /*+  NO_MERGE  */ /* 4j.590 */
       *
  FROM gv$sysstat
 ORDER BY 1, UPPER(name)

12:11:45 4j.590
Elapsed Hours so far:    0.825
Elapsed Hours so far: .825

Elapsed: 00:00:00.00

12:11:46 4j "00824_edb360_323688_4j_590_system_stats.html"
Elapsed Hours so far:    0.825

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:46 4j "Parallel Execution"
12:11:46 PQ Slave

SELECT * FROM gv$pq_slave ORDER BY 1, 2

12:11:46 4j.591
Elapsed Hours so far:    0.825
Elapsed Hours so far: .825

Elapsed: 00:00:00.01

12:11:46 4j "00825_edb360_323688_4j_591_pq_slave.html"
Elapsed Hours so far:    0.825

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:46 4j "Parallel Execution"
12:11:46 PX Sessions

SELECT /*+  NO_MERGE  */ /* 4j.592 */
       pxs.inst_id,
       pxs.qcsid,
       NVL(pxp.server_name, 'QC') server_name,
       pxs.sid,
       pxs.serial#,
       NVL(pxp.pid, pro.pid) pid,
       NVL(pxp.spid, pro.spid) spid,
       pxs.server_group,
       pxs.server_set,
       pxs.server#,
       pxs.degree,
       pxs.req_degree,
       swt.event,
       ses.sql_id,
       ses.sql_child_number,
       ses.resource_consumer_group,
       ses.module,
       ses.action
  FROM gv$px_session pxs,
       gv$px_process pxp,
       gv$session ses,
       gv$process pro,
       gv$session_wait swt
 WHERE pxp.inst_id(+) = pxs.inst_id
   AND pxp.sid(+) = pxs.sid
   AND pxp.serial#(+) = pxs.serial#
   AND ses.inst_id(+) = pxs.inst_id
   AND ses.sid(+) = pxs.sid
   AND ses.serial#(+) = pxs.serial#
   AND ses.saddr(+) = pxs.saddr
   AND pro.inst_id(+) = ses.inst_id
   AND pro.addr(+) = ses.paddr
   AND swt.inst_id(+) = ses.inst_id
   AND swt.sid(+) = ses.sid
 ORDER BY
       pxs.inst_id,
       pxs.qcsid,
       pxs.qcserial# NULLS FIRST,
       pxp.server_name NULLS FIRST

12:11:46 4j.592
Elapsed Hours so far:    0.825
Elapsed Hours so far: .825

Elapsed: 00:00:00.00

12:11:46 4j "00826_edb360_323688_4j_592_px_sessions.html"
Elapsed Hours so far:    0.825

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:47 4j "Parallel Execution"
12:11:47 PX Sessions Stats

SELECT /*+  NO_MERGE  */ /* 4j.593 */
       s.*,
       n.name
  FROM gv$px_sesstat s,
       gv$sysstat n
 WHERE s.value > 0
   AND n.inst_id = s.inst_id
   AND n.statistic# = s.statistic#
 ORDER BY s.inst_id, s.qcsid NULLS FIRST, s.sid

12:11:47 4j.593
Elapsed Hours so far:    0.825
Elapsed Hours so far: .825

Elapsed: 00:00:00.00

12:11:47 4j "00827_edb360_323688_4j_593_px_sessions_stats.html"
Elapsed Hours so far:    0.825

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:47 4j "Parallel Execution"
12:11:47 PX Processes

SELECT /*+  NO_MERGE  */ /* 4j.594 */
       *
  FROM gv$px_process
 ORDER BY 1, 2

12:11:47 4j.594
Elapsed Hours so far:    0.825
Elapsed Hours so far: .825

Elapsed: 00:00:00.00

12:11:47 4j "00828_edb360_323688_4j_594_px_processes.html"
Elapsed Hours so far:    0.825

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:48 4j "Parallel Execution"
12:11:48 Services

SELECT /*+  NO_MERGE  */ /* 4j.595 */
       *
  FROM gv$services
 ORDER BY 1, 2

12:11:48 4j.595
Elapsed Hours so far:    0.825
Elapsed Hours so far: .825

Elapsed: 00:00:00.00

12:11:48 4j "00829_edb360_323688_4j_595_services.html"
Elapsed Hours so far:    0.826

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:48 4j "Parallel Execution"
12:11:48 IO Last Calibration Results

SELECT /*+  NO_MERGE  */ /* 4j.596 */
       *
  FROM dba_rsrc_io_calibrate
 ORDER BY
       1, 2

12:11:48 4j.596
Elapsed Hours so far:    0.826
Elapsed Hours so far: .826

Elapsed: 00:00:00.00

12:11:48 4j "00830_edb360_323688_4j_596_io_last_calibration_results.html"
Elapsed Hours so far:    0.826

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:48 4j "Parallel Execution"
12:11:48 Parallel Parameters

-- inspired on parmsd.sql (Kerry Osborne)
select name, description, value, isdefault, ismodified, isset
from
(
select flag,name,value,isdefault,ismodified,
case when isdefault||ismodified = 'TRUEFALSE' then 'FALSE' else 'TRUE' end isset ,
description
from
   (
       select
            decode(substr(i.ksppinm,1,1),'_',2,1) flag
            , i.ksppinm name
            , sv.ksppstvl value
            , sv.ksppstdf  isdefault
--            , decode(bitand(sv.ksppstvf,7),1,'MODIFIED',4,'SYSTEM_MOD','FALSE') ismodified
            , decode(bitand(sv.ksppstvf,7),1,'TRUE',4,'TRUE','FALSE') ismodified
, i.KSPPDESC description
         from sys.x$ksppi  i
            , sys.x$ksppsv sv
        where i.indx = sv.indx
   )
)
where name like nvl('%parallel%',name)
and flag != 3
order by flag,replace(name,'_','')

12:11:48 4j.597
Elapsed Hours so far:    0.826
Elapsed Hours so far: .826

Elapsed: 00:00:00.00

12:11:48 4j "00831_edb360_323688_4j_597_parallel_parameters.html"
Elapsed Hours so far:    0.826

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:11:49 4j "Parallel Execution"
12:11:49 Parallel Operations

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4j.598 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('queries parallelized', 'DML statements parallelized', 'DDL statements parall
elized', 'Parallel operations not downgraded', 'Parallel operations downgraded to serial', 'Parallel
 operations downgraded 1 to 25 pct', 'Parallel operations downgraded 25 to 50 pct', 'Parallel operat
ions downgraded 50 to 75 pct', 'Parallel operations downgraded 75 to 99 pct', 'DFO trees parallelize
d', '@stat_name_11@', '@stat_name_12@', '@stat_name_13@', '@stat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4j.598 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 4j.598 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'queries parallelized' THEN value ELSE 0 END) "queries parallelized",

       SUM(CASE stat_name WHEN 'DML statements parallelized' THEN value ELSE 0 END) "DML statements
parallelized",
       SUM(CASE stat_name WHEN 'DDL statements parallelized' THEN value ELSE 0 END) "DDL statements
parallelized",
       SUM(CASE stat_name WHEN 'Parallel operations not downgraded' THEN value ELSE 0 END) " not dow
ngraded",
       SUM(CASE stat_name WHEN 'Parallel operations downgraded to serial' THEN value ELSE 0 END) " d
owngraded to serial",
       SUM(CASE stat_name WHEN 'Parallel operations downgraded 1 to 25 pct' THEN value ELSE 0 END) "
 downgraded 1 to 25 pct",
       SUM(CASE stat_name WHEN 'Parallel operations downgraded 25 to 50 pct' THEN value ELSE 0 END)
" downgraded 25 to 50 pct",
       SUM(CASE stat_name WHEN 'Parallel operations downgraded 50 to 75 pct' THEN value ELSE 0 END)
" downgraded 50 to 75 pct",
       SUM(CASE stat_name WHEN 'Parallel operations downgraded 75 to 99 pct' THEN value ELSE 0 END)
" downgraded 75 to 99 pct",
       SUM(CASE stat_name WHEN 'DFO trees parallelized' THEN value ELSE 0 END) "DFO trees paralleliz
ed",
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:11:49 4j.598
Elapsed Hours so far:    0.826
Elapsed Hours so far: .826

Elapsed: 00:00:00.00

12:11:49 4j "00832_edb360_323688_4j_598_parallel_operations.html"
12:12:27 4j "00833_edb360_323688_4j_598_parallel_operations_line_chart.html"
Elapsed Hours so far:    0.845

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:12:56 4j "Parallel Execution"
12:12:56 Parallel Downgrade Perc

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4j.599 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('queries parallelized','DML statements parallelized','DDL statements parallel
ized',
                        'Parallel operations not downgraded','Parallel operations downgraded to seri
al',
                        'Parallel operations downgraded 1 to 25 pct','Parallel operations downgraded
 25 to 50 pct',
                        'Parallel operations downgraded 50 to 75 pct','Parallel operations downgrade
d 75 to 99 pct'
                        ,'DFO trees parallelized')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4j.599 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
), pxstats as (
SELECT /*+  NO_MERGE  */ /* 4j.599 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'queries parallelized' THEN value ELSE 0 END) queries_px,
       SUM(CASE stat_name WHEN 'DML statements parallelized' THEN value ELSE 0 END) dml_px,
       SUM(CASE stat_name WHEN 'DDL statements parallelized' THEN value ELSE 0 END) ddl_px,
       SUM(CASE  WHEN stat_name in  ('queries parallelized','DML statements parallelized','DDL state
ments parallelized') THEN value ELSE 0 END) sql_px_total,
       SUM(CASE stat_name WHEN 'Parallel operations not downgraded' THEN value ELSE 0 END) no_downgr
ade,
       SUM(CASE stat_name WHEN 'Parallel operations downgraded to serial' THEN value ELSE 0 END) PX_
SERIAL,
       SUM(CASE stat_name WHEN 'Parallel operations downgraded 1 to 25 pct' THEN value ELSE 0 END) P
X1_25,
       SUM(CASE stat_name WHEN 'Parallel operations downgraded 25 to 50 pct' THEN value ELSE 0 END)
PX25_50,
       SUM(CASE stat_name WHEN 'Parallel operations downgraded 50 to 75 pct' THEN value ELSE 0 END)
PX50_75,
       SUM(CASE stat_name WHEN 'Parallel operations downgraded 75 to 99 pct' THEN value ELSE 0 END)
PX77_99,
        SUM(CASE stat_name WHEN 'DFO trees parallelized' THEN value ELSE 0 END) DFO,
       SUM(CASE  WHEN stat_name like 'Parallel operations downgraded %' THEN value ELSE 0 END) total
_downgrade,
       SUM(CASE  WHEN stat_name like 'Parallel operations downgraded % pct' THEN value ELSE 0 END) p
arcial_downgrade,
       SUM(CASE  WHEN stat_name in  ('queries parallelized','DML statements parallelized','DDL state
ments parallelized')
                 OR stat_name = 'Parallel operations downgraded to serial'
                        THEN value ELSE 0 END) TOTAL_SQL
  FROM stat_name_per_snap
 GROUP BY
       snap_id)
SELECT  snap_id
        ,begin_time
        ,end_time
        ,100*round(parcial_downgrade/decode(total_sql,0,1,total_sql),2) "Perc PX Partial Downgrade"
        ,100*round(no_downgrade/decode(total_sql,0,1,total_sql),2) "Perc PX No Downgrade"
        ,100*round(px_serial/decode(total_sql,0,1,total_sql),2) "Perc Serial"
       ,0 dummy_04
       ,0 dummy_05
       ,0 dummy_06
       ,0 dummy_07
       ,0 dummy_08
       ,0 dummy_09
       ,0 dummy_10
       ,0 dummy_11
       ,0 dummy_12
       ,0 dummy_13
       ,0 dummy_14
       ,0 dummy_15
from pxstats
 ORDER BY
       snap_id

12:12:56 4j.599
Elapsed Hours so far:    0.845
Elapsed Hours so far: .845

Elapsed: 00:00:00.00

12:12:57 4j "00834_edb360_323688_4j_599_parallel_downgrade_perc.html"
12:13:34 4j "00835_edb360_323688_4j_599_parallel_downgrade_perc_line_chart.html"
Elapsed Hours so far:    0.863

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:14:04 4j "Parallel Execution"
12:14:04 Parallel Max Servers Time Series

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4j.599 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('queries parallelized','DML statements parallelized','DDL statements parallel
ized',
                        'Parallel operations not downgraded','Parallel operations downgraded to seri
al',
                        'Parallel operations downgraded 1 to 25 pct','Parallel operations downgraded
 25 to 50 pct',
                        'Parallel operations downgraded 50 to 75 pct','Parallel operations downgrade
d 75 to 99 pct'
                        ,'DFO trees parallelized')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4j.599 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
), pxstats as (
SELECT /*+  NO_MERGE  */ /* 4j.599 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'queries parallelized' THEN value ELSE 0 END) queries_px,
       SUM(CASE stat_name WHEN 'DML statements parallelized' THEN value ELSE 0 END) dml_px,
       SUM(CASE stat_name WHEN 'DDL statements parallelized' THEN value ELSE 0 END) ddl_px,
       SUM(CASE  WHEN stat_name in  ('queries parallelized','DML statements parallelized','DDL state
ments parallelized') THEN value ELSE 0 END) sql_px_total,
       SUM(CASE stat_name WHEN 'Parallel operations not downgraded' THEN value ELSE 0 END) no_downgr
ade,
       SUM(CASE stat_name WHEN 'Parallel operations downgraded to serial' THEN value ELSE 0 END) PX_
SERIAL,
       SUM(CASE stat_name WHEN 'Parallel operations downgraded 1 to 25 pct' THEN value ELSE 0 END) P
X1_25,
       SUM(CASE stat_name WHEN 'Parallel operations downgraded 25 to 50 pct' THEN value ELSE 0 END)
PX25_50,
       SUM(CASE stat_name WHEN 'Parallel operations downgraded 50 to 75 pct' THEN value ELSE 0 END)
PX50_75,
       SUM(CASE stat_name WHEN 'Parallel operations downgraded 75 to 99 pct' THEN value ELSE 0 END)
PX77_99,
        SUM(CASE stat_name WHEN 'DFO trees parallelized' THEN value ELSE 0 END) DFO,
       SUM(CASE  WHEN stat_name like 'Parallel operations downgraded %' THEN value ELSE 0 END) total
_downgrade,
       SUM(CASE  WHEN stat_name like 'Parallel operations downgraded % pct' THEN value ELSE 0 END) p
arcial_downgrade,
       SUM(CASE  WHEN stat_name in  ('queries parallelized','DML statements parallelized','DDL state
ments parallelized')
                 OR stat_name = 'Parallel operations downgraded to serial'
                        THEN value ELSE 0 END) TOTAL_SQL
  FROM stat_name_per_snap
 GROUP BY
       snap_id)
SELECT  snap_id
        ,begin_time
        ,end_time
        ,100*round(parcial_downgrade/decode(total_sql,0,1,total_sql),2) dummy_01
        ,100*round(no_downgrade/decode(total_sql,0,1,total_sql),2) dummy_02
        ,100*round(px_serial/decode(total_sql,0,1,total_sql),2) dummy_03
       ,0 dummy_04
       ,0 dummy_05
       ,0 dummy_06
       ,0 dummy_07
       ,0 dummy_08
       ,0 dummy_09
       ,0 dummy_10
       ,0 dummy_11
       ,0 dummy_12
       ,0 dummy_13
       ,0 dummy_14
       ,0 dummy_15
from pxstats
 ORDER BY
       snap_id

12:14:04 4j.600
Elapsed Hours so far:    0.863
Elapsed Hours so far: .863

Elapsed: 00:00:00.00

12:14:04 4j "00836_edb360_323688_4j_600_parallel_max_servers_time_series.html"
12:14:42 4j "00837_edb360_323688_4j_600_parallel_max_servers_time_series_line_chart.html"
Elapsed Hours so far:    0.882

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:15:11 4j "Parallel Execution"
12:15:11 Sessions, Processes and Parallel Servers - Time Series1

WITH
max_resource_limit AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4j.601 */
       r.snap_id,
       r.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       r.resource_name,
       MAX(r.current_utilization) current_utilization
  FROM dba_hist_resource_limit r,
       dba_hist_snapshot s
 WHERE s.snap_id BETWEEN 3473 AND 4962
   AND s.dbid = 2109323688
   AND r.snap_id = s.snap_id
   AND r.dbid = s.dbid
   AND r.instance_number = s.instance_number
   AND r.resource_name IN ('sessions', 'processes', 'parallel_max_servers')
 GROUP BY
       r.snap_id,
       r.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       r.resource_name
)
SELECT /*+  NO_MERGE  */ /* 4j.601 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE resource_name WHEN 'sessions'             THEN current_utilization ELSE 0 END) sessi
ons,
       SUM(CASE resource_name WHEN 'processes'            THEN current_utilization ELSE 0 END) proce
sses,
       SUM(CASE resource_name WHEN 'parallel_max_servers' THEN current_utilization ELSE 0 END) paral
lel_max_servers,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM max_resource_limit
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:15:11 4j.601
Elapsed Hours so far:    0.882
Elapsed Hours so far: .882

Elapsed: 00:00:00.00

12:15:12 4j "00838_edb360_323688_4j_601_sessions_processes_and_parallel_servers_time_series1.html"
12:15:12 4j "00839_edb360_323688_4j_601_sessions_processes_and_parallel_servers_time_series1_line_chart.html"
Elapsed Hours so far:    0.882

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:15:12 4j "Parallel Execution"
12:15:12 Sessions, Processes and Parallel Servers - Time Series2

WITH
max_resource_limit AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4j.602 */
       r.snap_id,
       r.instance_number,
       CAST(s.begin_interval_time AS DATE) begin_time,
       CAST(s.end_interval_time AS DATE) end_time,
       r.resource_name metric_name,
       MAX(r.current_utilization) value
  FROM dba_hist_resource_limit r,
       dba_hist_snapshot s
 WHERE s.snap_id BETWEEN 3473 AND 4962
   AND s.dbid = 2109323688
   AND r.snap_id = s.snap_id
   AND r.dbid = s.dbid
   AND r.instance_number = s.instance_number
   AND r.resource_name IN ('sessions', 'processes', 'parallel_max_servers')
 GROUP BY
       r.snap_id,
       r.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       r.resource_name
),
max_sysmetric_summary AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4j.602 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       metric_name,
       ROUND(maxval, 3) value
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name IN ('Active Serial Sessions', 'Active Parallel Sessions')
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4j.602 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE metric_name WHEN 'sessions'                 THEN value ELSE 0 END) sessions,
       SUM(CASE metric_name WHEN 'processes'                THEN value ELSE 0 END) processes,
       SUM(CASE metric_name WHEN 'parallel_max_servers'     THEN value ELSE 0 END) max_parallel_serv
ers,
       SUM(CASE metric_name WHEN 'Active Serial Sessions'   THEN value ELSE 0 END) max_active_serial
_sessions,
       SUM(CASE metric_name WHEN 'Active Parallel Sessions' THEN value ELSE 0 END) max_active_parall
el_sessions,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT * FROM max_resource_limit UNION ALL SELECT * FROM max_sysmetric_summary)
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:15:12 4j.602
Elapsed Hours so far:    0.882
Elapsed Hours so far: .882

Elapsed: 00:00:00.00

12:15:12 4j "00840_edb360_323688_4j_602_sessions_processes_and_parallel_servers_time_series2.html"
12:15:19 4j "00841_edb360_323688_4j_602_sessions_processes_and_parallel_servers_time_series2_line_chart.html"
Elapsed Hours so far:    0.885

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:15:23 4j "Parallel Execution"
12:15:23 Sessions, Processes and Parallel Servers - Time Series3

WITH
max_resource_limit AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4j.603 */
       r.snap_id,
       r.instance_number,
       CAST(s.begin_interval_time AS DATE) begin_time,
       CAST(s.end_interval_time AS DATE) end_time,
       r.resource_name metric_name,
       MAX(r.current_utilization) value
  FROM dba_hist_resource_limit r,
       dba_hist_snapshot s
 WHERE s.snap_id BETWEEN 3473 AND 4962
   AND s.dbid = 2109323688
   AND r.snap_id = s.snap_id
   AND r.dbid = s.dbid
   AND r.instance_number = s.instance_number
   AND r.resource_name IN ('sessions', 'processes', 'parallel_max_servers')
 GROUP BY
       r.snap_id,
       r.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       r.resource_name
),
max_sysmetric_summary AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4j.603 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       metric_name,
       ROUND(maxval, 3) value
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name IN ('Active Serial Sessions',
                       'Active Parallel Sessions',
                       'PQ QC Session Count',
                       'PQ Slave Session Count',
                       'Average Active Sessions',
                       'Session Count')
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4j.603 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE metric_name WHEN 'sessions'                 THEN value ELSE 0 END) sessions,
       SUM(CASE metric_name WHEN 'processes'                THEN value ELSE 0 END) processes,
       SUM(CASE metric_name WHEN 'parallel_max_servers'     THEN value ELSE 0 END) max_parallel_serv
ers,
       SUM(CASE metric_name WHEN 'Active Serial Sessions'   THEN value ELSE 0 END) max_active_serial
_sessions,
       SUM(CASE metric_name WHEN 'Active Parallel Sessions' THEN value ELSE 0 END) max_active_parall
el_sessions,
       SUM(CASE metric_name WHEN 'PQ QC Session Count'      THEN value ELSE 0 END) max_pq_qc_session
_count,
       SUM(CASE metric_name WHEN 'PQ Slave Session Count'   THEN value ELSE 0 END) max_pq_slave_sess
ion_count,
       SUM(CASE metric_name WHEN 'Average Active Sessions'  THEN value ELSE 0 END) max_average_activ
e_sessions,
       SUM(CASE metric_name WHEN 'Session Count'            THEN value ELSE 0 END) max_session_count
,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT * FROM max_resource_limit UNION ALL SELECT * FROM max_sysmetric_summary)
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:15:23 4j.603
Elapsed Hours so far:    0.885
Elapsed Hours so far: .885

Elapsed: 00:00:00.01

12:15:23 4j "00842_edb360_323688_4j_603_sessions_processes_and_parallel_servers_time_series3.html"
12:15:29 4j "00843_edb360_323688_4j_603_sessions_processes_and_parallel_servers_time_series3_line_chart.html"
Elapsed Hours so far:    0.888

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:15:32 4j "Parallel Execution"
12:15:32 Sessions, Processes and Parallel Servers - Time Series4

WITH
max_resource_limit AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 4j.604 */
       1 branch,
       r.snap_id,
       r.instance_number,
       CAST(s.begin_interval_time AS DATE) begin_time,
       CAST(s.end_interval_time AS DATE) end_time,
       r.resource_name metric_name,
       MAX(r.current_utilization) value
  FROM dba_hist_resource_limit r,
       dba_hist_snapshot s
 WHERE s.snap_id BETWEEN 3473 AND 4962
   AND s.dbid = 2109323688
   AND r.snap_id = s.snap_id
   AND r.dbid = s.dbid
   AND r.instance_number = s.instance_number
   AND r.resource_name IN ('sessions', 'processes', 'parallel_max_servers')
 GROUP BY
       r.snap_id,
       r.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       r.resource_name
),
max_sysmetric_summary AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4j.604 */
       2 branch,
       snap_id,
       instance_number,
       begin_time,
       end_time,
       metric_name,
       ROUND(maxval, 3) value
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name IN ('Active Serial Sessions',
                       'Active Parallel Sessions',
                       'PQ QC Session Count',
                       'PQ Slave Session Count',
                       'Average Active Sessions',
                       'Session Count')
   AND maxval >= 0
),
avg_sysmetric_summary AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4j.604 */
       3 branch,
       snap_id,
       instance_number,
       begin_time,
       end_time,
       metric_name,
       ROUND(average, 3) value
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name IN ('Active Serial Sessions',
                       'Active Parallel Sessions',
                       'PQ QC Session Count',
                       'PQ Slave Session Count',
                       'Average Active Sessions',
                       'Session Count')
   AND average >= 0
)
SELECT /*+  NO_MERGE  */ /* 4j.604 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE branch WHEN 1 THEN (CASE metric_name WHEN 'sessions'                 THEN value ELSE
 0 END) ELSE 0 END) sessions,
       SUM(CASE branch WHEN 1 THEN (CASE metric_name WHEN 'processes'                THEN value ELSE
 0 END) ELSE 0 END) processes,
       SUM(CASE branch WHEN 1 THEN (CASE metric_name WHEN 'parallel_max_servers'     THEN value ELSE
 0 END) ELSE 0 END) max_parallel_servers,
       SUM(CASE branch WHEN 2 THEN (CASE metric_name WHEN 'Active Serial Sessions'   THEN value ELSE
 0 END) ELSE 0 END) max_active_serial_sessions,
       SUM(CASE branch WHEN 2 THEN (CASE metric_name WHEN 'Active Parallel Sessions' THEN value ELSE
 0 END) ELSE 0 END) max_active_parallel_sessions,
       SUM(CASE branch WHEN 2 THEN (CASE metric_name WHEN 'PQ QC Session Count'      THEN value ELSE
 0 END) ELSE 0 END) max_pq_qc_session_count,
       SUM(CASE branch WHEN 2 THEN (CASE metric_name WHEN 'PQ Slave Session Count'   THEN value ELSE
 0 END) ELSE 0 END) max_pq_slave_session_count,
       SUM(CASE branch WHEN 2 THEN (CASE metric_name WHEN 'Average Active Sessions'  THEN value ELSE
 0 END) ELSE 0 END) max_average_active_sessions,
       SUM(CASE branch WHEN 2 THEN (CASE metric_name WHEN 'Session Count'            THEN value ELSE
 0 END) ELSE 0 END) max_session_count,
       SUM(CASE branch WHEN 3 THEN (CASE metric_name WHEN 'Active Serial Sessions'   THEN value ELSE
 0 END) ELSE 0 END) avg_active_serial_sessions,
       SUM(CASE branch WHEN 3 THEN (CASE metric_name WHEN 'Active Parallel Sessions' THEN value ELSE
 0 END) ELSE 0 END) avg_active_parallel_sessions,
       SUM(CASE branch WHEN 3 THEN (CASE metric_name WHEN 'PQ QC Session Count'      THEN value ELSE
 0 END) ELSE 0 END) avg_pq_qc_session_count,
       SUM(CASE branch WHEN 3 THEN (CASE metric_name WHEN 'PQ Slave Session Count'   THEN value ELSE
 0 END) ELSE 0 END) avg_pq_slave_session_count,
       SUM(CASE branch WHEN 3 THEN (CASE metric_name WHEN 'Average Active Sessions'  THEN value ELSE
 0 END) ELSE 0 END) avg_average_active_sessions,
       SUM(CASE branch WHEN 3 THEN (CASE metric_name WHEN 'Session Count'            THEN value ELSE
 0 END) ELSE 0 END) avg_session_count
  FROM (SELECT * FROM max_resource_limit UNION ALL SELECT * FROM max_sysmetric_summary UNION ALL SEL
ECT * FROM avg_sysmetric_summary)
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:15:32 4j.604
Elapsed Hours so far:    0.888
Elapsed Hours so far: .888

Elapsed: 00:00:00.00

12:15:33 4j "00844_edb360_323688_4j_604_sessions_processes_and_parallel_servers_time_series4.html"
12:15:49 4j "00845_edb360_323688_4j_604_sessions_processes_and_parallel_servers_time_series4_line_chart.html"
Elapsed Hours so far:    0.896

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:16:01 4j "Parallel Execution"
12:16:01 Active Parallel Sessions

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4j.605 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Active Parallel Sessions'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4j.605 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:16:01 4j.605
Elapsed Hours so far:    0.896
Elapsed Hours so far: .896

Elapsed: 00:00:00.00

12:16:01 4j "00846_edb360_323688_4j_605_active_parallel_sessions.html"
12:16:07 4j "00847_edb360_323688_4j_605_active_parallel_sessions_line_chart.html"
Elapsed Hours so far:    0.898

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:16:10 4j "Parallel Execution"
12:16:10 PX downgraded 1 to 25% Per Sec

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4j.605 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'PX downgraded 1 to 25% Per Sec'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4j.605 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:16:10 4j.606
Elapsed Hours so far:    0.898
Elapsed Hours so far: .898

Elapsed: 00:00:00.01

12:16:10 4j "00848_edb360_323688_4j_606_px_downgraded_1_to_25_per_sec.html"
12:16:14 4j "00849_edb360_323688_4j_606_px_downgraded_1_to_25_per_sec_line_chart.html"
Elapsed Hours so far:    0.900

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:16:17 4j "Parallel Execution"
12:16:17 PX downgraded 25 to 50% Per Sec

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4j.605 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'PX downgraded 25 to 50% Per Sec'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4j.605 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:16:17 4j.607
Elapsed Hours so far:    0.900
Elapsed Hours so far: .9

Elapsed: 00:00:00.00

12:16:17 4j "00850_edb360_323688_4j_607_px_downgraded_25_to_50_per_sec.html"
12:16:21 4j "00851_edb360_323688_4j_607_px_downgraded_25_to_50_per_sec_line_chart.html"
Elapsed Hours so far:    0.902

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:16:24 4j "Parallel Execution"
12:16:24 PX downgraded 50 to 75% Per Sec

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4j.605 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'PX downgraded 50 to 75% Per Sec'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4j.605 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:16:24 4j.608
Elapsed Hours so far:    0.902
Elapsed Hours so far: .902

Elapsed: 00:00:00.00

12:16:24 4j "00852_edb360_323688_4j_608_px_downgraded_50_to_75_per_sec.html"
12:16:29 4j "00853_edb360_323688_4j_608_px_downgraded_50_to_75_per_sec_line_chart.html"
Elapsed Hours so far:    0.904

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:16:32 4j "Parallel Execution"
12:16:32 PX downgraded 75 to 99% Per Sec

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4j.605 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'PX downgraded 75 to 99% Per Sec'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4j.605 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:16:32 4j.609
Elapsed Hours so far:    0.904
Elapsed Hours so far: .904

Elapsed: 00:00:00.00

12:16:32 4j "00854_edb360_323688_4j_609_px_downgraded_75_to_99_per_sec.html"
12:16:36 4j "00855_edb360_323688_4j_609_px_downgraded_75_to_99_per_sec_line_chart.html"
Elapsed Hours so far:    0.906

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:16:39 4j "Parallel Execution"
12:16:39 PX downgraded to serial Per Sec

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4j.605 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'PX downgraded to serial Per Sec'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4j.605 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:16:39 4j.610
Elapsed Hours so far:    0.906
Elapsed Hours so far: .906

Elapsed: 00:00:00.00

12:16:39 4j "00856_edb360_323688_4j_610_px_downgraded_to_serial_per_sec.html"
12:16:43 4j "00857_edb360_323688_4j_610_px_downgraded_to_serial_per_sec_line_chart.html"
Elapsed Hours so far:    0.908

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:16:46 4j "Parallel Execution"
12:16:46 PX operations not downgraded Per Sec

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4j.605 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'PX operations not downgraded Per Sec'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4j.605 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:16:46 4j.611
Elapsed Hours so far:    0.908
Elapsed Hours so far: .908

Elapsed: 00:00:00.00

12:16:46 4j "00858_edb360_323688_4j_611_px_operations_not_downgraded_per_sec.html"
12:16:50 4j "00859_edb360_323688_4j_611_px_operations_not_downgraded_per_sec_line_chart.html"
Elapsed Hours so far:    0.910

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:16:53 4j "Parallel Execution"
12:16:53 Queries parallelized Per Sec

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4j.605 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Queries parallelized Per Sec'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4j.605 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:16:53 4j.612
Elapsed Hours so far:    0.910
Elapsed Hours so far: .91

Elapsed: 00:00:00.01

12:16:53 4j "00860_edb360_323688_4j_612_queries_parallelized_per_sec.html"
12:16:58 4j "00861_edb360_323688_4j_612_queries_parallelized_per_sec_line_chart.html"
Elapsed Hours so far:    0.912

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:17:01 4j "Parallel Execution"
12:17:01 DML statements parallelized Per Sec

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4j.605 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'DML statements parallelized Per Sec'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4j.605 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:17:01 4j.613
Elapsed Hours so far:    0.912
Elapsed Hours so far: .912

Elapsed: 00:00:00.00

12:17:01 4j "00862_edb360_323688_4j_613_dml_statements_parallelized_per_sec.html"
12:17:05 4j "00863_edb360_323688_4j_613_dml_statements_parallelized_per_sec_line_chart.html"
Elapsed Hours so far:    0.914

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:17:08 4j "Parallel Execution"
12:17:08 DDL statements parallelized Per Sec

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4j.605 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'DDL statements parallelized Per Sec'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4j.605 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:17:08 4j.614
Elapsed Hours so far:    0.914
Elapsed Hours so far: .914

Elapsed: 00:00:00.01

12:17:08 4j "00864_edb360_323688_4j_614_ddl_statements_parallelized_per_sec.html"
12:17:12 4j "00865_edb360_323688_4j_614_ddl_statements_parallelized_per_sec_line_chart.html"
Elapsed Hours so far:    0.917

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:17:15 4k "System Metric History per Snap Interval"
12:17:15 Average Active Sessions

WITH
per_instance_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4k.615 */
       snap_id,
       instance_number,
       MIN(begin_time) begin_time,
       MAX(end_time) end_time,
       MAX(value) value_max,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY value) value_95p,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY value) value_90p,
       PERCENTILE_DISC(0.85) WITHIN GROUP (ORDER BY value) value_85p,
       PERCENTILE_DISC(0.80) WITHIN GROUP (ORDER BY value) value_80p,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY value) value_75p,
       MEDIAN(value) value_med,
       AVG(value) value_avg
  FROM dba_hist_sysmetric_history
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Average Active Sessions'
   AND value >= 0
 GROUP BY
       snap_id,
       instance_number
)
SELECT /*+  NO_MERGE  */ /* 4k.615 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(value_max), 1) "Max",
       ROUND(SUM(value_95p), 1) "95th Percentile",
       ROUND(SUM(value_90p), 1) "90th Percentile",
       ROUND(SUM(value_85p), 1) "85th Percentile",
       ROUND(SUM(value_80p), 1) "80th Percentile",
       ROUND(SUM(value_75p), 1) "75th Percentile",
       ROUND(SUM(value_med), 1) "Median",
       ROUND(SUM(value_avg), 1) "Avg",
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:17:15 4k.615
Elapsed Hours so far:    0.917
Elapsed Hours so far: .917

Elapsed: 00:00:00.00

12:17:16 4k "00866_edb360_323688_4k_615_average_active_sessions.html"
12:17:37 4k "00867_edb360_323688_4k_615_average_active_sessions_line_chart.html"
Elapsed Hours so far:    0.925

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:17:48 4k "System Metric History per Snap Interval"
12:17:48 Average Synchronous Single-Block Read Latency

WITH
per_instance_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4k.615 */
       snap_id,
       instance_number,
       MIN(begin_time) begin_time,
       MAX(end_time) end_time,
       MAX(value) value_max,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY value) value_95p,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY value) value_90p,
       PERCENTILE_DISC(0.85) WITHIN GROUP (ORDER BY value) value_85p,
       PERCENTILE_DISC(0.80) WITHIN GROUP (ORDER BY value) value_80p,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY value) value_75p,
       MEDIAN(value) value_med,
       AVG(value) value_avg
  FROM dba_hist_sysmetric_history
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Average Synchronous Single-Block Read Latency'
   AND value >= 0
 GROUP BY
       snap_id,
       instance_number
)
SELECT /*+  NO_MERGE  */ /* 4k.615 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(value_max), 1) "Max",
       ROUND(SUM(value_95p), 1) "95th Percentile",
       ROUND(SUM(value_90p), 1) "90th Percentile",
       ROUND(SUM(value_85p), 1) "85th Percentile",
       ROUND(SUM(value_80p), 1) "80th Percentile",
       ROUND(SUM(value_75p), 1) "75th Percentile",
       ROUND(SUM(value_med), 1) "Median",
       ROUND(SUM(value_avg), 1) "Avg",
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:17:48 4k.616
Elapsed Hours so far:    0.925
Elapsed Hours so far: .925

Elapsed: 00:00:00.00

12:17:48 4k "00868_edb360_323688_4k_616_average_synchronous_singleblock_read_latency.html"
12:18:06 4k "00869_edb360_323688_4k_616_average_synchronous_singleblock_read_latency_line_chart.html"
Elapsed Hours so far:    0.934

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:18:17 4k "System Metric History per Snap Interval"
12:18:17 DB Block Changes Per Txn

WITH
per_instance_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4k.615 */
       snap_id,
       instance_number,
       MIN(begin_time) begin_time,
       MAX(end_time) end_time,
       MAX(value) value_max,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY value) value_95p,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY value) value_90p,
       PERCENTILE_DISC(0.85) WITHIN GROUP (ORDER BY value) value_85p,
       PERCENTILE_DISC(0.80) WITHIN GROUP (ORDER BY value) value_80p,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY value) value_75p,
       MEDIAN(value) value_med,
       AVG(value) value_avg
  FROM dba_hist_sysmetric_history
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'DB Block Changes Per Txn'
   AND value >= 0
 GROUP BY
       snap_id,
       instance_number
)
SELECT /*+  NO_MERGE  */ /* 4k.615 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(value_max), 1) "Max",
       ROUND(SUM(value_95p), 1) "95th Percentile",
       ROUND(SUM(value_90p), 1) "90th Percentile",
       ROUND(SUM(value_85p), 1) "85th Percentile",
       ROUND(SUM(value_80p), 1) "80th Percentile",
       ROUND(SUM(value_75p), 1) "75th Percentile",
       ROUND(SUM(value_med), 1) "Median",
       ROUND(SUM(value_avg), 1) "Avg",
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:18:17 4k.617
Elapsed Hours so far:    0.934
Elapsed Hours so far: .934

Elapsed: 00:00:00.00

12:18:17 4k "00870_edb360_323688_4k_617_db_block_changes_per_txn.html"
12:18:35 4k "00871_edb360_323688_4k_617_db_block_changes_per_txn_line_chart.html"
Elapsed Hours so far:    0.942

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:18:46 4k "System Metric History per Snap Interval"
12:18:46 Enqueue Requests Per Txn

WITH
per_instance_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4k.615 */
       snap_id,
       instance_number,
       MIN(begin_time) begin_time,
       MAX(end_time) end_time,
       MAX(value) value_max,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY value) value_95p,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY value) value_90p,
       PERCENTILE_DISC(0.85) WITHIN GROUP (ORDER BY value) value_85p,
       PERCENTILE_DISC(0.80) WITHIN GROUP (ORDER BY value) value_80p,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY value) value_75p,
       MEDIAN(value) value_med,
       AVG(value) value_avg
  FROM dba_hist_sysmetric_history
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Enqueue Requests Per Txn'
   AND value >= 0
 GROUP BY
       snap_id,
       instance_number
)
SELECT /*+  NO_MERGE  */ /* 4k.615 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(value_max), 1) "Max",
       ROUND(SUM(value_95p), 1) "95th Percentile",
       ROUND(SUM(value_90p), 1) "90th Percentile",
       ROUND(SUM(value_85p), 1) "85th Percentile",
       ROUND(SUM(value_80p), 1) "80th Percentile",
       ROUND(SUM(value_75p), 1) "75th Percentile",
       ROUND(SUM(value_med), 1) "Median",
       ROUND(SUM(value_avg), 1) "Avg",
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:18:46 4k.618
Elapsed Hours so far:    0.942
Elapsed Hours so far: .942

Elapsed: 00:00:00.00

12:18:46 4k "00872_edb360_323688_4k_618_enqueue_requests_per_txn.html"
12:19:04 4k "00873_edb360_323688_4k_618_enqueue_requests_per_txn_line_chart.html"
Elapsed Hours so far:    0.950

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:19:16 4k "System Metric History per Snap Interval"
12:19:16 Executions Per Sec

WITH
per_instance_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4k.615 */
       snap_id,
       instance_number,
       MIN(begin_time) begin_time,
       MAX(end_time) end_time,
       MAX(value) value_max,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY value) value_95p,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY value) value_90p,
       PERCENTILE_DISC(0.85) WITHIN GROUP (ORDER BY value) value_85p,
       PERCENTILE_DISC(0.80) WITHIN GROUP (ORDER BY value) value_80p,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY value) value_75p,
       MEDIAN(value) value_med,
       AVG(value) value_avg
  FROM dba_hist_sysmetric_history
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Executions Per Sec'
   AND value >= 0
 GROUP BY
       snap_id,
       instance_number
)
SELECT /*+  NO_MERGE  */ /* 4k.615 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(value_max), 1) "Max",
       ROUND(SUM(value_95p), 1) "95th Percentile",
       ROUND(SUM(value_90p), 1) "90th Percentile",
       ROUND(SUM(value_85p), 1) "85th Percentile",
       ROUND(SUM(value_80p), 1) "80th Percentile",
       ROUND(SUM(value_75p), 1) "75th Percentile",
       ROUND(SUM(value_med), 1) "Median",
       ROUND(SUM(value_avg), 1) "Avg",
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:19:16 4k.619
Elapsed Hours so far:    0.950
Elapsed Hours so far: .95

Elapsed: 00:00:00.00

12:19:16 4k "00874_edb360_323688_4k_619_executions_per_sec.html"
12:19:34 4k "00875_edb360_323688_4k_619_executions_per_sec_line_chart.html"
Elapsed Hours so far:    0.958

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:19:46 4k "System Metric History per Snap Interval"
12:19:46 I/O Megabytes per Second

WITH
per_instance_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4k.615 */
       snap_id,
       instance_number,
       MIN(begin_time) begin_time,
       MAX(end_time) end_time,
       MAX(value) value_max,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY value) value_95p,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY value) value_90p,
       PERCENTILE_DISC(0.85) WITHIN GROUP (ORDER BY value) value_85p,
       PERCENTILE_DISC(0.80) WITHIN GROUP (ORDER BY value) value_80p,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY value) value_75p,
       MEDIAN(value) value_med,
       AVG(value) value_avg
  FROM dba_hist_sysmetric_history
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'I/O Megabytes per Second'
   AND value >= 0
 GROUP BY
       snap_id,
       instance_number
)
SELECT /*+  NO_MERGE  */ /* 4k.615 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(value_max), 1) "Max",
       ROUND(SUM(value_95p), 1) "95th Percentile",
       ROUND(SUM(value_90p), 1) "90th Percentile",
       ROUND(SUM(value_85p), 1) "85th Percentile",
       ROUND(SUM(value_80p), 1) "80th Percentile",
       ROUND(SUM(value_75p), 1) "75th Percentile",
       ROUND(SUM(value_med), 1) "Median",
       ROUND(SUM(value_avg), 1) "Avg",
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:19:46 4k.620
Elapsed Hours so far:    0.958
Elapsed Hours so far: .958

Elapsed: 00:00:00.00

12:19:46 4k "00876_edb360_323688_4k_620_io_megabytes_per_second.html"
12:20:03 4k "00877_edb360_323688_4k_620_io_megabytes_per_second_line_chart.html"
Elapsed Hours so far:    0.966

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:20:14 4k "System Metric History per Snap Interval"
12:20:14 I/O Requests per Second

WITH
per_instance_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4k.615 */
       snap_id,
       instance_number,
       MIN(begin_time) begin_time,
       MAX(end_time) end_time,
       MAX(value) value_max,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY value) value_95p,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY value) value_90p,
       PERCENTILE_DISC(0.85) WITHIN GROUP (ORDER BY value) value_85p,
       PERCENTILE_DISC(0.80) WITHIN GROUP (ORDER BY value) value_80p,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY value) value_75p,
       MEDIAN(value) value_med,
       AVG(value) value_avg
  FROM dba_hist_sysmetric_history
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'I/O Requests per Second'
   AND value >= 0
 GROUP BY
       snap_id,
       instance_number
)
SELECT /*+  NO_MERGE  */ /* 4k.615 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(value_max), 1) "Max",
       ROUND(SUM(value_95p), 1) "95th Percentile",
       ROUND(SUM(value_90p), 1) "90th Percentile",
       ROUND(SUM(value_85p), 1) "85th Percentile",
       ROUND(SUM(value_80p), 1) "80th Percentile",
       ROUND(SUM(value_75p), 1) "75th Percentile",
       ROUND(SUM(value_med), 1) "Median",
       ROUND(SUM(value_avg), 1) "Avg",
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:20:14 4k.621
Elapsed Hours so far:    0.966
Elapsed Hours so far: .966

Elapsed: 00:00:00.00

12:20:15 4k "00878_edb360_323688_4k_621_io_requests_per_second.html"
12:20:32 4k "00879_edb360_323688_4k_621_io_requests_per_second_line_chart.html"
Elapsed Hours so far:    0.975

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:20:45 4k "System Metric History per Snap Interval"
12:20:45 Logical Reads Per Txn

WITH
per_instance_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4k.615 */
       snap_id,
       instance_number,
       MIN(begin_time) begin_time,
       MAX(end_time) end_time,
       MAX(value) value_max,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY value) value_95p,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY value) value_90p,
       PERCENTILE_DISC(0.85) WITHIN GROUP (ORDER BY value) value_85p,
       PERCENTILE_DISC(0.80) WITHIN GROUP (ORDER BY value) value_80p,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY value) value_75p,
       MEDIAN(value) value_med,
       AVG(value) value_avg
  FROM dba_hist_sysmetric_history
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Logical Reads Per Txn'
   AND value >= 0
 GROUP BY
       snap_id,
       instance_number
)
SELECT /*+  NO_MERGE  */ /* 4k.615 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(value_max), 1) "Max",
       ROUND(SUM(value_95p), 1) "95th Percentile",
       ROUND(SUM(value_90p), 1) "90th Percentile",
       ROUND(SUM(value_85p), 1) "85th Percentile",
       ROUND(SUM(value_80p), 1) "80th Percentile",
       ROUND(SUM(value_75p), 1) "75th Percentile",
       ROUND(SUM(value_med), 1) "Median",
       ROUND(SUM(value_avg), 1) "Avg",
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:20:45 4k.622
Elapsed Hours so far:    0.975
Elapsed Hours so far: .975

Elapsed: 00:00:00.00

12:20:45 4k "00880_edb360_323688_4k_622_logical_reads_per_txn.html"
12:21:03 4k "00881_edb360_323688_4k_622_logical_reads_per_txn_line_chart.html"
Elapsed Hours so far:    0.983

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:21:16 4k "System Metric History per Snap Interval"
12:21:16 Logons Per Sec

WITH
per_instance_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4k.615 */
       snap_id,
       instance_number,
       MIN(begin_time) begin_time,
       MAX(end_time) end_time,
       MAX(value) value_max,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY value) value_95p,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY value) value_90p,
       PERCENTILE_DISC(0.85) WITHIN GROUP (ORDER BY value) value_85p,
       PERCENTILE_DISC(0.80) WITHIN GROUP (ORDER BY value) value_80p,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY value) value_75p,
       MEDIAN(value) value_med,
       AVG(value) value_avg
  FROM dba_hist_sysmetric_history
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Logons Per Sec'
   AND value >= 0
 GROUP BY
       snap_id,
       instance_number
)
SELECT /*+  NO_MERGE  */ /* 4k.615 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(value_max), 1) "Max",
       ROUND(SUM(value_95p), 1) "95th Percentile",
       ROUND(SUM(value_90p), 1) "90th Percentile",
       ROUND(SUM(value_85p), 1) "85th Percentile",
       ROUND(SUM(value_80p), 1) "80th Percentile",
       ROUND(SUM(value_75p), 1) "75th Percentile",
       ROUND(SUM(value_med), 1) "Median",
       ROUND(SUM(value_avg), 1) "Avg",
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:21:16 4k.623
Elapsed Hours so far:    0.983
Elapsed Hours so far: .983

Elapsed: 00:00:00.01

12:21:16 4k "00882_edb360_323688_4k_623_logons_per_sec.html"
12:21:33 4k "00883_edb360_323688_4k_623_logons_per_sec_line_chart.html"
Elapsed Hours so far:    0.992

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:21:46 4k "System Metric History per Snap Interval"
12:21:46 Network Traffic Volume Per Sec

WITH
per_instance_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4k.615 */
       snap_id,
       instance_number,
       MIN(begin_time) begin_time,
       MAX(end_time) end_time,
       MAX(value) value_max,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY value) value_95p,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY value) value_90p,
       PERCENTILE_DISC(0.85) WITHIN GROUP (ORDER BY value) value_85p,
       PERCENTILE_DISC(0.80) WITHIN GROUP (ORDER BY value) value_80p,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY value) value_75p,
       MEDIAN(value) value_med,
       AVG(value) value_avg
  FROM dba_hist_sysmetric_history
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Network Traffic Volume Per Sec'
   AND value >= 0
 GROUP BY
       snap_id,
       instance_number
)
SELECT /*+  NO_MERGE  */ /* 4k.615 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(value_max), 1) "Max",
       ROUND(SUM(value_95p), 1) "95th Percentile",
       ROUND(SUM(value_90p), 1) "90th Percentile",
       ROUND(SUM(value_85p), 1) "85th Percentile",
       ROUND(SUM(value_80p), 1) "80th Percentile",
       ROUND(SUM(value_75p), 1) "75th Percentile",
       ROUND(SUM(value_med), 1) "Median",
       ROUND(SUM(value_avg), 1) "Avg",
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:21:46 4k.624
Elapsed Hours so far:    0.992
Elapsed Hours so far: .992

Elapsed: 00:00:00.00

12:21:46 4k "00884_edb360_323688_4k_624_network_traffic_volume_per_sec.html"
12:22:04 4k "00885_edb360_323688_4k_624_network_traffic_volume_per_sec_line_chart.html"
Elapsed Hours so far:    1.000

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:22:16 4k "System Metric History per Snap Interval"
12:22:16 Physical Reads Per Sec

WITH
per_instance_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4k.615 */
       snap_id,
       instance_number,
       MIN(begin_time) begin_time,
       MAX(end_time) end_time,
       MAX(value) value_max,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY value) value_95p,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY value) value_90p,
       PERCENTILE_DISC(0.85) WITHIN GROUP (ORDER BY value) value_85p,
       PERCENTILE_DISC(0.80) WITHIN GROUP (ORDER BY value) value_80p,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY value) value_75p,
       MEDIAN(value) value_med,
       AVG(value) value_avg
  FROM dba_hist_sysmetric_history
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Physical Reads Per Sec'
   AND value >= 0
 GROUP BY
       snap_id,
       instance_number
)
SELECT /*+  NO_MERGE  */ /* 4k.615 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(value_max), 1) "Max",
       ROUND(SUM(value_95p), 1) "95th Percentile",
       ROUND(SUM(value_90p), 1) "90th Percentile",
       ROUND(SUM(value_85p), 1) "85th Percentile",
       ROUND(SUM(value_80p), 1) "80th Percentile",
       ROUND(SUM(value_75p), 1) "75th Percentile",
       ROUND(SUM(value_med), 1) "Median",
       ROUND(SUM(value_avg), 1) "Avg",
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:22:16 4k.625
Elapsed Hours so far:    1.000
Elapsed Hours so far: 1

Elapsed: 00:00:00.00

12:22:16 4k "00886_edb360_323688_4k_625_physical_reads_per_sec.html"
12:22:34 4k "00887_edb360_323688_4k_625_physical_reads_per_sec_line_chart.html"
Elapsed Hours so far:    1.009

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:22:48 4k "System Metric History per Snap Interval"
12:22:48 Physical Reads Per Txn

WITH
per_instance_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4k.615 */
       snap_id,
       instance_number,
       MIN(begin_time) begin_time,
       MAX(end_time) end_time,
       MAX(value) value_max,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY value) value_95p,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY value) value_90p,
       PERCENTILE_DISC(0.85) WITHIN GROUP (ORDER BY value) value_85p,
       PERCENTILE_DISC(0.80) WITHIN GROUP (ORDER BY value) value_80p,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY value) value_75p,
       MEDIAN(value) value_med,
       AVG(value) value_avg
  FROM dba_hist_sysmetric_history
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Physical Reads Per Txn'
   AND value >= 0
 GROUP BY
       snap_id,
       instance_number
)
SELECT /*+  NO_MERGE  */ /* 4k.615 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(value_max), 1) "Max",
       ROUND(SUM(value_95p), 1) "95th Percentile",
       ROUND(SUM(value_90p), 1) "90th Percentile",
       ROUND(SUM(value_85p), 1) "85th Percentile",
       ROUND(SUM(value_80p), 1) "80th Percentile",
       ROUND(SUM(value_75p), 1) "75th Percentile",
       ROUND(SUM(value_med), 1) "Median",
       ROUND(SUM(value_avg), 1) "Avg",
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:22:48 4k.626
Elapsed Hours so far:    1.009
Elapsed Hours so far: 1.009

Elapsed: 00:00:00.00

12:22:48 4k "00888_edb360_323688_4k_626_physical_reads_per_txn.html"
12:23:05 4k "00889_edb360_323688_4k_626_physical_reads_per_txn_line_chart.html"
Elapsed Hours so far:    1.017

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:23:18 4k "System Metric History per Snap Interval"
12:23:18 Physical Writes Per Sec

WITH
per_instance_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4k.615 */
       snap_id,
       instance_number,
       MIN(begin_time) begin_time,
       MAX(end_time) end_time,
       MAX(value) value_max,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY value) value_95p,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY value) value_90p,
       PERCENTILE_DISC(0.85) WITHIN GROUP (ORDER BY value) value_85p,
       PERCENTILE_DISC(0.80) WITHIN GROUP (ORDER BY value) value_80p,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY value) value_75p,
       MEDIAN(value) value_med,
       AVG(value) value_avg
  FROM dba_hist_sysmetric_history
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Physical Writes Per Sec'
   AND value >= 0
 GROUP BY
       snap_id,
       instance_number
)
SELECT /*+  NO_MERGE  */ /* 4k.615 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(value_max), 1) "Max",
       ROUND(SUM(value_95p), 1) "95th Percentile",
       ROUND(SUM(value_90p), 1) "90th Percentile",
       ROUND(SUM(value_85p), 1) "85th Percentile",
       ROUND(SUM(value_80p), 1) "80th Percentile",
       ROUND(SUM(value_75p), 1) "75th Percentile",
       ROUND(SUM(value_med), 1) "Median",
       ROUND(SUM(value_avg), 1) "Avg",
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:23:18 4k.627
Elapsed Hours so far:    1.017
Elapsed Hours so far: 1.017

Elapsed: 00:00:00.01

12:23:18 4k "00890_edb360_323688_4k_627_physical_writes_per_sec.html"
12:23:36 4k "00891_edb360_323688_4k_627_physical_writes_per_sec_line_chart.html"
Elapsed Hours so far:    1.026

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:23:49 4k "System Metric History per Snap Interval"
12:23:49 Redo Generated Per Sec

WITH
per_instance_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4k.615 */
       snap_id,
       instance_number,
       MIN(begin_time) begin_time,
       MAX(end_time) end_time,
       MAX(value) value_max,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY value) value_95p,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY value) value_90p,
       PERCENTILE_DISC(0.85) WITHIN GROUP (ORDER BY value) value_85p,
       PERCENTILE_DISC(0.80) WITHIN GROUP (ORDER BY value) value_80p,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY value) value_75p,
       MEDIAN(value) value_med,
       AVG(value) value_avg
  FROM dba_hist_sysmetric_history
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Redo Generated Per Sec'
   AND value >= 0
 GROUP BY
       snap_id,
       instance_number
)
SELECT /*+  NO_MERGE  */ /* 4k.615 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(value_max), 1) "Max",
       ROUND(SUM(value_95p), 1) "95th Percentile",
       ROUND(SUM(value_90p), 1) "90th Percentile",
       ROUND(SUM(value_85p), 1) "85th Percentile",
       ROUND(SUM(value_80p), 1) "80th Percentile",
       ROUND(SUM(value_75p), 1) "75th Percentile",
       ROUND(SUM(value_med), 1) "Median",
       ROUND(SUM(value_avg), 1) "Avg",
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:23:49 4k.628
Elapsed Hours so far:    1.026
Elapsed Hours so far: 1.026

Elapsed: 00:00:00.00

12:23:49 4k "00892_edb360_323688_4k_628_redo_generated_per_sec.html"
12:24:06 4k "00893_edb360_323688_4k_628_redo_generated_per_sec_line_chart.html"
Elapsed Hours so far:    1.034

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:24:18 4k "System Metric History per Snap Interval"
12:24:18 Redo Generated Per Txn

WITH
per_instance_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4k.615 */
       snap_id,
       instance_number,
       MIN(begin_time) begin_time,
       MAX(end_time) end_time,
       MAX(value) value_max,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY value) value_95p,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY value) value_90p,
       PERCENTILE_DISC(0.85) WITHIN GROUP (ORDER BY value) value_85p,
       PERCENTILE_DISC(0.80) WITHIN GROUP (ORDER BY value) value_80p,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY value) value_75p,
       MEDIAN(value) value_med,
       AVG(value) value_avg
  FROM dba_hist_sysmetric_history
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Redo Generated Per Txn'
   AND value >= 0
 GROUP BY
       snap_id,
       instance_number
)
SELECT /*+  NO_MERGE  */ /* 4k.615 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(value_max), 1) "Max",
       ROUND(SUM(value_95p), 1) "95th Percentile",
       ROUND(SUM(value_90p), 1) "90th Percentile",
       ROUND(SUM(value_85p), 1) "85th Percentile",
       ROUND(SUM(value_80p), 1) "80th Percentile",
       ROUND(SUM(value_75p), 1) "75th Percentile",
       ROUND(SUM(value_med), 1) "Median",
       ROUND(SUM(value_avg), 1) "Avg",
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:24:18 4k.629
Elapsed Hours so far:    1.034
Elapsed Hours so far: 1.034

Elapsed: 00:00:00.00

12:24:18 4k "00894_edb360_323688_4k_629_redo_generated_per_txn.html"
12:24:35 4k "00895_edb360_323688_4k_629_redo_generated_per_txn_line_chart.html"
Elapsed Hours so far:    1.042

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:24:48 4k "System Metric History per Snap Interval"
12:24:48 Response Time Per Txn

WITH
per_instance_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4k.615 */
       snap_id,
       instance_number,
       MIN(begin_time) begin_time,
       MAX(end_time) end_time,
       MAX(value) value_max,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY value) value_95p,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY value) value_90p,
       PERCENTILE_DISC(0.85) WITHIN GROUP (ORDER BY value) value_85p,
       PERCENTILE_DISC(0.80) WITHIN GROUP (ORDER BY value) value_80p,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY value) value_75p,
       MEDIAN(value) value_med,
       AVG(value) value_avg
  FROM dba_hist_sysmetric_history
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Response Time Per Txn'
   AND value >= 0
 GROUP BY
       snap_id,
       instance_number
)
SELECT /*+  NO_MERGE  */ /* 4k.615 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(value_max), 1) "Max",
       ROUND(SUM(value_95p), 1) "95th Percentile",
       ROUND(SUM(value_90p), 1) "90th Percentile",
       ROUND(SUM(value_85p), 1) "85th Percentile",
       ROUND(SUM(value_80p), 1) "80th Percentile",
       ROUND(SUM(value_75p), 1) "75th Percentile",
       ROUND(SUM(value_med), 1) "Median",
       ROUND(SUM(value_avg), 1) "Avg",
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:24:48 4k.630
Elapsed Hours so far:    1.042
Elapsed Hours so far: 1.042

Elapsed: 00:00:00.01

12:24:48 4k "00896_edb360_323688_4k_630_response_time_per_txn.html"
12:25:04 4k "00897_edb360_323688_4k_630_response_time_per_txn_line_chart.html"
Elapsed Hours so far:    1.050

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:25:16 4k "System Metric History per Snap Interval"
12:25:16 SQL Service Response Time

WITH
per_instance_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4k.615 */
       snap_id,
       instance_number,
       MIN(begin_time) begin_time,
       MAX(end_time) end_time,
       MAX(value) value_max,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY value) value_95p,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY value) value_90p,
       PERCENTILE_DISC(0.85) WITHIN GROUP (ORDER BY value) value_85p,
       PERCENTILE_DISC(0.80) WITHIN GROUP (ORDER BY value) value_80p,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY value) value_75p,
       MEDIAN(value) value_med,
       AVG(value) value_avg
  FROM dba_hist_sysmetric_history
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'SQL Service Response Time'
   AND value >= 0
 GROUP BY
       snap_id,
       instance_number
)
SELECT /*+  NO_MERGE  */ /* 4k.615 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(value_max), 1) "Max",
       ROUND(SUM(value_95p), 1) "95th Percentile",
       ROUND(SUM(value_90p), 1) "90th Percentile",
       ROUND(SUM(value_85p), 1) "85th Percentile",
       ROUND(SUM(value_80p), 1) "80th Percentile",
       ROUND(SUM(value_75p), 1) "75th Percentile",
       ROUND(SUM(value_med), 1) "Median",
       ROUND(SUM(value_avg), 1) "Avg",
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:25:16 4k.631
Elapsed Hours so far:    1.050
Elapsed Hours so far: 1.05

Elapsed: 00:00:00.00

12:25:16 4k "00898_edb360_323688_4k_631_sql_service_response_time.html"
12:25:33 4k "00899_edb360_323688_4k_631_sql_service_response_time_line_chart.html"
Elapsed Hours so far:    1.058

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:25:44 4k "System Metric History per Snap Interval"
12:25:44 Total Parse Count Per Txn

WITH
per_instance_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4k.615 */
       snap_id,
       instance_number,
       MIN(begin_time) begin_time,
       MAX(end_time) end_time,
       MAX(value) value_max,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY value) value_95p,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY value) value_90p,
       PERCENTILE_DISC(0.85) WITHIN GROUP (ORDER BY value) value_85p,
       PERCENTILE_DISC(0.80) WITHIN GROUP (ORDER BY value) value_80p,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY value) value_75p,
       MEDIAN(value) value_med,
       AVG(value) value_avg
  FROM dba_hist_sysmetric_history
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Total Parse Count Per Txn'
   AND value >= 0
 GROUP BY
       snap_id,
       instance_number
)
SELECT /*+  NO_MERGE  */ /* 4k.615 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(value_max), 1) "Max",
       ROUND(SUM(value_95p), 1) "95th Percentile",
       ROUND(SUM(value_90p), 1) "90th Percentile",
       ROUND(SUM(value_85p), 1) "85th Percentile",
       ROUND(SUM(value_80p), 1) "80th Percentile",
       ROUND(SUM(value_75p), 1) "75th Percentile",
       ROUND(SUM(value_med), 1) "Median",
       ROUND(SUM(value_avg), 1) "Avg",
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:25:44 4k.632
Elapsed Hours so far:    1.058
Elapsed Hours so far: 1.058

Elapsed: 00:00:00.00

12:25:44 4k "00900_edb360_323688_4k_632_total_parse_count_per_txn.html"
12:26:00 4k "00901_edb360_323688_4k_632_total_parse_count_per_txn_line_chart.html"
Elapsed Hours so far:    1.065

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:26:11 4k "System Metric History per Snap Interval"
12:26:11 User Calls Per Sec

WITH
per_instance_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4k.615 */
       snap_id,
       instance_number,
       MIN(begin_time) begin_time,
       MAX(end_time) end_time,
       MAX(value) value_max,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY value) value_95p,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY value) value_90p,
       PERCENTILE_DISC(0.85) WITHIN GROUP (ORDER BY value) value_85p,
       PERCENTILE_DISC(0.80) WITHIN GROUP (ORDER BY value) value_80p,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY value) value_75p,
       MEDIAN(value) value_med,
       AVG(value) value_avg
  FROM dba_hist_sysmetric_history
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'User Calls Per Sec'
   AND value >= 0
 GROUP BY
       snap_id,
       instance_number
)
SELECT /*+  NO_MERGE  */ /* 4k.615 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(value_max), 1) "Max",
       ROUND(SUM(value_95p), 1) "95th Percentile",
       ROUND(SUM(value_90p), 1) "90th Percentile",
       ROUND(SUM(value_85p), 1) "85th Percentile",
       ROUND(SUM(value_80p), 1) "80th Percentile",
       ROUND(SUM(value_75p), 1) "75th Percentile",
       ROUND(SUM(value_med), 1) "Median",
       ROUND(SUM(value_avg), 1) "Avg",
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:26:11 4k.633
Elapsed Hours so far:    1.065
Elapsed Hours so far: 1.065

Elapsed: 00:00:00.00

12:26:11 4k "00902_edb360_323688_4k_633_user_calls_per_sec.html"
12:26:28 4k "00903_edb360_323688_4k_633_user_calls_per_sec_line_chart.html"
Elapsed Hours so far:    1.073

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:26:39 4k "System Metric History per Snap Interval"
12:26:39 User Transaction Per Sec

WITH
per_instance_and_hour AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4k.615 */
       snap_id,
       instance_number,
       MIN(begin_time) begin_time,
       MAX(end_time) end_time,
       MAX(value) value_max,
       PERCENTILE_DISC(0.95) WITHIN GROUP (ORDER BY value) value_95p,
       PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY value) value_90p,
       PERCENTILE_DISC(0.85) WITHIN GROUP (ORDER BY value) value_85p,
       PERCENTILE_DISC(0.80) WITHIN GROUP (ORDER BY value) value_80p,
       PERCENTILE_DISC(0.75) WITHIN GROUP (ORDER BY value) value_75p,
       MEDIAN(value) value_med,
       AVG(value) value_avg
  FROM dba_hist_sysmetric_history
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'User Transaction Per Sec'
   AND value >= 0
 GROUP BY
       snap_id,
       instance_number
)
SELECT /*+  NO_MERGE  */ /* 4k.615 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(value_max), 1) "Max",
       ROUND(SUM(value_95p), 1) "95th Percentile",
       ROUND(SUM(value_90p), 1) "90th Percentile",
       ROUND(SUM(value_85p), 1) "85th Percentile",
       ROUND(SUM(value_80p), 1) "80th Percentile",
       ROUND(SUM(value_75p), 1) "75th Percentile",
       ROUND(SUM(value_med), 1) "Median",
       ROUND(SUM(value_avg), 1) "Avg",
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance_and_hour
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:26:39 4k.634
Elapsed Hours so far:    1.073
Elapsed Hours so far: 1.073

Elapsed: 00:00:00.00

12:26:39 4k "00904_edb360_323688_4k_634_user_transaction_per_sec.html"
12:26:56 4k "00905_edb360_323688_4k_634_user_transaction_per_sec_line_chart.html"
Elapsed Hours so far:    1.081

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:27:09 4l "System Metric Summary per Snap Interval"
12:27:09 Active Serial Sessions

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Active Serial Sessions'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:27:09 4l.635
Elapsed Hours so far:    1.081
Elapsed Hours so far: 1.081

Elapsed: 00:00:00.00

12:27:09 4l "00906_edb360_323688_4l_635_active_serial_sessions.html"
12:27:15 4l "00907_edb360_323688_4l_635_active_serial_sessions_line_chart.html"
Elapsed Hours so far:    1.084

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:27:18 4l "System Metric Summary per Snap Interval"
12:27:18 Branch Node Splits Per Sec

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Branch Node Splits Per Sec'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:27:18 4l.636
Elapsed Hours so far:    1.084
Elapsed Hours so far: 1.084

Elapsed: 00:00:00.00

12:27:18 4l "00908_edb360_323688_4l_636_branch_node_splits_per_sec.html"
12:27:23 4l "00909_edb360_323688_4l_636_branch_node_splits_per_sec_line_chart.html"
Elapsed Hours so far:    1.086

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:27:26 4l "System Metric Summary per Snap Interval"
12:27:26 Cell Physical IO Interconnect Bytes

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Cell Physical IO Interconnect Bytes'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:27:26 4l.637
Elapsed Hours so far:    1.086
Elapsed Hours so far: 1.086

Elapsed: 00:00:00.00

12:27:26 4l "00910_edb360_323688_4l_637_cell_physical_io_interconnect_bytes.html"
12:27:31 4l "00911_edb360_323688_4l_637_cell_physical_io_interconnect_bytes_line_chart.html"
Elapsed Hours so far:    1.089

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:27:35 4l "System Metric Summary per Snap Interval"
12:27:35 CR Blocks Created Per Sec

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'CR Blocks Created Per Sec'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:27:35 4l.638
Elapsed Hours so far:    1.089
Elapsed Hours so far: 1.089

Elapsed: 00:00:00.00

12:27:35 4l "00912_edb360_323688_4l_638_cr_blocks_created_per_sec.html"
12:27:39 4l "00913_edb360_323688_4l_638_cr_blocks_created_per_sec_line_chart.html"
Elapsed Hours so far:    1.091

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:27:43 4l "System Metric Summary per Snap Interval"
12:27:43 CR Undo Records Applied Per Sec

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'CR Undo Records Applied Per Sec'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:27:43 4l.639
Elapsed Hours so far:    1.091
Elapsed Hours so far: 1.091

Elapsed: 00:00:00.00

12:27:43 4l "00914_edb360_323688_4l_639_cr_undo_records_applied_per_sec.html"
12:27:47 4l "00915_edb360_323688_4l_639_cr_undo_records_applied_per_sec_line_chart.html"
Elapsed Hours so far:    1.093

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:27:50 4l "System Metric Summary per Snap Interval"
12:27:50 Current Logons Count

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Current Logons Count'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:27:50 4l.640
Elapsed Hours so far:    1.093
Elapsed Hours so far: 1.093

Elapsed: 00:00:00.00

12:27:50 4l "00916_edb360_323688_4l_640_current_logons_count.html"
12:27:55 4l "00917_edb360_323688_4l_640_current_logons_count_line_chart.html"
Elapsed Hours so far:    1.095

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:27:58 4l "System Metric Summary per Snap Interval"
12:27:58 DB Block Gets Per Sec

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'DB Block Gets Per Sec'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:27:58 4l.641
Elapsed Hours so far:    1.095
Elapsed Hours so far: 1.095

Elapsed: 00:00:00.00

12:27:58 4l "00918_edb360_323688_4l_641_db_block_gets_per_sec.html"
12:28:02 4l "00919_edb360_323688_4l_641_db_block_gets_per_sec_line_chart.html"
Elapsed Hours so far:    1.097

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:28:05 4l "System Metric Summary per Snap Interval"
12:28:05 DB Block Gets Per Txn

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'DB Block Gets Per Txn'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:28:05 4l.642
Elapsed Hours so far:    1.097
Elapsed Hours so far: 1.097

Elapsed: 00:00:00.01

12:28:05 4l "00920_edb360_323688_4l_642_db_block_gets_per_txn.html"
12:28:09 4l "00921_edb360_323688_4l_642_db_block_gets_per_txn_line_chart.html"
Elapsed Hours so far:    1.099

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:28:12 4l "System Metric Summary per Snap Interval"
12:28:12 Disk Sort Per Sec

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Disk Sort Per Sec'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:28:12 4l.643
Elapsed Hours so far:    1.099
Elapsed Hours so far: 1.099

Elapsed: 00:00:00.00

12:28:12 4l "00922_edb360_323688_4l_643_disk_sort_per_sec.html"
12:28:16 4l "00923_edb360_323688_4l_643_disk_sort_per_sec_line_chart.html"
Elapsed Hours so far:    1.101

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:28:19 4l "System Metric Summary per Snap Interval"
12:28:19 Enqueue Deadlocks Per Sec

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Enqueue Deadlocks Per Sec'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:28:19 4l.644
Elapsed Hours so far:    1.101
Elapsed Hours so far: 1.101

Elapsed: 00:00:00.00

12:28:19 4l "00924_edb360_323688_4l_644_enqueue_deadlocks_per_sec.html"
12:28:23 4l "00925_edb360_323688_4l_644_enqueue_deadlocks_per_sec_line_chart.html"
Elapsed Hours so far:    1.103

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:28:26 4l "System Metric Summary per Snap Interval"
12:28:26 Enqueue Deadlocks Per Txn

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Enqueue Deadlocks Per Txn'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:28:26 4l.645
Elapsed Hours so far:    1.103
Elapsed Hours so far: 1.103

Elapsed: 00:00:00.00

12:28:26 4l "00926_edb360_323688_4l_645_enqueue_deadlocks_per_txn.html"
12:28:31 4l "00927_edb360_323688_4l_645_enqueue_deadlocks_per_txn_line_chart.html"
Elapsed Hours so far:    1.105

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:28:34 4l "System Metric Summary per Snap Interval"
12:28:34 Enqueue Waits Per Sec

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Enqueue Waits Per Sec'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:28:34 4l.646
Elapsed Hours so far:    1.105
Elapsed Hours so far: 1.105

Elapsed: 00:00:00.00

12:28:34 4l "00928_edb360_323688_4l_646_enqueue_waits_per_sec.html"
12:28:38 4l "00929_edb360_323688_4l_646_enqueue_waits_per_sec_line_chart.html"
Elapsed Hours so far:    1.107

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:28:41 4l "System Metric Summary per Snap Interval"
12:28:41 Enqueue Waits Per Txn

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Enqueue Waits Per Txn'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:28:41 4l.647
Elapsed Hours so far:    1.107
Elapsed Hours so far: 1.107

Elapsed: 00:00:00.00

12:28:41 4l "00930_edb360_323688_4l_647_enqueue_waits_per_txn.html"
12:28:45 4l "00931_edb360_323688_4l_647_enqueue_waits_per_txn_line_chart.html"
Elapsed Hours so far:    1.109

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:28:48 4l "System Metric Summary per Snap Interval"
12:28:48 Executions Per Sec

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Executions Per Sec'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:28:48 4l.648
Elapsed Hours so far:    1.109
Elapsed Hours so far: 1.109

Elapsed: 00:00:00.00

12:28:48 4l "00932_edb360_323688_4l_648_executions_per_sec.html"
12:28:52 4l "00933_edb360_323688_4l_648_executions_per_sec_line_chart.html"
Elapsed Hours so far:    1.111

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:28:55 4l "System Metric Summary per Snap Interval"
12:28:55 Executions Per Txn

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Executions Per Txn'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:28:55 4l.649
Elapsed Hours so far:    1.111
Elapsed Hours so far: 1.111

Elapsed: 00:00:00.00

12:28:55 4l "00934_edb360_323688_4l_649_executions_per_txn.html"
12:28:59 4l "00935_edb360_323688_4l_649_executions_per_txn_line_chart.html"
Elapsed Hours so far:    1.113

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:29:02 4l "System Metric Summary per Snap Interval"
12:29:02 Global Cache Average CR Get Time

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Global Cache Average CR Get Time'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:29:02 4l.650
Elapsed Hours so far:    1.113
Elapsed Hours so far: 1.113

Elapsed: 00:00:00.00

12:29:03 4l "00936_edb360_323688_4l_650_global_cache_average_cr_get_time.html"
12:29:07 4l "00937_edb360_323688_4l_650_global_cache_average_cr_get_time_line_chart.html"
Elapsed Hours so far:    1.115

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:29:10 4l "System Metric Summary per Snap Interval"
12:29:10 Global Cache Average Current Get Time

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Global Cache Average Current Get Time'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:29:10 4l.651
Elapsed Hours so far:    1.115
Elapsed Hours so far: 1.115

Elapsed: 00:00:00.00

12:29:10 4l "00938_edb360_323688_4l_651_global_cache_average_current_get_time.html"
12:29:14 4l "00939_edb360_323688_4l_651_global_cache_average_current_get_time_line_chart.html"
Elapsed Hours so far:    1.117

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:29:17 4l "System Metric Summary per Snap Interval"
12:29:17 Hard Parse Count Per Sec

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Hard Parse Count Per Sec'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:29:17 4l.652
Elapsed Hours so far:    1.117
Elapsed Hours so far: 1.117

Elapsed: 00:00:00.00

12:29:17 4l "00940_edb360_323688_4l_652_hard_parse_count_per_sec.html"
12:29:21 4l "00941_edb360_323688_4l_652_hard_parse_count_per_sec_line_chart.html"
Elapsed Hours so far:    1.119

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:29:24 4l "System Metric Summary per Snap Interval"
12:29:24 I/O Megabytes per Second

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'I/O Megabytes per Second'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:29:24 4l.653
Elapsed Hours so far:    1.119
Elapsed Hours so far: 1.119

Elapsed: 00:00:00.00

12:29:24 4l "00942_edb360_323688_4l_653_io_megabytes_per_second.html"
12:29:29 4l "00943_edb360_323688_4l_653_io_megabytes_per_second_line_chart.html"
Elapsed Hours so far:    1.121

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:29:32 4l "System Metric Summary per Snap Interval"
12:29:32 I/O Requests per Second

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'I/O Requests per Second'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:29:32 4l.654
Elapsed Hours so far:    1.121
Elapsed Hours so far: 1.121

Elapsed: 00:00:00.00

12:29:32 4l "00944_edb360_323688_4l_654_io_requests_per_second.html"
12:29:36 4l "00945_edb360_323688_4l_654_io_requests_per_second_line_chart.html"
Elapsed Hours so far:    1.123

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:29:39 4l "System Metric Summary per Snap Interval"
12:29:39 Leaf Node Splits Per Sec

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Leaf Node Splits Per Sec'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:29:39 4l.655
Elapsed Hours so far:    1.123
Elapsed Hours so far: 1.123

Elapsed: 00:00:00.00

12:29:39 4l "00946_edb360_323688_4l_655_leaf_node_splits_per_sec.html"
12:29:43 4l "00947_edb360_323688_4l_655_leaf_node_splits_per_sec_line_chart.html"
Elapsed Hours so far:    1.125

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:29:46 4l "System Metric Summary per Snap Interval"
12:29:46 Logical Reads Per Sec

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Logical Reads Per Sec'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:29:46 4l.656
Elapsed Hours so far:    1.125
Elapsed Hours so far: 1.125

Elapsed: 00:00:00.00

12:29:46 4l "00948_edb360_323688_4l_656_logical_reads_per_sec.html"
12:29:50 4l "00949_edb360_323688_4l_656_logical_reads_per_sec_line_chart.html"
Elapsed Hours so far:    1.127

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:29:53 4l "System Metric Summary per Snap Interval"
12:29:53 Logical Reads Per Txn

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Logical Reads Per Txn'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:29:53 4l.657
Elapsed Hours so far:    1.127
Elapsed Hours so far: 1.127

Elapsed: 00:00:00.00

12:29:53 4l "00950_edb360_323688_4l_657_logical_reads_per_txn.html"
12:29:57 4l "00951_edb360_323688_4l_657_logical_reads_per_txn_line_chart.html"
Elapsed Hours so far:    1.129

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:30:00 4l "System Metric Summary per Snap Interval"
12:30:00 Parse Failure Count Per Sec

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'Parse Failure Count Per Sec'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:30:00 4l.658
Elapsed Hours so far:    1.129
Elapsed Hours so far: 1.129

Elapsed: 00:00:00.00

12:30:00 4l "00952_edb360_323688_4l_658_parse_failure_count_per_sec.html"
12:30:04 4l "00953_edb360_323688_4l_658_parse_failure_count_per_sec_line_chart.html"
Elapsed Hours so far:    1.131

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:30:07 4l "System Metric Summary per Snap Interval"
12:30:07 User Commits Per Sec

WITH
per_instance AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 4l.635 */
       snap_id,
       instance_number,
       begin_time,
       end_time,
       maxval
  FROM dba_hist_sysmetric_summary
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND group_id = 2 /* 1 minute intervals */
   AND metric_name = 'User Commits Per Sec'
   AND maxval >= 0
)
SELECT /*+  NO_MERGE  */ /* 4l.635 */
       snap_id,
       TO_CHAR(MIN(begin_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(maxval), 1) "Max Value",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM per_instance
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:30:07 4l.659
Elapsed Hours so far:    1.131
Elapsed Hours so far: 1.131

Elapsed: 00:00:00.01

12:30:07 4l "00954_edb360_323688_4l_659_user_commits_per_sec.html"
12:30:12 4l "00955_edb360_323688_4l_659_user_commits_per_sec_line_chart.html"
Elapsed Hours so far:    1.133

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:30:15 5a "Active Session History (ASH)"
12:30:15 AAS per Wait Class for Cluster

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5a.660 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE session_state WHEN 'ON CPU'         THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_on_cpu,
       ROUND(SUM(CASE wait_class    WHEN 'User I/O'       THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_user_io,
       ROUND(SUM(CASE wait_class    WHEN 'System I/O'     THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_system_io,
       ROUND(SUM(CASE wait_class    WHEN 'Cluster'        THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_cluster,
       ROUND(SUM(CASE wait_class    WHEN 'Commit'         THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_commit,
       ROUND(SUM(CASE wait_class    WHEN 'Concurrency'    THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_concurrency,
       ROUND(SUM(CASE wait_class    WHEN 'Application'    THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_application,
       ROUND(SUM(CASE wait_class    WHEN 'Administrative' THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_administrative,
       ROUND(SUM(CASE wait_class    WHEN 'Configuration'  THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_configuration,
       ROUND(SUM(CASE wait_class    WHEN 'Network'        THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_network,
       ROUND(SUM(CASE wait_class    WHEN 'Queueing'       THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_queueing,
       ROUND(SUM(CASE wait_class    WHEN 'Scheduler'      THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_scheduler,
       ROUND(SUM(CASE wait_class    WHEN  'Other'         THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_other,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = instance_number
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:30:15 5a.660
Elapsed Hours so far:    1.133
Elapsed Hours so far: 1.133

Elapsed: 00:00:00.00

12:30:15 5a "00956_edb360_323688_5a_660_aas_per_wait_class_for_cluster.html"
12:30:22 5a "00957_edb360_323688_5a_660_aas_per_wait_class_for_cluster_line_chart.html"
Elapsed Hours so far:    1.135

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:30:23 5a "Active Session History (ASH)"
12:30:23 AAS per Wait Class for Instance 1

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5a.660 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE session_state WHEN 'ON CPU'         THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_on_cpu,
       ROUND(SUM(CASE wait_class    WHEN 'User I/O'       THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_user_io,
       ROUND(SUM(CASE wait_class    WHEN 'System I/O'     THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_system_io,
       ROUND(SUM(CASE wait_class    WHEN 'Cluster'        THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_cluster,
       ROUND(SUM(CASE wait_class    WHEN 'Commit'         THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_commit,
       ROUND(SUM(CASE wait_class    WHEN 'Concurrency'    THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_concurrency,
       ROUND(SUM(CASE wait_class    WHEN 'Application'    THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_application,
       ROUND(SUM(CASE wait_class    WHEN 'Administrative' THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_administrative,
       ROUND(SUM(CASE wait_class    WHEN 'Configuration'  THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_configuration,
       ROUND(SUM(CASE wait_class    WHEN 'Network'        THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_network,
       ROUND(SUM(CASE wait_class    WHEN 'Queueing'       THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_queueing,
       ROUND(SUM(CASE wait_class    WHEN 'Scheduler'      THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_scheduler,
       ROUND(SUM(CASE wait_class    WHEN  'Other'         THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_other,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 1
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:30:23 5a.661
Elapsed Hours so far:    1.135
Elapsed Hours so far: 1.135

Elapsed: 00:00:00.01

12:30:23 5a "00958_edb360_323688_5a_661_aas_per_wait_class_for_instance_1.html"
12:30:34 5a "00959_edb360_323688_5a_661_aas_per_wait_class_for_instance_1_line_chart.html"
Elapsed Hours so far:    1.139

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:30:37 5a "Active Session History (ASH)"
12:30:37 AAS per Wait Class for Instance 2

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5a.660 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE session_state WHEN 'ON CPU'         THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_on_cpu,
       ROUND(SUM(CASE wait_class    WHEN 'User I/O'       THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_user_io,
       ROUND(SUM(CASE wait_class    WHEN 'System I/O'     THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_system_io,
       ROUND(SUM(CASE wait_class    WHEN 'Cluster'        THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_cluster,
       ROUND(SUM(CASE wait_class    WHEN 'Commit'         THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_commit,
       ROUND(SUM(CASE wait_class    WHEN 'Concurrency'    THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_concurrency,
       ROUND(SUM(CASE wait_class    WHEN 'Application'    THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_application,
       ROUND(SUM(CASE wait_class    WHEN 'Administrative' THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_administrative,
       ROUND(SUM(CASE wait_class    WHEN 'Configuration'  THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_configuration,
       ROUND(SUM(CASE wait_class    WHEN 'Network'        THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_network,
       ROUND(SUM(CASE wait_class    WHEN 'Queueing'       THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_queueing,
       ROUND(SUM(CASE wait_class    WHEN 'Scheduler'      THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_scheduler,
       ROUND(SUM(CASE wait_class    WHEN  'Other'         THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(s
ample_time) AS DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 2
4 * 3600), 3) aas_other,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND instance_number = 2
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:30:37 5a.662
Elapsed Hours so far:    1.139
Elapsed Hours so far: 1.139

Elapsed: 00:00:00.00

12:30:38 5a "00960_edb360_323688_5a_662_aas_per_wait_class_for_instance_2.html"
12:30:39 5a "00961_edb360_323688_5a_662_aas_per_wait_class_for_instance_2_line_chart.html"
Elapsed Hours so far:    1.140

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:30:40 5b "Active Session History (ASH) on Wait Class"
12:30:40 AAS Total per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5b.663 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND 1 = 1
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:30:40 5b.663
Elapsed Hours so far:    1.140
Elapsed Hours so far: 1.14

Elapsed: 00:00:00.00

12:30:41 5b "00962_edb360_323688_5b_663_aas_total_per_instance.html"
12:30:47 5b "00963_edb360_323688_5b_663_aas_total_per_instance_line_chart.html"
Elapsed Hours so far:    1.142

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:30:48 5b "Active Session History (ASH) on Wait Class"
12:30:48 AAS On CPU per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5b.663 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND session_state = 'ON CPU'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:30:48 5b.664
Elapsed Hours so far:    1.142
Elapsed Hours so far: 1.142

Elapsed: 00:00:00.00

12:30:48 5b "00964_edb360_323688_5b_664_aas_on_cpu_per_instance.html"
12:30:54 5b "00965_edb360_323688_5b_664_aas_on_cpu_per_instance_line_chart.html"
Elapsed Hours so far:    1.144

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:30:55 5b "Active Session History (ASH) on Wait Class"
12:30:55 AAS waiting on User IO per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5b.663 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'User I/O'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:30:55 5b.665
Elapsed Hours so far:    1.144
Elapsed Hours so far: 1.144

Elapsed: 00:00:00.00

12:30:55 5b "00966_edb360_323688_5b_665_aas_waiting_on_user_io_per_instance.html"
12:31:01 5b "00967_edb360_323688_5b_665_aas_waiting_on_user_io_per_instance_line_chart.html"
Elapsed Hours so far:    1.146

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:31:01 5b "Active Session History (ASH) on Wait Class"
12:31:01 AAS waiting on System IO per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5b.663 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'System I/O'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:31:01 5b.666
Elapsed Hours so far:    1.146
Elapsed Hours so far: 1.146

Elapsed: 00:00:00.00

12:31:02 5b "00968_edb360_323688_5b_666_aas_waiting_on_system_io_per_instance.html"
12:31:03 5b "00969_edb360_323688_5b_666_aas_waiting_on_system_io_per_instance_line_chart.html"
Elapsed Hours so far:    1.146

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:31:03 5b "Active Session History (ASH) on Wait Class"
12:31:03 AAS waiting on Cluster per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5b.663 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Cluster'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:31:03 5b.667
Elapsed Hours so far:    1.146
Elapsed Hours so far: 1.146

Elapsed: 00:00:00.00

12:31:03 5b "00970_edb360_323688_5b_667_aas_waiting_on_cluster_per_instance.html"
12:31:05 5b "00971_edb360_323688_5b_667_aas_waiting_on_cluster_per_instance_line_chart.html"
Elapsed Hours so far:    1.147

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:31:05 5b "Active Session History (ASH) on Wait Class"
12:31:05 AAS waiting on Commit per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5b.663 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Commit'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:31:05 5b.668
Elapsed Hours so far:    1.147
Elapsed Hours so far: 1.147

Elapsed: 00:00:00.00

12:31:06 5b "00972_edb360_323688_5b_668_aas_waiting_on_commit_per_instance.html"
12:31:07 5b "00973_edb360_323688_5b_668_aas_waiting_on_commit_per_instance_line_chart.html"
Elapsed Hours so far:    1.148

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:31:07 5b "Active Session History (ASH) on Wait Class"
12:31:07 AAS waiting on Concurrency per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5b.663 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Concurrency'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:31:07 5b.669
Elapsed Hours so far:    1.148
Elapsed Hours so far: 1.148

Elapsed: 00:00:00.00

12:31:07 5b "00974_edb360_323688_5b_669_aas_waiting_on_concurrency_per_instance.html"
12:31:09 5b "00975_edb360_323688_5b_669_aas_waiting_on_concurrency_per_instance_line_chart.html"
Elapsed Hours so far:    1.148

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:31:09 5b "Active Session History (ASH) on Wait Class"
12:31:09 AAS waiting on Application per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5b.663 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Application'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:31:09 5b.670
Elapsed Hours so far:    1.148
Elapsed Hours so far: 1.148

Elapsed: 00:00:00.00

12:31:09 5b "00976_edb360_323688_5b_670_aas_waiting_on_application_per_instance.html"
12:31:11 5b "00977_edb360_323688_5b_670_aas_waiting_on_application_per_instance_line_chart.html"
Elapsed Hours so far:    1.149

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:31:12 5b "Active Session History (ASH) on Wait Class"
12:31:12 AAS waiting on Administrative per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5b.663 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Administrative'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:31:12 5b.671
Elapsed Hours so far:    1.149
Elapsed Hours so far: 1.149

Elapsed: 00:00:00.00

12:31:12 5b "00978_edb360_323688_5b_671_aas_waiting_on_administrative_per_instance.html"
12:31:13 5b "00979_edb360_323688_5b_671_aas_waiting_on_administrative_per_instance_line_chart.html"
Elapsed Hours so far:    1.149

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:31:14 5b "Active Session History (ASH) on Wait Class"
12:31:14 AAS waiting on Configuration per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5b.663 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Configuration'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:31:14 5b.672
Elapsed Hours so far:    1.149
Elapsed Hours so far: 1.149

Elapsed: 00:00:00.00

12:31:14 5b "00980_edb360_323688_5b_672_aas_waiting_on_configuration_per_instance.html"
12:31:15 5b "00981_edb360_323688_5b_672_aas_waiting_on_configuration_per_instance_line_chart.html"
Elapsed Hours so far:    1.150

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:31:15 5b "Active Session History (ASH) on Wait Class"
12:31:15 AAS waiting on Network per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5b.663 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Network'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:31:15 5b.673
Elapsed Hours so far:    1.150
Elapsed Hours so far: 1.15

Elapsed: 00:00:00.01

12:31:16 5b "00982_edb360_323688_5b_673_aas_waiting_on_network_per_instance.html"
12:31:17 5b "00983_edb360_323688_5b_673_aas_waiting_on_network_per_instance_line_chart.html"
Elapsed Hours so far:    1.150

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:31:17 5b "Active Session History (ASH) on Wait Class"
12:31:17 AAS waiting on Queueing per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5b.663 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Queueing'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:31:17 5b.674
Elapsed Hours so far:    1.150
Elapsed Hours so far: 1.15

Elapsed: 00:00:00.00

12:31:18 5b "00984_edb360_323688_5b_674_aas_waiting_on_queueing_per_instance.html"
12:31:19 5b "00985_edb360_323688_5b_674_aas_waiting_on_queueing_per_instance_line_chart.html"
Elapsed Hours so far:    1.151

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:31:19 5b "Active Session History (ASH) on Wait Class"
12:31:19 AAS waiting on Scheduler per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5b.663 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Scheduler'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:31:19 5b.675
Elapsed Hours so far:    1.151
Elapsed Hours so far: 1.151

Elapsed: 00:00:00.00

12:31:20 5b "00986_edb360_323688_5b_675_aas_waiting_on_scheduler_per_instance.html"
12:31:21 5b "00987_edb360_323688_5b_675_aas_waiting_on_scheduler_per_instance_line_chart.html"
Elapsed Hours so far:    1.151

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:31:21 5b "Active Session History (ASH) on Wait Class"
12:31:21 AAS waiting on Other per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5b.663 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Other'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:31:21 5b.676
Elapsed Hours so far:    1.151
Elapsed Hours so far: 1.151

Elapsed: 00:00:00.00

12:31:21 5b "00988_edb360_323688_5b_676_aas_waiting_on_other_per_instance.html"
12:31:23 5b "00989_edb360_323688_5b_676_aas_waiting_on_other_per_instance_line_chart.html"
Elapsed Hours so far:    1.152

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:31:24 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:31:24 Top 24 Wait Events

WITH
ranked AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       h.wait_class,
       event event_name,
       COUNT(*) samples,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) wrank
  FROM dba_hist_active_sess_history h
 WHERE 'Y' = 'Y'
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.session_state = 'WAITING'
 GROUP BY
       h.wait_class,
       event
)
SELECT ROUND(samples * 10 / 3600, 1) hours_waited,
       wait_class,
       event_name
  FROM ranked
 WHERE wrank < 25
 ORDER BY
       wrank

12:31:24 5c.677
Elapsed Hours so far:    1.152
Elapsed Hours so far: 1.152

Elapsed: 00:00:00.00

12:31:24 5c "00990_edb360_323688_5c_677_top_24_wait_events.html"
Elapsed Hours so far:    1.154

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:31:32 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:31:32 ASH CPU per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND session_state = 'ON CPU'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:31:32 5c.678
Elapsed Hours so far:    1.154
Elapsed Hours so far: 1.154

Elapsed: 00:00:00.00

12:31:32 5c "00991_edb360_323688_5c_678_ash_cpu_per_instance.html"
12:31:34 5c "00992_edb360_323688_5c_678_ash_cpu_per_instance_line_chart.html"
Elapsed Hours so far:    1.155

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:31:35 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:31:35 ASH CPU per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND session_state = 'ON CPU'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:31:35 5c.679
Elapsed Hours so far:    1.155
Elapsed Hours so far: 1.155

Elapsed: 00:00:00.00

12:31:35 5c "00993_edb360_323688_5c_679_ash_cpu_per_source.html"
12:31:42 5c "00994_edb360_323688_5c_679_ash_cpu_per_source_pie_chart.html"
Elapsed Hours so far:    1.158

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:31:44 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:31:44 ASH Application "enq: TM - contention" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Application' AND event = 'enq: TM - contention'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:31:44 5c.680
Elapsed Hours so far:    1.158
Elapsed Hours so far: 1.158

Elapsed: 00:00:00.00

12:31:44 5c "00995_edb360_323688_5c_680_ash_application_enq_tm_contention_per_instance.html"
12:31:50 5c "00996_edb360_323688_5c_680_ash_application_enq_tm_contention_per_instance_line_chart.html"
Elapsed Hours so far:    1.160

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:31:51 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:31:51 ASH Application "enq: TM - contention" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'Application' AND event = 'enq: TM - contention'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:31:51 5c.681
Elapsed Hours so far:    1.160
Elapsed Hours so far: 1.16

Elapsed: 00:00:00.00

12:31:51 5c "00997_edb360_323688_5c_681_ash_application_enq_tm_contention_per_source.html"
12:32:05 5c "00998_edb360_323688_5c_681_ash_application_enq_tm_contention_per_source_pie_chart.html"
Elapsed Hours so far:    1.166

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:32:13 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:32:13 ASH User I/O "cell single block physical read" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'User I/O' AND event = 'cell single block physical read'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:32:13 5c.682
Elapsed Hours so far:    1.166
Elapsed Hours so far: 1.166

Elapsed: 00:00:00.00

12:32:13 5c "00999_edb360_323688_5c_682_ash_user_io_cell_single_block_physical_read_per_instance.html"
12:32:15 5c "01000_edb360_323688_5c_682_ash_user_io_cell_single_block_physical_read_per_instance_line_chart.html"
Elapsed Hours so far:    1.167

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:32:18 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:32:18 ASH User I/O "cell single block physical read" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'User I/O' AND event = 'cell single block physical read'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:32:18 5c.683
Elapsed Hours so far:    1.167
Elapsed Hours so far: 1.167

Elapsed: 00:00:00.00

12:32:18 5c "01001_edb360_323688_5c_683_ash_user_io_cell_single_block_physical_read_per_source.html"
12:32:31 5c "01002_edb360_323688_5c_683_ash_user_io_cell_single_block_physical_read_per_source_pie_chart.html"
Elapsed Hours so far:    1.173

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:32:39 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:32:39 ASH Network "SQL*Net more data to client" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Network' AND event = 'SQL*Net more data to client'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:32:39 5c.684
Elapsed Hours so far:    1.173
Elapsed Hours so far: 1.173

Elapsed: 00:00:00.00

12:32:39 5c "01003_edb360_323688_5c_684_ash_network_sqlnet_more_data_to_client_per_instance.html"
12:32:41 5c "01004_edb360_323688_5c_684_ash_network_sqlnet_more_data_to_client_per_instance_line_chart.html"
Elapsed Hours so far:    1.174

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:32:41 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:32:41 ASH Network "SQL*Net more data to client" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'Network' AND event = 'SQL*Net more data to client'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:32:41 5c.685
Elapsed Hours so far:    1.174
Elapsed Hours so far: 1.174

Elapsed: 00:00:00.00

12:32:41 5c "01005_edb360_323688_5c_685_ash_network_sqlnet_more_data_to_client_per_source.html"
12:32:54 5c "01006_edb360_323688_5c_685_ash_network_sqlnet_more_data_to_client_per_source_pie_chart.html"
Elapsed Hours so far:    1.179

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:33:02 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:33:02 ASH Administrative "Backup: MML write backup piece" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Administrative' AND event = 'Backup: MML write backup piece'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:33:02 5c.686
Elapsed Hours so far:    1.179
Elapsed Hours so far: 1.179

Elapsed: 00:00:00.01

12:33:02 5c "01007_edb360_323688_5c_686_ash_administrative_backup_mml_write_backup_piece_per_instance.html"
12:33:08 5c "01008_edb360_323688_5c_686_ash_administrative_backup_mml_write_backup_piece_per_instance_line_chart.html"
Elapsed Hours so far:    1.181

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:33:09 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:33:09 ASH Administrative "Backup: MML write backup piece" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'Administrative' AND event = 'Backup: MML write backup piece'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:33:09 5c.687
Elapsed Hours so far:    1.181
Elapsed Hours so far: 1.181

Elapsed: 00:00:00.00

12:33:09 5c "01009_edb360_323688_5c_687_ash_administrative_backup_mml_write_backup_piece_per_source.html"
12:33:22 5c "01010_edb360_323688_5c_687_ash_administrative_backup_mml_write_backup_piece_per_source_pie_chart.html"
Elapsed Hours so far:    1.187

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:33:29 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:33:29 ASH Cluster "gc cr disk read" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Cluster' AND event = 'gc cr disk read'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:33:29 5c.688
Elapsed Hours so far:    1.187
Elapsed Hours so far: 1.187

Elapsed: 00:00:00.00

12:33:30 5c "01011_edb360_323688_5c_688_ash_cluster_gc_cr_disk_read_per_instance.html"
12:33:31 5c "01012_edb360_323688_5c_688_ash_cluster_gc_cr_disk_read_per_instance_line_chart.html"
Elapsed Hours so far:    1.188

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:33:32 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:33:32 ASH Cluster "gc cr disk read" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'Cluster' AND event = 'gc cr disk read'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:33:32 5c.689
Elapsed Hours so far:    1.188
Elapsed Hours so far: 1.188

Elapsed: 00:00:00.00

12:33:32 5c "01013_edb360_323688_5c_689_ash_cluster_gc_cr_disk_read_per_source.html"
12:33:45 5c "01014_edb360_323688_5c_689_ash_cluster_gc_cr_disk_read_per_source_pie_chart.html"
Elapsed Hours so far:    1.193

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:33:53 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:33:53 ASH Concurrency "cursor: pin S wait on X" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Concurrency' AND event = 'cursor: pin S wait on X'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:33:53 5c.690
Elapsed Hours so far:    1.193
Elapsed Hours so far: 1.193

Elapsed: 00:00:00.00

12:33:53 5c "01015_edb360_323688_5c_690_ash_concurrency_cursor_pin_s_wait_on_x_per_instance.html"
12:33:59 5c "01016_edb360_323688_5c_690_ash_concurrency_cursor_pin_s_wait_on_x_per_instance_line_chart.html"
Elapsed Hours so far:    1.195

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:33:59 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:33:59 ASH Concurrency "cursor: pin S wait on X" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'Concurrency' AND event = 'cursor: pin S wait on X'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:33:59 5c.691
Elapsed Hours so far:    1.195
Elapsed Hours so far: 1.195

Elapsed: 00:00:00.00

12:33:59 5c "01017_edb360_323688_5c_691_ash_concurrency_cursor_pin_s_wait_on_x_per_source.html"
12:34:13 5c "01018_edb360_323688_5c_691_ash_concurrency_cursor_pin_s_wait_on_x_per_source_pie_chart.html"
Elapsed Hours so far:    1.201

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:34:20 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:34:20 ASH User I/O "direct path read" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'User I/O' AND event = 'direct path read'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:34:20 5c.692
Elapsed Hours so far:    1.201
Elapsed Hours so far: 1.201

Elapsed: 00:00:00.00

12:34:20 5c "01019_edb360_323688_5c_692_ash_user_io_direct_path_read_per_instance.html"
12:34:22 5c "01020_edb360_323688_5c_692_ash_user_io_direct_path_read_per_instance_line_chart.html"
Elapsed Hours so far:    1.202

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:34:22 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:34:22 ASH User I/O "direct path read" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'User I/O' AND event = 'direct path read'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:34:22 5c.693
Elapsed Hours so far:    1.202
Elapsed Hours so far: 1.202

Elapsed: 00:00:00.00

12:34:23 5c "01021_edb360_323688_5c_693_ash_user_io_direct_path_read_per_source.html"
12:34:36 5c "01022_edb360_323688_5c_693_ash_user_io_direct_path_read_per_source_pie_chart.html"
Elapsed Hours so far:    1.208

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:34:44 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:34:44 ASH Other "rdbms ipc reply" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Other' AND event = 'rdbms ipc reply'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:34:44 5c.694
Elapsed Hours so far:    1.208
Elapsed Hours so far: 1.208

Elapsed: 00:00:00.00

12:34:44 5c "01023_edb360_323688_5c_694_ash_other_rdbms_ipc_reply_per_instance.html"
12:34:50 5c "01024_edb360_323688_5c_694_ash_other_rdbms_ipc_reply_per_instance_line_chart.html"
Elapsed Hours so far:    1.210

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:34:50 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:34:50 ASH Other "rdbms ipc reply" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'Other' AND event = 'rdbms ipc reply'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:34:50 5c.695
Elapsed Hours so far:    1.210
Elapsed Hours so far: 1.21

Elapsed: 00:00:00.00

12:34:51 5c "01025_edb360_323688_5c_695_ash_other_rdbms_ipc_reply_per_source.html"
12:35:04 5c "01026_edb360_323688_5c_695_ash_other_rdbms_ipc_reply_per_source_pie_chart.html"
Elapsed Hours so far:    1.215

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:35:11 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:35:11 ASH Application "enq: TX - row lock contention" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Application' AND event = 'enq: TX - row lock contention'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:35:11 5c.696
Elapsed Hours so far:    1.215
Elapsed Hours so far: 1.215

Elapsed: 00:00:00.00

12:35:11 5c "01027_edb360_323688_5c_696_ash_application_enq_tx_row_lock_contention_per_instance.html"
12:35:13 5c "01028_edb360_323688_5c_696_ash_application_enq_tx_row_lock_contention_per_instance_line_chart.html"
Elapsed Hours so far:    1.216

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:35:13 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:35:13 ASH Application "enq: TX - row lock contention" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'Application' AND event = 'enq: TX - row lock contention'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:35:13 5c.697
Elapsed Hours so far:    1.216
Elapsed Hours so far: 1.216

Elapsed: 00:00:00.00

12:35:13 5c "01029_edb360_323688_5c_697_ash_application_enq_tx_row_lock_contention_per_source.html"
12:35:26 5c "01030_edb360_323688_5c_697_ash_application_enq_tx_row_lock_contention_per_source_pie_chart.html"
Elapsed Hours so far:    1.222

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:35:34 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:35:34 ASH User I/O "cell multiblock read request" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'User I/O' AND event = 'cell multiblock read request'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:35:34 5c.698
Elapsed Hours so far:    1.222
Elapsed Hours so far: 1.222

Elapsed: 00:00:00.00

12:35:34 5c "01031_edb360_323688_5c_698_ash_user_io_cell_multiblock_read_request_per_instance.html"
12:35:39 5c "01032_edb360_323688_5c_698_ash_user_io_cell_multiblock_read_request_per_instance_line_chart.html"
Elapsed Hours so far:    1.223

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:35:40 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:35:40 ASH User I/O "cell multiblock read request" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'User I/O' AND event = 'cell multiblock read request'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:35:40 5c.699
Elapsed Hours so far:    1.223
Elapsed Hours so far: 1.223

Elapsed: 00:00:00.00

12:35:40 5c "01033_edb360_323688_5c_699_ash_user_io_cell_multiblock_read_request_per_source.html"
12:35:52 5c "01034_edb360_323688_5c_699_ash_user_io_cell_multiblock_read_request_per_source_pie_chart.html"
Elapsed Hours so far:    1.229

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:36:00 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:36:00 ASH User I/O "cell multiblock physical read" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'User I/O' AND event = 'cell multiblock physical read'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:36:00 5c.700
Elapsed Hours so far:    1.229
Elapsed Hours so far: 1.229

Elapsed: 00:00:00.00

12:36:00 5c "01035_edb360_323688_5c_700_ash_user_io_cell_multiblock_physical_read_per_instance.html"
12:36:02 5c "01036_edb360_323688_5c_700_ash_user_io_cell_multiblock_physical_read_per_instance_line_chart.html"
Elapsed Hours so far:    1.229

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:36:02 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:36:02 ASH User I/O "cell multiblock physical read" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'User I/O' AND event = 'cell multiblock physical read'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:36:02 5c.701
Elapsed Hours so far:    1.229
Elapsed Hours so far: 1.229

Elapsed: 00:00:00.00

12:36:02 5c "01037_edb360_323688_5c_701_ash_user_io_cell_multiblock_physical_read_per_source.html"
12:36:15 5c "01038_edb360_323688_5c_701_ash_user_io_cell_multiblock_physical_read_per_source_pie_chart.html"
Elapsed Hours so far:    1.235

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:36:22 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:36:22 ASH Cluster "gc current block 2-way" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Cluster' AND event = 'gc current block 2-way'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:36:22 5c.702
Elapsed Hours so far:    1.235
Elapsed Hours so far: 1.235

Elapsed: 00:00:00.00

12:36:22 5c "01039_edb360_323688_5c_702_ash_cluster_gc_current_block_2way_per_instance.html"
12:36:28 5c "01040_edb360_323688_5c_702_ash_cluster_gc_current_block_2way_per_instance_line_chart.html"
Elapsed Hours so far:    1.237

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:36:29 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:36:29 ASH Cluster "gc current block 2-way" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'Cluster' AND event = 'gc current block 2-way'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:36:29 5c.703
Elapsed Hours so far:    1.237
Elapsed Hours so far: 1.237

Elapsed: 00:00:00.00

12:36:29 5c "01041_edb360_323688_5c_703_ash_cluster_gc_current_block_2way_per_source.html"
12:36:41 5c "01042_edb360_323688_5c_703_ash_cluster_gc_current_block_2way_per_source_pie_chart.html"
Elapsed Hours so far:    1.242

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:36:49 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:36:49 ASH Concurrency "row cache lock" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Concurrency' AND event = 'row cache lock'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:36:49 5c.704
Elapsed Hours so far:    1.242
Elapsed Hours so far: 1.242

Elapsed: 00:00:00.00

12:36:49 5c "01043_edb360_323688_5c_704_ash_concurrency_row_cache_lock_per_instance.html"
12:36:51 5c "01044_edb360_323688_5c_704_ash_concurrency_row_cache_lock_per_instance_line_chart.html"
Elapsed Hours so far:    1.243

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:36:51 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:36:51 ASH Concurrency "row cache lock" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'Concurrency' AND event = 'row cache lock'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:36:51 5c.705
Elapsed Hours so far:    1.243
Elapsed Hours so far: 1.243

Elapsed: 00:00:00.00

12:36:51 5c "01045_edb360_323688_5c_705_ash_concurrency_row_cache_lock_per_source.html"
12:37:04 5c "01046_edb360_323688_5c_705_ash_concurrency_row_cache_lock_per_source_pie_chart.html"
Elapsed Hours so far:    1.249

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:37:11 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:37:11 ASH Cluster "gc cr multi block request" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Cluster' AND event = 'gc cr multi block request'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:37:11 5c.706
Elapsed Hours so far:    1.249
Elapsed Hours so far: 1.249

Elapsed: 00:00:00.00

12:37:11 5c "01047_edb360_323688_5c_706_ash_cluster_gc_cr_multi_block_request_per_instance.html"
12:37:17 5c "01048_edb360_323688_5c_706_ash_cluster_gc_cr_multi_block_request_per_instance_line_chart.html"
Elapsed Hours so far:    1.250

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:37:17 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:37:17 ASH Cluster "gc cr multi block request" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'Cluster' AND event = 'gc cr multi block request'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:37:17 5c.707
Elapsed Hours so far:    1.250
Elapsed Hours so far: 1.25

Elapsed: 00:00:00.00

12:37:18 5c "01049_edb360_323688_5c_707_ash_cluster_gc_cr_multi_block_request_per_source.html"
12:37:30 5c "01050_edb360_323688_5c_707_ash_cluster_gc_cr_multi_block_request_per_source_pie_chart.html"
Elapsed Hours so far:    1.257

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:37:40 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:37:40 ASH Cluster "gc cr grant 2-way" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Cluster' AND event = 'gc cr grant 2-way'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:37:40 5c.708
Elapsed Hours so far:    1.257
Elapsed Hours so far: 1.257

Elapsed: 00:00:00.00

12:37:40 5c "01051_edb360_323688_5c_708_ash_cluster_gc_cr_grant_2way_per_instance.html"
12:37:41 5c "01052_edb360_323688_5c_708_ash_cluster_gc_cr_grant_2way_per_instance_line_chart.html"
Elapsed Hours so far:    1.258

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:37:45 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:37:45 ASH Cluster "gc cr grant 2-way" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'Cluster' AND event = 'gc cr grant 2-way'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:37:45 5c.709
Elapsed Hours so far:    1.258
Elapsed Hours so far: 1.258

Elapsed: 00:00:00.00

12:37:45 5c "01053_edb360_323688_5c_709_ash_cluster_gc_cr_grant_2way_per_source.html"
12:37:58 5c "01054_edb360_323688_5c_709_ash_cluster_gc_cr_grant_2way_per_source_pie_chart.html"
Elapsed Hours so far:    1.264

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:38:05 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:38:05 ASH Cluster "gc current grant 2-way" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Cluster' AND event = 'gc current grant 2-way'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:38:05 5c.710
Elapsed Hours so far:    1.264
Elapsed Hours so far: 1.264

Elapsed: 00:00:00.00

12:38:05 5c "01055_edb360_323688_5c_710_ash_cluster_gc_current_grant_2way_per_instance.html"
12:38:07 5c "01056_edb360_323688_5c_710_ash_cluster_gc_current_grant_2way_per_instance_line_chart.html"
Elapsed Hours so far:    1.264

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:38:08 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:38:08 ASH Cluster "gc current grant 2-way" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'Cluster' AND event = 'gc current grant 2-way'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:38:08 5c.711
Elapsed Hours so far:    1.264
Elapsed Hours so far: 1.264

Elapsed: 00:00:00.01

12:38:08 5c "01057_edb360_323688_5c_711_ash_cluster_gc_current_grant_2way_per_source.html"
12:38:21 5c "01058_edb360_323688_5c_711_ash_cluster_gc_current_grant_2way_per_source_pie_chart.html"
Elapsed Hours so far:    1.270

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:38:28 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:38:28 ASH Concurrency "library cache lock" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Concurrency' AND event = 'library cache lock'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:38:28 5c.712
Elapsed Hours so far:    1.270
Elapsed Hours so far: 1.27

Elapsed: 00:00:00.01

12:38:29 5c "01059_edb360_323688_5c_712_ash_concurrency_library_cache_lock_per_instance.html"
12:38:34 5c "01060_edb360_323688_5c_712_ash_concurrency_library_cache_lock_per_instance_line_chart.html"
Elapsed Hours so far:    1.272

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:38:35 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:38:35 ASH Concurrency "library cache lock" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'Concurrency' AND event = 'library cache lock'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:38:35 5c.713
Elapsed Hours so far:    1.272
Elapsed Hours so far: 1.272

Elapsed: 00:00:00.00

12:38:35 5c "01061_edb360_323688_5c_713_ash_concurrency_library_cache_lock_per_source.html"
12:38:48 5c "01062_edb360_323688_5c_713_ash_concurrency_library_cache_lock_per_source_pie_chart.html"
Elapsed Hours so far:    1.278

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:38:55 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:38:55 ASH Other "DFS lock handle" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Other' AND event = 'DFS lock handle'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:38:55 5c.714
Elapsed Hours so far:    1.278
Elapsed Hours so far: 1.278

Elapsed: 00:00:00.00

12:38:55 5c "01063_edb360_323688_5c_714_ash_other_dfs_lock_handle_per_instance.html"
12:38:57 5c "01064_edb360_323688_5c_714_ash_other_dfs_lock_handle_per_instance_line_chart.html"
Elapsed Hours so far:    1.278

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:38:57 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:38:57 ASH Other "DFS lock handle" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'Other' AND event = 'DFS lock handle'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:38:57 5c.715
Elapsed Hours so far:    1.278
Elapsed Hours so far: 1.278

Elapsed: 00:00:00.00

12:38:57 5c "01065_edb360_323688_5c_715_ash_other_dfs_lock_handle_per_source.html"
12:39:10 5c "01066_edb360_323688_5c_715_ash_other_dfs_lock_handle_per_source_pie_chart.html"
Elapsed Hours so far:    1.284

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:39:17 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:39:17 ASH User I/O "cell smart table scan" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'User I/O' AND event = 'cell smart table scan'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:39:17 5c.716
Elapsed Hours so far:    1.284
Elapsed Hours so far: 1.284

Elapsed: 00:00:00.01

12:39:18 5c "01067_edb360_323688_5c_716_ash_user_io_cell_smart_table_scan_per_instance.html"
12:39:23 5c "01068_edb360_323688_5c_716_ash_user_io_cell_smart_table_scan_per_instance_line_chart.html"
Elapsed Hours so far:    1.285

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:39:24 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:39:24 ASH User I/O "cell smart table scan" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'User I/O' AND event = 'cell smart table scan'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:39:24 5c.717
Elapsed Hours so far:    1.285
Elapsed Hours so far: 1.285

Elapsed: 00:00:00.00

12:39:24 5c "01069_edb360_323688_5c_717_ash_user_io_cell_smart_table_scan_per_source.html"
12:39:36 5c "01070_edb360_323688_5c_717_ash_user_io_cell_smart_table_scan_per_source_pie_chart.html"
Elapsed Hours so far:    1.291

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:39:44 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:39:44 ASH User I/O "direct path read temp" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'User I/O' AND event = 'direct path read temp'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:39:44 5c.718
Elapsed Hours so far:    1.291
Elapsed Hours so far: 1.291

Elapsed: 00:00:00.01

12:39:44 5c "01071_edb360_323688_5c_718_ash_user_io_direct_path_read_temp_per_instance.html"
12:39:45 5c "01072_edb360_323688_5c_718_ash_user_io_direct_path_read_temp_per_instance_line_chart.html"
Elapsed Hours so far:    1.292

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:39:46 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:39:46 ASH User I/O "direct path read temp" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'User I/O' AND event = 'direct path read temp'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:39:46 5c.719
Elapsed Hours so far:    1.292
Elapsed Hours so far: 1.292

Elapsed: 00:00:00.00

12:39:46 5c "01073_edb360_323688_5c_719_ash_user_io_direct_path_read_temp_per_source.html"
12:39:58 5c "01074_edb360_323688_5c_719_ash_user_io_direct_path_read_temp_per_source_pie_chart.html"
Elapsed Hours so far:    1.297

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:40:06 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:40:06 ASH Scheduler "resmgr:cpu quantum" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Scheduler' AND event = 'resmgr:cpu quantum'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:40:06 5c.720
Elapsed Hours so far:    1.297
Elapsed Hours so far: 1.297

Elapsed: 00:00:00.00

12:40:06 5c "01075_edb360_323688_5c_720_ash_scheduler_resmgrcpu_quantum_per_instance.html"
12:40:12 5c "01076_edb360_323688_5c_720_ash_scheduler_resmgrcpu_quantum_per_instance_line_chart.html"
Elapsed Hours so far:    1.299

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:40:12 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:40:12 ASH Scheduler "resmgr:cpu quantum" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'Scheduler' AND event = 'resmgr:cpu quantum'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:40:12 5c.721
Elapsed Hours so far:    1.299
Elapsed Hours so far: 1.299

Elapsed: 00:00:00.01

12:40:12 5c "01077_edb360_323688_5c_721_ash_scheduler_resmgrcpu_quantum_per_source.html"
12:40:25 5c "01078_edb360_323688_5c_721_ash_scheduler_resmgrcpu_quantum_per_source_pie_chart.html"
Elapsed Hours so far:    1.304

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:40:32 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:40:32 ASH User I/O "cell single block read request" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'User I/O' AND event = 'cell single block read request'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:40:32 5c.722
Elapsed Hours so far:    1.304
Elapsed Hours so far: 1.304

Elapsed: 00:00:00.00

12:40:32 5c "01079_edb360_323688_5c_722_ash_user_io_cell_single_block_read_request_per_instance.html"
12:40:34 5c "01080_edb360_323688_5c_722_ash_user_io_cell_single_block_read_request_per_instance_line_chart.html"
Elapsed Hours so far:    1.305

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:40:34 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:40:34 ASH User I/O "cell single block read request" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'User I/O' AND event = 'cell single block read request'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:40:34 5c.723
Elapsed Hours so far:    1.305
Elapsed Hours so far: 1.305

Elapsed: 00:00:00.00

12:40:34 5c "01081_edb360_323688_5c_723_ash_user_io_cell_single_block_read_request_per_source.html"
12:40:47 5c "01082_edb360_323688_5c_723_ash_user_io_cell_single_block_read_request_per_source_pie_chart.html"
Elapsed Hours so far:    1.311

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:40:55 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:40:55 ASH Cluster "gc cr block busy" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Cluster' AND event = 'gc cr block busy'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:40:55 5c.724
Elapsed Hours so far:    1.311
Elapsed Hours so far: 1.311

Elapsed: 00:00:00.00

12:40:55 5c "01083_edb360_323688_5c_724_ash_cluster_gc_cr_block_busy_per_instance.html"
12:41:00 5c "01084_edb360_323688_5c_724_ash_cluster_gc_cr_block_busy_per_instance_line_chart.html"
Elapsed Hours so far:    1.312

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:41:01 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:41:01 ASH Cluster "gc cr block busy" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'Cluster' AND event = 'gc cr block busy'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:41:01 5c.725
Elapsed Hours so far:    1.312
Elapsed Hours so far: 1.312

Elapsed: 00:00:00.00

12:41:01 5c "01085_edb360_323688_5c_725_ash_cluster_gc_cr_block_busy_per_source.html"
12:41:14 5c "01086_edb360_323688_5c_725_ash_cluster_gc_cr_block_busy_per_source_pie_chart.html"
Elapsed Hours so far:    1.318

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:41:21 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:41:21 ASH Other "gcs drm freeze in enter server mode" per Instance

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.677 */
       snap_id,
       --TO_CHAR(LAG(MAX(sample_time)) OVER (ORDER BY snap_id), 'YYYY-MM-DD HH24:MI:SS') begin_time,

       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE instance_number WHEN 1 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_01,
       ROUND(SUM(CASE instance_number WHEN 2 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_02,
       ROUND(SUM(CASE instance_number WHEN 3 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_03,
       ROUND(SUM(CASE instance_number WHEN 4 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_04,
       ROUND(SUM(CASE instance_number WHEN 5 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_05,
       ROUND(SUM(CASE instance_number WHEN 6 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_06,
       ROUND(SUM(CASE instance_number WHEN 7 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_07,
       ROUND(SUM(CASE instance_number WHEN 8 THEN 10 ELSE 0 END) / (GREATEST(CAST(MAX(sample_time) A
S DATE) - CAST(LAG(MAX(sample_time)) OVER (ORDER BY snap_id) AS DATE), (1/24/3600)) * 24 * 3600), 3)
 inst_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class = 'Other' AND event = 'gcs drm freeze in enter server mode'
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:41:21 5c.726
Elapsed Hours so far:    1.318
Elapsed Hours so far: 1.318

Elapsed: 00:00:00.00

12:41:21 5c "01087_edb360_323688_5c_726_ash_other_gcs_drm_freeze_in_enter_server_mode_per_instance.html"
12:41:23 5c "01088_edb360_323688_5c_726_ash_other_gcs_drm_freeze_in_enter_server_mode_per_instance_line_chart.html"
Elapsed Hours so far:    1.319

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:41:23 5c "Active Session History (ASH) on CPU and Top 24 Wait Events"
12:41:23 ASH Other "gcs drm freeze in enter server mode" per Source

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5c.678 */
       con_id,
       sql_id,
       dbid,
       program,
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sql_id||program||module IS NOT NULL
   AND wait_class = 'Other' AND event = 'gcs drm freeze in enter server mode'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid,
       program,
       module
),
total AS (
SELECT SUM(samples) samples FROM hist
)
SELECT SUBSTR(TRIM(h.sql_id||' '||h.program||' '||
       CASE h.module WHEN h.program THEN NULL ELSE h.module END), 1, 128) source,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others' source,
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

12:41:23 5c.727
Elapsed Hours so far:    1.319
Elapsed Hours so far: 1.319

Elapsed: 00:00:00.00

12:41:23 5c "01089_edb360_323688_5c_727_ash_other_gcs_drm_freeze_in_enter_server_mode_per_source.html"
12:41:36 5c "01090_edb360_323688_5c_727_ash_other_gcs_drm_freeze_in_enter_server_mode_per_source_pie_chart.html"
Elapsed Hours so far:    1.324

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:41:44 5d "System Statistics per Snap Interval"
12:41:44 Cell Blocks

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('cell blocks helped by commit cache', 'cell blocks helped by minscn optimizat
ion', 'cell blocks processed by cache layer', 'cell blocks processed by data layer', 'cell blocks pr
ocessed by index layer', 'cell blocks processed by txn layer', '@stat_name_07@', '@stat_name_08@', '
@stat_name_09@', '@stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@stat_name_13@', '@stat_name
_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'cell blocks helped by commit cache' THEN value ELSE 0 END) "helped b
y commit cache",
       SUM(CASE stat_name WHEN 'cell blocks helped by minscn optimization' THEN value ELSE 0 END) "h
elped by minscn optimization",
       SUM(CASE stat_name WHEN 'cell blocks processed by cache layer' THEN value ELSE 0 END) "proces
sed by cache layer",
       SUM(CASE stat_name WHEN 'cell blocks processed by data layer' THEN value ELSE 0 END) "process
ed by data layer",
       SUM(CASE stat_name WHEN 'cell blocks processed by index layer' THEN value ELSE 0 END) "proces
sed by index layer",
       SUM(CASE stat_name WHEN 'cell blocks processed by txn layer' THEN value ELSE 0 END) "processe
d by txn layer",
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:41:44 5d.728
Elapsed Hours so far:    1.324
Elapsed Hours so far: 1.324

Elapsed: 00:00:00.00

12:41:44 5d "01091_edb360_323688_5d_728_cell_blocks.html"
12:42:21 5d "01092_edb360_323688_5d_728_cell_blocks_line_chart.html"
Elapsed Hours so far:    1.343

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:42:49 5d "System Statistics per Snap Interval"
12:42:49 Cell Commit Cache

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('cell commit cache queries', 'cell transactions found in commit cache', '@sta
t_name_03@', '@stat_name_04@', '@stat_name_05@', '@stat_name_06@', '@stat_name_07@', '@stat_name_08@
', '@stat_name_09@', '@stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@stat_name_13@', '@stat_
name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'cell commit cache queries' THEN value ELSE 0 END) "cell commit cache
 queries",
       SUM(CASE stat_name WHEN 'cell transactions found in commit cache' THEN value ELSE 0 END) "cel
l transactions found in com",
       SUM(CASE stat_name WHEN '@stat_name_03@' THEN value ELSE 0 END) dummy_03,
       SUM(CASE stat_name WHEN '@stat_name_04@' THEN value ELSE 0 END) dummy_04,
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:42:49 5d.729
Elapsed Hours so far:    1.343
Elapsed Hours so far: 1.343

Elapsed: 00:00:00.00

12:42:50 5d "01093_edb360_323688_5d_729_cell_commit_cache.html"
12:43:27 5d "01094_edb360_323688_5d_729_cell_commit_cache_line_chart.html"
Elapsed Hours so far:    1.362

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:43:58 5d "System Statistics per Snap Interval"
12:43:58 Cell Compression Units

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('cell CUs processed for compressed', 'cell CUs processed for uncompressed', '
cell CUs sent compressed', 'cell CUs sent head piece', 'cell CUs sent uncompressed', '@stat_name_06@
', '@stat_name_07@', '@stat_name_08@', '@stat_name_09@', '@stat_name_10@', '@stat_name_11@', '@stat_
name_12@', '@stat_name_13@', '@stat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'cell CUs processed for compressed' THEN value ELSE 0 END) "processed
 for compressed",
       SUM(CASE stat_name WHEN 'cell CUs processed for uncompressed' THEN value ELSE 0 END) "process
ed for uncompressed",
       SUM(CASE stat_name WHEN 'cell CUs sent compressed' THEN value ELSE 0 END) "sent compressed",
       SUM(CASE stat_name WHEN 'cell CUs sent head piece' THEN value ELSE 0 END) "sent head piece",
       SUM(CASE stat_name WHEN 'cell CUs sent uncompressed' THEN value ELSE 0 END) "sent uncompresse
d",
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:43:58 5d.730
Elapsed Hours so far:    1.362
Elapsed Hours so far: 1.362

Elapsed: 00:00:00.00

12:43:58 5d "01095_edb360_323688_5d_730_cell_compression_units.html"
12:44:37 5d "01096_edb360_323688_5d_730_cell_compression_units_line_chart.html"
Elapsed Hours so far:    1.381

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:45:07 5d "System Statistics per Snap Interval"
12:45:07 Cell Flash Cache Read Hits

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('cell flash cache read hits', '@stat_name_02@', '@stat_name_03@', '@stat_name
_04@', '@stat_name_05@', '@stat_name_06@', '@stat_name_07@', '@stat_name_08@', '@stat_name_09@', '@s
tat_name_10@', '@stat_name_11@', '@stat_name_12@', '@stat_name_13@', '@stat_name_14@', '@stat_name_1
5@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'cell flash cache read hits' THEN value ELSE 0 END) "cell flash cache
 read hits",
       SUM(CASE stat_name WHEN '@stat_name_02@' THEN value ELSE 0 END) dummy_02,
       SUM(CASE stat_name WHEN '@stat_name_03@' THEN value ELSE 0 END) dummy_03,
       SUM(CASE stat_name WHEN '@stat_name_04@' THEN value ELSE 0 END) dummy_04,
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:45:07 5d.731
Elapsed Hours so far:    1.381
Elapsed Hours so far: 1.381

Elapsed: 00:00:00.01

12:45:07 5d "01097_edb360_323688_5d_731_cell_flash_cache_read_hits.html"
12:45:46 5d "01098_edb360_323688_5d_731_cell_flash_cache_read_hits_line_chart.html"
Elapsed Hours so far:    1.400

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:46:16 5d "System Statistics per Snap Interval"
12:46:16 Cell I/O Bytes

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('cell IO uncompressed bytes', 'cell physical IO bytes eligible for predicate
offload', 'cell physical IO bytes saved by storage index', 'cell physical IO bytes saved during opti
mized file creation', 'cell physical IO bytes saved during optimized RMAN file restore', 'cell physi
cal IO bytes sent directly to DB node to balance CPU', 'cell physical IO interconnect bytes', 'cell
physical IO interconnect bytes returned by smart scan', 'cell simulated physical IO bytes eligible f
or predicate offload', 'cell simulated physical IO bytes returned by predicate offload', '@stat_name
_11@', '@stat_name_12@', '@stat_name_13@', '@stat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'cell IO uncompressed bytes' THEN value ELSE 0 END) "cell IO uncompre
ssed bytes",
       SUM(CASE stat_name WHEN 'cell physical IO bytes eligible for predicate offload' THEN value EL
SE 0 END) "eligible for predicate offload",
       SUM(CASE stat_name WHEN 'cell physical IO bytes saved by storage index' THEN value ELSE 0 END
) "saved by storage index",
       SUM(CASE stat_name WHEN 'cell physical IO bytes saved during optimized file creation' THEN va
lue ELSE 0 END) "saved during optimized file cr",
       SUM(CASE stat_name WHEN 'cell physical IO bytes saved during optimized RMAN file restore' THE
N value ELSE 0 END) "saved during optimized RMAN fi",
       SUM(CASE stat_name WHEN 'cell physical IO bytes sent directly to DB node to balance CPU' THEN
 value ELSE 0 END) "sent directly to DB node to ba",
       SUM(CASE stat_name WHEN 'cell physical IO interconnect bytes' THEN value ELSE 0 END) "interco
nnect bytes",
       SUM(CASE stat_name WHEN 'cell physical IO interconnect bytes returned by smart scan' THEN val
ue ELSE 0 END) "interconnect bytes returned by",
       SUM(CASE stat_name WHEN 'cell simulated physical IO bytes eligible for predicate offload' THE
N value ELSE 0 END) "bytes eligible for predicate o",
       SUM(CASE stat_name WHEN 'cell simulated physical IO bytes returned by predicate offload' THEN
 value ELSE 0 END) "bytes returned by predicate of",
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:46:16 5d.732
Elapsed Hours so far:    1.400
Elapsed Hours so far: 1.4

Elapsed: 00:00:00.00

12:46:16 5d "01099_edb360_323688_5d_732_cell_io_bytes.html"
12:46:56 5d "01100_edb360_323688_5d_732_cell_io_bytes_line_chart.html"
Elapsed Hours so far:    1.419

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:47:25 5d "System Statistics per Snap Interval"
12:47:25 Cell Scans

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('cell scans', 'cell index scans', '@stat_name_03@', '@stat_name_04@', '@stat_
name_05@', '@stat_name_06@', '@stat_name_07@', '@stat_name_08@', '@stat_name_09@', '@stat_name_10@',
 '@stat_name_11@', '@stat_name_12@', '@stat_name_13@', '@stat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'cell scans' THEN value ELSE 0 END) "cell scans",
       SUM(CASE stat_name WHEN 'cell index scans' THEN value ELSE 0 END) "cell index scans",
       SUM(CASE stat_name WHEN '@stat_name_03@' THEN value ELSE 0 END) dummy_03,
       SUM(CASE stat_name WHEN '@stat_name_04@' THEN value ELSE 0 END) dummy_04,
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:47:25 5d.733
Elapsed Hours so far:    1.419
Elapsed Hours so far: 1.419

Elapsed: 00:00:00.00

12:47:25 5d "01101_edb360_323688_5d_733_cell_scans.html"
12:48:04 5d "01102_edb360_323688_5d_733_cell_scans_line_chart.html"
Elapsed Hours so far:    1.438

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:48:33 5d "System Statistics per Snap Interval"
12:48:33 Cell Smart Scan Sessions

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('cell num fast response sessions', 'cell num fast response sessions continuin
g to smart scan', 'cell num smart file creation sessions using rdbms block IO mode', 'cell num smart
 IO sessions in rdbms block IO due to big payload', 'cell num smart IO sessions in rdbms block IO du
e to no cell mem', 'cell num smart IO sessions in rdbms block IO due to user', 'cell num smart IO se
ssions using passthru mode due to cellsrv', 'cell num smart IO sessions using passthru mode due to t
imezone', 'cell num smart IO sessions using passthru mode due to user', 'cell smart IO session cache
 hard misses', 'cell smart IO session cache hits', 'cell smart IO session cache hwm', 'cell smart IO
 session cache lookups', 'cell smart IO session cache soft misses', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'cell num fast response sessions' THEN value ELSE 0 END) "fast respon
se sessions",
       SUM(CASE stat_name WHEN 'cell num fast response sessions continuing to smart scan' THEN value
 ELSE 0 END) "fast response sessions continu",
       SUM(CASE stat_name WHEN 'cell num smart file creation sessions using rdbms block IO mode' THE
N value ELSE 0 END) "smart file creation sessions u",
       SUM(CASE stat_name WHEN 'cell num smart IO sessions in rdbms block IO due to big payload' THE
N value ELSE 0 END) "block IO due to big payload",
       SUM(CASE stat_name WHEN 'cell num smart IO sessions in rdbms block IO due to no cell mem' THE
N value ELSE 0 END) "block IO due to no cell mem",
       SUM(CASE stat_name WHEN 'cell num smart IO sessions in rdbms block IO due to user' THEN value
 ELSE 0 END) "block IO due to user",
       SUM(CASE stat_name WHEN 'cell num smart IO sessions using passthru mode due to cellsrv' THEN
value ELSE 0 END) "passthru mode due to cellsrv",
       SUM(CASE stat_name WHEN 'cell num smart IO sessions using passthru mode due to timezone' THEN
 value ELSE 0 END) "passthru mode due to timezone",
       SUM(CASE stat_name WHEN 'cell num smart IO sessions using passthru mode due to user' THEN val
ue ELSE 0 END) "passthru mode due to user",
       SUM(CASE stat_name WHEN 'cell smart IO session cache hard misses' THEN value ELSE 0 END) "cac
he hard misses",
       SUM(CASE stat_name WHEN 'cell smart IO session cache hits' THEN value ELSE 0 END) "cache hits
",
       SUM(CASE stat_name WHEN 'cell smart IO session cache hwm' THEN value ELSE 0 END) "cache hwm",

       SUM(CASE stat_name WHEN 'cell smart IO session cache lookups' THEN value ELSE 0 END) "cache l
ookups",
       SUM(CASE stat_name WHEN 'cell smart IO session cache soft misses' THEN value ELSE 0 END) "cac
he soft misses",
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:48:33 5d.734
Elapsed Hours so far:    1.438
Elapsed Hours so far: 1.438

Elapsed: 00:00:00.00

12:48:33 5d "01103_edb360_323688_5d_734_cell_smart_scan_sessions.html"
12:49:11 5d "01104_edb360_323688_5d_734_cell_smart_scan_sessions_line_chart.html"
Elapsed Hours so far:    1.457

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:49:41 5d "System Statistics per Snap Interval"
12:49:41 Chained or Migrated Rows

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('table fetch continued row', 'chained rows processed by cell', 'chained rows
rejected by cell', 'chained rows skipped by cell', '@stat_name_05@', '@stat_name_06@', '@stat_name_0
7@', '@stat_name_08@', '@stat_name_09@', '@stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@sta
t_name_13@', '@stat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'table fetch continued row' THEN value ELSE 0 END) "table fetch conti
nued row",
       SUM(CASE stat_name WHEN 'chained rows processed by cell' THEN value ELSE 0 END) "chained rows
 processed by cell",
       SUM(CASE stat_name WHEN 'chained rows rejected by cell' THEN value ELSE 0 END) "chained rows
rejected by cell",
       SUM(CASE stat_name WHEN 'chained rows skipped by cell' THEN value ELSE 0 END) "chained rows s
kipped by cell",
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:49:41 5d.735
Elapsed Hours so far:    1.457
Elapsed Hours so far: 1.457

Elapsed: 00:00:00.00

12:49:41 5d "01105_edb360_323688_5d_735_chained_or_migrated_rows.html"
12:50:19 5d "01106_edb360_323688_5d_735_chained_or_migrated_rows_line_chart.html"
Elapsed Hours so far:    1.475

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:50:48 5d "System Statistics per Snap Interval"
12:50:48 Checkpoints

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('background checkpoints completed', 'background checkpoints started', 'DBWR c
heckpoints', '@stat_name_04@', '@stat_name_05@', '@stat_name_06@', '@stat_name_07@', '@stat_name_08@
', '@stat_name_09@', '@stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@stat_name_13@', '@stat_
name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'background checkpoints completed' THEN value ELSE 0 END) "background
 checkpoints complet",
       SUM(CASE stat_name WHEN 'background checkpoints started' THEN value ELSE 0 END) "background c
heckpoints started",
       SUM(CASE stat_name WHEN 'DBWR checkpoints' THEN value ELSE 0 END) "DBWR checkpoints",
       SUM(CASE stat_name WHEN '@stat_name_04@' THEN value ELSE 0 END) dummy_04,
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:50:48 5d.736
Elapsed Hours so far:    1.475
Elapsed Hours so far: 1.475

Elapsed: 00:00:00.00

12:50:48 5d "01107_edb360_323688_5d_736_checkpoints.html"
12:51:25 5d "01108_edb360_323688_5d_736_checkpoints_line_chart.html"
Elapsed Hours so far:    1.494

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:51:55 5d "System Statistics per Snap Interval"
12:51:55 Commits and Rollbacks

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('user commits', 'user rollbacks', '@stat_name_03@', '@stat_name_04@', '@stat_
name_05@', '@stat_name_06@', '@stat_name_07@', '@stat_name_08@', '@stat_name_09@', '@stat_name_10@',
 '@stat_name_11@', '@stat_name_12@', '@stat_name_13@', '@stat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'user commits' THEN value ELSE 0 END) "user commits",
       SUM(CASE stat_name WHEN 'user rollbacks' THEN value ELSE 0 END) "user rollbacks",
       SUM(CASE stat_name WHEN '@stat_name_03@' THEN value ELSE 0 END) dummy_03,
       SUM(CASE stat_name WHEN '@stat_name_04@' THEN value ELSE 0 END) dummy_04,
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:51:55 5d.737
Elapsed Hours so far:    1.494
Elapsed Hours so far: 1.494

Elapsed: 00:00:00.01

12:51:55 5d "01109_edb360_323688_5d_737_commits_and_rollbacks.html"
12:52:33 5d "01110_edb360_323688_5d_737_commits_and_rollbacks_line_chart.html"
Elapsed Hours so far:    1.513

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:53:02 5d "System Statistics per Snap Interval"
12:53:02 Current and Consistent Blocks

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('consistent changes', 'consistent gets', 'consistent gets direct', 'consisten
t gets from cache', 'CR blocks created', 'current blocks converted for CR', 'data blocks consistent
reads - undo records applied', 'db block changes', 'db block gets', 'db block gets direct', 'db bloc
k gets from cache', 'switch current to new buffer', 'write clones created in background', 'write clo
nes created in foreground', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'consistent changes' THEN value ELSE 0 END) "consistent changes",
       SUM(CASE stat_name WHEN 'consistent gets' THEN value ELSE 0 END) "consistent gets",
       SUM(CASE stat_name WHEN 'consistent gets direct' THEN value ELSE 0 END) "consistent gets dire
ct",
       SUM(CASE stat_name WHEN 'consistent gets from cache' THEN value ELSE 0 END) "consistent gets
from cache",
       SUM(CASE stat_name WHEN 'CR blocks created' THEN value ELSE 0 END) "CR blocks created",
       SUM(CASE stat_name WHEN 'current blocks converted for CR' THEN value ELSE 0 END) "current blo
cks converted for C",
       SUM(CASE stat_name WHEN 'data blocks consistent reads - undo records applied' THEN value ELSE
 0 END) "data blocks consistent reads -",
       SUM(CASE stat_name WHEN 'db block changes' THEN value ELSE 0 END) "db block changes",
       SUM(CASE stat_name WHEN 'db block gets' THEN value ELSE 0 END) "db block gets",
       SUM(CASE stat_name WHEN 'db block gets direct' THEN value ELSE 0 END) "db block gets direct",

       SUM(CASE stat_name WHEN 'db block gets from cache' THEN value ELSE 0 END) "db block gets from
 cache",
       SUM(CASE stat_name WHEN 'switch current to new buffer' THEN value ELSE 0 END) "switch current
 to new buffer",
       SUM(CASE stat_name WHEN 'write clones created in background' THEN value ELSE 0 END) "created
in background",
       SUM(CASE stat_name WHEN 'write clones created in foreground' THEN value ELSE 0 END) "created
in foreground",
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:53:02 5d.738
Elapsed Hours so far:    1.513
Elapsed Hours so far: 1.513

Elapsed: 00:00:00.00

12:53:02 5d "01111_edb360_323688_5d_738_current_and_consistent_blocks.html"
12:53:39 5d "01112_edb360_323688_5d_738_current_and_consistent_blocks_line_chart.html"
Elapsed Hours so far:    1.531

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:54:08 5d "System Statistics per Snap Interval"
12:54:08 Consistent Gets (direct and from cache)

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('consistent gets', 'consistent gets direct', 'consistent gets from cache', '@
stat_name_04@', '@stat_name_05@', '@stat_name_06@', '@stat_name_07@', '@stat_name_08@', '@stat_name_
09@', '@stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@stat_name_13@', '@stat_name_14@', '@st
at_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'consistent gets' THEN value ELSE 0 END) "consistent gets",
       SUM(CASE stat_name WHEN 'consistent gets direct' THEN value ELSE 0 END) "consistent gets dire
ct",
       SUM(CASE stat_name WHEN 'consistent gets from cache' THEN value ELSE 0 END) "consistent gets
from cache",
       SUM(CASE stat_name WHEN '@stat_name_04@' THEN value ELSE 0 END) dummy_04,
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:54:08 5d.739
Elapsed Hours so far:    1.531
Elapsed Hours so far: 1.531

Elapsed: 00:00:00.00

12:54:08 5d "01113_edb360_323688_5d_739_consistent_gets_direct_and_from_cache.html"
12:54:46 5d "01114_edb360_323688_5d_739_consistent_gets_direct_and_from_cache_line_chart.html"
Elapsed Hours so far:    1.550

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:55:15 5d "System Statistics per Snap Interval"
12:55:15 Cursor and SQL Area evicted

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('CCursor + sql area evicted', 'sql area evicted', '@stat_name_03@', '@stat_na
me_04@', '@stat_name_05@', '@stat_name_06@', '@stat_name_07@', '@stat_name_08@', '@stat_name_09@', '
@stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@stat_name_13@', '@stat_name_14@', '@stat_name
_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'CCursor + sql area evicted' THEN value ELSE 0 END) "CCursor + sql ar
ea evicted",
       SUM(CASE stat_name WHEN 'sql area evicted' THEN value ELSE 0 END) "sql area evicted",
       SUM(CASE stat_name WHEN '@stat_name_03@' THEN value ELSE 0 END) dummy_03,
       SUM(CASE stat_name WHEN '@stat_name_04@' THEN value ELSE 0 END) dummy_04,
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:55:15 5d.740
Elapsed Hours so far:    1.550
Elapsed Hours so far: 1.55

Elapsed: 00:00:00.00

12:55:15 5d "01115_edb360_323688_5d_740_cursor_and_sql_area_evicted.html"
12:55:52 5d "01116_edb360_323688_5d_740_cursor_and_sql_area_evicted_line_chart.html"
Elapsed Hours so far:    1.568

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:56:21 5d "System Statistics per Snap Interval"
12:56:21 En(De)cryption

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('blocks decrypted', 'blocks encrypted', 'securefile bytes encrypted', '@stat_
name_04@', '@stat_name_05@', '@stat_name_06@', '@stat_name_07@', '@stat_name_08@', '@stat_name_09@',
 '@stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@stat_name_13@', '@stat_name_14@', '@stat_na
me_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'blocks decrypted' THEN value ELSE 0 END) "blocks decrypted",
       SUM(CASE stat_name WHEN 'blocks encrypted' THEN value ELSE 0 END) "blocks encrypted",
       SUM(CASE stat_name WHEN 'securefile bytes encrypted' THEN value ELSE 0 END) "securefile bytes
 encrypted",
       SUM(CASE stat_name WHEN '@stat_name_04@' THEN value ELSE 0 END) dummy_04,
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:56:21 5d.741
Elapsed Hours so far:    1.568
Elapsed Hours so far: 1.568

Elapsed: 00:00:00.00

12:56:21 5d "01117_edb360_323688_5d_741_endecryption.html"
12:56:58 5d "01118_edb360_323688_5d_741_endecryption_line_chart.html"
Elapsed Hours so far:    1.586

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:57:27 5d "System Statistics per Snap Interval"
12:57:27 EHCC Compression Units (De)Compressed

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('EHCC Analyze CUs Decompressed', 'EHCC Archive CUs Compressed', 'EHCC Archive
 CUs Decompressed', 'EHCC Check CUs Decompressed', 'EHCC CUs Compressed', 'EHCC CUs Decompressed', '
EHCC DML CUs Decompressed', 'EHCC Dump CUs Decompressed', 'EHCC Normal Scan CUs Decompressed', 'EHCC
 Query High CUs Compressed', 'EHCC Query High CUs Decompressed', 'EHCC Query Low CUs Compressed', 'E
HCC Query Low CUs Decompressed', 'EHCC Rowid CUs Decompressed', 'EHCC Turbo Scan CUs Decompressed')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'EHCC Analyze CUs Decompressed' THEN value ELSE 0 END) "Analyze CUs D
ecompressed",
       SUM(CASE stat_name WHEN 'EHCC Archive CUs Compressed' THEN value ELSE 0 END) "Archive CUs Com
pressed",
       SUM(CASE stat_name WHEN 'EHCC Archive CUs Decompressed' THEN value ELSE 0 END) "Archive CUs D
ecompressed",
       SUM(CASE stat_name WHEN 'EHCC Check CUs Decompressed' THEN value ELSE 0 END) "Check CUs Decom
pressed",
       SUM(CASE stat_name WHEN 'EHCC CUs Compressed' THEN value ELSE 0 END) "CUs Compressed",
       SUM(CASE stat_name WHEN 'EHCC CUs Decompressed' THEN value ELSE 0 END) "CUs Decompressed",
       SUM(CASE stat_name WHEN 'EHCC DML CUs Decompressed' THEN value ELSE 0 END) "DML CUs Decompres
sed",
       SUM(CASE stat_name WHEN 'EHCC Dump CUs Decompressed' THEN value ELSE 0 END) "Dump CUs Decompr
essed",
       SUM(CASE stat_name WHEN 'EHCC Normal Scan CUs Decompressed' THEN value ELSE 0 END) "Normal Sc
an CUs Decompressed",
       SUM(CASE stat_name WHEN 'EHCC Query High CUs Compressed' THEN value ELSE 0 END) "Query High C
Us Compressed",
       SUM(CASE stat_name WHEN 'EHCC Query High CUs Decompressed' THEN value ELSE 0 END) "Query High
 CUs Decompressed",
       SUM(CASE stat_name WHEN 'EHCC Query Low CUs Compressed' THEN value ELSE 0 END) "Query Low CUs
 Compressed",
       SUM(CASE stat_name WHEN 'EHCC Query Low CUs Decompressed' THEN value ELSE 0 END) "Query Low C
Us Decompressed",
       SUM(CASE stat_name WHEN 'EHCC Rowid CUs Decompressed' THEN value ELSE 0 END) "Rowid CUs Decom
pressed",
       SUM(CASE stat_name WHEN 'EHCC Turbo Scan CUs Decompressed' THEN value ELSE 0 END) "Turbo Scan
 CUs Decompressed"
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:57:27 5d.742
Elapsed Hours so far:    1.586
Elapsed Hours so far: 1.586

Elapsed: 00:00:00.00

12:57:27 5d "01119_edb360_323688_5d_742_ehcc_compression_units_decompressed.html"
12:58:04 5d "01120_edb360_323688_5d_742_ehcc_compression_units_decompressed_line_chart.html"
Elapsed Hours so far:    1.605

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:58:33 5d "System Statistics per Snap Interval"
12:58:33 Enqueues

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('enqueue conversions', 'enqueue deadlocks', 'enqueue releases', 'enqueue requ
ests', 'enqueue timeouts', 'enqueue waits', 'global enqueue gets async', 'global enqueue gets sync',
 'global enqueue releases', '@stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@stat_name_13@',
'@stat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'enqueue conversions' THEN value ELSE 0 END) "enqueue conversions",
       SUM(CASE stat_name WHEN 'enqueue deadlocks' THEN value ELSE 0 END) "enqueue deadlocks",
       SUM(CASE stat_name WHEN 'enqueue releases' THEN value ELSE 0 END) "enqueue releases",
       SUM(CASE stat_name WHEN 'enqueue requests' THEN value ELSE 0 END) "enqueue requests",
       SUM(CASE stat_name WHEN 'enqueue timeouts' THEN value ELSE 0 END) "enqueue timeouts",
       SUM(CASE stat_name WHEN 'enqueue waits' THEN value ELSE 0 END) "enqueue waits",
       SUM(CASE stat_name WHEN 'global enqueue gets async' THEN value ELSE 0 END) "global enqueue ge
ts async",
       SUM(CASE stat_name WHEN 'global enqueue gets sync' THEN value ELSE 0 END) "global enqueue get
s sync",
       SUM(CASE stat_name WHEN 'global enqueue releases' THEN value ELSE 0 END) "global enqueue rele
ases",
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:58:33 5d.743
Elapsed Hours so far:    1.605
Elapsed Hours so far: 1.605

Elapsed: 00:00:00.00

12:58:33 5d "01121_edb360_323688_5d_743_enqueues.html"
12:59:10 5d "01122_edb360_323688_5d_743_enqueues_line_chart.html"
Elapsed Hours so far:    1.623

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

12:59:39 5d "System Statistics per Snap Interval"
12:59:39 Flash Cache Inserts and Evictions

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('flash cache eviction: aged out', 'flash cache eviction: buffer pinned', 'fla
sh cache eviction: invalidated', 'flash cache insert skip: corrupt', 'flash cache insert skip: DBWR
overloaded', 'flash cache insert skip: exists', 'flash cache insert skip: modification', 'flash cach
e insert skip: not current', 'flash cache insert skip: not useful', 'flash cache inserts', '@stat_na
me_11@', '@stat_name_12@', '@stat_name_13@', '@stat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'flash cache eviction: aged out' THEN value ELSE 0 END) "eviction: ag
ed out",
       SUM(CASE stat_name WHEN 'flash cache eviction: buffer pinned' THEN value ELSE 0 END) "evictio
n: buffer pinned",
       SUM(CASE stat_name WHEN 'flash cache eviction: invalidated' THEN value ELSE 0 END) "eviction:
 invalidated",
       SUM(CASE stat_name WHEN 'flash cache insert skip: corrupt' THEN value ELSE 0 END) "insert ski
p: corrupt",
       SUM(CASE stat_name WHEN 'flash cache insert skip: DBWR overloaded' THEN value ELSE 0 END) "in
sert skip: DBWR overloaded",
       SUM(CASE stat_name WHEN 'flash cache insert skip: exists' THEN value ELSE 0 END) "insert skip
: exists",
       SUM(CASE stat_name WHEN 'flash cache insert skip: modification' THEN value ELSE 0 END) "inser
t skip: modification",
       SUM(CASE stat_name WHEN 'flash cache insert skip: not current' THEN value ELSE 0 END) "insert
 skip: not current",
       SUM(CASE stat_name WHEN 'flash cache insert skip: not useful' THEN value ELSE 0 END) "insert
skip: not useful",
       SUM(CASE stat_name WHEN 'flash cache inserts' THEN value ELSE 0 END) "inserts",
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

12:59:39 5d.744
Elapsed Hours so far:    1.623
Elapsed Hours so far: 1.623

Elapsed: 00:00:00.00

12:59:39 5d "01123_edb360_323688_5d_744_flash_cache_inserts_and_evictions.html"
13:00:16 5d "01124_edb360_323688_5d_744_flash_cache_inserts_and_evictions_line_chart.html"
Elapsed Hours so far:    1.642

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:00:46 5d "System Statistics per Snap Interval"
13:00:46 Global Blocks and Reads

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('gc blocks compressed', 'gc blocks corrupt', 'gc blocks lost', 'gc claim bloc
ks lost', 'gc cr blocks received', 'gc cr blocks served', 'gc current blocks received', 'gc current
blocks served', 'gc kbytes saved', 'gc kbytes sent', 'gc read wait failures', 'gc read wait timeouts
', 'gc read waits', '@stat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'gc blocks compressed' THEN value ELSE 0 END) "gc blocks compressed",

       SUM(CASE stat_name WHEN 'gc blocks corrupt' THEN value ELSE 0 END) "gc blocks corrupt",
       SUM(CASE stat_name WHEN 'gc blocks lost' THEN value ELSE 0 END) "gc blocks lost",
       SUM(CASE stat_name WHEN 'gc claim blocks lost' THEN value ELSE 0 END) "gc claim blocks lost",

       SUM(CASE stat_name WHEN 'gc cr blocks received' THEN value ELSE 0 END) "gc cr blocks received
",
       SUM(CASE stat_name WHEN 'gc cr blocks served' THEN value ELSE 0 END) "gc cr blocks served",
       SUM(CASE stat_name WHEN 'gc current blocks received' THEN value ELSE 0 END) "gc current block
s received",
       SUM(CASE stat_name WHEN 'gc current blocks served' THEN value ELSE 0 END) "gc current blocks
served",
       SUM(CASE stat_name WHEN 'gc kbytes saved' THEN value ELSE 0 END) "gc kbytes saved",
       SUM(CASE stat_name WHEN 'gc kbytes sent' THEN value ELSE 0 END) "gc kbytes sent",
       SUM(CASE stat_name WHEN 'gc read wait failures' THEN value ELSE 0 END) "gc read wait failures
",
       SUM(CASE stat_name WHEN 'gc read wait timeouts' THEN value ELSE 0 END) "gc read wait timeouts
",
       SUM(CASE stat_name WHEN 'gc read waits' THEN value ELSE 0 END) "gc read waits",
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:00:46 5d.745
Elapsed Hours so far:    1.642
Elapsed Hours so far: 1.642

Elapsed: 00:00:00.00

13:00:47 5d "01125_edb360_323688_5d_745_global_blocks_and_reads.html"
13:01:21 5d "01126_edb360_323688_5d_745_global_blocks_and_reads_line_chart.html"
Elapsed Hours so far:    1.659

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:01:48 5d "System Statistics per Snap Interval"
13:01:48 Logons

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('logons cumulative', '@stat_name_02@', '@stat_name_03@', '@stat_name_04@', '@
stat_name_05@', '@stat_name_06@', '@stat_name_07@', '@stat_name_08@', '@stat_name_09@', '@stat_name_
10@', '@stat_name_11@', '@stat_name_12@', '@stat_name_13@', '@stat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'logons cumulative' THEN value ELSE 0 END) "logons cumulative",
       SUM(CASE stat_name WHEN '@stat_name_02@' THEN value ELSE 0 END) dummy_02,
       SUM(CASE stat_name WHEN '@stat_name_03@' THEN value ELSE 0 END) dummy_03,
       SUM(CASE stat_name WHEN '@stat_name_04@' THEN value ELSE 0 END) dummy_04,
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:01:48 5d.746
Elapsed Hours so far:    1.659
Elapsed Hours so far: 1.659

Elapsed: 00:00:00.00

13:01:49 5d "01127_edb360_323688_5d_746_logons.html"
13:02:23 5d "01128_edb360_323688_5d_746_logons_line_chart.html"
Elapsed Hours so far:    1.676

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:02:48 5d "System Statistics per Snap Interval"
13:02:48 Node Splits

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('branch node splits', 'leaf node 90-10 splits', 'leaf node splits', 'root nod
e splits', '@stat_name_05@', '@stat_name_06@', '@stat_name_07@', '@stat_name_08@', '@stat_name_09@',
 '@stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@stat_name_13@', '@stat_name_14@', '@stat_na
me_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'branch node splits' THEN value ELSE 0 END) "branch node splits",
       SUM(CASE stat_name WHEN 'leaf node 90-10 splits' THEN value ELSE 0 END) "leaf node 90-10 spli
ts",
       SUM(CASE stat_name WHEN 'leaf node splits' THEN value ELSE 0 END) "leaf node splits",
       SUM(CASE stat_name WHEN 'root node splits' THEN value ELSE 0 END) "root node splits",
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:02:48 5d.747
Elapsed Hours so far:    1.676
Elapsed Hours so far: 1.676

Elapsed: 00:00:00.00

13:02:48 5d "01129_edb360_323688_5d_747_node_splits.html"
13:03:22 5d "01130_edb360_323688_5d_747_node_splits_line_chart.html"
Elapsed Hours so far:    1.692

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:03:47 5d "System Statistics per Snap Interval"
13:03:47 Parse Counts

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('parse count (describe)', 'parse count (failures)', 'parse count (hard)', 'pa
rse count (total)', '@stat_name_05@', '@stat_name_06@', '@stat_name_07@', '@stat_name_08@', '@stat_n
ame_09@', '@stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@stat_name_13@', '@stat_name_14@',
'@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'parse count (describe)' THEN value ELSE 0 END) "parse count (describ
e)",
       SUM(CASE stat_name WHEN 'parse count (failures)' THEN value ELSE 0 END) "parse count (failure
s)",
       SUM(CASE stat_name WHEN 'parse count (hard)' THEN value ELSE 0 END) "parse count (hard)",
       SUM(CASE stat_name WHEN 'parse count (total)' THEN value ELSE 0 END) "parse count (total)",
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:03:47 5d.748
Elapsed Hours so far:    1.692
Elapsed Hours so far: 1.692

Elapsed: 00:00:00.00

13:03:47 5d "01131_edb360_323688_5d_748_parse_counts.html"
13:04:21 5d "01132_edb360_323688_5d_748_parse_counts_line_chart.html"
Elapsed Hours so far:    1.709

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:04:49 5d "System Statistics per Snap Interval"
13:04:49 Physical Reads Blocks

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('physical read flash cache hits', 'physical reads', 'physical reads cache', '
physical reads cache prefetch', 'physical reads direct', 'physical reads direct (lob)', 'physical re
ads direct temporary tablespace', 'physical reads for flashback new', 'physical reads prefetch warmu
p', '@stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@stat_name_13@', '@stat_name_14@', '@stat
_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'physical read flash cache hits' THEN value ELSE 0 END) "read flash c
ache hits",
       SUM(CASE stat_name WHEN 'physical reads' THEN value ELSE 0 END) "reads",
       SUM(CASE stat_name WHEN 'physical reads cache' THEN value ELSE 0 END) "reads cache",
       SUM(CASE stat_name WHEN 'physical reads cache prefetch' THEN value ELSE 0 END) "reads cache p
refetch",
       SUM(CASE stat_name WHEN 'physical reads direct' THEN value ELSE 0 END) "reads direct",
       SUM(CASE stat_name WHEN 'physical reads direct (lob)' THEN value ELSE 0 END) "reads direct (l
ob)",
       SUM(CASE stat_name WHEN 'physical reads direct temporary tablespace' THEN value ELSE 0 END) "
reads direct temporary tablesp",
       SUM(CASE stat_name WHEN 'physical reads for flashback new' THEN value ELSE 0 END) "reads for
flashback new",
       SUM(CASE stat_name WHEN 'physical reads prefetch warmup' THEN value ELSE 0 END) "reads prefet
ch warmup",
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:04:49 5d.749
Elapsed Hours so far:    1.709
Elapsed Hours so far: 1.709

Elapsed: 00:00:00.00

13:04:49 5d "01133_edb360_323688_5d_749_physical_reads_blocks.html"
13:05:25 5d "01134_edb360_323688_5d_749_physical_reads_blocks_line_chart.html"
Elapsed Hours so far:    1.726

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:05:51 5d "System Statistics per Snap Interval"
13:05:51 Physical Reads Blocks (direct and cache)

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('physical reads', 'physical reads cache', 'physical reads direct', '@stat_nam
e_04@', '@stat_name_05@', '@stat_name_06@', '@stat_name_07@', '@stat_name_08@', '@stat_name_09@', '@
stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@stat_name_13@', '@stat_name_14@', '@stat_name_
15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'physical reads' THEN value ELSE 0 END) "reads",
       SUM(CASE stat_name WHEN 'physical reads cache' THEN value ELSE 0 END) "reads cache",
       SUM(CASE stat_name WHEN 'physical reads direct' THEN value ELSE 0 END) "reads direct",
       SUM(CASE stat_name WHEN '@stat_name_04@' THEN value ELSE 0 END) dummy_04,
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:05:51 5d.750
Elapsed Hours so far:    1.726
Elapsed Hours so far: 1.726

Elapsed: 00:00:00.00

13:05:51 5d "01135_edb360_323688_5d_750_physical_reads_blocks_direct_and_cache.html"
13:06:25 5d "01136_edb360_323688_5d_750_physical_reads_blocks_direct_and_cache_line_chart.html"
Elapsed Hours so far:    1.743

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:06:50 5d "System Statistics per Snap Interval"
13:06:50 Physical Reads Bytes

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('physical read bytes', 'physical read total bytes', 'physical read total byte
s optimized', '@stat_name_04@', '@stat_name_05@', '@stat_name_06@', '@stat_name_07@', '@stat_name_08
@', '@stat_name_09@', '@stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@stat_name_13@', '@stat
_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'physical read bytes' THEN value ELSE 0 END) "read bytes",
       SUM(CASE stat_name WHEN 'physical read total bytes' THEN value ELSE 0 END) "read total bytes"
,
       SUM(CASE stat_name WHEN 'physical read total bytes optimized' THEN value ELSE 0 END) "read to
tal bytes optimized",
       SUM(CASE stat_name WHEN '@stat_name_04@' THEN value ELSE 0 END) dummy_04,
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:06:50 5d.751
Elapsed Hours so far:    1.743
Elapsed Hours so far: 1.743

Elapsed: 00:00:00.00

13:06:51 5d "01137_edb360_323688_5d_751_physical_reads_bytes.html"
13:07:25 5d "01138_edb360_323688_5d_751_physical_reads_bytes_line_chart.html"
Elapsed Hours so far:    1.760

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:07:52 5d "System Statistics per Snap Interval"
13:07:52 Physical Reads Requests

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('physical read IO requests', 'physical read requests optimized', 'physical re
ad total IO requests', 'physical read total multi block requests', '@stat_name_05@', '@stat_name_06@
', '@stat_name_07@', '@stat_name_08@', '@stat_name_09@', '@stat_name_10@', '@stat_name_11@', '@stat_
name_12@', '@stat_name_13@', '@stat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'physical read IO requests' THEN value ELSE 0 END) "read IO requests"
,
       SUM(CASE stat_name WHEN 'physical read requests optimized' THEN value ELSE 0 END) "read reque
sts optimized",
       SUM(CASE stat_name WHEN 'physical read total IO requests' THEN value ELSE 0 END) "read total
IO requests",
       SUM(CASE stat_name WHEN 'physical read total multi block requests' THEN value ELSE 0 END) "re
ad total multi block request",
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:07:52 5d.752
Elapsed Hours so far:    1.760
Elapsed Hours so far: 1.76

Elapsed: 00:00:00.00

13:07:52 5d "01139_edb360_323688_5d_752_physical_reads_requests.html"
13:08:26 5d "01140_edb360_323688_5d_752_physical_reads_requests_line_chart.html"
Elapsed Hours so far:    1.777

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:08:52 5d "System Statistics per Snap Interval"
13:08:52 Physical Reads Total IO Requests

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('physical read total IO requests', 'physical read total multi block requests'
, '@stat_name_03@', '@stat_name_04@', '@stat_name_05@', '@stat_name_06@', '@stat_name_07@', '@stat_n
ame_08@', '@stat_name_09@', '@stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@stat_name_13@',
'@stat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'physical read total IO requests' THEN value ELSE 0 END) "read total
IO requests",
       SUM(CASE stat_name WHEN 'physical read total multi block requests' THEN value ELSE 0 END) "re
ad total multi block request",
       SUM(CASE stat_name WHEN '@stat_name_03@' THEN value ELSE 0 END) dummy_03,
       SUM(CASE stat_name WHEN '@stat_name_04@' THEN value ELSE 0 END) dummy_04,
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:08:52 5d.753
Elapsed Hours so far:    1.777
Elapsed Hours so far: 1.777

Elapsed: 00:00:00.00

13:08:52 5d "01141_edb360_323688_5d_753_physical_reads_total_io_requests.html"
13:09:27 5d "01142_edb360_323688_5d_753_physical_reads_total_io_requests_line_chart.html"
Elapsed Hours so far:    1.794

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:09:54 5d "System Statistics per Snap Interval"
13:09:54 Physical Writes Blocks

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('physical writes', 'physical writes direct', 'physical writes direct (lob)',
'physical writes direct temporary tablespace', 'physical writes from cache', 'physical writes non ch
eckpoint', '@stat_name_07@', '@stat_name_08@', '@stat_name_09@', '@stat_name_10@', '@stat_name_11@',
 '@stat_name_12@', '@stat_name_13@', '@stat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'physical writes' THEN value ELSE 0 END) "writes",
       SUM(CASE stat_name WHEN 'physical writes direct' THEN value ELSE 0 END) "writes direct",
       SUM(CASE stat_name WHEN 'physical writes direct (lob)' THEN value ELSE 0 END) "writes direct
(lob)",
       SUM(CASE stat_name WHEN 'physical writes direct temporary tablespace' THEN value ELSE 0 END)
"writes direct temporary tables",
       SUM(CASE stat_name WHEN 'physical writes from cache' THEN value ELSE 0 END) "writes from cach
e",
       SUM(CASE stat_name WHEN 'physical writes non checkpoint' THEN value ELSE 0 END) "writes non c
heckpoint",
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:09:54 5d.754
Elapsed Hours so far:    1.794
Elapsed Hours so far: 1.794

Elapsed: 00:00:00.01

13:09:54 5d "01143_edb360_323688_5d_754_physical_writes_blocks.html"
13:10:28 5d "01144_edb360_323688_5d_754_physical_writes_blocks_line_chart.html"
Elapsed Hours so far:    1.811

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:10:55 5d "System Statistics per Snap Interval"
13:10:55 Physical Writes Bytes

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('physical write bytes', 'physical write total bytes', 'redo size', '@stat_nam
e_04@', '@stat_name_05@', '@stat_name_06@', '@stat_name_07@', '@stat_name_08@', '@stat_name_09@', '@
stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@stat_name_13@', '@stat_name_14@', '@stat_name_
15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'physical write bytes' THEN value ELSE 0 END) "write bytes",
       SUM(CASE stat_name WHEN 'physical write total bytes' THEN value ELSE 0 END) "write total byte
s",
       SUM(CASE stat_name WHEN 'redo size' THEN value ELSE 0 END) "redo size",
       SUM(CASE stat_name WHEN '@stat_name_04@' THEN value ELSE 0 END) dummy_04,
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:10:55 5d.755
Elapsed Hours so far:    1.811
Elapsed Hours so far: 1.811

Elapsed: 00:00:00.00

13:10:55 5d "01145_edb360_323688_5d_755_physical_writes_bytes.html"
13:11:30 5d "01146_edb360_323688_5d_755_physical_writes_bytes_line_chart.html"
Elapsed Hours so far:    1.828

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:11:55 5d "System Statistics per Snap Interval"
13:11:55 Physical Writes Requests

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('physical write IO requests', 'physical write total IO requests', 'physical w
rite total multi block requests', 'redo writes', '@stat_name_05@', '@stat_name_06@', '@stat_name_07@
', '@stat_name_08@', '@stat_name_09@', '@stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@stat_
name_13@', '@stat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'physical write IO requests' THEN value ELSE 0 END) "write IO request
s",
       SUM(CASE stat_name WHEN 'physical write total IO requests' THEN value ELSE 0 END) "write tota
l IO requests",
       SUM(CASE stat_name WHEN 'physical write total multi block requests' THEN value ELSE 0 END) "w
rite total multi block reques",
       SUM(CASE stat_name WHEN 'redo writes' THEN value ELSE 0 END) "redo writes",
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:11:55 5d.756
Elapsed Hours so far:    1.828
Elapsed Hours so far: 1.828

Elapsed: 00:00:00.00

13:11:55 5d "01147_edb360_323688_5d_756_physical_writes_requests.html"
13:12:29 5d "01148_edb360_323688_5d_756_physical_writes_requests_line_chart.html"
Elapsed Hours so far:    1.844

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:12:54 5d "System Statistics per Snap Interval"
13:12:54 PX messages

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('PX local messages recv''d', 'PX local messages sent', 'PX remote messages re
cv''d', 'PX remote messages sent', '@stat_name_05@', '@stat_name_06@', '@stat_name_07@', '@stat_name
_08@', '@stat_name_09@', '@stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@stat_name_13@', '@s
tat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'PX local messages recv''d' THEN value ELSE 0 END) "local messages re
cv`d",
       SUM(CASE stat_name WHEN 'PX local messages sent' THEN value ELSE 0 END) "local messages sent"
,
       SUM(CASE stat_name WHEN 'PX remote messages recv''d' THEN value ELSE 0 END) "remote messages
recv`d",
       SUM(CASE stat_name WHEN 'PX remote messages sent' THEN value ELSE 0 END) "remote messages sen
t",
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:12:54 5d.757
Elapsed Hours so far:    1.844
Elapsed Hours so far: 1.844

Elapsed: 00:00:00.00

13:12:54 5d "01149_edb360_323688_5d_757_px_messages.html"
13:13:27 5d "01150_edb360_323688_5d_757_px_messages_line_chart.html"
Elapsed Hours so far:    1.860

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:13:51 5d "System Statistics per Snap Interval"
13:13:51 Redo and Undo Bytes

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('redo size', 'redo size for direct writes', 'redo size for lost write detecti
on', 'redo wastage', 'undo change vector size', '@stat_name_06@', '@stat_name_07@', '@stat_name_08@'
, '@stat_name_09@', '@stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@stat_name_13@', '@stat_n
ame_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'redo size' THEN value ELSE 0 END) "redo size",
       SUM(CASE stat_name WHEN 'redo size for direct writes' THEN value ELSE 0 END) "redo size for d
irect writes",
       SUM(CASE stat_name WHEN 'redo size for lost write detection' THEN value ELSE 0 END) "redo siz
e for lost write detec",
       SUM(CASE stat_name WHEN 'redo wastage' THEN value ELSE 0 END) "redo wastage",
       SUM(CASE stat_name WHEN 'undo change vector size' THEN value ELSE 0 END) "undo change vector
size",
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:13:51 5d.758
Elapsed Hours so far:    1.860
Elapsed Hours so far: 1.86

Elapsed: 00:00:00.00

13:13:52 5d "01151_edb360_323688_5d_758_redo_and_undo_bytes.html"
13:14:26 5d "01152_edb360_323688_5d_758_redo_and_undo_bytes_line_chart.html"
Elapsed Hours so far:    1.877

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:14:52 5d "System Statistics per Snap Interval"
13:14:52 Rollback Activity

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('rollback changes - undo records applied', 'rollbacks only - consistent read
gets', '@stat_name_03@', '@stat_name_04@', '@stat_name_05@', '@stat_name_06@', '@stat_name_07@', '@s
tat_name_08@', '@stat_name_09@', '@stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@stat_name_1
3@', '@stat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'rollback changes - undo records applied' THEN value ELSE 0 END) "rol
lback changes - undo record",
       SUM(CASE stat_name WHEN 'rollbacks only - consistent read gets' THEN value ELSE 0 END) "rollb
acks only - consistent re",
       SUM(CASE stat_name WHEN '@stat_name_03@' THEN value ELSE 0 END) dummy_03,
       SUM(CASE stat_name WHEN '@stat_name_04@' THEN value ELSE 0 END) dummy_04,
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:14:52 5d.759
Elapsed Hours so far:    1.877
Elapsed Hours so far: 1.877

Elapsed: 00:00:00.00

13:14:52 5d "01153_edb360_323688_5d_759_rollback_activity.html"
13:15:26 5d "01154_edb360_323688_5d_759_rollback_activity_line_chart.html"
Elapsed Hours so far:    1.894

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:15:53 5d "System Statistics per Snap Interval"
13:15:53 Sorts

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('sorts (disk)', 'sorts (memory)', '@stat_name_03@', '@stat_name_04@', '@stat_
name_05@', '@stat_name_06@', '@stat_name_07@', '@stat_name_08@', '@stat_name_09@', '@stat_name_10@',
 '@stat_name_11@', '@stat_name_12@', '@stat_name_13@', '@stat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'sorts (disk)' THEN value ELSE 0 END) "sorts (disk)",
       SUM(CASE stat_name WHEN 'sorts (memory)' THEN value ELSE 0 END) "sorts (memory)",
       SUM(CASE stat_name WHEN '@stat_name_03@' THEN value ELSE 0 END) dummy_03,
       SUM(CASE stat_name WHEN '@stat_name_04@' THEN value ELSE 0 END) dummy_04,
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:15:53 5d.760
Elapsed Hours so far:    1.894
Elapsed Hours so far: 1.894

Elapsed: 00:00:00.00

13:15:53 5d "01155_edb360_323688_5d_760_sorts.html"
13:16:30 5d "01156_edb360_323688_5d_760_sorts_line_chart.html"
Elapsed Hours so far:    1.912

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:16:59 5d "System Statistics per Snap Interval"
13:16:59 SQL*Net Bytes

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('bytes received via SQL*Net from client', 'bytes received via SQL*Net from db
link', 'bytes sent via SQL*Net to client', 'bytes sent via SQL*Net to dblink', 'bytes via SQL*Net ve
ctor from client', 'bytes via SQL*Net vector from dblink', 'bytes via SQL*Net vector to client', 'by
tes via SQL*Net vector to dblink', '@stat_name_09@', '@stat_name_10@', '@stat_name_11@', '@stat_name
_12@', '@stat_name_13@', '@stat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'bytes received via SQL*Net from client' THEN value ELSE 0 END) "rece
ived via SQL*Net from clie",
       SUM(CASE stat_name WHEN 'bytes received via SQL*Net from dblink' THEN value ELSE 0 END) "rece
ived via SQL*Net from dbli",
       SUM(CASE stat_name WHEN 'bytes sent via SQL*Net to client' THEN value ELSE 0 END) "sent via S
QL*Net to client",
       SUM(CASE stat_name WHEN 'bytes sent via SQL*Net to dblink' THEN value ELSE 0 END) "sent via S
QL*Net to dblink",
       SUM(CASE stat_name WHEN 'bytes via SQL*Net vector from client' THEN value ELSE 0 END) "via SQ
L*Net vector from client",
       SUM(CASE stat_name WHEN 'bytes via SQL*Net vector from dblink' THEN value ELSE 0 END) "via SQ
L*Net vector from dblink",
       SUM(CASE stat_name WHEN 'bytes via SQL*Net vector to client' THEN value ELSE 0 END) "via SQL*
Net vector to client",
       SUM(CASE stat_name WHEN 'bytes via SQL*Net vector to dblink' THEN value ELSE 0 END) "via SQL*
Net vector to dblink",
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:16:59 5d.761
Elapsed Hours so far:    1.912
Elapsed Hours so far: 1.912

Elapsed: 00:00:00.00

13:16:59 5d "01157_edb360_323688_5d_761_sqlnet_bytes.html"
13:17:36 5d "01158_edb360_323688_5d_761_sqlnet_bytes_line_chart.html"
Elapsed Hours so far:    1.930

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:18:04 5d "System Statistics per Snap Interval"
13:18:04 SQL*Net Roundtrips

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('SQL*Net roundtrips to/from client', 'SQL*Net roundtrips to/from dblink', '@s
tat_name_03@', '@stat_name_04@', '@stat_name_05@', '@stat_name_06@', '@stat_name_07@', '@stat_name_0
8@', '@stat_name_09@', '@stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@stat_name_13@', '@sta
t_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'SQL*Net roundtrips to/from client' THEN value ELSE 0 END) "to/from c
lient",
       SUM(CASE stat_name WHEN 'SQL*Net roundtrips to/from dblink' THEN value ELSE 0 END) "to/from d
blink",
       SUM(CASE stat_name WHEN '@stat_name_03@' THEN value ELSE 0 END) dummy_03,
       SUM(CASE stat_name WHEN '@stat_name_04@' THEN value ELSE 0 END) dummy_04,
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:18:04 5d.762
Elapsed Hours so far:    1.930
Elapsed Hours so far: 1.93

Elapsed: 00:00:00.00

13:18:05 5d "01159_edb360_323688_5d_762_sqlnet_roundtrips.html"
13:18:41 5d "01160_edb360_323688_5d_762_sqlnet_roundtrips_line_chart.html"
Elapsed Hours so far:    1.948

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:19:08 5d "System Statistics per Snap Interval"
13:19:08 Table Scans

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('table scans (cache partitions)', 'table scans (direct read)', 'table scans (
long tables)', 'table scans (rowid ranges)', 'table scans (short tables)', 'cell scans', '@stat_name
_07@', '@stat_name_08@', '@stat_name_09@', '@stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@s
tat_name_13@', '@stat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'table scans (cache partitions)' THEN value ELSE 0 END) "table scans
(cache partitions)",
       SUM(CASE stat_name WHEN 'table scans (direct read)' THEN value ELSE 0 END) "table scans (dire
ct read)",
       SUM(CASE stat_name WHEN 'table scans (long tables)' THEN value ELSE 0 END) "table scans (long
 tables)",
       SUM(CASE stat_name WHEN 'table scans (rowid ranges)' THEN value ELSE 0 END) "table scans (row
id ranges)",
       SUM(CASE stat_name WHEN 'table scans (short tables)' THEN value ELSE 0 END) "table scans (sho
rt tables)",
       SUM(CASE stat_name WHEN 'cell scans' THEN value ELSE 0 END) "cell scans",
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:19:08 5d.763
Elapsed Hours so far:    1.948
Elapsed Hours so far: 1.948

Elapsed: 00:00:00.00

13:19:08 5d "01161_edb360_323688_5d_763_table_scans.html"
13:19:43 5d "01162_edb360_323688_5d_763_table_scans_line_chart.html"
Elapsed Hours so far:    1.965

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:20:11 5d "System Statistics per Snap Interval"
13:20:11 Wait Time

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('application wait time', 'cluster wait time', 'concurrency wait time', 'file
io wait time', 'non-idle wait time', 'OS CPU Qt wait time', 'scheduler wait time', 'transaction lock
 foreground wait time', 'user I/O wait time', '@stat_name_10@', '@stat_name_11@', '@stat_name_12@',
'@stat_name_13@', '@stat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'application wait time' THEN value ELSE 0 END) "application wait time
",
       SUM(CASE stat_name WHEN 'cluster wait time' THEN value ELSE 0 END) "cluster wait time",
       SUM(CASE stat_name WHEN 'concurrency wait time' THEN value ELSE 0 END) "concurrency wait time
",
       SUM(CASE stat_name WHEN 'file io wait time' THEN value ELSE 0 END) "file io wait time",
       SUM(CASE stat_name WHEN 'non-idle wait time' THEN value ELSE 0 END) "non-idle wait time",
       SUM(CASE stat_name WHEN 'OS CPU Qt wait time' THEN value ELSE 0 END) "OS CPU Qt wait time",
       SUM(CASE stat_name WHEN 'scheduler wait time' THEN value ELSE 0 END) "scheduler wait time",
       SUM(CASE stat_name WHEN 'transaction lock foreground wait time' THEN value ELSE 0 END) "trans
action lock foreground wa",
       SUM(CASE stat_name WHEN 'user I/O wait time' THEN value ELSE 0 END) "user I/O wait time",
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:20:11 5d.764
Elapsed Hours so far:    1.965
Elapsed Hours so far: 1.965

Elapsed: 00:00:00.00

13:20:11 5d "01163_edb360_323688_5d_764_wait_time.html"
13:20:47 5d "01164_edb360_323688_5d_764_wait_time_line_chart.html"
Elapsed Hours so far:    1.983

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:21:13 5d "System Statistics per Snap Interval"
13:21:13 Workarea Executions

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('workarea executions - multipass', 'workarea executions - onepass', 'workarea
 executions - optimal', '@stat_name_04@', '@stat_name_05@', '@stat_name_06@', '@stat_name_07@', '@st
at_name_08@', '@stat_name_09@', '@stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@stat_name_13
@', '@stat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'workarea executions - multipass' THEN value ELSE 0 END) "workarea ex
ecutions - multipas",
       SUM(CASE stat_name WHEN 'workarea executions - onepass' THEN value ELSE 0 END) "workarea exec
utions - onepass",
       SUM(CASE stat_name WHEN 'workarea executions - optimal' THEN value ELSE 0 END) "workarea exec
utions - optimal",
       SUM(CASE stat_name WHEN '@stat_name_04@' THEN value ELSE 0 END) dummy_04,
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:21:13 5d.765
Elapsed Hours so far:    1.983
Elapsed Hours so far: 1.983

Elapsed: 00:00:00.00

13:21:13 5d "01165_edb360_323688_5d_765_workarea_executions.html"
13:21:48 5d "01166_edb360_323688_5d_765_workarea_executions_line_chart.html"
Elapsed Hours so far:    1.999

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:22:13 5d "System Statistics per Snap Interval"
13:22:13 Parsing Counts and Session Cursor Cache Hits

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5d.728 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('parse count (total)', 'parse count (hard)', 'parse count (failures)', 'parse
 count (describe)', 'session cursor cache count', 'session cursor cache hits', '@stat_name_07@', '@s
tat_name_08@', '@stat_name_09@', '@stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@stat_name_1
3@', '@stat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5d.728 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5d.728 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'parse count (total)' THEN value ELSE 0 END) "parse count (total)",
       SUM(CASE stat_name WHEN 'parse count (hard)' THEN value ELSE 0 END) "parse count (hard)",
       SUM(CASE stat_name WHEN 'parse count (failures)' THEN value ELSE 0 END) "parse count (failure
s)",
       SUM(CASE stat_name WHEN 'parse count (describe)' THEN value ELSE 0 END) "parse count (describ
e)",
       SUM(CASE stat_name WHEN 'session cursor cache count' THEN value ELSE 0 END) "session cursor c
ache count",
       SUM(CASE stat_name WHEN 'session cursor cache hits' THEN value ELSE 0 END) "session cursor ca
che hits",
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:22:13 5d.766
Elapsed Hours so far:    1.999
Elapsed Hours so far: 1.999

Elapsed: 00:00:00.00

13:22:13 5d "01167_edb360_323688_5d_766_parsing_counts_and_session_cursor_cache_hits.html"
13:22:48 5d "01168_edb360_323688_5d_766_parsing_counts_and_session_cursor_cache_hits_line_chart.html"
Elapsed Hours so far:    2.016

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:23:14 5e "System Statistics (Exadata) per Snap Interval"
13:23:14 Physical I/O in GBs

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5e.767 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('physical read total bytes', 'physical write total bytes', 'cell physical IO
bytes eligible for predicate offload', 'cell physical IO interconnect bytes', 'cell physical IO inte
rconnect bytes returned by smart scan', 'cell physical IO bytes saved by storage index', '@stat_name
_07@', '@stat_name_08@', '@stat_name_09@', '@stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@s
tat_name_13@', '@stat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5e.767 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       --SUM(value) value
       ROUND(SUM(value)/1e9, 3) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5e.767 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'physical read total bytes' THEN value ELSE 0 END) "physical read tot
al bytes",
       SUM(CASE stat_name WHEN 'physical write total bytes' THEN value ELSE 0 END) "physical write t
otal bytes",
       SUM(CASE stat_name WHEN 'cell physical IO bytes eligible for predicate offload' THEN value EL
SE 0 END) "bytes eligible for predicate o",
       SUM(CASE stat_name WHEN 'cell physical IO interconnect bytes' THEN value ELSE 0 END) "interco
nnect bytes",
       SUM(CASE stat_name WHEN 'cell physical IO interconnect bytes returned by smart scan' THEN val
ue ELSE 0 END) "interconnect bytes returned by",
       SUM(CASE stat_name WHEN 'cell physical IO bytes saved by storage index' THEN value ELSE 0 END
) "bytes saved by storage index",
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:23:14 5e.767
Elapsed Hours so far:    2.016
Elapsed Hours so far: 2.016

Elapsed: 00:00:00.00

13:23:14 5e "01169_edb360_323688_5e_767_physical_io_in_gbs.html"
13:23:49 5e "01170_edb360_323688_5e_767_physical_io_in_gbs_line_chart.html"
Elapsed Hours so far:    2.033

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:24:16 5e "System Statistics (Exadata) per Snap Interval"
13:24:16 Offloading Eligibility

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5e.768 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('physical read total bytes',
                       'physical write total bytes',
                       'physical read total IO requests',
                       'cell flash cache read hits',
                       'cell physical IO bytes eligible for predicate offload',
                       'cell physical IO interconnect bytes',
                       'cell physical IO interconnect bytes returned by smart scan',
                       'cell physical IO bytes saved by storage index')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5e.768 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
       --ROUND(SUM(value)/1e9, 3) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
),
stats_per_snap AS (
SELECT /*+  NO_MERGE  */ /* 5e.768 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'physical read total bytes' THEN value ELSE 0 END) prtb,
       SUM(CASE stat_name WHEN 'physical write total bytes' THEN value ELSE 0 END) pwtb,
       SUM(CASE stat_name WHEN 'physical read total IO requests' THEN value ELSE 0 END) prtior,
       SUM(CASE stat_name WHEN 'cell flash cache read hits' THEN value ELSE 0 END) cfcrh,
       SUM(CASE stat_name WHEN 'cell physical IO bytes eligible for predicate offload' THEN value EL
SE 0 END) eligible,
       SUM(CASE stat_name WHEN 'cell physical IO interconnect bytes' THEN value ELSE 0 END) ib,
       SUM(CASE stat_name WHEN 'cell physical IO interconnect bytes returned by smart scan' THEN val
ue ELSE 0 END) ibrss,
       SUM(CASE stat_name WHEN 'cell physical IO bytes saved by storage index' THEN value ELSE 0 END
) bssi
  FROM stat_name_per_snap
 GROUP BY
       snap_id
)
SELECT /*+  NO_MERGE  */ /* 5e.768 */
       snap_id,
       begin_time,
       end_time,
       /* "cell physical IO bytes eligible for predicate offload" / "physical read total bytes" */
       CASE WHEN prtb > 0 THEN ROUND(100 * eligible / prtb, 1) ELSE 0 END "Eligible Percent",
       /* ("cell physical IO bytes eligible for predicate offload" - "cell physical IO interconnect
bytes returned by smart scan")/ "cell physical IO bytes eligible for predicate offload" */
       --CASE WHEN eligible > ibrss THEN ROUND(100 * (eligible - ibrss) / eligible, 1) ELSE 0 END "I
O Saved Percent",
       /* "cell physical IO bytes saved by storage index" / "cell physical IO bytes eligible for pre
dicate offload" */
       --CASE WHEN eligible > 0 THEN ROUND(100 * bssi / eligible, 1) ELSE 0 END "Storage Index effic
 Perc",
       /* "cell flash cache read hits" / "physical read total IO requests" */
       --CASE WHEN prtior > 0 THEN ROUND(100 * cfcrh / prtior, 1) ELSE 0 END "Flash Cache effic Perc
",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM stats_per_snap
 ORDER BY
       snap_id

13:24:16 5e.768
Elapsed Hours so far:    2.033
Elapsed Hours so far: 2.033

Elapsed: 00:00:00.00

13:24:17 5e "01171_edb360_323688_5e_768_offloading_eligibility.html"
13:24:51 5e "01172_edb360_323688_5e_768_offloading_eligibility_line_chart.html"
Elapsed Hours so far:    2.051

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:25:18 5e "System Statistics (Exadata) per Snap Interval"
13:25:18 Offloading Efficiency

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5e.769 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('physical read total bytes',
                       'physical write total bytes',
                       'physical read total IO requests',
                       'cell flash cache read hits',
                       'cell physical IO bytes eligible for predicate offload',
                       'cell physical IO interconnect bytes',
                       'cell physical IO interconnect bytes returned by smart scan',
                       'cell physical IO bytes saved by storage index')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5e.769 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
       --ROUND(SUM(value)/1e9, 3) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
),
stats_per_snap AS (
SELECT /*+  NO_MERGE  */ /* 5e.769 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'physical read total bytes' THEN value ELSE 0 END) prtb,
       SUM(CASE stat_name WHEN 'physical write total bytes' THEN value ELSE 0 END) pwtb,
       SUM(CASE stat_name WHEN 'physical read total IO requests' THEN value ELSE 0 END) prtior,
       SUM(CASE stat_name WHEN 'cell flash cache read hits' THEN value ELSE 0 END) cfcrh,
       SUM(CASE stat_name WHEN 'cell physical IO bytes eligible for predicate offload' THEN value EL
SE 0 END) eligible,
       SUM(CASE stat_name WHEN 'cell physical IO interconnect bytes' THEN value ELSE 0 END) ib,
       SUM(CASE stat_name WHEN 'cell physical IO interconnect bytes returned by smart scan' THEN val
ue ELSE 0 END) ibrss,
       SUM(CASE stat_name WHEN 'cell physical IO bytes saved by storage index' THEN value ELSE 0 END
) bssi
  FROM stat_name_per_snap
 GROUP BY
       snap_id
)
SELECT /*+  NO_MERGE  */ /* 5e.769 */
       snap_id,
       begin_time,
       end_time,
       /* "cell physical IO bytes eligible for predicate offload" / "physical read total bytes" */
       --CASE WHEN prtb > 0 THEN ROUND(100 * eligible / prtb, 1) ELSE 0 END "Eligible Percent",
       /* ("cell physical IO bytes eligible for predicate offload" - "cell physical IO interconnect
bytes returned by smart scan")/ "cell physical IO bytes eligible for predicate offload" */
       CASE WHEN eligible > ibrss THEN ROUND(100 * (eligible - ibrss) / eligible, 1) ELSE 0 END "IO
Saved Percent",
       /* "cell physical IO bytes saved by storage index" / "cell physical IO bytes eligible for pre
dicate offload" */
       --CASE WHEN eligible > 0 THEN ROUND(100 * bssi / eligible, 1) ELSE 0 END "Storage Index effic
 Perc",
       /* "cell flash cache read hits" / "physical read total IO requests" */
       --CASE WHEN prtior > 0 THEN ROUND(100 * cfcrh / prtior, 1) ELSE 0 END "Flash Cache effic Perc
",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM stats_per_snap
 ORDER BY
       snap_id

13:25:18 5e.769
Elapsed Hours so far:    2.051
Elapsed Hours so far: 2.051

Elapsed: 00:00:00.00

13:25:18 5e "01173_edb360_323688_5e_769_offloading_efficiency.html"
13:25:52 5e "01174_edb360_323688_5e_769_offloading_efficiency_line_chart.html"
Elapsed Hours so far:    2.067

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:26:19 5e "System Statistics (Exadata) per Snap Interval"
13:26:19 Storage Index efficiency

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5e.770 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('physical read total bytes',
                       'physical write total bytes',
                       'physical read total IO requests',
                       'cell flash cache read hits',
                       'cell physical IO bytes eligible for predicate offload',
                       'cell physical IO interconnect bytes',
                       'cell physical IO interconnect bytes returned by smart scan',
                       'cell physical IO bytes saved by storage index')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5e.770 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
       --ROUND(SUM(value)/1e9, 3) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
),
stats_per_snap AS (
SELECT /*+  NO_MERGE  */ /* 5e.770 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'physical read total bytes' THEN value ELSE 0 END) prtb,
       SUM(CASE stat_name WHEN 'physical write total bytes' THEN value ELSE 0 END) pwtb,
       SUM(CASE stat_name WHEN 'physical read total IO requests' THEN value ELSE 0 END) prtior,
       SUM(CASE stat_name WHEN 'cell flash cache read hits' THEN value ELSE 0 END) cfcrh,
       SUM(CASE stat_name WHEN 'cell physical IO bytes eligible for predicate offload' THEN value EL
SE 0 END) eligible,
       SUM(CASE stat_name WHEN 'cell physical IO interconnect bytes' THEN value ELSE 0 END) ib,
       SUM(CASE stat_name WHEN 'cell physical IO interconnect bytes returned by smart scan' THEN val
ue ELSE 0 END) ibrss,
       SUM(CASE stat_name WHEN 'cell physical IO bytes saved by storage index' THEN value ELSE 0 END
) bssi
  FROM stat_name_per_snap
 GROUP BY
       snap_id
)
SELECT /*+  NO_MERGE  */ /* 5e.770 */
       snap_id,
       begin_time,
       end_time,
       /* "cell physical IO bytes eligible for predicate offload" / "physical read total bytes" */
       --CASE WHEN prtb > 0 THEN ROUND(100 * eligible / prtb, 1) ELSE 0 END "Eligible Percent",
       /* ("cell physical IO bytes eligible for predicate offload" - "cell physical IO interconnect
bytes returned by smart scan")/ "cell physical IO bytes eligible for predicate offload" */
       --CASE WHEN eligible > ibrss THEN ROUND(100 * (eligible - ibrss) / eligible, 1) ELSE 0 END "I
O Saved Percent",
       /* "cell physical IO bytes saved by storage index" / "cell physical IO bytes eligible for pre
dicate offload" */
       CASE WHEN eligible > 0 THEN ROUND(100 * bssi / eligible, 1) ELSE 0 END "Storage Index effic P
erc",
       /* "cell flash cache read hits" / "physical read total IO requests" */
       --CASE WHEN prtior > 0 THEN ROUND(100 * cfcrh / prtior, 1) ELSE 0 END "Flash Cache effic Perc
",
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM stats_per_snap
 ORDER BY
       snap_id

13:26:19 5e.770
Elapsed Hours so far:    2.067
Elapsed Hours so far: 2.067

Elapsed: 00:00:00.01

13:26:19 5e "01175_edb360_323688_5e_770_storage_index_efficiency.html"
13:26:52 5e "01176_edb360_323688_5e_770_storage_index_efficiency_line_chart.html"
Elapsed Hours so far:    2.084

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:27:19 5e "System Statistics (Exadata) per Snap Interval"
13:27:19 Flash Cache efficiency

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5e.771 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       (h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.sn
ap_id)) value
       --h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('physical read total bytes',
                       'physical write total bytes',
                       'physical read total IO requests',
                       'cell flash cache read hits',
                       'cell physical IO bytes eligible for predicate offload',
                       'cell physical IO interconnect bytes',
                       'cell physical IO interconnect bytes returned by smart scan',
                       'cell physical IO bytes saved by storage index')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5e.771 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
       --ROUND(SUM(value)/1e9, 3) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
),
stats_per_snap AS (
SELECT /*+  NO_MERGE  */ /* 5e.771 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'physical read total bytes' THEN value ELSE 0 END) prtb,
       SUM(CASE stat_name WHEN 'physical write total bytes' THEN value ELSE 0 END) pwtb,
       SUM(CASE stat_name WHEN 'physical read total IO requests' THEN value ELSE 0 END) prtior,
       SUM(CASE stat_name WHEN 'cell flash cache read hits' THEN value ELSE 0 END) cfcrh,
       SUM(CASE stat_name WHEN 'cell physical IO bytes eligible for predicate offload' THEN value EL
SE 0 END) eligible,
       SUM(CASE stat_name WHEN 'cell physical IO interconnect bytes' THEN value ELSE 0 END) ib,
       SUM(CASE stat_name WHEN 'cell physical IO interconnect bytes returned by smart scan' THEN val
ue ELSE 0 END) ibrss,
       SUM(CASE stat_name WHEN 'cell physical IO bytes saved by storage index' THEN value ELSE 0 END
) bssi
  FROM stat_name_per_snap
 GROUP BY
       snap_id
)
SELECT /*+  NO_MERGE  */ /* 5e.771 */
       snap_id,
       begin_time,
       end_time,
       /* "cell physical IO bytes eligible for predicate offload" / "physical read total bytes" */
       --CASE WHEN prtb > 0 THEN ROUND(100 * eligible / prtb, 1) ELSE 0 END "Eligible Percent",
       /* ("cell physical IO bytes eligible for predicate offload" - "cell physical IO interconnect
bytes returned by smart scan")/ "cell physical IO bytes eligible for predicate offload" */
       --CASE WHEN eligible > ibrss THEN ROUND(100 * (eligible - ibrss) / eligible, 1) ELSE 0 END "I
O Saved Percent",
       /* "cell physical IO bytes saved by storage index" / "cell physical IO bytes eligible for pre
dicate offload" */
       --CASE WHEN eligible > 0 THEN ROUND(100 * bssi / eligible, 1) ELSE 0 END "Storage Index effic
 Perc",
       /* "cell flash cache read hits" / "physical read total IO requests" */
       CASE WHEN prtior > 0 THEN ROUND(100 * cfcrh / prtior, 1) ELSE 0 END "Flash Cache effic Perc",

       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM stats_per_snap
 ORDER BY
       snap_id

13:27:19 5e.771
Elapsed Hours so far:    2.084
Elapsed Hours so far: 2.084

Elapsed: 00:00:00.00

13:27:19 5e "01177_edb360_323688_5e_771_flash_cache_efficiency.html"
13:27:54 5e "01178_edb360_323688_5e_771_flash_cache_efficiency_line_chart.html"
Elapsed Hours so far:    2.101

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:28:21 5f "System Statistics (Current) per Snap Interval"
13:28:21 Sessions (logons current)

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5f.772 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       --(h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.
snap_id)) value
       h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('logons current', '@stat_name_02@', '@stat_name_03@', '@stat_name_04@', '@sta
t_name_05@', '@stat_name_06@', '@stat_name_07@', '@stat_name_08@', '@stat_name_09@', '@stat_name_10@
', '@stat_name_11@', '@stat_name_12@', '@stat_name_13@', '@stat_name_14@', '@stat_name_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5f.772 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5f.772 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'logons current' THEN value ELSE 0 END) "logons current",
       SUM(CASE stat_name WHEN '@stat_name_02@' THEN value ELSE 0 END) dummy_02,
       SUM(CASE stat_name WHEN '@stat_name_03@' THEN value ELSE 0 END) dummy_03,
       SUM(CASE stat_name WHEN '@stat_name_04@' THEN value ELSE 0 END) dummy_04,
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:28:21 5f.772
Elapsed Hours so far:    2.101
Elapsed Hours so far: 2.101

Elapsed: 00:00:00.00

13:28:21 5f "01179_edb360_323688_5f_772_sessions_logons_current.html"
13:28:57 5f "01180_edb360_323688_5f_772_sessions_logons_current_line_chart.html"
Elapsed Hours so far:    2.119

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:29:23 5f "System Statistics (Current) per Snap Interval"
13:29:23 Cursors (opened and pinned)

WITH
selected_stat_name AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)  */ /* 5f.772 */
       h.snap_id,
       h.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       (s.startup_time - LAG(s.startup_time) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id
 ORDER BY h.snap_id)) startup_time_interval,
       h.stat_name,
       --(h.value - LAG(h.value) OVER (PARTITION BY h.dbid, h.instance_number, h.stat_id ORDER BY h.
snap_id)) value
       h.value
  FROM dba_hist_sysstat h,
       dba_hist_snapshot s
 WHERE h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND h.stat_name IN ('opened cursors current', 'pinned cursors current', '@stat_name_03@', '@stat_
name_04@', '@stat_name_05@', '@stat_name_06@', '@stat_name_07@', '@stat_name_08@', '@stat_name_09@',
 '@stat_name_10@', '@stat_name_11@', '@stat_name_12@', '@stat_name_13@', '@stat_name_14@', '@stat_na
me_15@')
   AND s.snap_id = h.snap_id
   AND s.dbid = h.dbid
   AND s.instance_number = h.instance_number
   AND s.end_interval_time - s.begin_interval_time > TO_DSINTERVAL('+00 00:01:00.000000') -- exclude
 snaps less than 1m appart
),
stat_name_per_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5f.772 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       stat_name,
       SUM(value) value
  FROM selected_stat_name
 WHERE startup_time_interval = TO_DSINTERVAL('+00 00:00:00.000000') -- include only snaps from same
startup
   AND value >= 0
 GROUP BY
       snap_id,
       stat_name
)
SELECT /*+  NO_MERGE  */ /* 5f.772 */
       snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       SUM(CASE stat_name WHEN 'opened cursors current' THEN value ELSE 0 END) "opened cursors curre
nt",
       SUM(CASE stat_name WHEN 'pinned cursors current' THEN value ELSE 0 END) "pinned cursors curre
nt",
       SUM(CASE stat_name WHEN '@stat_name_03@' THEN value ELSE 0 END) dummy_03,
       SUM(CASE stat_name WHEN '@stat_name_04@' THEN value ELSE 0 END) dummy_04,
       SUM(CASE stat_name WHEN '@stat_name_05@' THEN value ELSE 0 END) dummy_05,
       SUM(CASE stat_name WHEN '@stat_name_06@' THEN value ELSE 0 END) dummy_06,
       SUM(CASE stat_name WHEN '@stat_name_07@' THEN value ELSE 0 END) dummy_07,
       SUM(CASE stat_name WHEN '@stat_name_08@' THEN value ELSE 0 END) dummy_08,
       SUM(CASE stat_name WHEN '@stat_name_09@' THEN value ELSE 0 END) dummy_09,
       SUM(CASE stat_name WHEN '@stat_name_10@' THEN value ELSE 0 END) dummy_10,
       SUM(CASE stat_name WHEN '@stat_name_11@' THEN value ELSE 0 END) dummy_11,
       SUM(CASE stat_name WHEN '@stat_name_12@' THEN value ELSE 0 END) dummy_12,
       SUM(CASE stat_name WHEN '@stat_name_13@' THEN value ELSE 0 END) dummy_13,
       SUM(CASE stat_name WHEN '@stat_name_14@' THEN value ELSE 0 END) dummy_14,
       SUM(CASE stat_name WHEN '@stat_name_15@' THEN value ELSE 0 END) dummy_15
  FROM stat_name_per_snap
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:29:23 5f.773
Elapsed Hours so far:    2.119
Elapsed Hours so far: 2.119

Elapsed: 00:00:00.00

13:29:23 5f "01181_edb360_323688_5f_773_cursors_opened_and_pinned.html"
13:29:59 5f "01182_edb360_323688_5f_773_cursors_opened_and_pinned_line_chart.html"
Elapsed Hours so far:    2.136

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:30:26 5g "Exadata"
13:30:26 FTS with single-block reads

WITH
ash AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 5g.774 */
       current_obj#, COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND event = 'cell single block physical read'
   AND sql_plan_operation = 'TABLE ACCESS'
   AND sql_plan_options = 'STORAGE FULL'
 GROUP BY
       current_obj#
)
SELECT a.samples,
       a.current_obj#,
       CASE a.current_obj# WHEN 0 THEN 'SYS' ELSE o.owner END owner,
       CASE a.current_obj# WHEN 0 THEN 'UNDO' ELSE o.object_name END object_name,
       CASE a.current_obj# WHEN 0 THEN NULL ELSE o.subobject_name END subobject_name
  FROM ash a,
       dba_objects o
 WHERE o.object_id(+) = a.current_obj#
 ORDER BY
       a.samples DESC,
       a.current_obj#

13:30:26 5g.774
Elapsed Hours so far:    2.136
Elapsed Hours so far: 2.136

Elapsed: 00:00:00.00

13:30:26 5g "01183_edb360_323688_5g_774_fts_with_singleblock_reads.html"
Elapsed Hours so far:    2.141

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:30:44 5g "Exadata"
13:30:44 Relevant I/O Time Composition

-- requested by Frits Hoogland
WITH
db_time AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5g.775 */
       snap_id,
       dbid,
       instance_number,
       stat_name,
       value - LAG(value) OVER (PARTITION BY dbid, instance_number, stat_name ORDER BY snap_id) valu
e
  FROM dba_hist_sys_time_model
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND stat_name = 'DB time'
),
system_event_detail AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5g.775 */
       snap_id,
       dbid,
       instance_number,
       wait_class,
       SUM(time_waited_micro) time_waited_micro
  FROM dba_hist_system_event
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class IN ('User I/O', 'System I/O', 'Commit')
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_class
),
system_event AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5g.775 */
       snap_id,
       dbid,
       instance_number,
       wait_class,
       time_waited_micro - LAG(time_waited_micro) OVER (PARTITION BY dbid, instance_number, wait_cla
ss ORDER BY snap_id) time_waited_micro
  FROM system_event_detail
),
system_wait AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5g.775 */
       snap_id,
       dbid,
       instance_number,
       event_name,
       time_waited_micro - LAG(time_waited_micro) OVER (PARTITION BY dbid, instance_number, event_na
me ORDER BY snap_id) time_waited_micro
  FROM dba_hist_system_event
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND event_name IN ('db file scattered read', 'direct path read', 'log file parallel write')
),
time_components AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5g.775 */
       d.snap_id,
       d.dbid,
       d.instance_number,
       d.value db_time,
       e1.time_waited_micro u_io_time,
       e2.time_waited_micro s_io_time,
       e3.time_waited_micro commt_time,
       w1.time_waited_micro dbfsr_time,
       w2.time_waited_micro dpr_time,
       w3.time_waited_micro lfpw_time
  FROM db_time d,
       system_event e1,
       system_event e2,
       system_event e3,
       system_wait w1,
       system_wait w2,
       system_wait w3
 WHERE d.value >= 0
   AND e1.snap_id = d.snap_id
   AND e1.dbid = d.dbid
   AND e1.instance_number = d.instance_number
   AND e1.wait_class = 'User I/O'
   AND e1.time_waited_micro >= 0
   AND e2.snap_id = d.snap_id
   AND e2.dbid = d.dbid
   AND e2.instance_number = d.instance_number
   AND e2.wait_class = 'System I/O'
   AND e2.time_waited_micro >= 0
   AND e3.snap_id = d.snap_id
   AND e3.dbid = d.dbid
   AND e3.instance_number = d.instance_number
   AND e3.wait_class = 'Commit'
   AND e3.time_waited_micro >= 0
   AND w1.snap_id = d.snap_id
   AND w1.dbid = d.dbid
   AND w1.instance_number = d.instance_number
   AND w1.event_name = 'db file scattered read'
   AND w1.time_waited_micro >= 0
   AND w2.snap_id = d.snap_id
   AND w2.dbid = d.dbid
   AND w2.instance_number = d.instance_number
   AND w2.event_name = 'direct path read'
   AND w2.time_waited_micro >= 0
   AND w3.snap_id = d.snap_id
   AND w3.dbid = d.dbid
   AND w3.instance_number = d.instance_number
   AND w3.event_name = 'log file parallel write'
   AND w3.time_waited_micro >= 0
),
by_inst_and_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5g.775 */
       t.snap_id,
       t.instance_number,
       --s.begin_interval_time,
       --s.end_interval_time,
       --ROUND((CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       SUM(db_time) db_time,
       SUM(u_io_time) u_io_time,
       SUM(dbfsr_time) dbfsr_time,
       SUM(dpr_time) dpr_time,
       SUM(s_io_time) s_io_time,
       SUM(commt_time) commt_time,
       SUM(lfpw_time) lfpw_time
  FROM time_components t,
       dba_hist_snapshot s
 WHERE s.snap_id = t.snap_id
   AND s.dbid = t.dbid
   AND s.instance_number = t.instance_number
   AND s.snap_id BETWEEN 3473 AND 4962
   AND s.dbid = 2109323688
 GROUP BY
       t.snap_id,
       t.instance_number,
       s.begin_interval_time,
       s.end_interval_time
),
by_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5g.775 */
       snap_id,
       --MIN(begin_interval_time) begin_interval_time,
       --MIN(end_interval_time) end_interval_time,
       --ROUND((CAST(MIN(end_interval_time) AS DATE) - CAST(MIN(begin_interval_time) AS DATE)) * 24
* 60 * 60) interval_secs,
       NVL(SUM(db_time), 0) db_time,
       NVL(SUM(u_io_time), 0) u_io_time,
       NVL(SUM(dbfsr_time), 0) dbfsr_time,
       NVL(SUM(dpr_time), 0) dpr_time,
       NVL(SUM(s_io_time), 0) s_io_time,
       NVL(SUM(commt_time), 0) commt_time,
       NVL(SUM(lfpw_time), 0) lfpw_time,
       NVL(SUM(u_io_time), 0) +
       NVL(SUM(s_io_time), 0) +
       NVL(SUM(commt_time), 0) io_time
  FROM by_inst_and_snap
 GROUP BY
       snap_id
)
SELECT ROUND(SUM(db_time) / 1e6, 2) db_time_secs,
       ROUND(SUM(io_time) / 1e6, 2) io_time_secs,
       ROUND(SUM(u_io_time) / 1e6, 2) u_io_secs,
       ROUND(SUM(dbfsr_time) / 1e6, 2) dbfsr_secs,
       ROUND(SUM(dpr_time) / 1e6, 2) dpr_secs,
       ROUND(SUM(s_io_time) / 1e6, 2) s_io_secs,
       ROUND(SUM(lfpw_time) / 1e6, 2) lfpw_secs,
       ROUND(SUM(commt_time) / 1e6, 2) commt_secs,
       ROUND(100 * SUM(u_io_time) / SUM(db_time), 2) u_io_perc_dbt,
       ROUND(100 * SUM(dbfsr_time) / SUM(db_time), 2) dbfsr_perc_dbt,
       ROUND(100 * SUM(dpr_time) / SUM(db_time), 2) dpr_perc_dbt,
       ROUND(100 * SUM(s_io_time) / SUM(db_time), 2) s_io_perc_dbt,
       ROUND(100 * SUM(lfpw_time) / SUM(db_time), 2) lfpw_perc_dbt,
       ROUND(100 * SUM(commt_time) / SUM(db_time), 2) commt_perc_dbt,
       ROUND(100 * SUM(u_io_time) / SUM(io_time), 2) u_io_perc_iot,
       ROUND(100 * SUM(dbfsr_time) / SUM(io_time), 2) dbfsr_perc_iot,
       ROUND(100 * SUM(dpr_time) / SUM(io_time), 2) dpr_perc_iot,
       ROUND(100 * SUM(s_io_time) / SUM(io_time), 2) s_io_perc_iot,
       ROUND(100 * SUM(lfpw_time) / SUM(io_time), 2) lfpw_perc_iot,
       ROUND(100 * SUM(commt_time) / SUM(io_time), 2) commt_perc_iot
  FROM by_snap

13:30:44 5g.775
Elapsed Hours so far:    2.141
Elapsed Hours so far: 2.141

Elapsed: 00:00:00.00

13:30:44 5g "01184_edb360_323688_5g_775_relevant_io_time_composition.html"
Elapsed Hours so far:    2.141

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:30:45 5g "Exadata"
13:30:45 Relevant I/O Time Composition

-- requested by Frits Hoogland
WITH
db_time AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5g.776 */
       snap_id,
       dbid,
       instance_number,
       stat_name,
       value - LAG(value) OVER (PARTITION BY dbid, instance_number, stat_name ORDER BY snap_id) valu
e
  FROM dba_hist_sys_time_model
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND stat_name = 'DB time'
),
system_event_detail AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5g.776 */
       snap_id,
       dbid,
       instance_number,
       wait_class,
       SUM(time_waited_micro) time_waited_micro
  FROM dba_hist_system_event
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND wait_class IN ('User I/O', 'System I/O', 'Commit')
 GROUP BY
       snap_id,
       dbid,
       instance_number,
       wait_class
),
system_event AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5g.776 */
       snap_id,
       dbid,
       instance_number,
       wait_class,
       time_waited_micro - LAG(time_waited_micro) OVER (PARTITION BY dbid, instance_number, wait_cla
ss ORDER BY snap_id) time_waited_micro
  FROM system_event_detail
),
system_wait AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5g.776 */
       snap_id,
       dbid,
       instance_number,
       event_name,
       time_waited_micro - LAG(time_waited_micro) OVER (PARTITION BY dbid, instance_number, event_na
me ORDER BY snap_id) time_waited_micro
  FROM dba_hist_system_event
 WHERE snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND event_name IN ('db file scattered read', 'direct path read', 'log file parallel write')
),
time_components AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5g.776 */
       d.snap_id,
       d.dbid,
       d.instance_number,
       d.value db_time,
       e1.time_waited_micro u_io_time,
       e2.time_waited_micro s_io_time,
       e3.time_waited_micro commt_time,
       w1.time_waited_micro dbfsr_time,
       w2.time_waited_micro dpr_time,
       w3.time_waited_micro lfpw_time
  FROM db_time d,
       system_event e1,
       system_event e2,
       system_event e3,
       system_wait w1,
       system_wait w2,
       system_wait w3
 WHERE d.value >= 0
   AND e1.snap_id = d.snap_id
   AND e1.dbid = d.dbid
   AND e1.instance_number = d.instance_number
   AND e1.wait_class = 'User I/O'
   AND e1.time_waited_micro >= 0
   AND e2.snap_id = d.snap_id
   AND e2.dbid = d.dbid
   AND e2.instance_number = d.instance_number
   AND e2.wait_class = 'System I/O'
   AND e2.time_waited_micro >= 0
   AND e3.snap_id = d.snap_id
   AND e3.dbid = d.dbid
   AND e3.instance_number = d.instance_number
   AND e3.wait_class = 'Commit'
   AND e3.time_waited_micro >= 0
   AND w1.snap_id = d.snap_id
   AND w1.dbid = d.dbid
   AND w1.instance_number = d.instance_number
   AND w1.event_name = 'db file scattered read'
   AND w1.time_waited_micro >= 0
   AND w2.snap_id = d.snap_id
   AND w2.dbid = d.dbid
   AND w2.instance_number = d.instance_number
   AND w2.event_name = 'direct path read'
   AND w2.time_waited_micro >= 0
   AND w3.snap_id = d.snap_id
   AND w3.dbid = d.dbid
   AND w3.instance_number = d.instance_number
   AND w3.event_name = 'log file parallel write'
   AND w3.time_waited_micro >= 0
),
by_inst_and_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5g.776 */
       t.snap_id,
       t.instance_number,
       s.begin_interval_time,
       s.end_interval_time,
       --ROUND((CAST(s.end_interval_time AS DATE) - CAST(s.begin_interval_time AS DATE)) * 24 * 60 *
 60) interval_secs,
       SUM(db_time) db_time,
       SUM(u_io_time) u_io_time,
       SUM(dbfsr_time) dbfsr_time,
       SUM(dpr_time) dpr_time,
       SUM(s_io_time) s_io_time,
       SUM(commt_time) commt_time,
       SUM(lfpw_time) lfpw_time
  FROM time_components t,
       dba_hist_snapshot s
 WHERE s.snap_id = t.snap_id
   AND s.dbid = t.dbid
   AND s.instance_number = t.instance_number
   AND s.snap_id BETWEEN 3473 AND 4962
   AND s.dbid = 2109323688
 GROUP BY
       t.snap_id,
       t.instance_number,
       s.begin_interval_time,
       s.end_interval_time
),
by_snap AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 5g.776 */
       snap_id,
       MIN(begin_interval_time) begin_interval_time,
       MIN(end_interval_time) end_interval_time,
       --ROUND((CAST(MIN(end_interval_time) AS DATE) - CAST(MIN(begin_interval_time) AS DATE)) * 24
* 60 * 60) interval_secs,
       NVL(SUM(db_time), 0) db_time,
       NVL(SUM(u_io_time), 0) u_io_time,
       NVL(SUM(dbfsr_time), 0) dbfsr_time,
       NVL(SUM(dpr_time), 0) dpr_time,
       NVL(SUM(s_io_time), 0) s_io_time,
       NVL(SUM(commt_time), 0) commt_time,
       NVL(SUM(lfpw_time), 0) lfpw_time,
       NVL(SUM(u_io_time), 0) +
       NVL(SUM(s_io_time), 0) +
       NVL(SUM(commt_time), 0) io_time
  FROM by_inst_and_snap
 GROUP BY
       snap_id
)
SELECT snap_id,
       TO_CHAR(MIN(begin_interval_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MIN(end_interval_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(db_time / 1e6, 2) db_time_secs,
       ROUND(io_time / 1e6, 2) io_time_secs,
       ROUND(u_io_time / 1e6, 2) u_io_secs,
       ROUND(dbfsr_time / 1e6, 2) dbfsr_secs,
       ROUND(dpr_time / 1e6, 2) dpr_secs,
       ROUND(s_io_time / 1e6, 2) s_io_secs,
       ROUND(lfpw_time / 1e6, 2) lfpw_secs,
       ROUND(commt_time / 1e6, 2) commt_secs,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM by_snap
 ORDER BY
       snap_id

13:30:45 5g.776
Elapsed Hours so far:    2.141
Elapsed Hours so far: 2.141

Elapsed: 00:00:00.00

13:30:45 5g "01185_edb360_323688_5g_776_relevant_io_time_composition.html"
13:30:45 5g "01186_edb360_323688_5g_776_relevant_io_time_composition_line_chart.html"
Elapsed Hours so far:    2.141

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:30:45 5g "Exadata"
13:30:45 Cell IORM Status

-- celliorm.sql (v1.0)
-- Tanel Poder
-- http://blog.tanelpoder.com
WITH cell_config AS (
    ( SELECT /*+ materialize */
        cellname,
        CASE
                WHEN confval LIKE '%interdatabaseplan%' THEN replace(confval,'interdatabaseplan','io
rmplan')
                ELSE confval
            END
        confval
      FROM
        v$cell_config  -- gv isn't needed, all cells should be visible in all instances
      WHERE
        conftype = 'IORM'
    )
)
SELECT
    cellname cv_cellname
  , CAST(EXTRACT(XMLTYPE(confval), '/cli-output/iormplan/objective/text()') AS VARCHAR2(20)) objecti
ve
  , CAST(EXTRACT(XMLTYPE(confval), '/cli-output/iormplan/status/text()')    AS VARCHAR2(15)) status
  , CAST(EXTRACT(XMLTYPE(confval), '/cli-output/iormplan/name/text()')      AS VARCHAR2(30)) interdb
_plan
  , CAST(EXTRACT(XMLTYPE(confval), '/cli-output/iormplan/catPlan/text()')   AS VARCHAR2(30)) cat_pla
n
  , CAST(EXTRACT(XMLTYPE(confval), '/cli-output/iormplan/dbPlan/text()')    AS VARCHAR2(30)) db_plan

FROM
    cell_config
ORDER BY
    cv_cellname

13:30:45 5g.777
Elapsed Hours so far:    2.141
Elapsed Hours so far: 2.141

Elapsed: 00:00:00.00

13:30:45 5g "01187_edb360_323688_5g_777_cell_iorm_status.html"
Elapsed Hours so far:    2.142

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:30:46 5g "Exadata"
13:30:46 Cell Physical Disk Summary

-- cellpd.sql (v1.0)
-- Tanel Poder
-- http://blog.tanelpoder.com
SELECT
    disktype
  , cv_cellname
  , status
  , ROUND(SUM(physicalsize/POWER(10,9))) total_gb
  , ROUND(AVG(physicalsize/POWER(10,9))) avg_gb
  , COUNT(*) num_disks
  , SUM(CASE WHEN predfailStatus  = 'TRUE' THEN 1 END) predfail
  , SUM(CASE WHEN poorPerfStatus  = 'TRUE' THEN 1 END) poorperf
  , SUM(CASE WHEN wtCachingStatus = 'TRUE' THEN 1 END) wtcacheprob
  , SUM(CASE WHEN peerFailStatus  = 'TRUE' THEN 1 END) peerfail
  , SUM(CASE WHEN criticalStatus  = 'TRUE' THEN 1 END) critical
FROM (
    SELECT /*+ NO_MERGE */
        c.cellname cv_cellname
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/name/text()')                          AS VARCHAR
2(20)) diskname
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/diskType/text()')                      AS VARCHAR
2(20)) diskType
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/luns/text()')                          AS VARCHAR
2(20)) luns
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/makeModel/text()')                     AS VARCHAR
2(50)) makeModel
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/physicalFirmware/text()')              AS VARCHAR
2(20)) physicalFirmware
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/physicalInsertTime/text()')            AS VARCHAR
2(30)) physicalInsertTime
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/physicalSerial/text()')                AS VARCHAR
2(20)) physicalSerial
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/physicalSize/text()')                  AS VARCHAR
2(20)) physicalSize
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/slotNumber/text()')                    AS VARCHAR
2(30)) slotNumber
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/status/text()')                        AS VARCHAR
2(20)) status
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/id/text()')                            AS VARCHAR
2(20)) id
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/key_500/text()')                       AS VARCHAR
2(20)) key_500
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/predfailStatus/text()')                AS VARCHAR
2(20)) predfailStatus
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/poorPerfStatus/text()')                AS VARCHAR
2(20)) poorPerfStatus
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/wtCachingStatus/text()')               AS VARCHAR
2(20)) wtCachingStatus
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/peerFailStatus/text()')                AS VARCHAR
2(20)) peerFailStatus
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/criticalStatus/text()')                AS VARCHAR
2(20)) criticalStatus
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/errCmdTimeoutCount/text()')            AS VARCHAR
2(20)) errCmdTimeoutCount
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/errHardReadCount/text()')              AS VARCHAR
2(20)) errHardReadCount
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/errHardWriteCount/text()')             AS VARCHAR
2(20)) errHardWriteCount
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/errMediaCount/text()')                 AS VARCHAR
2(20)) errMediaCount
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/errOtherCount/text()')                 AS VARCHAR
2(20)) errOtherCount
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/errSeekCount/text()')                  AS VARCHAR
2(20)) errSeekCount
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/sectorRemapCount/text()')              AS VARCHAR
2(20)) sectorRemapCount
    FROM
        v$cell_config c
      , TABLE(XMLSEQUENCE(EXTRACT(XMLTYPE(c.confval), '/cli-output/physicaldisk'))) v  -- gv isn't n
eeded, all cells should be visible in all instances
    WHERE
        c.conftype = 'PHYSICALDISKS'
)
GROUP BY
    cv_cellname
  , disktype
  , status
ORDER BY
    disktype
  , cv_cellname

13:30:46 5g.778
Elapsed Hours so far:    2.142
Elapsed Hours so far: 2.142

Elapsed: 00:00:00.00

13:30:46 5g "01188_edb360_323688_5g_778_cell_physical_disk_summary.html"
Elapsed Hours so far:    2.142

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:30:46 5g "Exadata"
13:30:46 Cell Physical Disk Detail

-- cellpdx.sql (v1.0)
-- Tanel Poder
-- http://blog.tanelpoder.com
SELECT * FROM (
    SELECT
        c.cellname cv_cellname
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/name/text()')                          AS VARCHAR
2(20)) diskname
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/diskType/text()')                      AS VARCHAR
2(20)) diskType
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/luns/text()')                          AS VARCHAR
2(20)) luns
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/makeModel/text()')                     AS VARCHAR
2(40)) makeModel
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/physicalFirmware/text()')              AS VARCHAR
2(20)) physicalFirmware
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/physicalInsertTime/text()')            AS VARCHAR
2(30)) physicalInsertTime
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/physicalSerial/text()')                AS VARCHAR
2(20)) physicalSerial
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/physicalSize/text()')                  AS VARCHAR
2(20)) physicalSize
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/sectorRemapCount/text()')              AS VARCHAR
2(20)) sectorRemapCount
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/slotNumber/text()')                    AS VARCHAR
2(30)) slotNumber
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/status/text()')                        AS VARCHAR
2(20)) status
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/id/text()')                            AS VARCHAR
2(20)) id
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/key_500/text()')                       AS VARCHAR
2(20)) key_500
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/predfailStatus/text()')                AS VARCHAR
2(20)) predfailStatus
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/poorPerfStatus/text()')                AS VARCHAR
2(20)) poorPerfStatus
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/wtCachingStatus/text()')               AS VARCHAR
2(20)) wtCachingStatus
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/peerFailStatus/text()')                AS VARCHAR
2(20)) peerFailStatus
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/criticalStatus/text()')                AS VARCHAR
2(20)) criticalStatus
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/errCmdTimeoutCount/text()')            AS VARCHAR
2(20)) errCmdTimeoutCount
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/errHardReadCount/text()')              AS VARCHAR
2(20)) errHardReadCount
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/errHardWriteCount/text()')             AS VARCHAR
2(20)) errHardWriteCount
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/errMediaCount/text()')                 AS VARCHAR
2(20)) errMediaCount
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/errOtherCount/text()')                 AS VARCHAR
2(20)) errOtherCount
      , CAST(EXTRACTVALUE(VALUE(v), '/physicaldisk/errSeekCount/text()')                  AS VARCHAR
2(20)) errSeekCount
    FROM
        v$cell_config c
      , TABLE(XMLSEQUENCE(EXTRACT(XMLTYPE(c.confval), '/cli-output/physicaldisk'))) v  -- gv isn't n
eeded, all cells should be visible in all instances
    WHERE
        c.conftype = 'PHYSICALDISKS'
)
ORDER BY
    cv_cellname
  , diskname

13:30:46 5g.779
Elapsed Hours so far:    2.142
Elapsed Hours so far: 2.142

Elapsed: 00:00:00.00

13:30:46 5g "01189_edb360_323688_5g_779_cell_physical_disk_detail.html"
Elapsed Hours so far:    2.142

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:30:47 5g "Exadata"
13:30:47 Cell Details

-- cellver.sql (v1.0)
-- Tanel Poder
-- http://blog.tanelpoder.com
SELECT
    cellname cv_cell_path
  , CAST(EXTRACT(XMLTYPE(confval), '/cli-output/cell/name/text()') AS VARCHAR2(20))  cv_cellname
  , CAST(EXTRACT(XMLTYPE(confval), '/cli-output/cell/releaseVersion/text()') AS VARCHAR2(20))  cv_ce
llVersion
  , CAST(EXTRACT(XMLTYPE(confval), '/cli-output/cell/flashCacheMode/text()') AS VARCHAR2(20))  cv_fl
ashcachemode
  , CAST(EXTRACT(XMLTYPE(confval), '/cli-output/cell/cpuCount/text()')       AS VARCHAR2(10))  cpu_c
ount
  , CAST(EXTRACT(XMLTYPE(confval), '/cli-output/cell/upTime/text()')         AS VARCHAR2(20))  uptim
e
  , CAST(EXTRACT(XMLTYPE(confval), '/cli-output/cell/kernelVersion/text()')  AS VARCHAR2(30))  kerne
l_version
  , CAST(EXTRACT(XMLTYPE(confval), '/cli-output/cell/makeModel/text()')      AS VARCHAR2(50))  make_
model
FROM
    v$cell_config  -- gv isn't needed, all cells should be visible in all instances
WHERE
    conftype = 'CELL'
ORDER BY
    cv_cellname

13:30:47 5g.780
Elapsed Hours so far:    2.142
Elapsed Hours so far: 2.142

Elapsed: 00:00:00.00

13:30:47 5g "01190_edb360_323688_5g_780_cell_details.html"
Elapsed Hours so far:    2.142

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:30:47 5g "Exadata"
13:30:47 Cell Disk Topology

-- exadisktopo.sql (v1.0)
-- Tanel Poder
-- http://blog.tanelpoder.com
WITH pd AS (
    SELECT /*+ MATERIALIZE */
        c.cellname,
        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/name/text()') AS VARCHAR2(100) ) name,
        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/diskType/text()') AS VARCHAR2(100) ) disktype,
        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/luns/text()') AS VARCHAR2(100) ) luns,
        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/makeModel/text()') AS VARCHAR2(100) ) makemodel,
        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/physicalFirmware/text()') AS VARCHAR2(100) ) physi
calfirmware,
        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/physicalInsertTime/text()') AS VARCHAR2(100) ) phy
sicalinserttime,
        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/physicalSerial/text()') AS VARCHAR2(100) ) physica
lserial,
        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/physicalSize/text()') AS VARCHAR2(100) ) physicals
ize,
        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/slotNumber/text()') AS VARCHAR2(100) ) slotnumber,

        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/status/text()') AS VARCHAR2(100) ) status,
        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/id/text()') AS VARCHAR2(100) ) id,
        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/key_500/text()') AS VARCHAR2(100) ) key_500,
        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/predfailStatus/text()') AS VARCHAR2(100) ) predfai
lstatus,
        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/poorPerfStatus/text()') AS VARCHAR2(100) ) poorper
fstatus,
        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/wtCachingStatus/text()') AS VARCHAR2(100) ) wtcach
ingstatus,
        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/peerFailStatus/text()') AS VARCHAR2(100) ) peerfai
lstatus,
        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/criticalStatus/text()') AS VARCHAR2(100) ) critica
lstatus,
        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/errCmdTimeoutCount/text()') AS VARCHAR2(100) ) err
cmdtimeoutcount,
        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/errHardReadCount/text()') AS VARCHAR2(100) ) errha
rdreadcount,
        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/errHardWriteCount/text()') AS VARCHAR2(100) ) errh
ardwritecount,
        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/errMediaCount/text()') AS VARCHAR2(100) ) errmedia
count,
        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/errOtherCount/text()') AS VARCHAR2(100) ) errother
count,
        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/errSeekCount/text()') AS VARCHAR2(100) ) errseekco
unt,
        CAST(EXTRACTVALUE(VALUE(v),'/physicaldisk/sectorRemapCount/text()') AS VARCHAR2(100) ) secto
rremapcount
    FROM
        v$cell_config c,
        TABLE (XMLSEQUENCE(EXTRACT(XMLTYPE(c.confval),'/cli-output/physicaldisk') ) ) v  -- gv isn't
 needed, all cells should be visible in all instances
    WHERE
        c.conftype = 'PHYSICALDISKS'
),cd AS (
    SELECT /*+ MATERIALIZE */
        c.cellname,
        CAST(EXTRACTVALUE(VALUE(v),'/celldisk/name/text()') AS VARCHAR2(100) ) name,
        CAST(EXTRACTVALUE(VALUE(v),'/celldisk/comment        /text()') AS VARCHAR2(100) ) disk_comme
nt,
        CAST(EXTRACTVALUE(VALUE(v),'/celldisk/creationTime   /text()') AS VARCHAR2(100) ) creationti
me,
        CAST(EXTRACTVALUE(VALUE(v),'/celldisk/deviceName     /text()') AS VARCHAR2(100) ) devicename
,
        CAST(EXTRACTVALUE(VALUE(v),'/celldisk/devicePartition/text()') AS VARCHAR2(100) ) devicepart
ition,
        CAST(EXTRACTVALUE(VALUE(v),'/celldisk/diskType       /text()') AS VARCHAR2(100) ) disktype,
        CAST(EXTRACTVALUE(VALUE(v),'/celldisk/errorCount     /text()') AS VARCHAR2(100) ) errorcount
,
        CAST(EXTRACTVALUE(VALUE(v),'/celldisk/freeSpace      /text()') AS VARCHAR2(100) ) freespace,

        CAST(EXTRACTVALUE(VALUE(v),'/celldisk/id             /text()') AS VARCHAR2(100) ) id,
        CAST(EXTRACTVALUE(VALUE(v),'/celldisk/interleaving   /text()') AS VARCHAR2(100) ) interleavi
ng,
        CAST(EXTRACTVALUE(VALUE(v),'/celldisk/lun            /text()') AS VARCHAR2(100) ) lun,
        CAST(EXTRACTVALUE(VALUE(v),'/celldisk/physicalDisk   /text()') AS VARCHAR2(100) ) physicaldi
sk,
        CAST(EXTRACTVALUE(VALUE(v),'/celldisk/size           /text()') AS VARCHAR2(100) ) disk_size,

        CAST(EXTRACTVALUE(VALUE(v),'/celldisk/status         /text()') AS VARCHAR2(100) ) status
    FROM
        v$cell_config c,
        TABLE (XMLSEQUENCE(EXTRACT(XMLTYPE(c.confval),'/cli-output/celldisk') ) ) v  -- gv isn't nee
ded, all cells should be visible in all instances
    WHERE
        c.conftype = 'CELLDISKS'
),gd AS (
    SELECT /*+ MATERIALIZE */
        c.cellname,
        CAST(EXTRACTVALUE(VALUE(v),'/griddisk/name/text()') AS VARCHAR2(100) ) name,
        CAST(EXTRACTVALUE(VALUE(v),'/griddisk/asmDiskgroupName/text()') AS VARCHAR2(100) ) asmdiskgr
oupname,
        CAST(EXTRACTVALUE(VALUE(v),'/griddisk/asmDiskName     /text()') AS VARCHAR2(100) ) asmdiskna
me,
        CAST(EXTRACTVALUE(VALUE(v),'/griddisk/asmFailGroupName/text()') AS VARCHAR2(100) ) asmfailgr
oupname,
        CAST(EXTRACTVALUE(VALUE(v),'/griddisk/availableTo     /text()') AS VARCHAR2(100) ) available
to,
        CAST(EXTRACTVALUE(VALUE(v),'/griddisk/cachingPolicy   /text()') AS VARCHAR2(100) ) cachingpo
licy,
        CAST(EXTRACTVALUE(VALUE(v),'/griddisk/cellDisk        /text()') AS VARCHAR2(100) ) celldisk,

        CAST(EXTRACTVALUE(VALUE(v),'/griddisk/comment         /text()') AS VARCHAR2(100) ) disk_comm
ent,
        CAST(EXTRACTVALUE(VALUE(v),'/griddisk/creationTime    /text()') AS VARCHAR2(100) ) creationt
ime,
        CAST(EXTRACTVALUE(VALUE(v),'/griddisk/diskType        /text()') AS VARCHAR2(100) ) disktype,

        CAST(EXTRACTVALUE(VALUE(v),'/griddisk/errorCount      /text()') AS VARCHAR2(100) ) errorcoun
t,
        CAST(EXTRACTVALUE(VALUE(v),'/griddisk/id              /text()') AS VARCHAR2(100) ) id,
        CAST(EXTRACTVALUE(VALUE(v),'/griddisk/offset          /text()') AS VARCHAR2(100) ) offset,
        CAST(EXTRACTVALUE(VALUE(v),'/griddisk/size            /text()') AS VARCHAR2(100) ) disk_size
,
        CAST(EXTRACTVALUE(VALUE(v),'/griddisk/status          /text()') AS VARCHAR2(100) ) status,
        CAST(EXTRACTVALUE(VALUE(v),'/griddisk/cachedBy        /text()') AS VARCHAR2(100) ) cachedby
    FROM
        v$cell_config c,
        TABLE (XMLSEQUENCE(EXTRACT(XMLTYPE(c.confval),'/cli-output/griddisk') ) ) v  -- gv isn't nee
ded, all cells should be visible in all instances
    WHERE
        c.conftype = 'GRIDDISKS'
),lun AS (
    SELECT /*+ MATERIALIZE */
        c.cellname,
        CAST(EXTRACTVALUE(VALUE(v),'/lun/cellDisk         /text()') AS VARCHAR2(100) ) celldisk,
        CAST(EXTRACTVALUE(VALUE(v),'/lun/deviceName       /text()') AS VARCHAR2(100) ) devicename,
        CAST(EXTRACTVALUE(VALUE(v),'/lun/diskType         /text()') AS VARCHAR2(100) ) disktype,
        CAST(EXTRACTVALUE(VALUE(v),'/lun/id               /text()') AS VARCHAR2(100) ) id,
        CAST(EXTRACTVALUE(VALUE(v),'/lun/isSystemLun      /text()') AS VARCHAR2(100) ) issystemlun,
        CAST(EXTRACTVALUE(VALUE(v),'/lun/lunAutoCreate    /text()') AS VARCHAR2(100) ) lunautocreate
,
        CAST(EXTRACTVALUE(VALUE(v),'/lun/lunSize          /text()') AS VARCHAR2(100) ) lunsize,
        CAST(EXTRACTVALUE(VALUE(v),'/lun/physicalDrives   /text()') AS VARCHAR2(100) ) physicaldrive
s,
        CAST(EXTRACTVALUE(VALUE(v),'/lun/raidLevel        /text()') AS VARCHAR2(100) ) raidlevel,
        CAST(EXTRACTVALUE(VALUE(v),'/lun/lunWriteCacheMode/text()') AS VARCHAR2(100) ) lunwritecache
mode,
        CAST(EXTRACTVALUE(VALUE(v),'/lun/status           /text()') AS VARCHAR2(100) ) status
    FROM
        v$cell_config c,
        TABLE (XMLSEQUENCE(EXTRACT(XMLTYPE(c.confval),'/cli-output/lun') ) ) v  -- gv isn't needed,
all cells should be visible in all instances
    WHERE
        c.conftype = 'LUNS'
),ad AS (
    SELECT /*+ MATERIALIZE */
        *
    FROM
        v$asm_disk
),adg AS (
    SELECT /*+ MATERIALIZE */
        dg.*,
        length(dg.name) namesize
    FROM
        v$asm_diskgroup dg
) SELECT
    adg.name asm_diskgroup,
    adg.state,
    ad.label asm_disk,
    gd.asmdiskname griddisk_name,
    cd.name celldisk_name,
    pd.cellname,
    substr(cd.devicepartition,1,20) cd_devicepart,
    pd.name physdisk_name,
    substr(pd.status,1,20) physdisk_status,
    lun.lunwritecachemode,
    gd.cachedby
-- , SUBSTR(cd.devicename,1,20)      cd_devicename
-- , SUBSTR(lun.devicename,1,20)     lun_devicename
--    disktype*/
  FROM
    adg
    LEFT OUTER JOIN ad ON ad.group_number = adg.group_number
                          AND substr(ad.label,1,adg.namesize) = adg.name
    JOIN gd ON upper(gd.asmdiskname) = upper(ad.label)
    RIGHT OUTER JOIN cd ON cd.name = gd.celldisk
    RIGHT OUTER JOIN pd ON cd.physicaldisk = pd.physicalserial
    RIGHT OUTER JOIN lun ON cd.cellname = lun.cellname
                            AND cd.devicename = lun.devicename
ORDER BY
    asm_diskgroup,
    cellname,
    celldisk_name,
    asm_disk,
    griddisk_name,
    cellname

13:30:47 5g.781
Elapsed Hours so far:    2.142
Elapsed Hours so far: 2.142

Elapsed: 00:00:00.00

13:30:47 5g "01191_edb360_323688_5g_781_cell_disk_topology.html"
Elapsed Hours so far:    2.143

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:30:50 6a "Active Session History (ASH) - Top Timed Classes"
13:30:50 ASH Top Timed Classes for Cluster for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6a.782 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 1 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6a.782 */ SUM(samples) samples FROM hist
)
SELECT h.wait_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:30:50 6a.782
Elapsed Hours so far:    2.143
Elapsed Hours so far: 2.143

Elapsed: 00:00:00.00

13:30:50 6a "01192_edb360_323688_6a_782_ash_top_timed_classes_for_cluster_for_1_day.html"
13:30:56 6a "01193_edb360_323688_6a_782_ash_top_timed_classes_for_cluster_for_1_day_bar_chart.html"
Elapsed Hours so far:    2.145

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:30:57 6a "Active Session History (ASH) - Top Timed Classes"
13:30:57 ASH Top Timed Classes for Instance 1 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6a.782 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6a.782 */ SUM(samples) samples FROM hist
)
SELECT h.wait_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:30:57 6a.783
Elapsed Hours so far:    2.145
Elapsed Hours so far: 2.145

Elapsed: 00:00:00.00

13:30:57 6a "01194_edb360_323688_6a_783_ash_top_timed_classes_for_instance_1_for_1_day.html"
13:31:03 6a "01195_edb360_323688_6a_783_ash_top_timed_classes_for_instance_1_for_1_day_bar_chart.html"
Elapsed Hours so far:    2.147

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:31:05 6a "Active Session History (ASH) - Top Timed Classes"
13:31:05 ASH Top Timed Classes for Instance 2 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6a.782 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6a.782 */ SUM(samples) samples FROM hist
)
SELECT h.wait_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:31:05 6a.784
Elapsed Hours so far:    2.147
Elapsed Hours so far: 2.147

Elapsed: 00:00:00.00

13:31:05 6a "01196_edb360_323688_6a_784_ash_top_timed_classes_for_instance_2_for_1_day.html"
13:31:06 6a "01197_edb360_323688_6a_784_ash_top_timed_classes_for_instance_2_for_1_day_bar_chart.html"
Elapsed Hours so far:    2.148

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:31:08 6a "Active Session History (ASH) - Top Timed Classes"
13:31:08 ASH Top Timed Classes for Cluster for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6a.782 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(s
ample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6a.782 */ SUM(samples) samples FROM hist
)
SELECT h.wait_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:31:08 6a.785
Elapsed Hours so far:    2.148
Elapsed Hours so far: 2.148

Elapsed: 00:00:00.01

13:31:08 6a "01198_edb360_323688_6a_785_ash_top_timed_classes_for_cluster_for_5_working_days.html"
13:31:10 6a "01199_edb360_323688_6a_785_ash_top_timed_classes_for_cluster_for_5_working_days_bar_chart.html"
Elapsed Hours so far:    2.149

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:31:11 6a "Active Session History (ASH) - Top Timed Classes"
13:31:11 ASH Top Timed Classes for Instance 1 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6a.782 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6a.782 */ SUM(samples) samples FROM hist
)
SELECT h.wait_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:31:11 6a.786
Elapsed Hours so far:    2.149
Elapsed Hours so far: 2.149

Elapsed: 00:00:00.00

13:31:12 6a "01200_edb360_323688_6a_786_ash_top_timed_classes_for_instance_1_for_5_working_days.html"
13:31:13 6a "01201_edb360_323688_6a_786_ash_top_timed_classes_for_instance_1_for_5_working_days_bar_chart.html"
Elapsed Hours so far:    2.150

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:31:15 6a "Active Session History (ASH) - Top Timed Classes"
13:31:15 ASH Top Timed Classes for Instance 2 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6a.782 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6a.782 */ SUM(samples) samples FROM hist
)
SELECT h.wait_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:31:15 6a.787
Elapsed Hours so far:    2.150
Elapsed Hours so far: 2.15

Elapsed: 00:00:00.00

13:31:15 6a "01202_edb360_323688_6a_787_ash_top_timed_classes_for_instance_2_for_5_working_days.html"
13:31:17 6a "01203_edb360_323688_6a_787_ash_top_timed_classes_for_instance_2_for_5_working_days_bar_chart.html"
Elapsed Hours so far:    2.151

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:31:19 6a "Active Session History (ASH) - Top Timed Classes"
13:31:19 ASH Top Timed Classes for Cluster for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6a.782 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6a.782 */ SUM(samples) samples FROM hist
)
SELECT h.wait_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:31:19 6a.788
Elapsed Hours so far:    2.151
Elapsed Hours so far: 2.151

Elapsed: 00:00:00.00

13:31:19 6a "01204_edb360_323688_6a_788_ash_top_timed_classes_for_cluster_for_7_days.html"
13:31:21 6a "01205_edb360_323688_6a_788_ash_top_timed_classes_for_cluster_for_7_days_bar_chart.html"
Elapsed Hours so far:    2.152

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:31:25 6a "Active Session History (ASH) - Top Timed Classes"
13:31:25 ASH Top Timed Classes for Instance 1 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6a.782 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6a.782 */ SUM(samples) samples FROM hist
)
SELECT h.wait_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:31:25 6a.789
Elapsed Hours so far:    2.152
Elapsed Hours so far: 2.152

Elapsed: 00:00:00.00

13:31:25 6a "01206_edb360_323688_6a_789_ash_top_timed_classes_for_instance_1_for_7_days.html"
13:31:27 6a "01207_edb360_323688_6a_789_ash_top_timed_classes_for_instance_1_for_7_days_bar_chart.html"
Elapsed Hours so far:    2.154

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:31:31 6a "Active Session History (ASH) - Top Timed Classes"
13:31:31 ASH Top Timed Classes for Instance 2 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6a.782 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6a.782 */ SUM(samples) samples FROM hist
)
SELECT h.wait_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:31:31 6a.790
Elapsed Hours so far:    2.154
Elapsed Hours so far: 2.154

Elapsed: 00:00:00.00

13:31:31 6a "01208_edb360_323688_6a_790_ash_top_timed_classes_for_instance_2_for_7_days.html"
13:31:33 6a "01209_edb360_323688_6a_790_ash_top_timed_classes_for_instance_2_for_7_days_bar_chart.html"
Elapsed Hours so far:    2.155

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:31:34 6a "Active Session History (ASH) - Top Timed Classes"
13:31:34 ASH Top Timed Classes for Cluster for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6a.782 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730'
 AND '1930'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6a.782 */ SUM(samples) samples FROM hist
)
SELECT h.wait_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:31:34 6a.791
Elapsed Hours so far:    2.155
Elapsed Hours so far: 2.155

Elapsed: 00:00:00.01

13:31:34 6a "01210_edb360_323688_6a_791_ash_top_timed_classes_for_cluster_for_23_working_days.html"
13:31:38 6a "01211_edb360_323688_6a_791_ash_top_timed_classes_for_cluster_for_23_working_days_bar_chart.html"
Elapsed Hours so far:    2.157

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:31:40 6a "Active Session History (ASH) - Top Timed Classes"
13:31:40 ASH Top Timed Classes for Instance 1 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6a.782 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6a.782 */ SUM(samples) samples FROM hist
)
SELECT h.wait_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:31:40 6a.792
Elapsed Hours so far:    2.157
Elapsed Hours so far: 2.157

Elapsed: 00:00:00.00

13:31:40 6a "01212_edb360_323688_6a_792_ash_top_timed_classes_for_instance_1_for_23_working_days.html"
13:31:43 6a "01213_edb360_323688_6a_792_ash_top_timed_classes_for_instance_1_for_23_working_days_bar_chart.html"
Elapsed Hours so far:    2.158

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:31:46 6a "Active Session History (ASH) - Top Timed Classes"
13:31:46 ASH Top Timed Classes for Instance 2 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6a.782 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6a.782 */ SUM(samples) samples FROM hist
)
SELECT h.wait_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:31:46 6a.793
Elapsed Hours so far:    2.158
Elapsed Hours so far: 2.158

Elapsed: 00:00:00.00

13:31:46 6a "01214_edb360_323688_6a_793_ash_top_timed_classes_for_instance_2_for_23_working_days.html"
13:31:48 6a "01215_edb360_323688_6a_793_ash_top_timed_classes_for_instance_2_for_23_working_days_bar_chart.html"
Elapsed Hours so far:    2.160

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:31:50 6a "Active Session History (ASH) - Top Timed Classes"
13:31:50 ASH Top Timed Classes for Cluster for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6a.782 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE 1 = 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6a.782 */ SUM(samples) samples FROM hist
)
SELECT h.wait_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:31:50 6a.794
Elapsed Hours so far:    2.160
Elapsed Hours so far: 2.16

Elapsed: 00:00:00.00

13:31:51 6a "01216_edb360_323688_6a_794_ash_top_timed_classes_for_cluster_for_31_days_of_history.html"
13:31:58 6a "01217_edb360_323688_6a_794_ash_top_timed_classes_for_cluster_for_31_days_of_history_bar_chart.html"
Elapsed Hours so far:    2.162

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:31:59 6a "Active Session History (ASH) - Top Timed Classes"
13:31:59 ASH Top Timed Classes for Instance 1 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6a.782 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6a.782 */ SUM(samples) samples FROM hist
)
SELECT h.wait_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:31:59 6a.795
Elapsed Hours so far:    2.162
Elapsed Hours so far: 2.162

Elapsed: 00:00:00.00

13:31:59 6a "01218_edb360_323688_6a_795_ash_top_timed_classes_for_instance_1_for_31_days_of_history.html"
13:32:06 6a "01219_edb360_323688_6a_795_ash_top_timed_classes_for_instance_1_for_31_days_of_history_bar_chart.html"
Elapsed Hours so far:    2.164

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:32:07 6a "Active Session History (ASH) - Top Timed Classes"
13:32:07 ASH Top Timed Classes for Instance 2 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6a.782 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6a.782 */ SUM(samples) samples FROM hist
)
SELECT h.wait_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:32:07 6a.796
Elapsed Hours so far:    2.164
Elapsed Hours so far: 2.164

Elapsed: 00:00:00.00

13:32:08 6a "01220_edb360_323688_6a_796_ash_top_timed_classes_for_instance_2_for_31_days_of_history.html"
13:32:09 6a "01221_edb360_323688_6a_796_ash_top_timed_classes_for_instance_2_for_31_days_of_history_bar_chart.html"
Elapsed Hours so far:    2.165

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:32:12 6b "Active Session History (ASH) - Top Timed Events"
13:32:12 ASH Top Timed Events for Cluster for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6b.797 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END tim
ed_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 1 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6b.797 */ SUM(samples) samples FROM hist
)
SELECT h.timed_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:32:12 6b.797
Elapsed Hours so far:    2.165
Elapsed Hours so far: 2.165

Elapsed: 00:00:00.00

13:32:12 6b "01222_edb360_323688_6b_797_ash_top_timed_events_for_cluster_for_1_day.html"
13:32:18 6b "01223_edb360_323688_6b_797_ash_top_timed_events_for_cluster_for_1_day_bar_chart.html"
Elapsed Hours so far:    2.168

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:32:19 6b "Active Session History (ASH) - Top Timed Events"
13:32:19 ASH Top Timed Events for Instance 1 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6b.797 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END tim
ed_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6b.797 */ SUM(samples) samples FROM hist
)
SELECT h.timed_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:32:19 6b.798
Elapsed Hours so far:    2.168
Elapsed Hours so far: 2.168

Elapsed: 00:00:00.00

13:32:19 6b "01224_edb360_323688_6b_798_ash_top_timed_events_for_instance_1_for_1_day.html"
13:32:26 6b "01225_edb360_323688_6b_798_ash_top_timed_events_for_instance_1_for_1_day_bar_chart.html"
Elapsed Hours so far:    2.170

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:32:27 6b "Active Session History (ASH) - Top Timed Events"
13:32:27 ASH Top Timed Events for Instance 2 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6b.797 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END tim
ed_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6b.797 */ SUM(samples) samples FROM hist
)
SELECT h.timed_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:32:27 6b.799
Elapsed Hours so far:    2.170
Elapsed Hours so far: 2.17

Elapsed: 00:00:00.00

13:32:27 6b "01226_edb360_323688_6b_799_ash_top_timed_events_for_instance_2_for_1_day.html"
13:32:29 6b "01227_edb360_323688_6b_799_ash_top_timed_events_for_instance_2_for_1_day_bar_chart.html"
Elapsed Hours so far:    2.171

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:32:31 6b "Active Session History (ASH) - Top Timed Events"
13:32:31 ASH Top Timed Events for Cluster for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6b.797 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END tim
ed_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(s
ample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6b.797 */ SUM(samples) samples FROM hist
)
SELECT h.timed_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:32:31 6b.800
Elapsed Hours so far:    2.171
Elapsed Hours so far: 2.171

Elapsed: 00:00:00.00

13:32:31 6b "01228_edb360_323688_6b_800_ash_top_timed_events_for_cluster_for_5_working_days.html"
13:32:33 6b "01229_edb360_323688_6b_800_ash_top_timed_events_for_cluster_for_5_working_days_bar_chart.html"
Elapsed Hours so far:    2.172

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:32:35 6b "Active Session History (ASH) - Top Timed Events"
13:32:35 ASH Top Timed Events for Instance 1 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6b.797 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END tim
ed_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6b.797 */ SUM(samples) samples FROM hist
)
SELECT h.timed_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:32:35 6b.801
Elapsed Hours so far:    2.172
Elapsed Hours so far: 2.172

Elapsed: 00:00:00.00

13:32:35 6b "01230_edb360_323688_6b_801_ash_top_timed_events_for_instance_1_for_5_working_days.html"
13:32:37 6b "01231_edb360_323688_6b_801_ash_top_timed_events_for_instance_1_for_5_working_days_bar_chart.html"
Elapsed Hours so far:    2.173

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:32:39 6b "Active Session History (ASH) - Top Timed Events"
13:32:39 ASH Top Timed Events for Instance 2 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6b.797 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END tim
ed_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6b.797 */ SUM(samples) samples FROM hist
)
SELECT h.timed_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:32:39 6b.802
Elapsed Hours so far:    2.173
Elapsed Hours so far: 2.173

Elapsed: 00:00:00.00

13:32:39 6b "01232_edb360_323688_6b_802_ash_top_timed_events_for_instance_2_for_5_working_days.html"
13:32:41 6b "01233_edb360_323688_6b_802_ash_top_timed_events_for_instance_2_for_5_working_days_bar_chart.html"
Elapsed Hours so far:    2.174

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:32:42 6b "Active Session History (ASH) - Top Timed Events"
13:32:42 ASH Top Timed Events for Cluster for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6b.797 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END tim
ed_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6b.797 */ SUM(samples) samples FROM hist
)
SELECT h.timed_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:32:42 6b.803
Elapsed Hours so far:    2.174
Elapsed Hours so far: 2.174

Elapsed: 00:00:00.00

13:32:42 6b "01234_edb360_323688_6b_803_ash_top_timed_events_for_cluster_for_7_days.html"
13:32:48 6b "01235_edb360_323688_6b_803_ash_top_timed_events_for_cluster_for_7_days_bar_chart.html"
Elapsed Hours so far:    2.176

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:32:50 6b "Active Session History (ASH) - Top Timed Events"
13:32:50 ASH Top Timed Events for Instance 1 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6b.797 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END tim
ed_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6b.797 */ SUM(samples) samples FROM hist
)
SELECT h.timed_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:32:50 6b.804
Elapsed Hours so far:    2.176
Elapsed Hours so far: 2.176

Elapsed: 00:00:00.00

13:32:50 6b "01236_edb360_323688_6b_804_ash_top_timed_events_for_instance_1_for_7_days.html"
13:32:56 6b "01237_edb360_323688_6b_804_ash_top_timed_events_for_instance_1_for_7_days_bar_chart.html"
Elapsed Hours so far:    2.178

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:32:57 6b "Active Session History (ASH) - Top Timed Events"
13:32:57 ASH Top Timed Events for Instance 2 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6b.797 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END tim
ed_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6b.797 */ SUM(samples) samples FROM hist
)
SELECT h.timed_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:32:57 6b.805
Elapsed Hours so far:    2.178
Elapsed Hours so far: 2.178

Elapsed: 00:00:00.00

13:32:57 6b "01238_edb360_323688_6b_805_ash_top_timed_events_for_instance_2_for_7_days.html"
13:32:59 6b "01239_edb360_323688_6b_805_ash_top_timed_events_for_instance_2_for_7_days_bar_chart.html"
Elapsed Hours so far:    2.179

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:33:01 6b "Active Session History (ASH) - Top Timed Events"
13:33:01 ASH Top Timed Events for Cluster for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6b.797 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END tim
ed_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730'
 AND '1930'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6b.797 */ SUM(samples) samples FROM hist
)
SELECT h.timed_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:33:01 6b.806
Elapsed Hours so far:    2.179
Elapsed Hours so far: 2.179

Elapsed: 00:00:00.00

13:33:01 6b "01240_edb360_323688_6b_806_ash_top_timed_events_for_cluster_for_23_working_days.html"
13:33:04 6b "01241_edb360_323688_6b_806_ash_top_timed_events_for_cluster_for_23_working_days_bar_chart.html"
Elapsed Hours so far:    2.181

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:33:07 6b "Active Session History (ASH) - Top Timed Events"
13:33:07 ASH Top Timed Events for Instance 1 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6b.797 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END tim
ed_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6b.797 */ SUM(samples) samples FROM hist
)
SELECT h.timed_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:33:07 6b.807
Elapsed Hours so far:    2.181
Elapsed Hours so far: 2.181

Elapsed: 00:00:00.00

13:33:07 6b "01242_edb360_323688_6b_807_ash_top_timed_events_for_instance_1_for_23_working_days.html"
13:33:10 6b "01243_edb360_323688_6b_807_ash_top_timed_events_for_instance_1_for_23_working_days_bar_chart.html"
Elapsed Hours so far:    2.182

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:33:13 6b "Active Session History (ASH) - Top Timed Events"
13:33:13 ASH Top Timed Events for Instance 2 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6b.797 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END tim
ed_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6b.797 */ SUM(samples) samples FROM hist
)
SELECT h.timed_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:33:13 6b.808
Elapsed Hours so far:    2.182
Elapsed Hours so far: 2.182

Elapsed: 00:00:00.00

13:33:13 6b "01244_edb360_323688_6b_808_ash_top_timed_events_for_instance_2_for_23_working_days.html"
13:33:15 6b "01245_edb360_323688_6b_808_ash_top_timed_events_for_instance_2_for_23_working_days_bar_chart.html"
Elapsed Hours so far:    2.184

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:33:17 6b "Active Session History (ASH) - Top Timed Events"
13:33:17 ASH Top Timed Events for Cluster for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6b.797 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END tim
ed_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE 1 = 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6b.797 */ SUM(samples) samples FROM hist
)
SELECT h.timed_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:33:17 6b.809
Elapsed Hours so far:    2.184
Elapsed Hours so far: 2.184

Elapsed: 00:00:00.00

13:33:18 6b "01246_edb360_323688_6b_809_ash_top_timed_events_for_cluster_for_31_days_of_history.html"
13:33:24 6b "01247_edb360_323688_6b_809_ash_top_timed_events_for_cluster_for_31_days_of_history_bar_chart.html"
Elapsed Hours so far:    2.186

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:33:26 6b "Active Session History (ASH) - Top Timed Events"
13:33:26 ASH Top Timed Events for Instance 1 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6b.797 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END tim
ed_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6b.797 */ SUM(samples) samples FROM hist
)
SELECT h.timed_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:33:26 6b.810
Elapsed Hours so far:    2.186
Elapsed Hours so far: 2.186

Elapsed: 00:00:00.00

13:33:26 6b "01248_edb360_323688_6b_810_ash_top_timed_events_for_instance_1_for_31_days_of_history.html"
13:33:33 6b "01249_edb360_323688_6b_810_ash_top_timed_events_for_instance_1_for_31_days_of_history_bar_chart.html"
Elapsed Hours so far:    2.188

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:33:34 6b "Active Session History (ASH) - Top Timed Events"
13:33:34 ASH Top Timed Events for Instance 2 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6b.797 */
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END wait_class,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END tim
ed_class,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
   AND (session_state = 'ON CPU' OR wait_class <> 'Idle')
 GROUP BY
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class END,
       CASE session_state WHEN 'ON CPU' THEN session_state ELSE wait_class||' "'||event||'"' END
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6b.797 */ SUM(samples) samples FROM hist
)
SELECT h.timed_class||' ('||ROUND(100 * h.samples / t.samples, 1)||'%)' bucket,
       ROUND(100 * h.samples / t.samples, 1) percent,
        CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' T
HEN '0252D7' WHEN 'System I/O' THEN '1E96DD'
        WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05
' WHEN 'Configuration' THEN '594611'
        WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'

        WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END  color,
       h.samples||' 10s-samples ('||ROUND(100 * h.samples / t.samples, 1)||'% of DB Time)' tooltip
  FROM hist h,
       total t
 --WHERE ROUND(100 * h.samples / t.samples, 1) >= 3 /* only if >= 3% */
 ORDER BY 2 DESC NULLS LAST

13:33:34 6b.811
Elapsed Hours so far:    2.188
Elapsed Hours so far: 2.188

Elapsed: 00:00:00.00

13:33:34 6b "01250_edb360_323688_6b_811_ash_top_timed_events_for_instance_2_for_31_days_of_history.html"
13:33:36 6b "01251_edb360_323688_6b_811_ash_top_timed_events_for_instance_2_for_31_days_of_history_bar_chart.html"
Elapsed Hours so far:    2.189

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:33:38 6c "Active Session History (ASH) - Top SQL"
13:33:38 ASH Top SQL for Cluster for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6c.812 */
       con_id,
       sql_id,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 1 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6c.812 */ SUM(samples) samples FROM hist
)
SELECT DISTINCT
       h.sql_id,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:33:38 6c.812
Elapsed Hours so far:    2.189
Elapsed Hours so far: 2.189

Elapsed: 00:00:00.00

13:33:38 6c "01252_edb360_323688_6c_812_ash_top_sql_for_cluster_for_1_day.html"
13:33:44 6c "01253_edb360_323688_6c_812_ash_top_sql_for_cluster_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.191

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:33:45 6c "Active Session History (ASH) - Top SQL"
13:33:45 ASH Top SQL for Instance 1 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6c.812 */
       con_id,
       sql_id,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6c.812 */ SUM(samples) samples FROM hist
)
SELECT DISTINCT
       h.sql_id,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:33:45 6c.813
Elapsed Hours so far:    2.191
Elapsed Hours so far: 2.191

Elapsed: 00:00:00.00

13:33:45 6c "01254_edb360_323688_6c_813_ash_top_sql_for_instance_1_for_1_day.html"
13:33:52 6c "01255_edb360_323688_6c_813_ash_top_sql_for_instance_1_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.194

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:33:53 6c "Active Session History (ASH) - Top SQL"
13:33:53 ASH Top SQL for Instance 2 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6c.812 */
       con_id,
       sql_id,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6c.812 */ SUM(samples) samples FROM hist
)
SELECT DISTINCT
       h.sql_id,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:33:53 6c.814
Elapsed Hours so far:    2.194
Elapsed Hours so far: 2.194

Elapsed: 00:00:00.00

13:33:53 6c "01256_edb360_323688_6c_814_ash_top_sql_for_instance_2_for_1_day.html"
13:33:55 6c "01257_edb360_323688_6c_814_ash_top_sql_for_instance_2_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.194

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:33:56 6c "Active Session History (ASH) - Top SQL"
13:33:56 ASH Top SQL for Cluster for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6c.812 */
       con_id,
       sql_id,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(s
ample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6c.812 */ SUM(samples) samples FROM hist
)
SELECT DISTINCT
       h.sql_id,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:33:56 6c.815
Elapsed Hours so far:    2.194
Elapsed Hours so far: 2.194

Elapsed: 00:00:00.01

13:33:56 6c "01258_edb360_323688_6c_815_ash_top_sql_for_cluster_for_5_working_days.html"
13:33:58 6c "01259_edb360_323688_6c_815_ash_top_sql_for_cluster_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.195

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:33:59 6c "Active Session History (ASH) - Top SQL"
13:33:59 ASH Top SQL for Instance 1 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6c.812 */
       con_id,
       sql_id,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6c.812 */ SUM(samples) samples FROM hist
)
SELECT DISTINCT
       h.sql_id,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:33:59 6c.816
Elapsed Hours so far:    2.195
Elapsed Hours so far: 2.195

Elapsed: 00:00:00.00

13:34:00 6c "01260_edb360_323688_6c_816_ash_top_sql_for_instance_1_for_5_working_days.html"
13:34:01 6c "01261_edb360_323688_6c_816_ash_top_sql_for_instance_1_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.196

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:34:03 6c "Active Session History (ASH) - Top SQL"
13:34:03 ASH Top SQL for Instance 2 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6c.812 */
       con_id,
       sql_id,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6c.812 */ SUM(samples) samples FROM hist
)
SELECT DISTINCT
       h.sql_id,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:34:03 6c.817
Elapsed Hours so far:    2.196
Elapsed Hours so far: 2.196

Elapsed: 00:00:00.00

13:34:03 6c "01262_edb360_323688_6c_817_ash_top_sql_for_instance_2_for_5_working_days.html"
13:34:05 6c "01263_edb360_323688_6c_817_ash_top_sql_for_instance_2_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.197

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:34:06 6c "Active Session History (ASH) - Top SQL"
13:34:06 ASH Top SQL for Cluster for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6c.812 */
       con_id,
       sql_id,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6c.812 */ SUM(samples) samples FROM hist
)
SELECT DISTINCT
       h.sql_id,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:34:06 6c.818
Elapsed Hours so far:    2.197
Elapsed Hours so far: 2.197

Elapsed: 00:00:00.01

13:34:06 6c "01264_edb360_323688_6c_818_ash_top_sql_for_cluster_for_7_days.html"
13:34:08 6c "01265_edb360_323688_6c_818_ash_top_sql_for_cluster_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.199

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:34:12 6c "Active Session History (ASH) - Top SQL"
13:34:12 ASH Top SQL for Instance 1 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6c.812 */
       con_id,
       sql_id,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6c.812 */ SUM(samples) samples FROM hist
)
SELECT DISTINCT
       h.sql_id,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:34:12 6c.819
Elapsed Hours so far:    2.199
Elapsed Hours so far: 2.199

Elapsed: 00:00:00.00

13:34:12 6c "01266_edb360_323688_6c_819_ash_top_sql_for_instance_1_for_7_days.html"
13:34:14 6c "01267_edb360_323688_6c_819_ash_top_sql_for_instance_1_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.200

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:34:15 6c "Active Session History (ASH) - Top SQL"
13:34:15 ASH Top SQL for Instance 2 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6c.812 */
       con_id,
       sql_id,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6c.812 */ SUM(samples) samples FROM hist
)
SELECT DISTINCT
       h.sql_id,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:34:15 6c.820
Elapsed Hours so far:    2.200
Elapsed Hours so far: 2.2

Elapsed: 00:00:00.00

13:34:15 6c "01268_edb360_323688_6c_820_ash_top_sql_for_instance_2_for_7_days.html"
13:34:21 6c "01269_edb360_323688_6c_820_ash_top_sql_for_instance_2_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.202

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:34:22 6c "Active Session History (ASH) - Top SQL"
13:34:22 ASH Top SQL for Cluster for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6c.812 */
       con_id,
       sql_id,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730'
 AND '1930'
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6c.812 */ SUM(samples) samples FROM hist
)
SELECT DISTINCT
       h.sql_id,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:34:22 6c.821
Elapsed Hours so far:    2.202
Elapsed Hours so far: 2.202

Elapsed: 00:00:00.00

13:34:22 6c "01270_edb360_323688_6c_821_ash_top_sql_for_cluster_for_23_working_days.html"
13:34:25 6c "01271_edb360_323688_6c_821_ash_top_sql_for_cluster_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.203

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:34:27 6c "Active Session History (ASH) - Top SQL"
13:34:27 ASH Top SQL for Instance 1 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6c.812 */
       con_id,
       sql_id,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6c.812 */ SUM(samples) samples FROM hist
)
SELECT DISTINCT
       h.sql_id,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:34:27 6c.822
Elapsed Hours so far:    2.203
Elapsed Hours so far: 2.203

Elapsed: 00:00:00.00

13:34:28 6c "01272_edb360_323688_6c_822_ash_top_sql_for_instance_1_for_23_working_days.html"
13:34:30 6c "01273_edb360_323688_6c_822_ash_top_sql_for_instance_1_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.204

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:34:32 6c "Active Session History (ASH) - Top SQL"
13:34:32 ASH Top SQL for Instance 2 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6c.812 */
       con_id,
       sql_id,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6c.812 */ SUM(samples) samples FROM hist
)
SELECT DISTINCT
       h.sql_id,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:34:32 6c.823
Elapsed Hours so far:    2.204
Elapsed Hours so far: 2.204

Elapsed: 00:00:00.00

13:34:32 6c "01274_edb360_323688_6c_823_ash_top_sql_for_instance_2_for_23_working_days.html"
13:34:34 6c "01275_edb360_323688_6c_823_ash_top_sql_for_instance_2_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.206

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:34:36 6c "Active Session History (ASH) - Top SQL"
13:34:36 ASH Top SQL for Cluster for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6c.812 */
       con_id,
       sql_id,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE 1 = 1
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6c.812 */ SUM(samples) samples FROM hist
)
SELECT DISTINCT
       h.sql_id,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:34:36 6c.824
Elapsed Hours so far:    2.206
Elapsed Hours so far: 2.206

Elapsed: 00:00:00.00

13:34:36 6c "01276_edb360_323688_6c_824_ash_top_sql_for_cluster_for_31_days_of_history.html"
13:34:43 6c "01277_edb360_323688_6c_824_ash_top_sql_for_cluster_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.208

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:34:44 6c "Active Session History (ASH) - Top SQL"
13:34:44 ASH Top SQL for Instance 1 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6c.812 */
       con_id,
       sql_id,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6c.812 */ SUM(samples) samples FROM hist
)
SELECT DISTINCT
       h.sql_id,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:34:44 6c.825
Elapsed Hours so far:    2.208
Elapsed Hours so far: 2.208

Elapsed: 00:00:00.00

13:34:44 6c "01278_edb360_323688_6c_825_ash_top_sql_for_instance_1_for_31_days_of_history.html"
13:34:50 6c "01279_edb360_323688_6c_825_ash_top_sql_for_instance_1_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.210

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:34:51 6c "Active Session History (ASH) - Top SQL"
13:34:51 ASH Top SQL for Instance 2 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6c.812 */
       con_id,
       sql_id,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_id,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6c.812 */ SUM(samples) samples FROM hist
)
SELECT DISTINCT
       h.sql_id,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:34:51 6c.826
Elapsed Hours so far:    2.210
Elapsed Hours so far: 2.21

Elapsed: 00:00:00.01

13:34:51 6c "01280_edb360_323688_6c_826_ash_top_sql_for_instance_2_for_31_days_of_history.html"
13:34:53 6c "01281_edb360_323688_6c_826_ash_top_sql_for_instance_2_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.212

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:35:00 6d "Active Session History (ASH) - Top SQL - Time Series"
13:35:00 ASH Top SQL for Cluster for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6d.827 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN sql_id IN
       (
       'd1bmu84pdu6gx',
       '0sjx29v99zfqc',
       'brg5vk35jcqtv',
       'cydgfyx406q8j',
       'dbbx8k4x3crut',
       '3hwq5m5h3gkaq',
       '7uxfahgurqu0d',
       'gd4x6gvgb9xa0',
       '561s98r3c15ad',
       '1hd6zv2xrvp7a',
       '7myt3w0zqs36u',
       '0x5aj324g65cq',
       '0g2sz99zbn7ur',
       '99yvxaxkaatu3'
       )
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE sql_id WHEN 'd1bmu84pdu6gx' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "d1bmu84pdu6gx"
,
       ROUND(SUM(CASE sql_id WHEN '0sjx29v99zfqc' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0sjx29v99zfqc"
,
       ROUND(SUM(CASE sql_id WHEN 'brg5vk35jcqtv' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "brg5vk35jcqtv"
,
       ROUND(SUM(CASE sql_id WHEN 'cydgfyx406q8j' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "cydgfyx406q8j"
,
       ROUND(SUM(CASE sql_id WHEN 'dbbx8k4x3crut' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "dbbx8k4x3crut"
,
       ROUND(SUM(CASE sql_id WHEN '3hwq5m5h3gkaq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "3hwq5m5h3gkaq"
,
       ROUND(SUM(CASE sql_id WHEN '7uxfahgurqu0d' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "7uxfahgurqu0d"
,
       ROUND(SUM(CASE sql_id WHEN 'gd4x6gvgb9xa0' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "gd4x6gvgb9xa0"
,
       ROUND(SUM(CASE sql_id WHEN '561s98r3c15ad' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "561s98r3c15ad"
,
       ROUND(SUM(CASE sql_id WHEN '1hd6zv2xrvp7a' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "1hd6zv2xrvp7a"
,
       ROUND(SUM(CASE sql_id WHEN '7myt3w0zqs36u' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "7myt3w0zqs36u"
,
       ROUND(SUM(CASE sql_id WHEN '0x5aj324g65cq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0x5aj324g65cq"
,
       ROUND(SUM(CASE sql_id WHEN '0g2sz99zbn7ur' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0g2sz99zbn7ur"
,
       ROUND(SUM(CASE sql_id WHEN '99yvxaxkaatu3' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "99yvxaxkaatu3"

  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 1 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:35:00 6d.827
Elapsed Hours so far:    2.212
Elapsed Hours so far: 2.212

Elapsed: 00:00:00.00

13:35:00 6d "01282_edb360_323688_6d_827_ash_top_sql_for_cluster_for_1_day.html"
13:35:01 6d "01283_edb360_323688_6d_827_ash_top_sql_for_cluster_for_1_day_line_chart.html"
Elapsed Hours so far:    2.214

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:35:07 6d "Active Session History (ASH) - Top SQL - Time Series"
13:35:07 ASH Top SQL for Instance 1 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6d.827 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN sql_id IN
       (
       '3hwq5m5h3gkaq',
       'dbbx8k4x3crut',
       '7myt3w0zqs36u',
       'brg5vk35jcqtv',
       '0sjx29v99zfqc',
       'b1mpzjt3746g4',
       '431srakx7cn3y',
       'gwgak6wqhw2a2',
       '1p6h1q1xp2mf6',
       'fkafaq0jba7j7',
       '4qu6gu0b8m101',
       '3a3nv8sv9776b',
       '3gvx3d2a273wn',
       '99yvxaxkaatu3'
       )
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE sql_id WHEN '3hwq5m5h3gkaq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "3hwq5m5h3gkaq"
,
       ROUND(SUM(CASE sql_id WHEN 'dbbx8k4x3crut' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "dbbx8k4x3crut"
,
       ROUND(SUM(CASE sql_id WHEN '7myt3w0zqs36u' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "7myt3w0zqs36u"
,
       ROUND(SUM(CASE sql_id WHEN 'brg5vk35jcqtv' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "brg5vk35jcqtv"
,
       ROUND(SUM(CASE sql_id WHEN '0sjx29v99zfqc' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0sjx29v99zfqc"
,
       ROUND(SUM(CASE sql_id WHEN 'b1mpzjt3746g4' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "b1mpzjt3746g4"
,
       ROUND(SUM(CASE sql_id WHEN '431srakx7cn3y' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "431srakx7cn3y"
,
       ROUND(SUM(CASE sql_id WHEN 'gwgak6wqhw2a2' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "gwgak6wqhw2a2"
,
       ROUND(SUM(CASE sql_id WHEN '1p6h1q1xp2mf6' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "1p6h1q1xp2mf6"
,
       ROUND(SUM(CASE sql_id WHEN 'fkafaq0jba7j7' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "fkafaq0jba7j7"
,
       ROUND(SUM(CASE sql_id WHEN '4qu6gu0b8m101' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "4qu6gu0b8m101"
,
       ROUND(SUM(CASE sql_id WHEN '3a3nv8sv9776b' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "3a3nv8sv9776b"
,
       ROUND(SUM(CASE sql_id WHEN '3gvx3d2a273wn' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "3gvx3d2a273wn"
,
       ROUND(SUM(CASE sql_id WHEN '99yvxaxkaatu3' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "99yvxaxkaatu3"

  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:35:07 6d.828
Elapsed Hours so far:    2.214
Elapsed Hours so far: 2.214

Elapsed: 00:00:00.00

13:35:07 6d "01284_edb360_323688_6d_828_ash_top_sql_for_instance_1_for_1_day.html"
13:35:08 6d "01285_edb360_323688_6d_828_ash_top_sql_for_instance_1_for_1_day_line_chart.html"
Elapsed Hours so far:    2.215

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:35:10 6d "Active Session History (ASH) - Top SQL - Time Series"
13:35:10 ASH Top SQL for Instance 2 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6d.827 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN sql_id IN
       (
       'd1bmu84pdu6gx',
       '0sjx29v99zfqc',
       'brg5vk35jcqtv',
       'cydgfyx406q8j',
       '7uxfahgurqu0d',
       '561s98r3c15ad',
       'gd4x6gvgb9xa0',
       '1hd6zv2xrvp7a',
       '0x5aj324g65cq',
       '0g2sz99zbn7ur',
       '1wjt2ut7cah6k',
       'duxatahv00shj',
       '99yvxaxkaatu3',
       'fu433a4bvapqz'
       )
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE sql_id WHEN 'd1bmu84pdu6gx' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "d1bmu84pdu6gx"
,
       ROUND(SUM(CASE sql_id WHEN '0sjx29v99zfqc' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0sjx29v99zfqc"
,
       ROUND(SUM(CASE sql_id WHEN 'brg5vk35jcqtv' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "brg5vk35jcqtv"
,
       ROUND(SUM(CASE sql_id WHEN 'cydgfyx406q8j' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "cydgfyx406q8j"
,
       ROUND(SUM(CASE sql_id WHEN '7uxfahgurqu0d' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "7uxfahgurqu0d"
,
       ROUND(SUM(CASE sql_id WHEN '561s98r3c15ad' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "561s98r3c15ad"
,
       ROUND(SUM(CASE sql_id WHEN 'gd4x6gvgb9xa0' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "gd4x6gvgb9xa0"
,
       ROUND(SUM(CASE sql_id WHEN '1hd6zv2xrvp7a' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "1hd6zv2xrvp7a"
,
       ROUND(SUM(CASE sql_id WHEN '0x5aj324g65cq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0x5aj324g65cq"
,
       ROUND(SUM(CASE sql_id WHEN '0g2sz99zbn7ur' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0g2sz99zbn7ur"
,
       ROUND(SUM(CASE sql_id WHEN '1wjt2ut7cah6k' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "1wjt2ut7cah6k"
,
       ROUND(SUM(CASE sql_id WHEN 'duxatahv00shj' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "duxatahv00shj"
,
       ROUND(SUM(CASE sql_id WHEN '99yvxaxkaatu3' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "99yvxaxkaatu3"
,
       ROUND(SUM(CASE sql_id WHEN 'fu433a4bvapqz' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "fu433a4bvapqz"

  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:35:10 6d.829
Elapsed Hours so far:    2.215
Elapsed Hours so far: 2.215

Elapsed: 00:00:00.00

13:35:10 6d "01286_edb360_323688_6d_829_ash_top_sql_for_instance_2_for_1_day.html"
13:35:11 6d "01287_edb360_323688_6d_829_ash_top_sql_for_instance_2_for_1_day_line_chart.html"
Elapsed Hours so far:    2.216

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:35:13 6d "Active Session History (ASH) - Top SQL - Time Series"
13:35:13 ASH Top SQL for Cluster for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6d.827 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN sql_id IN
       (
       '3hwq5m5h3gkaq',
       '0sjx29v99zfqc',
       'brg5vk35jcqtv',
       '6ta0azw9znyz8',
       'gd4x6gvgb9xa0',
       '4cpurmm165nzj',
       '0x5aj324g65cq',
       '4jpv3sd1r8ku8',
       '99yvxaxkaatu3',
       'b43hz07mtvuh0',
       'bzsm5n1q7g4z6',
       '2mrjsarqc32h3',
       '739nujnggzyrq',
       'fj7zvxah9qdku'
       )
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE sql_id WHEN '3hwq5m5h3gkaq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "3hwq5m5h3gkaq"
,
       ROUND(SUM(CASE sql_id WHEN '0sjx29v99zfqc' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0sjx29v99zfqc"
,
       ROUND(SUM(CASE sql_id WHEN 'brg5vk35jcqtv' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "brg5vk35jcqtv"
,
       ROUND(SUM(CASE sql_id WHEN '6ta0azw9znyz8' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "6ta0azw9znyz8"
,
       ROUND(SUM(CASE sql_id WHEN 'gd4x6gvgb9xa0' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "gd4x6gvgb9xa0"
,
       ROUND(SUM(CASE sql_id WHEN '4cpurmm165nzj' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "4cpurmm165nzj"
,
       ROUND(SUM(CASE sql_id WHEN '0x5aj324g65cq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0x5aj324g65cq"
,
       ROUND(SUM(CASE sql_id WHEN '4jpv3sd1r8ku8' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "4jpv3sd1r8ku8"
,
       ROUND(SUM(CASE sql_id WHEN '99yvxaxkaatu3' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "99yvxaxkaatu3"
,
       ROUND(SUM(CASE sql_id WHEN 'b43hz07mtvuh0' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "b43hz07mtvuh0"
,
       ROUND(SUM(CASE sql_id WHEN 'bzsm5n1q7g4z6' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "bzsm5n1q7g4z6"
,
       ROUND(SUM(CASE sql_id WHEN '2mrjsarqc32h3' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "2mrjsarqc32h3"
,
       ROUND(SUM(CASE sql_id WHEN '739nujnggzyrq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "739nujnggzyrq"
,
       ROUND(SUM(CASE sql_id WHEN 'fj7zvxah9qdku' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "fj7zvxah9qdku"

  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(s
ample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:35:13 6d.830
Elapsed Hours so far:    2.216
Elapsed Hours so far: 2.216

Elapsed: 00:00:00.00

13:35:13 6d "01288_edb360_323688_6d_830_ash_top_sql_for_cluster_for_5_working_days.html"
13:35:14 6d "01289_edb360_323688_6d_830_ash_top_sql_for_cluster_for_5_working_days_line_chart.html"
Elapsed Hours so far:    2.217

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:35:16 6d "Active Session History (ASH) - Top SQL - Time Series"
13:35:16 ASH Top SQL for Instance 1 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6d.827 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN sql_id IN
       (
       '3hwq5m5h3gkaq',
       '0sjx29v99zfqc',
       'brg5vk35jcqtv',
       '6ta0azw9znyz8',
       'gd4x6gvgb9xa0',
       '4cpurmm165nzj',
       '0x5aj324g65cq',
       '4jpv3sd1r8ku8',
       '99yvxaxkaatu3',
       'b43hz07mtvuh0',
       'bzsm5n1q7g4z6',
       '2mrjsarqc32h3',
       '739nujnggzyrq',
       'fj7zvxah9qdku'
       )
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE sql_id WHEN '3hwq5m5h3gkaq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "3hwq5m5h3gkaq"
,
       ROUND(SUM(CASE sql_id WHEN '0sjx29v99zfqc' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0sjx29v99zfqc"
,
       ROUND(SUM(CASE sql_id WHEN 'brg5vk35jcqtv' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "brg5vk35jcqtv"
,
       ROUND(SUM(CASE sql_id WHEN '6ta0azw9znyz8' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "6ta0azw9znyz8"
,
       ROUND(SUM(CASE sql_id WHEN 'gd4x6gvgb9xa0' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "gd4x6gvgb9xa0"
,
       ROUND(SUM(CASE sql_id WHEN '4cpurmm165nzj' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "4cpurmm165nzj"
,
       ROUND(SUM(CASE sql_id WHEN '0x5aj324g65cq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0x5aj324g65cq"
,
       ROUND(SUM(CASE sql_id WHEN '4jpv3sd1r8ku8' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "4jpv3sd1r8ku8"
,
       ROUND(SUM(CASE sql_id WHEN '99yvxaxkaatu3' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "99yvxaxkaatu3"
,
       ROUND(SUM(CASE sql_id WHEN 'b43hz07mtvuh0' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "b43hz07mtvuh0"
,
       ROUND(SUM(CASE sql_id WHEN 'bzsm5n1q7g4z6' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "bzsm5n1q7g4z6"
,
       ROUND(SUM(CASE sql_id WHEN '2mrjsarqc32h3' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "2mrjsarqc32h3"
,
       ROUND(SUM(CASE sql_id WHEN '739nujnggzyrq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "739nujnggzyrq"
,
       ROUND(SUM(CASE sql_id WHEN 'fj7zvxah9qdku' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "fj7zvxah9qdku"

  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:35:16 6d.831
Elapsed Hours so far:    2.217
Elapsed Hours so far: 2.217

Elapsed: 00:00:00.00

13:35:16 6d "01290_edb360_323688_6d_831_ash_top_sql_for_instance_1_for_5_working_days.html"
13:35:17 6d "01291_edb360_323688_6d_831_ash_top_sql_for_instance_1_for_5_working_days_line_chart.html"
Elapsed Hours so far:    2.218

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:35:19 6d "Active Session History (ASH) - Top SQL - Time Series"
13:35:19 ASH Top SQL for Instance 2 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6d.827 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN sql_id IN
       (
       '3hwq5m5h3gkaq',
       '0sjx29v99zfqc',
       'brg5vk35jcqtv',
       '6ta0azw9znyz8',
       'gd4x6gvgb9xa0',
       '4cpurmm165nzj',
       '0x5aj324g65cq',
       '4jpv3sd1r8ku8',
       '99yvxaxkaatu3',
       'b43hz07mtvuh0',
       'bzsm5n1q7g4z6',
       '2mrjsarqc32h3',
       '739nujnggzyrq',
       'fj7zvxah9qdku'
       )
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE sql_id WHEN '3hwq5m5h3gkaq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "3hwq5m5h3gkaq"
,
       ROUND(SUM(CASE sql_id WHEN '0sjx29v99zfqc' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0sjx29v99zfqc"
,
       ROUND(SUM(CASE sql_id WHEN 'brg5vk35jcqtv' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "brg5vk35jcqtv"
,
       ROUND(SUM(CASE sql_id WHEN '6ta0azw9znyz8' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "6ta0azw9znyz8"
,
       ROUND(SUM(CASE sql_id WHEN 'gd4x6gvgb9xa0' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "gd4x6gvgb9xa0"
,
       ROUND(SUM(CASE sql_id WHEN '4cpurmm165nzj' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "4cpurmm165nzj"
,
       ROUND(SUM(CASE sql_id WHEN '0x5aj324g65cq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0x5aj324g65cq"
,
       ROUND(SUM(CASE sql_id WHEN '4jpv3sd1r8ku8' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "4jpv3sd1r8ku8"
,
       ROUND(SUM(CASE sql_id WHEN '99yvxaxkaatu3' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "99yvxaxkaatu3"
,
       ROUND(SUM(CASE sql_id WHEN 'b43hz07mtvuh0' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "b43hz07mtvuh0"
,
       ROUND(SUM(CASE sql_id WHEN 'bzsm5n1q7g4z6' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "bzsm5n1q7g4z6"
,
       ROUND(SUM(CASE sql_id WHEN '2mrjsarqc32h3' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "2mrjsarqc32h3"
,
       ROUND(SUM(CASE sql_id WHEN '739nujnggzyrq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "739nujnggzyrq"
,
       ROUND(SUM(CASE sql_id WHEN 'fj7zvxah9qdku' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "fj7zvxah9qdku"

  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:35:19 6d.832
Elapsed Hours so far:    2.218
Elapsed Hours so far: 2.218

Elapsed: 00:00:00.00

13:35:19 6d "01292_edb360_323688_6d_832_ash_top_sql_for_instance_2_for_5_working_days.html"
13:35:21 6d "01293_edb360_323688_6d_832_ash_top_sql_for_instance_2_for_5_working_days_line_chart.html"
Elapsed Hours so far:    2.219

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:35:23 6d "Active Session History (ASH) - Top SQL - Time Series"
13:35:23 ASH Top SQL for Cluster for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6d.827 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN sql_id IN
       (
       '3hwq5m5h3gkaq',
       'd1bmu84pdu6gx',
       '0sjx29v99zfqc',
       '6ta0azw9znyz8',
       'brg5vk35jcqtv',
       'cydgfyx406q8j',
       '0x5aj324g65cq',
       '7uxfahgurqu0d',
       'dbbx8k4x3crut',
       '1hd6zv2xrvp7a',
       '561s98r3c15ad',
       '2mrjsarqc32h3',
       'bzsm5n1q7g4z6',
       '0g2sz99zbn7ur'
       )
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE sql_id WHEN '3hwq5m5h3gkaq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "3hwq5m5h3gkaq"
,
       ROUND(SUM(CASE sql_id WHEN 'd1bmu84pdu6gx' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "d1bmu84pdu6gx"
,
       ROUND(SUM(CASE sql_id WHEN '0sjx29v99zfqc' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0sjx29v99zfqc"
,
       ROUND(SUM(CASE sql_id WHEN '6ta0azw9znyz8' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "6ta0azw9znyz8"
,
       ROUND(SUM(CASE sql_id WHEN 'brg5vk35jcqtv' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "brg5vk35jcqtv"
,
       ROUND(SUM(CASE sql_id WHEN 'cydgfyx406q8j' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "cydgfyx406q8j"
,
       ROUND(SUM(CASE sql_id WHEN '0x5aj324g65cq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0x5aj324g65cq"
,
       ROUND(SUM(CASE sql_id WHEN '7uxfahgurqu0d' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "7uxfahgurqu0d"
,
       ROUND(SUM(CASE sql_id WHEN 'dbbx8k4x3crut' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "dbbx8k4x3crut"
,
       ROUND(SUM(CASE sql_id WHEN '1hd6zv2xrvp7a' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "1hd6zv2xrvp7a"
,
       ROUND(SUM(CASE sql_id WHEN '561s98r3c15ad' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "561s98r3c15ad"
,
       ROUND(SUM(CASE sql_id WHEN '2mrjsarqc32h3' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "2mrjsarqc32h3"
,
       ROUND(SUM(CASE sql_id WHEN 'bzsm5n1q7g4z6' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "bzsm5n1q7g4z6"
,
       ROUND(SUM(CASE sql_id WHEN '0g2sz99zbn7ur' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0g2sz99zbn7ur"

  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:35:23 6d.833
Elapsed Hours so far:    2.219
Elapsed Hours so far: 2.219

Elapsed: 00:00:00.00

13:35:23 6d "01294_edb360_323688_6d_833_ash_top_sql_for_cluster_for_7_days.html"
13:35:24 6d "01295_edb360_323688_6d_833_ash_top_sql_for_cluster_for_7_days_line_chart.html"
Elapsed Hours so far:    2.219

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:35:26 6d "Active Session History (ASH) - Top SQL - Time Series"
13:35:26 ASH Top SQL for Instance 1 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6d.827 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN sql_id IN
       (
       '3hwq5m5h3gkaq',
       '6ta0azw9znyz8',
       '0sjx29v99zfqc',
       'brg5vk35jcqtv',
       'dbbx8k4x3crut',
       '0x5aj324g65cq',
       '2mrjsarqc32h3',
       'bzsm5n1q7g4z6',
       '9tsvsj15gkx59',
       '65bm88u58wsvy',
       '4tktkb5c6kjr3',
       '7rn4p17967pyq',
       'dm4q2g6wv2dtj',
       'fj7zvxah9qdku'
       )
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE sql_id WHEN '3hwq5m5h3gkaq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "3hwq5m5h3gkaq"
,
       ROUND(SUM(CASE sql_id WHEN '6ta0azw9znyz8' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "6ta0azw9znyz8"
,
       ROUND(SUM(CASE sql_id WHEN '0sjx29v99zfqc' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0sjx29v99zfqc"
,
       ROUND(SUM(CASE sql_id WHEN 'brg5vk35jcqtv' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "brg5vk35jcqtv"
,
       ROUND(SUM(CASE sql_id WHEN 'dbbx8k4x3crut' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "dbbx8k4x3crut"
,
       ROUND(SUM(CASE sql_id WHEN '0x5aj324g65cq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0x5aj324g65cq"
,
       ROUND(SUM(CASE sql_id WHEN '2mrjsarqc32h3' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "2mrjsarqc32h3"
,
       ROUND(SUM(CASE sql_id WHEN 'bzsm5n1q7g4z6' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "bzsm5n1q7g4z6"
,
       ROUND(SUM(CASE sql_id WHEN '9tsvsj15gkx59' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "9tsvsj15gkx59"
,
       ROUND(SUM(CASE sql_id WHEN '65bm88u58wsvy' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "65bm88u58wsvy"
,
       ROUND(SUM(CASE sql_id WHEN '4tktkb5c6kjr3' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "4tktkb5c6kjr3"
,
       ROUND(SUM(CASE sql_id WHEN '7rn4p17967pyq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "7rn4p17967pyq"
,
       ROUND(SUM(CASE sql_id WHEN 'dm4q2g6wv2dtj' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "dm4q2g6wv2dtj"
,
       ROUND(SUM(CASE sql_id WHEN 'fj7zvxah9qdku' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "fj7zvxah9qdku"

  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:35:26 6d.834
Elapsed Hours so far:    2.219
Elapsed Hours so far: 2.219

Elapsed: 00:00:00.00

13:35:26 6d "01296_edb360_323688_6d_834_ash_top_sql_for_instance_1_for_7_days.html"
13:35:27 6d "01297_edb360_323688_6d_834_ash_top_sql_for_instance_1_for_7_days_line_chart.html"
Elapsed Hours so far:    2.220

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:35:29 6d "Active Session History (ASH) - Top SQL - Time Series"
13:35:29 ASH Top SQL for Instance 2 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6d.827 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN sql_id IN
       (
       'd1bmu84pdu6gx',
       '3hwq5m5h3gkaq',
       '0sjx29v99zfqc',
       'cydgfyx406q8j',
       'brg5vk35jcqtv',
       '7uxfahgurqu0d',
       '1hd6zv2xrvp7a',
       '561s98r3c15ad',
       '6ta0azw9znyz8',
       '0g2sz99zbn7ur',
       '1wjt2ut7cah6k',
       '2fn52uh07qdxs',
       'duxatahv00shj',
       '0x5aj324g65cq'
       )
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE sql_id WHEN 'd1bmu84pdu6gx' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "d1bmu84pdu6gx"
,
       ROUND(SUM(CASE sql_id WHEN '3hwq5m5h3gkaq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "3hwq5m5h3gkaq"
,
       ROUND(SUM(CASE sql_id WHEN '0sjx29v99zfqc' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0sjx29v99zfqc"
,
       ROUND(SUM(CASE sql_id WHEN 'cydgfyx406q8j' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "cydgfyx406q8j"
,
       ROUND(SUM(CASE sql_id WHEN 'brg5vk35jcqtv' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "brg5vk35jcqtv"
,
       ROUND(SUM(CASE sql_id WHEN '7uxfahgurqu0d' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "7uxfahgurqu0d"
,
       ROUND(SUM(CASE sql_id WHEN '1hd6zv2xrvp7a' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "1hd6zv2xrvp7a"
,
       ROUND(SUM(CASE sql_id WHEN '561s98r3c15ad' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "561s98r3c15ad"
,
       ROUND(SUM(CASE sql_id WHEN '6ta0azw9znyz8' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "6ta0azw9znyz8"
,
       ROUND(SUM(CASE sql_id WHEN '0g2sz99zbn7ur' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0g2sz99zbn7ur"
,
       ROUND(SUM(CASE sql_id WHEN '1wjt2ut7cah6k' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "1wjt2ut7cah6k"
,
       ROUND(SUM(CASE sql_id WHEN '2fn52uh07qdxs' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "2fn52uh07qdxs"
,
       ROUND(SUM(CASE sql_id WHEN 'duxatahv00shj' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "duxatahv00shj"
,
       ROUND(SUM(CASE sql_id WHEN '0x5aj324g65cq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0x5aj324g65cq"

  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:35:29 6d.835
Elapsed Hours so far:    2.220
Elapsed Hours so far: 2.22

Elapsed: 00:00:00.00

13:35:29 6d "01298_edb360_323688_6d_835_ash_top_sql_for_instance_2_for_7_days.html"
13:35:30 6d "01299_edb360_323688_6d_835_ash_top_sql_for_instance_2_for_7_days_line_chart.html"
Elapsed Hours so far:    2.223

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:35:38 6d "Active Session History (ASH) - Top SQL - Time Series"
13:35:38 ASH Top SQL for Cluster for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6d.827 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN sql_id IN
       (
       '3hwq5m5h3gkaq',
       '0sjx29v99zfqc',
       'brg5vk35jcqtv',
       '17vjd1aast5q7',
       '6ta0azw9znyz8',
       'gd4x6gvgb9xa0',
       'dgyzt19fp7g6m',
       'gczs60dfwg9gm',
       '2j0m08bz1dsf4',
       '4cpurmm165nzj',
       '4jpv3sd1r8ku8',
       'bzsm5n1q7g4z6',
       '739nujnggzyrq',
       '2mrjsarqc32h3'
       )
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE sql_id WHEN '3hwq5m5h3gkaq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "3hwq5m5h3gkaq"
,
       ROUND(SUM(CASE sql_id WHEN '0sjx29v99zfqc' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0sjx29v99zfqc"
,
       ROUND(SUM(CASE sql_id WHEN 'brg5vk35jcqtv' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "brg5vk35jcqtv"
,
       ROUND(SUM(CASE sql_id WHEN '17vjd1aast5q7' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "17vjd1aast5q7"
,
       ROUND(SUM(CASE sql_id WHEN '6ta0azw9znyz8' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "6ta0azw9znyz8"
,
       ROUND(SUM(CASE sql_id WHEN 'gd4x6gvgb9xa0' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "gd4x6gvgb9xa0"
,
       ROUND(SUM(CASE sql_id WHEN 'dgyzt19fp7g6m' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "dgyzt19fp7g6m"
,
       ROUND(SUM(CASE sql_id WHEN 'gczs60dfwg9gm' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "gczs60dfwg9gm"
,
       ROUND(SUM(CASE sql_id WHEN '2j0m08bz1dsf4' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "2j0m08bz1dsf4"
,
       ROUND(SUM(CASE sql_id WHEN '4cpurmm165nzj' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "4cpurmm165nzj"
,
       ROUND(SUM(CASE sql_id WHEN '4jpv3sd1r8ku8' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "4jpv3sd1r8ku8"
,
       ROUND(SUM(CASE sql_id WHEN 'bzsm5n1q7g4z6' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "bzsm5n1q7g4z6"
,
       ROUND(SUM(CASE sql_id WHEN '739nujnggzyrq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "739nujnggzyrq"
,
       ROUND(SUM(CASE sql_id WHEN '2mrjsarqc32h3' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "2mrjsarqc32h3"

  FROM dba_hist_active_sess_history h
 WHERE TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730'
 AND '1930'
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:35:38 6d.836
Elapsed Hours so far:    2.223
Elapsed Hours so far: 2.223

Elapsed: 00:00:00.00

13:35:38 6d "01300_edb360_323688_6d_836_ash_top_sql_for_cluster_for_23_working_days.html"
13:35:40 6d "01301_edb360_323688_6d_836_ash_top_sql_for_cluster_for_23_working_days_line_chart.html"
Elapsed Hours so far:    2.225

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:35:48 6d "Active Session History (ASH) - Top SQL - Time Series"
13:35:48 ASH Top SQL for Instance 1 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6d.827 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN sql_id IN
       (
       '3hwq5m5h3gkaq',
       '0sjx29v99zfqc',
       '17vjd1aast5q7',
       'brg5vk35jcqtv',
       '6ta0azw9znyz8',
       'gczs60dfwg9gm',
       'gd4x6gvgb9xa0',
       'dgyzt19fp7g6m',
       'fu433a4bvapqz',
       '9ab9bqh60cmbn',
       '2mrjsarqc32h3',
       'bzsm5n1q7g4z6',
       '4cpurmm165nzj',
       '4jpv3sd1r8ku8'
       )
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE sql_id WHEN '3hwq5m5h3gkaq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "3hwq5m5h3gkaq"
,
       ROUND(SUM(CASE sql_id WHEN '0sjx29v99zfqc' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0sjx29v99zfqc"
,
       ROUND(SUM(CASE sql_id WHEN '17vjd1aast5q7' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "17vjd1aast5q7"
,
       ROUND(SUM(CASE sql_id WHEN 'brg5vk35jcqtv' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "brg5vk35jcqtv"
,
       ROUND(SUM(CASE sql_id WHEN '6ta0azw9znyz8' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "6ta0azw9znyz8"
,
       ROUND(SUM(CASE sql_id WHEN 'gczs60dfwg9gm' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "gczs60dfwg9gm"
,
       ROUND(SUM(CASE sql_id WHEN 'gd4x6gvgb9xa0' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "gd4x6gvgb9xa0"
,
       ROUND(SUM(CASE sql_id WHEN 'dgyzt19fp7g6m' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "dgyzt19fp7g6m"
,
       ROUND(SUM(CASE sql_id WHEN 'fu433a4bvapqz' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "fu433a4bvapqz"
,
       ROUND(SUM(CASE sql_id WHEN '9ab9bqh60cmbn' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "9ab9bqh60cmbn"
,
       ROUND(SUM(CASE sql_id WHEN '2mrjsarqc32h3' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "2mrjsarqc32h3"
,
       ROUND(SUM(CASE sql_id WHEN 'bzsm5n1q7g4z6' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "bzsm5n1q7g4z6"
,
       ROUND(SUM(CASE sql_id WHEN '4cpurmm165nzj' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "4cpurmm165nzj"
,
       ROUND(SUM(CASE sql_id WHEN '4jpv3sd1r8ku8' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "4jpv3sd1r8ku8"

  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:35:48 6d.837
Elapsed Hours so far:    2.225
Elapsed Hours so far: 2.225

Elapsed: 00:00:00.00

13:35:48 6d "01302_edb360_323688_6d_837_ash_top_sql_for_instance_1_for_23_working_days.html"
13:35:49 6d "01303_edb360_323688_6d_837_ash_top_sql_for_instance_1_for_23_working_days_line_chart.html"
Elapsed Hours so far:    2.227

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:35:52 6d "Active Session History (ASH) - Top SQL - Time Series"
13:35:52 ASH Top SQL for Instance 2 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6d.827 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN sql_id IN
       (
       '3hwq5m5h3gkaq',
       '0sjx29v99zfqc',
       'brg5vk35jcqtv',
       '6ta0azw9znyz8',
       'gd4x6gvgb9xa0',
       '17vjd1aast5q7',
       'dgyzt19fp7g6m',
       '2j0m08bz1dsf4',
       'az3gg35vpdhg2',
       '4jpv3sd1r8ku8',
       '4cpurmm165nzj',
       '739nujnggzyrq',
       'b43hz07mtvuh0',
       '99yvxaxkaatu3'
       )
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE sql_id WHEN '3hwq5m5h3gkaq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "3hwq5m5h3gkaq"
,
       ROUND(SUM(CASE sql_id WHEN '0sjx29v99zfqc' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0sjx29v99zfqc"
,
       ROUND(SUM(CASE sql_id WHEN 'brg5vk35jcqtv' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "brg5vk35jcqtv"
,
       ROUND(SUM(CASE sql_id WHEN '6ta0azw9znyz8' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "6ta0azw9znyz8"
,
       ROUND(SUM(CASE sql_id WHEN 'gd4x6gvgb9xa0' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "gd4x6gvgb9xa0"
,
       ROUND(SUM(CASE sql_id WHEN '17vjd1aast5q7' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "17vjd1aast5q7"
,
       ROUND(SUM(CASE sql_id WHEN 'dgyzt19fp7g6m' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "dgyzt19fp7g6m"
,
       ROUND(SUM(CASE sql_id WHEN '2j0m08bz1dsf4' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "2j0m08bz1dsf4"
,
       ROUND(SUM(CASE sql_id WHEN 'az3gg35vpdhg2' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "az3gg35vpdhg2"
,
       ROUND(SUM(CASE sql_id WHEN '4jpv3sd1r8ku8' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "4jpv3sd1r8ku8"
,
       ROUND(SUM(CASE sql_id WHEN '4cpurmm165nzj' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "4cpurmm165nzj"
,
       ROUND(SUM(CASE sql_id WHEN '739nujnggzyrq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "739nujnggzyrq"
,
       ROUND(SUM(CASE sql_id WHEN 'b43hz07mtvuh0' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "b43hz07mtvuh0"
,
       ROUND(SUM(CASE sql_id WHEN '99yvxaxkaatu3' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "99yvxaxkaatu3"

  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:35:52 6d.838
Elapsed Hours so far:    2.227
Elapsed Hours so far: 2.227

Elapsed: 00:00:00.00

13:35:52 6d "01304_edb360_323688_6d_838_ash_top_sql_for_instance_2_for_23_working_days.html"
13:35:53 6d "01305_edb360_323688_6d_838_ash_top_sql_for_instance_2_for_23_working_days_line_chart.html"
Elapsed Hours so far:    2.229

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:36:00 6d "Active Session History (ASH) - Top SQL - Time Series"
13:36:00 ASH Top SQL for Cluster for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6d.827 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN sql_id IN
       (
       '3hwq5m5h3gkaq',
       'd1bmu84pdu6gx',
       '17vjd1aast5q7',
       '0sjx29v99zfqc',
       'brg5vk35jcqtv',
       '6ta0azw9znyz8',
       'cydgfyx406q8j',
       '7uxfahgurqu0d',
       '1hd6zv2xrvp7a',
       '561s98r3c15ad',
       'gczs60dfwg9gm',
       'gd4x6gvgb9xa0',
       '0g2sz99zbn7ur',
       '2mrjsarqc32h3'
       )
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE sql_id WHEN '3hwq5m5h3gkaq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "3hwq5m5h3gkaq"
,
       ROUND(SUM(CASE sql_id WHEN 'd1bmu84pdu6gx' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "d1bmu84pdu6gx"
,
       ROUND(SUM(CASE sql_id WHEN '17vjd1aast5q7' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "17vjd1aast5q7"
,
       ROUND(SUM(CASE sql_id WHEN '0sjx29v99zfqc' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0sjx29v99zfqc"
,
       ROUND(SUM(CASE sql_id WHEN 'brg5vk35jcqtv' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "brg5vk35jcqtv"
,
       ROUND(SUM(CASE sql_id WHEN '6ta0azw9znyz8' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "6ta0azw9znyz8"
,
       ROUND(SUM(CASE sql_id WHEN 'cydgfyx406q8j' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "cydgfyx406q8j"
,
       ROUND(SUM(CASE sql_id WHEN '7uxfahgurqu0d' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "7uxfahgurqu0d"
,
       ROUND(SUM(CASE sql_id WHEN '1hd6zv2xrvp7a' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "1hd6zv2xrvp7a"
,
       ROUND(SUM(CASE sql_id WHEN '561s98r3c15ad' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "561s98r3c15ad"
,
       ROUND(SUM(CASE sql_id WHEN 'gczs60dfwg9gm' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "gczs60dfwg9gm"
,
       ROUND(SUM(CASE sql_id WHEN 'gd4x6gvgb9xa0' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "gd4x6gvgb9xa0"
,
       ROUND(SUM(CASE sql_id WHEN '0g2sz99zbn7ur' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0g2sz99zbn7ur"
,
       ROUND(SUM(CASE sql_id WHEN '2mrjsarqc32h3' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "2mrjsarqc32h3"

  FROM dba_hist_active_sess_history h
 WHERE 1 = 1
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:36:00 6d.839
Elapsed Hours so far:    2.229
Elapsed Hours so far: 2.229

Elapsed: 00:00:00.00

13:36:00 6d "01306_edb360_323688_6d_839_ash_top_sql_for_cluster_for_31_days_of_history.html"
13:36:03 6d "01307_edb360_323688_6d_839_ash_top_sql_for_cluster_for_31_days_of_history_line_chart.html"
Elapsed Hours so far:    2.231

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:36:09 6d "Active Session History (ASH) - Top SQL - Time Series"
13:36:09 ASH Top SQL for Instance 1 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6d.827 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN sql_id IN
       (
       '3hwq5m5h3gkaq',
       '17vjd1aast5q7',
       '0sjx29v99zfqc',
       'brg5vk35jcqtv',
       '6ta0azw9znyz8',
       'd1bmu84pdu6gx',
       'gczs60dfwg9gm',
       'cydgfyx406q8j',
       '0g3y1p452kava',
       'fu433a4bvapqz',
       '2mrjsarqc32h3',
       'bzsm5n1q7g4z6',
       'gd4x6gvgb9xa0',
       'gwgak6wqhw2a2'
       )
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE sql_id WHEN '3hwq5m5h3gkaq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "3hwq5m5h3gkaq"
,
       ROUND(SUM(CASE sql_id WHEN '17vjd1aast5q7' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "17vjd1aast5q7"
,
       ROUND(SUM(CASE sql_id WHEN '0sjx29v99zfqc' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0sjx29v99zfqc"
,
       ROUND(SUM(CASE sql_id WHEN 'brg5vk35jcqtv' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "brg5vk35jcqtv"
,
       ROUND(SUM(CASE sql_id WHEN '6ta0azw9znyz8' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "6ta0azw9znyz8"
,
       ROUND(SUM(CASE sql_id WHEN 'd1bmu84pdu6gx' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "d1bmu84pdu6gx"
,
       ROUND(SUM(CASE sql_id WHEN 'gczs60dfwg9gm' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "gczs60dfwg9gm"
,
       ROUND(SUM(CASE sql_id WHEN 'cydgfyx406q8j' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "cydgfyx406q8j"
,
       ROUND(SUM(CASE sql_id WHEN '0g3y1p452kava' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0g3y1p452kava"
,
       ROUND(SUM(CASE sql_id WHEN 'fu433a4bvapqz' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "fu433a4bvapqz"
,
       ROUND(SUM(CASE sql_id WHEN '2mrjsarqc32h3' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "2mrjsarqc32h3"
,
       ROUND(SUM(CASE sql_id WHEN 'bzsm5n1q7g4z6' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "bzsm5n1q7g4z6"
,
       ROUND(SUM(CASE sql_id WHEN 'gd4x6gvgb9xa0' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "gd4x6gvgb9xa0"
,
       ROUND(SUM(CASE sql_id WHEN 'gwgak6wqhw2a2' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "gwgak6wqhw2a2"

  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:36:09 6d.840
Elapsed Hours so far:    2.231
Elapsed Hours so far: 2.231

Elapsed: 00:00:00.00

13:36:09 6d "01308_edb360_323688_6d_840_ash_top_sql_for_instance_1_for_31_days_of_history.html"
13:36:11 6d "01309_edb360_323688_6d_840_ash_top_sql_for_instance_1_for_31_days_of_history_line_chart.html"
Elapsed Hours so far:    2.233

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:36:13 6d "Active Session History (ASH) - Top SQL - Time Series"
13:36:13 ASH Top SQL for Instance 2 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6d.827 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN sql_id IN
       (
       '3hwq5m5h3gkaq',
       'd1bmu84pdu6gx',
       '0sjx29v99zfqc',
       'brg5vk35jcqtv',
       '6ta0azw9znyz8',
       'cydgfyx406q8j',
       '7uxfahgurqu0d',
       '1hd6zv2xrvp7a',
       '561s98r3c15ad',
       '17vjd1aast5q7',
       '0g2sz99zbn7ur',
       'gd4x6gvgb9xa0',
       '1wjt2ut7cah6k',
       '2fn52uh07qdxs'
       )
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE sql_id WHEN '3hwq5m5h3gkaq' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "3hwq5m5h3gkaq"
,
       ROUND(SUM(CASE sql_id WHEN 'd1bmu84pdu6gx' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "d1bmu84pdu6gx"
,
       ROUND(SUM(CASE sql_id WHEN '0sjx29v99zfqc' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0sjx29v99zfqc"
,
       ROUND(SUM(CASE sql_id WHEN 'brg5vk35jcqtv' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "brg5vk35jcqtv"
,
       ROUND(SUM(CASE sql_id WHEN '6ta0azw9znyz8' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "6ta0azw9znyz8"
,
       ROUND(SUM(CASE sql_id WHEN 'cydgfyx406q8j' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "cydgfyx406q8j"
,
       ROUND(SUM(CASE sql_id WHEN '7uxfahgurqu0d' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "7uxfahgurqu0d"
,
       ROUND(SUM(CASE sql_id WHEN '1hd6zv2xrvp7a' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "1hd6zv2xrvp7a"
,
       ROUND(SUM(CASE sql_id WHEN '561s98r3c15ad' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "561s98r3c15ad"
,
       ROUND(SUM(CASE sql_id WHEN '17vjd1aast5q7' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "17vjd1aast5q7"
,
       ROUND(SUM(CASE sql_id WHEN '0g2sz99zbn7ur' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "0g2sz99zbn7ur"
,
       ROUND(SUM(CASE sql_id WHEN 'gd4x6gvgb9xa0' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "gd4x6gvgb9xa0"
,
       ROUND(SUM(CASE sql_id WHEN '1wjt2ut7cah6k' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "1wjt2ut7cah6k"
,
       ROUND(SUM(CASE sql_id WHEN '2fn52uh07qdxs' THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(samp
le_time) AS DATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "2fn52uh07qdxs"

  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2
   AND sql_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:36:13 6d.841
Elapsed Hours so far:    2.233
Elapsed Hours so far: 2.233

Elapsed: 00:00:00.00

13:36:13 6d "01310_edb360_323688_6d_841_ash_top_sql_for_instance_2_for_31_days_of_history.html"
13:36:15 6d "01311_edb360_323688_6d_841_ash_top_sql_for_instance_2_for_31_days_of_history_line_chart.html"
Elapsed Hours so far:    2.233

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:36:16 6e "Active Session History (ASH) - Top Programs"
13:36:16 ASH Top Programs for Cluster for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6e.842 */
       program,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 1 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND program IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       program
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6e.842 */ SUM(samples) samples FROM hist
)
SELECT h.program,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:36:16 6e.842
Elapsed Hours so far:    2.233
Elapsed Hours so far: 2.233

Elapsed: 00:00:00.00

13:36:16 6e "01312_edb360_323688_6e_842_ash_top_programs_for_cluster_for_1_day.html"
13:36:22 6e "01313_edb360_323688_6e_842_ash_top_programs_for_cluster_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.235

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:36:23 6e "Active Session History (ASH) - Top Programs"
13:36:23 ASH Top Programs for Instance 1 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6e.842 */
       program,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND program IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       program
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6e.842 */ SUM(samples) samples FROM hist
)
SELECT h.program,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:36:23 6e.843
Elapsed Hours so far:    2.235
Elapsed Hours so far: 2.235

Elapsed: 00:00:00.00

13:36:23 6e "01314_edb360_323688_6e_843_ash_top_programs_for_instance_1_for_1_day.html"
13:36:29 6e "01315_edb360_323688_6e_843_ash_top_programs_for_instance_1_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.237

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:36:30 6e "Active Session History (ASH) - Top Programs"
13:36:30 ASH Top Programs for Instance 2 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6e.842 */
       program,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND program IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       program
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6e.842 */ SUM(samples) samples FROM hist
)
SELECT h.program,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:36:30 6e.844
Elapsed Hours so far:    2.237
Elapsed Hours so far: 2.237

Elapsed: 00:00:00.01

13:36:30 6e "01316_edb360_323688_6e_844_ash_top_programs_for_instance_2_for_1_day.html"
13:36:32 6e "01317_edb360_323688_6e_844_ash_top_programs_for_instance_2_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.238

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:36:33 6e "Active Session History (ASH) - Top Programs"
13:36:33 ASH Top Programs for Cluster for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6e.842 */
       program,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(s
ample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND program IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       program
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6e.842 */ SUM(samples) samples FROM hist
)
SELECT h.program,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:36:33 6e.845
Elapsed Hours so far:    2.238
Elapsed Hours so far: 2.238

Elapsed: 00:00:00.00

13:36:33 6e "01318_edb360_323688_6e_845_ash_top_programs_for_cluster_for_5_working_days.html"
13:36:35 6e "01319_edb360_323688_6e_845_ash_top_programs_for_cluster_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.239

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:36:36 6e "Active Session History (ASH) - Top Programs"
13:36:36 ASH Top Programs for Instance 1 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6e.842 */
       program,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND program IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       program
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6e.842 */ SUM(samples) samples FROM hist
)
SELECT h.program,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:36:36 6e.846
Elapsed Hours so far:    2.239
Elapsed Hours so far: 2.239

Elapsed: 00:00:00.00

13:36:36 6e "01320_edb360_323688_6e_846_ash_top_programs_for_instance_1_for_5_working_days.html"
13:36:38 6e "01321_edb360_323688_6e_846_ash_top_programs_for_instance_1_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.240

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:36:39 6e "Active Session History (ASH) - Top Programs"
13:36:39 ASH Top Programs for Instance 2 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6e.842 */
       program,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND program IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       program
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6e.842 */ SUM(samples) samples FROM hist
)
SELECT h.program,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:36:39 6e.847
Elapsed Hours so far:    2.240
Elapsed Hours so far: 2.24

Elapsed: 00:00:00.01

13:36:40 6e "01322_edb360_323688_6e_847_ash_top_programs_for_instance_2_for_5_working_days.html"
13:36:41 6e "01323_edb360_323688_6e_847_ash_top_programs_for_instance_2_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.241

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:36:43 6e "Active Session History (ASH) - Top Programs"
13:36:43 ASH Top Programs for Cluster for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6e.842 */
       program,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND program IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       program
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6e.842 */ SUM(samples) samples FROM hist
)
SELECT h.program,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:36:43 6e.848
Elapsed Hours so far:    2.241
Elapsed Hours so far: 2.241

Elapsed: 00:00:00.00

13:36:43 6e "01324_edb360_323688_6e_848_ash_top_programs_for_cluster_for_7_days.html"
13:36:44 6e "01325_edb360_323688_6e_848_ash_top_programs_for_cluster_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.241

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:36:45 6e "Active Session History (ASH) - Top Programs"
13:36:45 ASH Top Programs for Instance 1 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6e.842 */
       program,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND program IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       program
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6e.842 */ SUM(samples) samples FROM hist
)
SELECT h.program,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:36:45 6e.849
Elapsed Hours so far:    2.241
Elapsed Hours so far: 2.241

Elapsed: 00:00:00.01

13:36:46 6e "01326_edb360_323688_6e_849_ash_top_programs_for_instance_1_for_7_days.html"
13:36:47 6e "01327_edb360_323688_6e_849_ash_top_programs_for_instance_1_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.242

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:36:48 6e "Active Session History (ASH) - Top Programs"
13:36:48 ASH Top Programs for Instance 2 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6e.842 */
       program,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND program IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       program
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6e.842 */ SUM(samples) samples FROM hist
)
SELECT h.program,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:36:48 6e.850
Elapsed Hours so far:    2.242
Elapsed Hours so far: 2.242

Elapsed: 00:00:00.00

13:36:49 6e "01328_edb360_323688_6e_850_ash_top_programs_for_instance_2_for_7_days.html"
13:36:50 6e "01329_edb360_323688_6e_850_ash_top_programs_for_instance_2_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.243

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:36:51 6e "Active Session History (ASH) - Top Programs"
13:36:51 ASH Top Programs for Cluster for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6e.842 */
       program,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730'
 AND '1930'
   AND program IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       program
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6e.842 */ SUM(samples) samples FROM hist
)
SELECT h.program,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:36:51 6e.851
Elapsed Hours so far:    2.243
Elapsed Hours so far: 2.243

Elapsed: 00:00:00.00

13:36:51 6e "01330_edb360_323688_6e_851_ash_top_programs_for_cluster_for_23_working_days.html"
13:36:59 6e "01331_edb360_323688_6e_851_ash_top_programs_for_cluster_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.246

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:37:01 6e "Active Session History (ASH) - Top Programs"
13:37:01 ASH Top Programs for Instance 1 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6e.842 */
       program,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND program IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       program
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6e.842 */ SUM(samples) samples FROM hist
)
SELECT h.program,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:37:01 6e.852
Elapsed Hours so far:    2.246
Elapsed Hours so far: 2.246

Elapsed: 00:00:00.00

13:37:02 6e "01332_edb360_323688_6e_852_ash_top_programs_for_instance_1_for_23_working_days.html"
13:37:08 6e "01333_edb360_323688_6e_852_ash_top_programs_for_instance_1_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.248

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:37:10 6e "Active Session History (ASH) - Top Programs"
13:37:10 ASH Top Programs for Instance 2 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6e.842 */
       program,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND program IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       program
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6e.842 */ SUM(samples) samples FROM hist
)
SELECT h.program,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:37:10 6e.853
Elapsed Hours so far:    2.248
Elapsed Hours so far: 2.248

Elapsed: 00:00:00.00

13:37:11 6e "01334_edb360_323688_6e_853_ash_top_programs_for_instance_2_for_23_working_days.html"
13:37:13 6e "01335_edb360_323688_6e_853_ash_top_programs_for_instance_2_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.250

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:37:14 6e "Active Session History (ASH) - Top Programs"
13:37:14 ASH Top Programs for Cluster for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6e.842 */
       program,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE 1 = 1
   AND program IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       program
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6e.842 */ SUM(samples) samples FROM hist
)
SELECT h.program,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:37:14 6e.854
Elapsed Hours so far:    2.250
Elapsed Hours so far: 2.25

Elapsed: 00:00:00.00

13:37:15 6e "01336_edb360_323688_6e_854_ash_top_programs_for_cluster_for_31_days_of_history.html"
13:37:21 6e "01337_edb360_323688_6e_854_ash_top_programs_for_cluster_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.252

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:37:22 6e "Active Session History (ASH) - Top Programs"
13:37:22 ASH Top Programs for Instance 1 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6e.842 */
       program,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1
   AND program IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       program
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6e.842 */ SUM(samples) samples FROM hist
)
SELECT h.program,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:37:22 6e.855
Elapsed Hours so far:    2.252
Elapsed Hours so far: 2.252

Elapsed: 00:00:00.00

13:37:22 6e "01338_edb360_323688_6e_855_ash_top_programs_for_instance_1_for_31_days_of_history.html"
13:37:29 6e "01339_edb360_323688_6e_855_ash_top_programs_for_instance_1_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.254

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:37:30 6e "Active Session History (ASH) - Top Programs"
13:37:30 ASH Top Programs for Instance 2 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6e.842 */
       program,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2
   AND program IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       program
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6e.842 */ SUM(samples) samples FROM hist
)
SELECT h.program,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:37:30 6e.856
Elapsed Hours so far:    2.254
Elapsed Hours so far: 2.254

Elapsed: 00:00:00.00

13:37:31 6e "01340_edb360_323688_6e_856_ash_top_programs_for_instance_2_for_31_days_of_history.html"
13:37:32 6e "01341_edb360_323688_6e_856_ash_top_programs_for_instance_2_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.255

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:37:34 6f "Active Session History (ASH) - Top Modules and Actions"
13:37:34 ASH Top Modules and Actions for Cluster for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
h as (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6f.857 */
       h.module
,      CASE WHEN h.module = 'DBMS_SCHEDULER' AND h.action LIKE 'ORA$%' THEN
                          REGEXP_SUBSTR(h.action,'([[:alpha:]\$_]+)')||'*'
            ELSE h.action END action
 FROM dba_hist_active_sess_history h
WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 1 AND TO_TIMESTAMP('2
0201106112807', 'YYYYMMDDHH24MISS')
   AND h.module IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
),
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       /* 6f.857 */
       TRIM(module||' '||action) module_action,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM h
 GROUP BY
       TRIM(module||' '||action)
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6f.857 */ SUM(samples) samples FROM hist
)
SELECT h.module_action,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:37:34 6f.857
Elapsed Hours so far:    2.255
Elapsed Hours so far: 2.255

Elapsed: 00:00:00.00

13:37:34 6f "01342_edb360_323688_6f_857_ash_top_modules_and_actions_for_cluster_for_1_day.html"
13:37:41 6f "01343_edb360_323688_6f_857_ash_top_modules_and_actions_for_cluster_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.257

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:37:42 6f "Active Session History (ASH) - Top Modules and Actions"
13:37:42 Operations profile of Top Modules for Cluster for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
awr as (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6f.857 */
       TRIM(CASE WHEN h.module = 'DBMS_SCHEDULER' AND h.action LIKE 'ORA$%'
                 THEN 'DBMS_SCHEDULER:'||REGEXP_SUBSTR(h.action,'([[:alpha:]\$_]+)')||'*'
                 WHEN h.module in ('DBMS_SCHEDULER','MMON_SLAVE') THEN h.module||':'||h.action
                 ELSE h.module
            END) module
      ,sql_opname
      ,instance_number
 FROM dba_hist_active_sess_history h
WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 1 AND TO_TIMESTAMP('2
0201106112807', 'YYYYMMDDHH24MISS')
   AND h.module IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
),
id_inst as (
SELECT /*+   MATERIALIZE NO_MERGE   */
       module,
       sql_opname,
       MAX(CASE instance_number WHEN 1 THEN '1,' END)||
       MAX(CASE instance_number WHEN 2 THEN '2,' END)||
       MAX(CASE instance_number WHEN 3 THEN '3,' END)||
       MAX(CASE instance_number WHEN 4 THEN '4,' END)||
       MAX(CASE instance_number WHEN 5 THEN '5,' END)||
       MAX(CASE instance_number WHEN 6 THEN '6,' END)||
       MAX(CASE instance_number WHEN 7 THEN '7,' END)||
       MAX(CASE instance_number WHEN 8 THEN '8' END) instances,
       COUNT(*) samples
 FROM awr
 GROUP BY
       module,sql_opname
),
hist_sql AS (
SELECT /*+   MATERIALIZE NO_MERGE   */
       module,sql_opname,
       COUNT(*) samples
  FROM awr
 GROUP BY
       module,sql_opname
),
hist AS (
SELECT /*+   MATERIALIZE NO_MERGE   */
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM awr
 GROUP BY
       module
),
total AS (
SELECT /*+   MATERIALIZE NO_MERGE   */ SUM(samples) samples FROM hist
)
select module,sql_opname,samples_per_sqlop,module_samples,pct_of_module_samples,pct_total_samples,in
stances
 FROM (
       SELECT TRIM(hs.module) module,
              NVL(hs.sql_opname,'non-SQL oper') sql_opname,
              h.samples module_samples,
              hs.samples samples_per_sqlop,
              ROUND(100 * hs.samples / t.samples, 1) pct_total_samples,
              ROUND(100 * hs.samples / h.samples, 1) pct_of_module_samples,
              (SELECT instances
                 FROM id_inst i
                WHERE i.module=hs.module
                  AND nvl(i.sql_opname,'-')=nvl(hs.sql_opname,'-')) instances,
              rn dummy_01
         FROM hist h, hist_sql hs,
              total t
        WHERE h.samples >= t.samples / 1000 AND h.rn <= 14
          AND hs.module=h.module
        UNION ALL
       SELECT 'Others' module,
              NVL(hs.sql_opname,'non-SQL oper') sql_opname,
              NVL(SUM(h.samples), 0) module_samples,
              NVL(SUM(hs.samples), 0) samples_per_sqlop,
              NVL(ROUND(100 * SUM(hs.samples) / AVG(t.samples), 1), 0) pct_total_samples,
              ROUND(100 * sum(hs.samples) / NVL(SUM(h.samples),1), 1) pct_of_module_samples,
              null,
              null dummy_01
         FROM hist h, hist_sql hs,
              total t
        WHERE (h.samples < t.samples / 1000 OR h.rn > 14)
          AND  hs.module=h.module
         GROUP BY 'Others', NVL(hs.sql_opname,'non-SQL oper')
 )
 ORDER BY module_samples DESC, samples_per_sqlop DESC ,module, sql_opname

13:37:42 6f.858
Elapsed Hours so far:    2.257
Elapsed Hours so far: 2.257

Elapsed: 00:00:00.00

13:37:42 6f "01344_edb360_323688_6f_858_operations_profile_of_top_modules_for_cluster_for_1_day.html"
Elapsed Hours so far:    2.258

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:37:44 6f "Active Session History (ASH) - Top Modules and Actions"
13:37:44 ASH Top Modules and Actions for Instance 1 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
h as (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6f.857 */
       h.module
,      CASE WHEN h.module = 'DBMS_SCHEDULER' AND h.action LIKE 'ORA$%' THEN
                          REGEXP_SUBSTR(h.action,'([[:alpha:]\$_]+)')||'*'
            ELSE h.action END action
 FROM dba_hist_active_sess_history h
WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
 - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND h.module IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
),
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       /* 6f.857 */
       TRIM(module||' '||action) module_action,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM h
 GROUP BY
       TRIM(module||' '||action)
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6f.857 */ SUM(samples) samples FROM hist
)
SELECT h.module_action,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:37:44 6f.859
Elapsed Hours so far:    2.258
Elapsed Hours so far: 2.258

Elapsed: 00:00:00.00

13:37:44 6f "01345_edb360_323688_6f_859_ash_top_modules_and_actions_for_instance_1_for_1_day.html"
13:37:50 6f "01346_edb360_323688_6f_859_ash_top_modules_and_actions_for_instance_1_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.260

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:37:51 6f "Active Session History (ASH) - Top Modules and Actions"
13:37:51 ASH Top Modules and Actions for Instance 2 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
h as (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6f.857 */
       h.module
,      CASE WHEN h.module = 'DBMS_SCHEDULER' AND h.action LIKE 'ORA$%' THEN
                          REGEXP_SUBSTR(h.action,'([[:alpha:]\$_]+)')||'*'
            ELSE h.action END action
 FROM dba_hist_active_sess_history h
WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
 - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND h.module IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
),
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       /* 6f.857 */
       TRIM(module||' '||action) module_action,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM h
 GROUP BY
       TRIM(module||' '||action)
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6f.857 */ SUM(samples) samples FROM hist
)
SELECT h.module_action,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:37:51 6f.860
Elapsed Hours so far:    2.260
Elapsed Hours so far: 2.26

Elapsed: 00:00:00.00

13:37:52 6f "01347_edb360_323688_6f_860_ash_top_modules_and_actions_for_instance_2_for_1_day.html"
13:37:53 6f "01348_edb360_323688_6f_860_ash_top_modules_and_actions_for_instance_2_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.261

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:37:54 6f "Active Session History (ASH) - Top Modules and Actions"
13:37:54 ASH Top Modules and Actions for Cluster for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
h as (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6f.857 */
       h.module
,      CASE WHEN h.module = 'DBMS_SCHEDULER' AND h.action LIKE 'ORA$%' THEN
                          REGEXP_SUBSTR(h.action,'([[:alpha:]\$_]+)')||'*'
            ELSE h.action END action
 FROM dba_hist_active_sess_history h
WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('2
0201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sa
mple_time, 'HH24') BETWEEN '0730' AND '1930'
   AND h.module IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
),
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       /* 6f.857 */
       TRIM(module||' '||action) module_action,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM h
 GROUP BY
       TRIM(module||' '||action)
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6f.857 */ SUM(samples) samples FROM hist
)
SELECT h.module_action,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:37:54 6f.861
Elapsed Hours so far:    2.261
Elapsed Hours so far: 2.261

Elapsed: 00:00:00.00

13:37:54 6f "01349_edb360_323688_6f_861_ash_top_modules_and_actions_for_cluster_for_5_working_days.html"
13:37:56 6f "01350_edb360_323688_6f_861_ash_top_modules_and_actions_for_cluster_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.262

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:37:58 6f "Active Session History (ASH) - Top Modules and Actions"
13:37:58 Operations profile of Top Modules for Cluster for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
awr as (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6f.857 */
       TRIM(CASE WHEN h.module = 'DBMS_SCHEDULER' AND h.action LIKE 'ORA$%'
                 THEN 'DBMS_SCHEDULER:'||REGEXP_SUBSTR(h.action,'([[:alpha:]\$_]+)')||'*'
                 WHEN h.module in ('DBMS_SCHEDULER','MMON_SLAVE') THEN h.module||':'||h.action
                 ELSE h.module
            END) module
      ,sql_opname
      ,instance_number
 FROM dba_hist_active_sess_history h
WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('2
0201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sa
mple_time, 'HH24') BETWEEN '0730' AND '1930'
   AND h.module IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
),
id_inst as (
SELECT /*+   MATERIALIZE NO_MERGE   */
       module,
       sql_opname,
       MAX(CASE instance_number WHEN 1 THEN '1,' END)||
       MAX(CASE instance_number WHEN 2 THEN '2,' END)||
       MAX(CASE instance_number WHEN 3 THEN '3,' END)||
       MAX(CASE instance_number WHEN 4 THEN '4,' END)||
       MAX(CASE instance_number WHEN 5 THEN '5,' END)||
       MAX(CASE instance_number WHEN 6 THEN '6,' END)||
       MAX(CASE instance_number WHEN 7 THEN '7,' END)||
       MAX(CASE instance_number WHEN 8 THEN '8' END) instances,
       COUNT(*) samples
 FROM awr
 GROUP BY
       module,sql_opname
),
hist_sql AS (
SELECT /*+   MATERIALIZE NO_MERGE   */
       module,sql_opname,
       COUNT(*) samples
  FROM awr
 GROUP BY
       module,sql_opname
),
hist AS (
SELECT /*+   MATERIALIZE NO_MERGE   */
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM awr
 GROUP BY
       module
),
total AS (
SELECT /*+   MATERIALIZE NO_MERGE   */ SUM(samples) samples FROM hist
)
select module,sql_opname,samples_per_sqlop,module_samples,pct_of_module_samples,pct_total_samples,in
stances
 FROM (
       SELECT TRIM(hs.module) module,
              NVL(hs.sql_opname,'non-SQL oper') sql_opname,
              h.samples module_samples,
              hs.samples samples_per_sqlop,
              ROUND(100 * hs.samples / t.samples, 1) pct_total_samples,
              ROUND(100 * hs.samples / h.samples, 1) pct_of_module_samples,
              (SELECT instances
                 FROM id_inst i
                WHERE i.module=hs.module
                  AND nvl(i.sql_opname,'-')=nvl(hs.sql_opname,'-')) instances,
              rn dummy_01
         FROM hist h, hist_sql hs,
              total t
        WHERE h.samples >= t.samples / 1000 AND h.rn <= 14
          AND hs.module=h.module
        UNION ALL
       SELECT 'Others' module,
              NVL(hs.sql_opname,'non-SQL oper') sql_opname,
              NVL(SUM(h.samples), 0) module_samples,
              NVL(SUM(hs.samples), 0) samples_per_sqlop,
              NVL(ROUND(100 * SUM(hs.samples) / AVG(t.samples), 1), 0) pct_total_samples,
              ROUND(100 * sum(hs.samples) / NVL(SUM(h.samples),1), 1) pct_of_module_samples,
              null,
              null dummy_01
         FROM hist h, hist_sql hs,
              total t
        WHERE (h.samples < t.samples / 1000 OR h.rn > 14)
          AND  hs.module=h.module
         GROUP BY 'Others', NVL(hs.sql_opname,'non-SQL oper')
 )
 ORDER BY module_samples DESC, samples_per_sqlop DESC ,module, sql_opname

13:37:58 6f.862
Elapsed Hours so far:    2.262
Elapsed Hours so far: 2.262

Elapsed: 00:00:00.00

13:37:58 6f "01351_edb360_323688_6f_862_operations_profile_of_top_modules_for_cluster_for_5_working_days.html"
Elapsed Hours so far:    2.262

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:38:00 6f "Active Session History (ASH) - Top Modules and Actions"
13:38:00 ASH Top Modules and Actions for Instance 1 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
h as (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6f.857 */
       h.module
,      CASE WHEN h.module = 'DBMS_SCHEDULER' AND h.action LIKE 'ORA$%' THEN
                          REGEXP_SUBSTR(h.action,'([[:alpha:]\$_]+)')||'*'
            ELSE h.action END action
 FROM dba_hist_active_sess_history h
WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
 - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '2
' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND h.module IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
),
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       /* 6f.857 */
       TRIM(module||' '||action) module_action,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM h
 GROUP BY
       TRIM(module||' '||action)
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6f.857 */ SUM(samples) samples FROM hist
)
SELECT h.module_action,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:38:00 6f.863
Elapsed Hours so far:    2.262
Elapsed Hours so far: 2.262

Elapsed: 00:00:00.00

13:38:00 6f "01352_edb360_323688_6f_863_ash_top_modules_and_actions_for_instance_1_for_5_working_days.html"
13:38:02 6f "01353_edb360_323688_6f_863_ash_top_modules_and_actions_for_instance_1_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.263

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:38:03 6f "Active Session History (ASH) - Top Modules and Actions"
13:38:03 ASH Top Modules and Actions for Instance 2 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
h as (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6f.857 */
       h.module
,      CASE WHEN h.module = 'DBMS_SCHEDULER' AND h.action LIKE 'ORA$%' THEN
                          REGEXP_SUBSTR(h.action,'([[:alpha:]\$_]+)')||'*'
            ELSE h.action END action
 FROM dba_hist_active_sess_history h
WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
 - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '2
' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND h.module IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
),
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       /* 6f.857 */
       TRIM(module||' '||action) module_action,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM h
 GROUP BY
       TRIM(module||' '||action)
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6f.857 */ SUM(samples) samples FROM hist
)
SELECT h.module_action,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:38:03 6f.864
Elapsed Hours so far:    2.263
Elapsed Hours so far: 2.263

Elapsed: 00:00:00.00

13:38:03 6f "01354_edb360_323688_6f_864_ash_top_modules_and_actions_for_instance_2_for_5_working_days.html"
13:38:05 6f "01355_edb360_323688_6f_864_ash_top_modules_and_actions_for_instance_2_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.264

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:38:06 6f "Active Session History (ASH) - Top Modules and Actions"
13:38:06 ASH Top Modules and Actions for Cluster for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
h as (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6f.857 */
       h.module
,      CASE WHEN h.module = 'DBMS_SCHEDULER' AND h.action LIKE 'ORA$%' THEN
                          REGEXP_SUBSTR(h.action,'([[:alpha:]\$_]+)')||'*'
            ELSE h.action END action
 FROM dba_hist_active_sess_history h
WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('2
0201106112807', 'YYYYMMDDHH24MISS')
   AND h.module IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
),
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       /* 6f.857 */
       TRIM(module||' '||action) module_action,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM h
 GROUP BY
       TRIM(module||' '||action)
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6f.857 */ SUM(samples) samples FROM hist
)
SELECT h.module_action,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:38:06 6f.865
Elapsed Hours so far:    2.264
Elapsed Hours so far: 2.264

Elapsed: 00:00:00.00

13:38:07 6f "01356_edb360_323688_6f_865_ash_top_modules_and_actions_for_cluster_for_7_days.html"
13:38:13 6f "01357_edb360_323688_6f_865_ash_top_modules_and_actions_for_cluster_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.266

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:38:14 6f "Active Session History (ASH) - Top Modules and Actions"
13:38:14 Operations profile of Top Modules for Cluster for 7, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
awr as (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6f.857 */
       TRIM(CASE WHEN h.module = 'DBMS_SCHEDULER' AND h.action LIKE 'ORA$%'
                 THEN 'DBMS_SCHEDULER:'||REGEXP_SUBSTR(h.action,'([[:alpha:]\$_]+)')||'*'
                 WHEN h.module in ('DBMS_SCHEDULER','MMON_SLAVE') THEN h.module||':'||h.action
                 ELSE h.module
            END) module
      ,sql_opname
      ,instance_number
 FROM dba_hist_active_sess_history h
WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('2
0201106112807', 'YYYYMMDDHH24MISS')
   AND h.module IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
),
id_inst as (
SELECT /*+   MATERIALIZE NO_MERGE   */
       module,
       sql_opname,
       MAX(CASE instance_number WHEN 1 THEN '1,' END)||
       MAX(CASE instance_number WHEN 2 THEN '2,' END)||
       MAX(CASE instance_number WHEN 3 THEN '3,' END)||
       MAX(CASE instance_number WHEN 4 THEN '4,' END)||
       MAX(CASE instance_number WHEN 5 THEN '5,' END)||
       MAX(CASE instance_number WHEN 6 THEN '6,' END)||
       MAX(CASE instance_number WHEN 7 THEN '7,' END)||
       MAX(CASE instance_number WHEN 8 THEN '8' END) instances,
       COUNT(*) samples
 FROM awr
 GROUP BY
       module,sql_opname
),
hist_sql AS (
SELECT /*+   MATERIALIZE NO_MERGE   */
       module,sql_opname,
       COUNT(*) samples
  FROM awr
 GROUP BY
       module,sql_opname
),
hist AS (
SELECT /*+   MATERIALIZE NO_MERGE   */
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM awr
 GROUP BY
       module
),
total AS (
SELECT /*+   MATERIALIZE NO_MERGE   */ SUM(samples) samples FROM hist
)
select module,sql_opname,samples_per_sqlop,module_samples,pct_of_module_samples,pct_total_samples,in
stances
 FROM (
       SELECT TRIM(hs.module) module,
              NVL(hs.sql_opname,'non-SQL oper') sql_opname,
              h.samples module_samples,
              hs.samples samples_per_sqlop,
              ROUND(100 * hs.samples / t.samples, 1) pct_total_samples,
              ROUND(100 * hs.samples / h.samples, 1) pct_of_module_samples,
              (SELECT instances
                 FROM id_inst i
                WHERE i.module=hs.module
                  AND nvl(i.sql_opname,'-')=nvl(hs.sql_opname,'-')) instances,
              rn dummy_01
         FROM hist h, hist_sql hs,
              total t
        WHERE h.samples >= t.samples / 1000 AND h.rn <= 14
          AND hs.module=h.module
        UNION ALL
       SELECT 'Others' module,
              NVL(hs.sql_opname,'non-SQL oper') sql_opname,
              NVL(SUM(h.samples), 0) module_samples,
              NVL(SUM(hs.samples), 0) samples_per_sqlop,
              NVL(ROUND(100 * SUM(hs.samples) / AVG(t.samples), 1), 0) pct_total_samples,
              ROUND(100 * sum(hs.samples) / NVL(SUM(h.samples),1), 1) pct_of_module_samples,
              null,
              null dummy_01
         FROM hist h, hist_sql hs,
              total t
        WHERE (h.samples < t.samples / 1000 OR h.rn > 14)
          AND  hs.module=h.module
         GROUP BY 'Others', NVL(hs.sql_opname,'non-SQL oper')
 )
 ORDER BY module_samples DESC, samples_per_sqlop DESC ,module, sql_opname

13:38:14 6f.866
Elapsed Hours so far:    2.266
Elapsed Hours so far: 2.266

Elapsed: 00:00:00.00

13:38:14 6f "01358_edb360_323688_6f_866_operations_profile_of_top_modules_for_cluster_for_7.html"
Elapsed Hours so far:    2.267

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:38:16 6f "Active Session History (ASH) - Top Modules and Actions"
13:38:16 ASH Top Modules and Actions for Instance 1 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
h as (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6f.857 */
       h.module
,      CASE WHEN h.module = 'DBMS_SCHEDULER' AND h.action LIKE 'ORA$%' THEN
                          REGEXP_SUBSTR(h.action,'([[:alpha:]\$_]+)')||'*'
            ELSE h.action END action
 FROM dba_hist_active_sess_history h
WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
 - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND h.module IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
),
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       /* 6f.857 */
       TRIM(module||' '||action) module_action,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM h
 GROUP BY
       TRIM(module||' '||action)
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6f.857 */ SUM(samples) samples FROM hist
)
SELECT h.module_action,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:38:16 6f.867
Elapsed Hours so far:    2.267
Elapsed Hours so far: 2.267

Elapsed: 00:00:00.00

13:38:16 6f "01359_edb360_323688_6f_867_ash_top_modules_and_actions_for_instance_1_for_7_days.html"
13:38:23 6f "01360_edb360_323688_6f_867_ash_top_modules_and_actions_for_instance_1_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.269

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:38:24 6f "Active Session History (ASH) - Top Modules and Actions"
13:38:24 ASH Top Modules and Actions for Instance 2 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
h as (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6f.857 */
       h.module
,      CASE WHEN h.module = 'DBMS_SCHEDULER' AND h.action LIKE 'ORA$%' THEN
                          REGEXP_SUBSTR(h.action,'([[:alpha:]\$_]+)')||'*'
            ELSE h.action END action
 FROM dba_hist_active_sess_history h
WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
 - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND h.module IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
),
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       /* 6f.857 */
       TRIM(module||' '||action) module_action,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM h
 GROUP BY
       TRIM(module||' '||action)
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6f.857 */ SUM(samples) samples FROM hist
)
SELECT h.module_action,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:38:24 6f.868
Elapsed Hours so far:    2.269
Elapsed Hours so far: 2.269

Elapsed: 00:00:00.00

13:38:24 6f "01361_edb360_323688_6f_868_ash_top_modules_and_actions_for_instance_2_for_7_days.html"
13:38:25 6f "01362_edb360_323688_6f_868_ash_top_modules_and_actions_for_instance_2_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.270

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:38:27 6f "Active Session History (ASH) - Top Modules and Actions"
13:38:27 ASH Top Modules and Actions for Cluster for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
h as (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6f.857 */
       h.module
,      CASE WHEN h.module = 'DBMS_SCHEDULER' AND h.action LIKE 'ORA$%' THEN
                          REGEXP_SUBSTR(h.action,'([[:alpha:]\$_]+)')||'*'
            ELSE h.action END action
 FROM dba_hist_active_sess_history h
WHERE TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730'
AND '1930'
   AND h.module IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
),
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       /* 6f.857 */
       TRIM(module||' '||action) module_action,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM h
 GROUP BY
       TRIM(module||' '||action)
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6f.857 */ SUM(samples) samples FROM hist
)
SELECT h.module_action,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:38:27 6f.869
Elapsed Hours so far:    2.270
Elapsed Hours so far: 2.27

Elapsed: 00:00:00.00

13:38:27 6f "01363_edb360_323688_6f_869_ash_top_modules_and_actions_for_cluster_for_23_working_days.html"
13:38:30 6f "01364_edb360_323688_6f_869_ash_top_modules_and_actions_for_cluster_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.271

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:38:32 6f "Active Session History (ASH) - Top Modules and Actions"
13:38:32 Operations profile of Top Modules for Cluster for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
awr as (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6f.857 */
       TRIM(CASE WHEN h.module = 'DBMS_SCHEDULER' AND h.action LIKE 'ORA$%'
                 THEN 'DBMS_SCHEDULER:'||REGEXP_SUBSTR(h.action,'([[:alpha:]\$_]+)')||'*'
                 WHEN h.module in ('DBMS_SCHEDULER','MMON_SLAVE') THEN h.module||':'||h.action
                 ELSE h.module
            END) module
      ,sql_opname
      ,instance_number
 FROM dba_hist_active_sess_history h
WHERE TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730'
AND '1930'
   AND h.module IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
),
id_inst as (
SELECT /*+   MATERIALIZE NO_MERGE   */
       module,
       sql_opname,
       MAX(CASE instance_number WHEN 1 THEN '1,' END)||
       MAX(CASE instance_number WHEN 2 THEN '2,' END)||
       MAX(CASE instance_number WHEN 3 THEN '3,' END)||
       MAX(CASE instance_number WHEN 4 THEN '4,' END)||
       MAX(CASE instance_number WHEN 5 THEN '5,' END)||
       MAX(CASE instance_number WHEN 6 THEN '6,' END)||
       MAX(CASE instance_number WHEN 7 THEN '7,' END)||
       MAX(CASE instance_number WHEN 8 THEN '8' END) instances,
       COUNT(*) samples
 FROM awr
 GROUP BY
       module,sql_opname
),
hist_sql AS (
SELECT /*+   MATERIALIZE NO_MERGE   */
       module,sql_opname,
       COUNT(*) samples
  FROM awr
 GROUP BY
       module,sql_opname
),
hist AS (
SELECT /*+   MATERIALIZE NO_MERGE   */
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM awr
 GROUP BY
       module
),
total AS (
SELECT /*+   MATERIALIZE NO_MERGE   */ SUM(samples) samples FROM hist
)
select module,sql_opname,samples_per_sqlop,module_samples,pct_of_module_samples,pct_total_samples,in
stances
 FROM (
       SELECT TRIM(hs.module) module,
              NVL(hs.sql_opname,'non-SQL oper') sql_opname,
              h.samples module_samples,
              hs.samples samples_per_sqlop,
              ROUND(100 * hs.samples / t.samples, 1) pct_total_samples,
              ROUND(100 * hs.samples / h.samples, 1) pct_of_module_samples,
              (SELECT instances
                 FROM id_inst i
                WHERE i.module=hs.module
                  AND nvl(i.sql_opname,'-')=nvl(hs.sql_opname,'-')) instances,
              rn dummy_01
         FROM hist h, hist_sql hs,
              total t
        WHERE h.samples >= t.samples / 1000 AND h.rn <= 14
          AND hs.module=h.module
        UNION ALL
       SELECT 'Others' module,
              NVL(hs.sql_opname,'non-SQL oper') sql_opname,
              NVL(SUM(h.samples), 0) module_samples,
              NVL(SUM(hs.samples), 0) samples_per_sqlop,
              NVL(ROUND(100 * SUM(hs.samples) / AVG(t.samples), 1), 0) pct_total_samples,
              ROUND(100 * sum(hs.samples) / NVL(SUM(h.samples),1), 1) pct_of_module_samples,
              null,
              null dummy_01
         FROM hist h, hist_sql hs,
              total t
        WHERE (h.samples < t.samples / 1000 OR h.rn > 14)
          AND  hs.module=h.module
         GROUP BY 'Others', NVL(hs.sql_opname,'non-SQL oper')
 )
 ORDER BY module_samples DESC, samples_per_sqlop DESC ,module, sql_opname

13:38:32 6f.870
Elapsed Hours so far:    2.271
Elapsed Hours so far: 2.271

Elapsed: 00:00:00.00

13:38:33 6f "01365_edb360_323688_6f_870_operations_profile_of_top_modules_for_cluster_for_23_working_days.html"
Elapsed Hours so far:    2.272

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:38:36 6f "Active Session History (ASH) - Top Modules and Actions"
13:38:36 ASH Top Modules and Actions for Instance 1 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
h as (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6f.857 */
       h.module
,      CASE WHEN h.module = 'DBMS_SCHEDULER' AND h.action LIKE 'ORA$%' THEN
                          REGEXP_SUBSTR(h.action,'([[:alpha:]\$_]+)')||'*'
            ELSE h.action END action
 FROM dba_hist_active_sess_history h
WHERE instance_number = 1 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time,
 'HH24') BETWEEN '0730' AND '1930'
   AND h.module IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
),
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       /* 6f.857 */
       TRIM(module||' '||action) module_action,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM h
 GROUP BY
       TRIM(module||' '||action)
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6f.857 */ SUM(samples) samples FROM hist
)
SELECT h.module_action,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:38:36 6f.871
Elapsed Hours so far:    2.272
Elapsed Hours so far: 2.272

Elapsed: 00:00:00.00

13:38:36 6f "01366_edb360_323688_6f_871_ash_top_modules_and_actions_for_instance_1_for_23_working_days.html"
13:38:39 6f "01367_edb360_323688_6f_871_ash_top_modules_and_actions_for_instance_1_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.274

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:38:41 6f "Active Session History (ASH) - Top Modules and Actions"
13:38:41 ASH Top Modules and Actions for Instance 2 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
h as (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6f.857 */
       h.module
,      CASE WHEN h.module = 'DBMS_SCHEDULER' AND h.action LIKE 'ORA$%' THEN
                          REGEXP_SUBSTR(h.action,'([[:alpha:]\$_]+)')||'*'
            ELSE h.action END action
 FROM dba_hist_active_sess_history h
WHERE instance_number = 2 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time,
 'HH24') BETWEEN '0730' AND '1930'
   AND h.module IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
),
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       /* 6f.857 */
       TRIM(module||' '||action) module_action,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM h
 GROUP BY
       TRIM(module||' '||action)
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6f.857 */ SUM(samples) samples FROM hist
)
SELECT h.module_action,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:38:41 6f.872
Elapsed Hours so far:    2.274
Elapsed Hours so far: 2.274

Elapsed: 00:00:00.00

13:38:41 6f "01368_edb360_323688_6f_872_ash_top_modules_and_actions_for_instance_2_for_23_working_days.html"
13:38:43 6f "01369_edb360_323688_6f_872_ash_top_modules_and_actions_for_instance_2_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.275

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:38:45 6f "Active Session History (ASH) - Top Modules and Actions"
13:38:45 ASH Top Modules and Actions for Cluster for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
h as (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6f.857 */
       h.module
,      CASE WHEN h.module = 'DBMS_SCHEDULER' AND h.action LIKE 'ORA$%' THEN
                          REGEXP_SUBSTR(h.action,'([[:alpha:]\$_]+)')||'*'
            ELSE h.action END action
 FROM dba_hist_active_sess_history h
WHERE 1 = 1
   AND h.module IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
),
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       /* 6f.857 */
       TRIM(module||' '||action) module_action,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM h
 GROUP BY
       TRIM(module||' '||action)
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6f.857 */ SUM(samples) samples FROM hist
)
SELECT h.module_action,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:38:45 6f.873
Elapsed Hours so far:    2.275
Elapsed Hours so far: 2.275

Elapsed: 00:00:00.00

13:38:45 6f "01370_edb360_323688_6f_873_ash_top_modules_and_actions_for_cluster_for_31_days_of_history.html"
13:38:52 6f "01371_edb360_323688_6f_873_ash_top_modules_and_actions_for_cluster_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.277

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:38:53 6f "Active Session History (ASH) - Top Modules and Actions"
13:38:53 Operations profile of Top Modules for Cluster for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
awr as (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6f.857 */
       TRIM(CASE WHEN h.module = 'DBMS_SCHEDULER' AND h.action LIKE 'ORA$%'
                 THEN 'DBMS_SCHEDULER:'||REGEXP_SUBSTR(h.action,'([[:alpha:]\$_]+)')||'*'
                 WHEN h.module in ('DBMS_SCHEDULER','MMON_SLAVE') THEN h.module||':'||h.action
                 ELSE h.module
            END) module
      ,sql_opname
      ,instance_number
 FROM dba_hist_active_sess_history h
WHERE 1=1
   AND h.module IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
),
id_inst as (
SELECT /*+   MATERIALIZE NO_MERGE   */
       module,
       sql_opname,
       MAX(CASE instance_number WHEN 1 THEN '1,' END)||
       MAX(CASE instance_number WHEN 2 THEN '2,' END)||
       MAX(CASE instance_number WHEN 3 THEN '3,' END)||
       MAX(CASE instance_number WHEN 4 THEN '4,' END)||
       MAX(CASE instance_number WHEN 5 THEN '5,' END)||
       MAX(CASE instance_number WHEN 6 THEN '6,' END)||
       MAX(CASE instance_number WHEN 7 THEN '7,' END)||
       MAX(CASE instance_number WHEN 8 THEN '8' END) instances,
       COUNT(*) samples
 FROM awr
 GROUP BY
       module,sql_opname
),
hist_sql AS (
SELECT /*+   MATERIALIZE NO_MERGE   */
       module,sql_opname,
       COUNT(*) samples
  FROM awr
 GROUP BY
       module,sql_opname
),
hist AS (
SELECT /*+   MATERIALIZE NO_MERGE   */
       module,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM awr
 GROUP BY
       module
),
total AS (
SELECT /*+   MATERIALIZE NO_MERGE   */ SUM(samples) samples FROM hist
)
select module,sql_opname,samples_per_sqlop,module_samples,pct_of_module_samples,pct_total_samples,in
stances
 FROM (
       SELECT TRIM(hs.module) module,
              NVL(hs.sql_opname,'non-SQL oper') sql_opname,
              h.samples module_samples,
              hs.samples samples_per_sqlop,
              ROUND(100 * hs.samples / t.samples, 1) pct_total_samples,
              ROUND(100 * hs.samples / h.samples, 1) pct_of_module_samples,
              (SELECT instances
                 FROM id_inst i
                WHERE i.module=hs.module
                  AND nvl(i.sql_opname,'-')=nvl(hs.sql_opname,'-')) instances,
              rn dummy_01
         FROM hist h, hist_sql hs,
              total t
        WHERE h.samples >= t.samples / 1000 AND h.rn <= 14
          AND hs.module=h.module
        UNION ALL
       SELECT 'Others' module,
              NVL(hs.sql_opname,'non-SQL oper') sql_opname,
              NVL(SUM(h.samples), 0) module_samples,
              NVL(SUM(hs.samples), 0) samples_per_sqlop,
              NVL(ROUND(100 * SUM(hs.samples) / AVG(t.samples), 1), 0) pct_total_samples,
              ROUND(100 * sum(hs.samples) / NVL(SUM(h.samples),1), 1) pct_of_module_samples,
              null,
              null dummy_01
         FROM hist h, hist_sql hs,
              total t
        WHERE (h.samples < t.samples / 1000 OR h.rn > 14)
          AND  hs.module=h.module
         GROUP BY 'Others', NVL(hs.sql_opname,'non-SQL oper')
 )
 ORDER BY module_samples DESC, samples_per_sqlop DESC ,module, sql_opname

13:38:53 6f.874
Elapsed Hours so far:    2.277
Elapsed Hours so far: 2.277

Elapsed: 00:00:00.00

13:38:53 6f "01372_edb360_323688_6f_874_operations_profile_of_top_modules_for_cluster_for_31_days_of_history.html"
Elapsed Hours so far:    2.278

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:38:56 6f "Active Session History (ASH) - Top Modules and Actions"
13:38:56 ASH Top Modules and Actions for Instance 1 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
h as (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6f.857 */
       h.module
,      CASE WHEN h.module = 'DBMS_SCHEDULER' AND h.action LIKE 'ORA$%' THEN
                          REGEXP_SUBSTR(h.action,'([[:alpha:]\$_]+)')||'*'
            ELSE h.action END action
 FROM dba_hist_active_sess_history h
WHERE instance_number = 1
   AND h.module IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
),
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       /* 6f.857 */
       TRIM(module||' '||action) module_action,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM h
 GROUP BY
       TRIM(module||' '||action)
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6f.857 */ SUM(samples) samples FROM hist
)
SELECT h.module_action,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:38:56 6f.875
Elapsed Hours so far:    2.278
Elapsed Hours so far: 2.278

Elapsed: 00:00:00.00

13:38:56 6f "01373_edb360_323688_6f_875_ash_top_modules_and_actions_for_instance_1_for_31_days_of_history.html"
13:39:03 6f "01374_edb360_323688_6f_875_ash_top_modules_and_actions_for_instance_1_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.280

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:39:04 6f "Active Session History (ASH) - Top Modules and Actions"
13:39:04 ASH Top Modules and Actions for Instance 2 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
h as (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6f.857 */
       h.module
,      CASE WHEN h.module = 'DBMS_SCHEDULER' AND h.action LIKE 'ORA$%' THEN
                          REGEXP_SUBSTR(h.action,'([[:alpha:]\$_]+)')||'*'
            ELSE h.action END action
 FROM dba_hist_active_sess_history h
WHERE instance_number = 2
   AND h.module IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
),
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE  */
       /* 6f.857 */
       TRIM(module||' '||action) module_action,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM h
 GROUP BY
       TRIM(module||' '||action)
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6f.857 */ SUM(samples) samples FROM hist
)
SELECT h.module_action,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:39:04 6f.876
Elapsed Hours so far:    2.280
Elapsed Hours so far: 2.28

Elapsed: 00:00:00.00

13:39:04 6f "01375_edb360_323688_6f_876_ash_top_modules_and_actions_for_instance_2_for_31_days_of_history.html"
13:39:06 6f "01376_edb360_323688_6f_876_ash_top_modules_and_actions_for_instance_2_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.281

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:39:08 6g "Active Session History (ASH) - Top Users"
13:39:08 ASH Top Users for Cluster for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6g.877 */
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 1 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6g.877 */ SUM(samples) samples FROM hist
)
SELECT NVL(u.username, h.user_id) username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:39:08 6g.877
Elapsed Hours so far:    2.281
Elapsed Hours so far: 2.281

Elapsed: 00:00:00.00

13:39:08 6g "01377_edb360_323688_6g_877_ash_top_users_for_cluster_for_1_day.html"
13:39:14 6g "01378_edb360_323688_6g_877_ash_top_users_for_cluster_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.283

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:39:15 6g "Active Session History (ASH) - Top Users"
13:39:15 ASH Top Users for Instance 1 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6g.877 */
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6g.877 */ SUM(samples) samples FROM hist
)
SELECT NVL(u.username, h.user_id) username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:39:15 6g.878
Elapsed Hours so far:    2.283
Elapsed Hours so far: 2.283

Elapsed: 00:00:00.00

13:39:15 6g "01379_edb360_323688_6g_878_ash_top_users_for_instance_1_for_1_day.html"
13:39:21 6g "01380_edb360_323688_6g_878_ash_top_users_for_instance_1_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.285

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:39:23 6g "Active Session History (ASH) - Top Users"
13:39:23 ASH Top Users for Instance 2 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6g.877 */
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6g.877 */ SUM(samples) samples FROM hist
)
SELECT NVL(u.username, h.user_id) username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:39:23 6g.879
Elapsed Hours so far:    2.285
Elapsed Hours so far: 2.285

Elapsed: 00:00:00.00

13:39:23 6g "01381_edb360_323688_6g_879_ash_top_users_for_instance_2_for_1_day.html"
13:39:24 6g "01382_edb360_323688_6g_879_ash_top_users_for_instance_2_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.286

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:39:26 6g "Active Session History (ASH) - Top Users"
13:39:26 ASH Top Users for Cluster for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6g.877 */
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(s
ample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6g.877 */ SUM(samples) samples FROM hist
)
SELECT NVL(u.username, h.user_id) username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:39:26 6g.880
Elapsed Hours so far:    2.286
Elapsed Hours so far: 2.286

Elapsed: 00:00:00.00

13:39:26 6g "01383_edb360_323688_6g_880_ash_top_users_for_cluster_for_5_working_days.html"
13:39:28 6g "01384_edb360_323688_6g_880_ash_top_users_for_cluster_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.287

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:39:29 6g "Active Session History (ASH) - Top Users"
13:39:29 ASH Top Users for Instance 1 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6g.877 */
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6g.877 */ SUM(samples) samples FROM hist
)
SELECT NVL(u.username, h.user_id) username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:39:29 6g.881
Elapsed Hours so far:    2.287
Elapsed Hours so far: 2.287

Elapsed: 00:00:00.00

13:39:30 6g "01385_edb360_323688_6g_881_ash_top_users_for_instance_1_for_5_working_days.html"
13:39:31 6g "01386_edb360_323688_6g_881_ash_top_users_for_instance_1_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.288

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:39:33 6g "Active Session History (ASH) - Top Users"
13:39:33 ASH Top Users for Instance 2 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6g.877 */
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6g.877 */ SUM(samples) samples FROM hist
)
SELECT NVL(u.username, h.user_id) username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:39:33 6g.882
Elapsed Hours so far:    2.288
Elapsed Hours so far: 2.288

Elapsed: 00:00:00.00

13:39:33 6g "01387_edb360_323688_6g_882_ash_top_users_for_instance_2_for_5_working_days.html"
13:39:35 6g "01388_edb360_323688_6g_882_ash_top_users_for_instance_2_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.289

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:39:36 6g "Active Session History (ASH) - Top Users"
13:39:36 ASH Top Users for Cluster for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6g.877 */
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6g.877 */ SUM(samples) samples FROM hist
)
SELECT NVL(u.username, h.user_id) username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:39:36 6g.883
Elapsed Hours so far:    2.289
Elapsed Hours so far: 2.289

Elapsed: 00:00:00.00

13:39:37 6g "01389_edb360_323688_6g_883_ash_top_users_for_cluster_for_7_days.html"
13:39:38 6g "01390_edb360_323688_6g_883_ash_top_users_for_cluster_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.291

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:39:42 6g "Active Session History (ASH) - Top Users"
13:39:42 ASH Top Users for Instance 1 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6g.877 */
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6g.877 */ SUM(samples) samples FROM hist
)
SELECT NVL(u.username, h.user_id) username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:39:42 6g.884
Elapsed Hours so far:    2.291
Elapsed Hours so far: 2.291

Elapsed: 00:00:00.00

13:39:42 6g "01391_edb360_323688_6g_884_ash_top_users_for_instance_1_for_7_days.html"
13:39:44 6g "01392_edb360_323688_6g_884_ash_top_users_for_instance_1_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.292

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:39:46 6g "Active Session History (ASH) - Top Users"
13:39:46 ASH Top Users for Instance 2 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6g.877 */
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6g.877 */ SUM(samples) samples FROM hist
)
SELECT NVL(u.username, h.user_id) username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:39:46 6g.885
Elapsed Hours so far:    2.292
Elapsed Hours so far: 2.292

Elapsed: 00:00:00.00

13:39:46 6g "01393_edb360_323688_6g_885_ash_top_users_for_instance_2_for_7_days.html"
13:39:52 6g "01394_edb360_323688_6g_885_ash_top_users_for_instance_2_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.294

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:39:53 6g "Active Session History (ASH) - Top Users"
13:39:53 ASH Top Users for Cluster for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6g.877 */
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730'
 AND '1930'
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6g.877 */ SUM(samples) samples FROM hist
)
SELECT NVL(u.username, h.user_id) username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:39:53 6g.886
Elapsed Hours so far:    2.294
Elapsed Hours so far: 2.294

Elapsed: 00:00:00.01

13:39:53 6g "01395_edb360_323688_6g_886_ash_top_users_for_cluster_for_23_working_days.html"
13:39:57 6g "01396_edb360_323688_6g_886_ash_top_users_for_cluster_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.295

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:39:59 6g "Active Session History (ASH) - Top Users"
13:39:59 ASH Top Users for Instance 1 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6g.877 */
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6g.877 */ SUM(samples) samples FROM hist
)
SELECT NVL(u.username, h.user_id) username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:39:59 6g.887
Elapsed Hours so far:    2.295
Elapsed Hours so far: 2.295

Elapsed: 00:00:00.00

13:39:59 6g "01397_edb360_323688_6g_887_ash_top_users_for_instance_1_for_23_working_days.html"
13:40:02 6g "01398_edb360_323688_6g_887_ash_top_users_for_instance_1_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.297

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:40:04 6g "Active Session History (ASH) - Top Users"
13:40:04 ASH Top Users for Instance 2 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6g.877 */
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6g.877 */ SUM(samples) samples FROM hist
)
SELECT NVL(u.username, h.user_id) username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:40:04 6g.888
Elapsed Hours so far:    2.297
Elapsed Hours so far: 2.297

Elapsed: 00:00:00.00

13:40:04 6g "01399_edb360_323688_6g_888_ash_top_users_for_instance_2_for_23_working_days.html"
13:40:07 6g "01400_edb360_323688_6g_888_ash_top_users_for_instance_2_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.298

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:40:09 6g "Active Session History (ASH) - Top Users"
13:40:09 ASH Top Users for Cluster for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6g.877 */
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE 1 = 1
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6g.877 */ SUM(samples) samples FROM hist
)
SELECT NVL(u.username, h.user_id) username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:40:09 6g.889
Elapsed Hours so far:    2.298
Elapsed Hours so far: 2.298

Elapsed: 00:00:00.00

13:40:09 6g "01401_edb360_323688_6g_889_ash_top_users_for_cluster_for_31_days_of_history.html"
13:40:15 6g "01402_edb360_323688_6g_889_ash_top_users_for_cluster_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.300

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:40:16 6g "Active Session History (ASH) - Top Users"
13:40:16 ASH Top Users for Instance 1 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6g.877 */
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6g.877 */ SUM(samples) samples FROM hist
)
SELECT NVL(u.username, h.user_id) username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:40:16 6g.890
Elapsed Hours so far:    2.300
Elapsed Hours so far: 2.3

Elapsed: 00:00:00.00

13:40:16 6g "01403_edb360_323688_6g_890_ash_top_users_for_instance_1_for_31_days_of_history.html"
13:40:23 6g "01404_edb360_323688_6g_890_ash_top_users_for_instance_1_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.302

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:40:24 6g "Active Session History (ASH) - Top Users"
13:40:24 ASH Top Users for Instance 2 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6g.877 */
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6g.877 */ SUM(samples) samples FROM hist
)
SELECT NVL(u.username, h.user_id) username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:40:24 6g.891
Elapsed Hours so far:    2.302
Elapsed Hours so far: 2.302

Elapsed: 00:00:00.00

13:40:24 6g "01405_edb360_323688_6g_891_ash_top_users_for_instance_2_for_31_days_of_history.html"
13:40:26 6g "01406_edb360_323688_6g_891_ash_top_users_for_instance_2_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.303

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:40:28 6h "Active Session History (ASH) - Top PLSQL Procedures"
13:40:28 ASH Top PLSQL Procedures for Cluster for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
events AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6h.892 */ /* slow on ppts20 */
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples,
       e.owner plsql_entry_owner,
       e.object_name plsql_entry_object_name,
       e.procedure_name plsql_entry_procedure_name,
       p.owner plsql_owner,
       p.object_name plsql_object_name,
       p.procedure_name plsql_procedure_name
  FROM dba_hist_active_sess_history h,
       dba_procedures e,
       dba_procedures p
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 1 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND h.plsql_entry_object_id IS NOT NULL
   AND h.plsql_entry_subprogram_id IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND e.object_id(+) = h.plsql_entry_object_id
   AND e.subprogram_id(+) = h.plsql_entry_subprogram_id
   AND p.object_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry_sub
program_id != h.plsql_subprogram_id THEN h.plsql_object_id END
   AND p.subprogram_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry
_subprogram_id != h.plsql_subprogram_id THEN h.plsql_subprogram_id END
 GROUP BY
       e.owner,
       e.object_name,
       e.procedure_name,
       p.owner,
       p.object_name,
       p.procedure_name
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6h.892 */ SUM(samples) samples FROM events
)
SELECT CASE WHEN e.plsql_entry_procedure_name||e.plsql_entry_object_name||e.plsql_entry_owner IS NUL
L THEN 'null' ELSE
       NVL(e.plsql_entry_owner, 'null')||'.'||NVL(e.plsql_entry_object_name, 'null')||'.'||NVL(e.pls
ql_entry_procedure_name, 'null')
       END||
       '('||CASE WHEN e.plsql_procedure_name||e.plsql_object_name||e.plsql_owner IS NULL THEN 'null'
 ELSE
       NVL(e.plsql_owner, 'null')||'.'||NVL(e.plsql_object_name, 'null')||'.'||NVL(e.plsql_procedure
_name, 'null')
       END||')'
       procedure_name,
       e.samples,
       ROUND(100 * e.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(e.samples), 0) samples,
       NVL(ROUND(100 * SUM(e.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:40:28 6h.892
Elapsed Hours so far:    2.303
Elapsed Hours so far: 2.303

Elapsed: 00:00:00.00

13:40:28 6h "01407_edb360_323688_6h_892_ash_top_plsql_procedures_for_cluster_for_1_day.html"
13:40:36 6h "01408_edb360_323688_6h_892_ash_top_plsql_procedures_for_cluster_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.306

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:40:38 6h "Active Session History (ASH) - Top PLSQL Procedures"
13:40:38 ASH Top PLSQL Procedures for Instance 1 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
events AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6h.892 */ /* slow on ppts20 */
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples,
       e.owner plsql_entry_owner,
       e.object_name plsql_entry_object_name,
       e.procedure_name plsql_entry_procedure_name,
       p.owner plsql_owner,
       p.object_name plsql_object_name,
       p.procedure_name plsql_procedure_name
  FROM dba_hist_active_sess_history h,
       dba_procedures e,
       dba_procedures p
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND h.plsql_entry_object_id IS NOT NULL
   AND h.plsql_entry_subprogram_id IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND e.object_id(+) = h.plsql_entry_object_id
   AND e.subprogram_id(+) = h.plsql_entry_subprogram_id
   AND p.object_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry_sub
program_id != h.plsql_subprogram_id THEN h.plsql_object_id END
   AND p.subprogram_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry
_subprogram_id != h.plsql_subprogram_id THEN h.plsql_subprogram_id END
 GROUP BY
       e.owner,
       e.object_name,
       e.procedure_name,
       p.owner,
       p.object_name,
       p.procedure_name
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6h.892 */ SUM(samples) samples FROM events
)
SELECT CASE WHEN e.plsql_entry_procedure_name||e.plsql_entry_object_name||e.plsql_entry_owner IS NUL
L THEN 'null' ELSE
       NVL(e.plsql_entry_owner, 'null')||'.'||NVL(e.plsql_entry_object_name, 'null')||'.'||NVL(e.pls
ql_entry_procedure_name, 'null')
       END||
       '('||CASE WHEN e.plsql_procedure_name||e.plsql_object_name||e.plsql_owner IS NULL THEN 'null'
 ELSE
       NVL(e.plsql_owner, 'null')||'.'||NVL(e.plsql_object_name, 'null')||'.'||NVL(e.plsql_procedure
_name, 'null')
       END||')'
       procedure_name,
       e.samples,
       ROUND(100 * e.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(e.samples), 0) samples,
       NVL(ROUND(100 * SUM(e.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:40:38 6h.893
Elapsed Hours so far:    2.306
Elapsed Hours so far: 2.306

Elapsed: 00:00:00.00

13:40:38 6h "01409_edb360_323688_6h_893_ash_top_plsql_procedures_for_instance_1_for_1_day.html"
13:40:45 6h "01410_edb360_323688_6h_893_ash_top_plsql_procedures_for_instance_1_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.309

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:40:47 6h "Active Session History (ASH) - Top PLSQL Procedures"
13:40:47 ASH Top PLSQL Procedures for Instance 2 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
events AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6h.892 */ /* slow on ppts20 */
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples,
       e.owner plsql_entry_owner,
       e.object_name plsql_entry_object_name,
       e.procedure_name plsql_entry_procedure_name,
       p.owner plsql_owner,
       p.object_name plsql_object_name,
       p.procedure_name plsql_procedure_name
  FROM dba_hist_active_sess_history h,
       dba_procedures e,
       dba_procedures p
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND h.plsql_entry_object_id IS NOT NULL
   AND h.plsql_entry_subprogram_id IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND e.object_id(+) = h.plsql_entry_object_id
   AND e.subprogram_id(+) = h.plsql_entry_subprogram_id
   AND p.object_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry_sub
program_id != h.plsql_subprogram_id THEN h.plsql_object_id END
   AND p.subprogram_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry
_subprogram_id != h.plsql_subprogram_id THEN h.plsql_subprogram_id END
 GROUP BY
       e.owner,
       e.object_name,
       e.procedure_name,
       p.owner,
       p.object_name,
       p.procedure_name
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6h.892 */ SUM(samples) samples FROM events
)
SELECT CASE WHEN e.plsql_entry_procedure_name||e.plsql_entry_object_name||e.plsql_entry_owner IS NUL
L THEN 'null' ELSE
       NVL(e.plsql_entry_owner, 'null')||'.'||NVL(e.plsql_entry_object_name, 'null')||'.'||NVL(e.pls
ql_entry_procedure_name, 'null')
       END||
       '('||CASE WHEN e.plsql_procedure_name||e.plsql_object_name||e.plsql_owner IS NULL THEN 'null'
 ELSE
       NVL(e.plsql_owner, 'null')||'.'||NVL(e.plsql_object_name, 'null')||'.'||NVL(e.plsql_procedure
_name, 'null')
       END||')'
       procedure_name,
       e.samples,
       ROUND(100 * e.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(e.samples), 0) samples,
       NVL(ROUND(100 * SUM(e.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:40:47 6h.894
Elapsed Hours so far:    2.309
Elapsed Hours so far: 2.309

Elapsed: 00:00:00.00

13:40:47 6h "01411_edb360_323688_6h_894_ash_top_plsql_procedures_for_instance_2_for_1_day.html"
13:40:49 6h "01412_edb360_323688_6h_894_ash_top_plsql_procedures_for_instance_2_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.310

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:40:51 6h "Active Session History (ASH) - Top PLSQL Procedures"
13:40:51 ASH Top PLSQL Procedures for Cluster for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
events AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6h.892 */ /* slow on ppts20 */
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples,
       e.owner plsql_entry_owner,
       e.object_name plsql_entry_object_name,
       e.procedure_name plsql_entry_procedure_name,
       p.owner plsql_owner,
       p.object_name plsql_object_name,
       p.procedure_name plsql_procedure_name
  FROM dba_hist_active_sess_history h,
       dba_procedures e,
       dba_procedures p
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(s
ample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND h.plsql_entry_object_id IS NOT NULL
   AND h.plsql_entry_subprogram_id IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND e.object_id(+) = h.plsql_entry_object_id
   AND e.subprogram_id(+) = h.plsql_entry_subprogram_id
   AND p.object_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry_sub
program_id != h.plsql_subprogram_id THEN h.plsql_object_id END
   AND p.subprogram_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry
_subprogram_id != h.plsql_subprogram_id THEN h.plsql_subprogram_id END
 GROUP BY
       e.owner,
       e.object_name,
       e.procedure_name,
       p.owner,
       p.object_name,
       p.procedure_name
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6h.892 */ SUM(samples) samples FROM events
)
SELECT CASE WHEN e.plsql_entry_procedure_name||e.plsql_entry_object_name||e.plsql_entry_owner IS NUL
L THEN 'null' ELSE
       NVL(e.plsql_entry_owner, 'null')||'.'||NVL(e.plsql_entry_object_name, 'null')||'.'||NVL(e.pls
ql_entry_procedure_name, 'null')
       END||
       '('||CASE WHEN e.plsql_procedure_name||e.plsql_object_name||e.plsql_owner IS NULL THEN 'null'
 ELSE
       NVL(e.plsql_owner, 'null')||'.'||NVL(e.plsql_object_name, 'null')||'.'||NVL(e.plsql_procedure
_name, 'null')
       END||')'
       procedure_name,
       e.samples,
       ROUND(100 * e.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(e.samples), 0) samples,
       NVL(ROUND(100 * SUM(e.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:40:51 6h.895
Elapsed Hours so far:    2.310
Elapsed Hours so far: 2.31

Elapsed: 00:00:00.00

13:40:51 6h "01413_edb360_323688_6h_895_ash_top_plsql_procedures_for_cluster_for_5_working_days.html"
13:40:54 6h "01414_edb360_323688_6h_895_ash_top_plsql_procedures_for_cluster_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.311

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:40:56 6h "Active Session History (ASH) - Top PLSQL Procedures"
13:40:56 ASH Top PLSQL Procedures for Instance 1 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
events AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6h.892 */ /* slow on ppts20 */
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples,
       e.owner plsql_entry_owner,
       e.object_name plsql_entry_object_name,
       e.procedure_name plsql_entry_procedure_name,
       p.owner plsql_owner,
       p.object_name plsql_object_name,
       p.procedure_name plsql_procedure_name
  FROM dba_hist_active_sess_history h,
       dba_procedures e,
       dba_procedures p
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND h.plsql_entry_object_id IS NOT NULL
   AND h.plsql_entry_subprogram_id IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND e.object_id(+) = h.plsql_entry_object_id
   AND e.subprogram_id(+) = h.plsql_entry_subprogram_id
   AND p.object_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry_sub
program_id != h.plsql_subprogram_id THEN h.plsql_object_id END
   AND p.subprogram_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry
_subprogram_id != h.plsql_subprogram_id THEN h.plsql_subprogram_id END
 GROUP BY
       e.owner,
       e.object_name,
       e.procedure_name,
       p.owner,
       p.object_name,
       p.procedure_name
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6h.892 */ SUM(samples) samples FROM events
)
SELECT CASE WHEN e.plsql_entry_procedure_name||e.plsql_entry_object_name||e.plsql_entry_owner IS NUL
L THEN 'null' ELSE
       NVL(e.plsql_entry_owner, 'null')||'.'||NVL(e.plsql_entry_object_name, 'null')||'.'||NVL(e.pls
ql_entry_procedure_name, 'null')
       END||
       '('||CASE WHEN e.plsql_procedure_name||e.plsql_object_name||e.plsql_owner IS NULL THEN 'null'
 ELSE
       NVL(e.plsql_owner, 'null')||'.'||NVL(e.plsql_object_name, 'null')||'.'||NVL(e.plsql_procedure
_name, 'null')
       END||')'
       procedure_name,
       e.samples,
       ROUND(100 * e.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(e.samples), 0) samples,
       NVL(ROUND(100 * SUM(e.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:40:56 6h.896
Elapsed Hours so far:    2.311
Elapsed Hours so far: 2.311

Elapsed: 00:00:00.00

13:40:56 6h "01415_edb360_323688_6h_896_ash_top_plsql_procedures_for_instance_1_for_5_working_days.html"
13:40:58 6h "01416_edb360_323688_6h_896_ash_top_plsql_procedures_for_instance_1_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.312

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:41:00 6h "Active Session History (ASH) - Top PLSQL Procedures"
13:41:00 ASH Top PLSQL Procedures for Instance 2 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
events AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6h.892 */ /* slow on ppts20 */
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples,
       e.owner plsql_entry_owner,
       e.object_name plsql_entry_object_name,
       e.procedure_name plsql_entry_procedure_name,
       p.owner plsql_owner,
       p.object_name plsql_object_name,
       p.procedure_name plsql_procedure_name
  FROM dba_hist_active_sess_history h,
       dba_procedures e,
       dba_procedures p
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND h.plsql_entry_object_id IS NOT NULL
   AND h.plsql_entry_subprogram_id IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND e.object_id(+) = h.plsql_entry_object_id
   AND e.subprogram_id(+) = h.plsql_entry_subprogram_id
   AND p.object_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry_sub
program_id != h.plsql_subprogram_id THEN h.plsql_object_id END
   AND p.subprogram_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry
_subprogram_id != h.plsql_subprogram_id THEN h.plsql_subprogram_id END
 GROUP BY
       e.owner,
       e.object_name,
       e.procedure_name,
       p.owner,
       p.object_name,
       p.procedure_name
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6h.892 */ SUM(samples) samples FROM events
)
SELECT CASE WHEN e.plsql_entry_procedure_name||e.plsql_entry_object_name||e.plsql_entry_owner IS NUL
L THEN 'null' ELSE
       NVL(e.plsql_entry_owner, 'null')||'.'||NVL(e.plsql_entry_object_name, 'null')||'.'||NVL(e.pls
ql_entry_procedure_name, 'null')
       END||
       '('||CASE WHEN e.plsql_procedure_name||e.plsql_object_name||e.plsql_owner IS NULL THEN 'null'
 ELSE
       NVL(e.plsql_owner, 'null')||'.'||NVL(e.plsql_object_name, 'null')||'.'||NVL(e.plsql_procedure
_name, 'null')
       END||')'
       procedure_name,
       e.samples,
       ROUND(100 * e.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(e.samples), 0) samples,
       NVL(ROUND(100 * SUM(e.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:41:00 6h.897
Elapsed Hours so far:    2.312
Elapsed Hours so far: 2.312

Elapsed: 00:00:00.00

13:41:00 6h "01417_edb360_323688_6h_897_ash_top_plsql_procedures_for_instance_2_for_5_working_days.html"
13:41:03 6h "01418_edb360_323688_6h_897_ash_top_plsql_procedures_for_instance_2_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.314

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:41:05 6h "Active Session History (ASH) - Top PLSQL Procedures"
13:41:05 ASH Top PLSQL Procedures for Cluster for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
events AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6h.892 */ /* slow on ppts20 */
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples,
       e.owner plsql_entry_owner,
       e.object_name plsql_entry_object_name,
       e.procedure_name plsql_entry_procedure_name,
       p.owner plsql_owner,
       p.object_name plsql_object_name,
       p.procedure_name plsql_procedure_name
  FROM dba_hist_active_sess_history h,
       dba_procedures e,
       dba_procedures p
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND h.plsql_entry_object_id IS NOT NULL
   AND h.plsql_entry_subprogram_id IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND e.object_id(+) = h.plsql_entry_object_id
   AND e.subprogram_id(+) = h.plsql_entry_subprogram_id
   AND p.object_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry_sub
program_id != h.plsql_subprogram_id THEN h.plsql_object_id END
   AND p.subprogram_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry
_subprogram_id != h.plsql_subprogram_id THEN h.plsql_subprogram_id END
 GROUP BY
       e.owner,
       e.object_name,
       e.procedure_name,
       p.owner,
       p.object_name,
       p.procedure_name
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6h.892 */ SUM(samples) samples FROM events
)
SELECT CASE WHEN e.plsql_entry_procedure_name||e.plsql_entry_object_name||e.plsql_entry_owner IS NUL
L THEN 'null' ELSE
       NVL(e.plsql_entry_owner, 'null')||'.'||NVL(e.plsql_entry_object_name, 'null')||'.'||NVL(e.pls
ql_entry_procedure_name, 'null')
       END||
       '('||CASE WHEN e.plsql_procedure_name||e.plsql_object_name||e.plsql_owner IS NULL THEN 'null'
 ELSE
       NVL(e.plsql_owner, 'null')||'.'||NVL(e.plsql_object_name, 'null')||'.'||NVL(e.plsql_procedure
_name, 'null')
       END||')'
       procedure_name,
       e.samples,
       ROUND(100 * e.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(e.samples), 0) samples,
       NVL(ROUND(100 * SUM(e.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:41:05 6h.898
Elapsed Hours so far:    2.314
Elapsed Hours so far: 2.314

Elapsed: 00:00:00.01

13:41:05 6h "01419_edb360_323688_6h_898_ash_top_plsql_procedures_for_cluster_for_7_days.html"
13:41:12 6h "01420_edb360_323688_6h_898_ash_top_plsql_procedures_for_cluster_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.316

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:41:14 6h "Active Session History (ASH) - Top PLSQL Procedures"
13:41:14 ASH Top PLSQL Procedures for Instance 1 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
events AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6h.892 */ /* slow on ppts20 */
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples,
       e.owner plsql_entry_owner,
       e.object_name plsql_entry_object_name,
       e.procedure_name plsql_entry_procedure_name,
       p.owner plsql_owner,
       p.object_name plsql_object_name,
       p.procedure_name plsql_procedure_name
  FROM dba_hist_active_sess_history h,
       dba_procedures e,
       dba_procedures p
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND h.plsql_entry_object_id IS NOT NULL
   AND h.plsql_entry_subprogram_id IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND e.object_id(+) = h.plsql_entry_object_id
   AND e.subprogram_id(+) = h.plsql_entry_subprogram_id
   AND p.object_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry_sub
program_id != h.plsql_subprogram_id THEN h.plsql_object_id END
   AND p.subprogram_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry
_subprogram_id != h.plsql_subprogram_id THEN h.plsql_subprogram_id END
 GROUP BY
       e.owner,
       e.object_name,
       e.procedure_name,
       p.owner,
       p.object_name,
       p.procedure_name
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6h.892 */ SUM(samples) samples FROM events
)
SELECT CASE WHEN e.plsql_entry_procedure_name||e.plsql_entry_object_name||e.plsql_entry_owner IS NUL
L THEN 'null' ELSE
       NVL(e.plsql_entry_owner, 'null')||'.'||NVL(e.plsql_entry_object_name, 'null')||'.'||NVL(e.pls
ql_entry_procedure_name, 'null')
       END||
       '('||CASE WHEN e.plsql_procedure_name||e.plsql_object_name||e.plsql_owner IS NULL THEN 'null'
 ELSE
       NVL(e.plsql_owner, 'null')||'.'||NVL(e.plsql_object_name, 'null')||'.'||NVL(e.plsql_procedure
_name, 'null')
       END||')'
       procedure_name,
       e.samples,
       ROUND(100 * e.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(e.samples), 0) samples,
       NVL(ROUND(100 * SUM(e.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:41:14 6h.899
Elapsed Hours so far:    2.316
Elapsed Hours so far: 2.316

Elapsed: 00:00:00.00

13:41:14 6h "01421_edb360_323688_6h_899_ash_top_plsql_procedures_for_instance_1_for_7_days.html"
13:41:21 6h "01422_edb360_323688_6h_899_ash_top_plsql_procedures_for_instance_1_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.319

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:41:23 6h "Active Session History (ASH) - Top PLSQL Procedures"
13:41:23 ASH Top PLSQL Procedures for Instance 2 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
events AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6h.892 */ /* slow on ppts20 */
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples,
       e.owner plsql_entry_owner,
       e.object_name plsql_entry_object_name,
       e.procedure_name plsql_entry_procedure_name,
       p.owner plsql_owner,
       p.object_name plsql_object_name,
       p.procedure_name plsql_procedure_name
  FROM dba_hist_active_sess_history h,
       dba_procedures e,
       dba_procedures p
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND h.plsql_entry_object_id IS NOT NULL
   AND h.plsql_entry_subprogram_id IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND e.object_id(+) = h.plsql_entry_object_id
   AND e.subprogram_id(+) = h.plsql_entry_subprogram_id
   AND p.object_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry_sub
program_id != h.plsql_subprogram_id THEN h.plsql_object_id END
   AND p.subprogram_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry
_subprogram_id != h.plsql_subprogram_id THEN h.plsql_subprogram_id END
 GROUP BY
       e.owner,
       e.object_name,
       e.procedure_name,
       p.owner,
       p.object_name,
       p.procedure_name
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6h.892 */ SUM(samples) samples FROM events
)
SELECT CASE WHEN e.plsql_entry_procedure_name||e.plsql_entry_object_name||e.plsql_entry_owner IS NUL
L THEN 'null' ELSE
       NVL(e.plsql_entry_owner, 'null')||'.'||NVL(e.plsql_entry_object_name, 'null')||'.'||NVL(e.pls
ql_entry_procedure_name, 'null')
       END||
       '('||CASE WHEN e.plsql_procedure_name||e.plsql_object_name||e.plsql_owner IS NULL THEN 'null'
 ELSE
       NVL(e.plsql_owner, 'null')||'.'||NVL(e.plsql_object_name, 'null')||'.'||NVL(e.plsql_procedure
_name, 'null')
       END||')'
       procedure_name,
       e.samples,
       ROUND(100 * e.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(e.samples), 0) samples,
       NVL(ROUND(100 * SUM(e.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:41:23 6h.900
Elapsed Hours so far:    2.319
Elapsed Hours so far: 2.319

Elapsed: 00:00:00.00

13:41:23 6h "01423_edb360_323688_6h_900_ash_top_plsql_procedures_for_instance_2_for_7_days.html"
13:41:25 6h "01424_edb360_323688_6h_900_ash_top_plsql_procedures_for_instance_2_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.320

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:41:27 6h "Active Session History (ASH) - Top PLSQL Procedures"
13:41:27 ASH Top PLSQL Procedures for Cluster for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
events AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6h.892 */ /* slow on ppts20 */
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples,
       e.owner plsql_entry_owner,
       e.object_name plsql_entry_object_name,
       e.procedure_name plsql_entry_procedure_name,
       p.owner plsql_owner,
       p.object_name plsql_object_name,
       p.procedure_name plsql_procedure_name
  FROM dba_hist_active_sess_history h,
       dba_procedures e,
       dba_procedures p
 WHERE TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730'
 AND '1930'
   AND h.plsql_entry_object_id IS NOT NULL
   AND h.plsql_entry_subprogram_id IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND e.object_id(+) = h.plsql_entry_object_id
   AND e.subprogram_id(+) = h.plsql_entry_subprogram_id
   AND p.object_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry_sub
program_id != h.plsql_subprogram_id THEN h.plsql_object_id END
   AND p.subprogram_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry
_subprogram_id != h.plsql_subprogram_id THEN h.plsql_subprogram_id END
 GROUP BY
       e.owner,
       e.object_name,
       e.procedure_name,
       p.owner,
       p.object_name,
       p.procedure_name
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6h.892 */ SUM(samples) samples FROM events
)
SELECT CASE WHEN e.plsql_entry_procedure_name||e.plsql_entry_object_name||e.plsql_entry_owner IS NUL
L THEN 'null' ELSE
       NVL(e.plsql_entry_owner, 'null')||'.'||NVL(e.plsql_entry_object_name, 'null')||'.'||NVL(e.pls
ql_entry_procedure_name, 'null')
       END||
       '('||CASE WHEN e.plsql_procedure_name||e.plsql_object_name||e.plsql_owner IS NULL THEN 'null'
 ELSE
       NVL(e.plsql_owner, 'null')||'.'||NVL(e.plsql_object_name, 'null')||'.'||NVL(e.plsql_procedure
_name, 'null')
       END||')'
       procedure_name,
       e.samples,
       ROUND(100 * e.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(e.samples), 0) samples,
       NVL(ROUND(100 * SUM(e.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:41:27 6h.901
Elapsed Hours so far:    2.320
Elapsed Hours so far: 2.32

Elapsed: 00:00:00.00

13:41:27 6h "01425_edb360_323688_6h_901_ash_top_plsql_procedures_for_cluster_for_23_working_days.html"
13:41:31 6h "01426_edb360_323688_6h_901_ash_top_plsql_procedures_for_cluster_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.322

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:41:34 6h "Active Session History (ASH) - Top PLSQL Procedures"
13:41:34 ASH Top PLSQL Procedures for Instance 1 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
events AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6h.892 */ /* slow on ppts20 */
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples,
       e.owner plsql_entry_owner,
       e.object_name plsql_entry_object_name,
       e.procedure_name plsql_entry_procedure_name,
       p.owner plsql_owner,
       p.object_name plsql_object_name,
       p.procedure_name plsql_procedure_name
  FROM dba_hist_active_sess_history h,
       dba_procedures e,
       dba_procedures p
 WHERE instance_number = 1 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND h.plsql_entry_object_id IS NOT NULL
   AND h.plsql_entry_subprogram_id IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND e.object_id(+) = h.plsql_entry_object_id
   AND e.subprogram_id(+) = h.plsql_entry_subprogram_id
   AND p.object_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry_sub
program_id != h.plsql_subprogram_id THEN h.plsql_object_id END
   AND p.subprogram_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry
_subprogram_id != h.plsql_subprogram_id THEN h.plsql_subprogram_id END
 GROUP BY
       e.owner,
       e.object_name,
       e.procedure_name,
       p.owner,
       p.object_name,
       p.procedure_name
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6h.892 */ SUM(samples) samples FROM events
)
SELECT CASE WHEN e.plsql_entry_procedure_name||e.plsql_entry_object_name||e.plsql_entry_owner IS NUL
L THEN 'null' ELSE
       NVL(e.plsql_entry_owner, 'null')||'.'||NVL(e.plsql_entry_object_name, 'null')||'.'||NVL(e.pls
ql_entry_procedure_name, 'null')
       END||
       '('||CASE WHEN e.plsql_procedure_name||e.plsql_object_name||e.plsql_owner IS NULL THEN 'null'
 ELSE
       NVL(e.plsql_owner, 'null')||'.'||NVL(e.plsql_object_name, 'null')||'.'||NVL(e.plsql_procedure
_name, 'null')
       END||')'
       procedure_name,
       e.samples,
       ROUND(100 * e.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(e.samples), 0) samples,
       NVL(ROUND(100 * SUM(e.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:41:34 6h.902
Elapsed Hours so far:    2.322
Elapsed Hours so far: 2.322

Elapsed: 00:00:00.00

13:41:34 6h "01427_edb360_323688_6h_902_ash_top_plsql_procedures_for_instance_1_for_23_working_days.html"
13:41:37 6h "01428_edb360_323688_6h_902_ash_top_plsql_procedures_for_instance_1_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.323

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:41:39 6h "Active Session History (ASH) - Top PLSQL Procedures"
13:41:39 ASH Top PLSQL Procedures for Instance 2 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
events AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6h.892 */ /* slow on ppts20 */
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples,
       e.owner plsql_entry_owner,
       e.object_name plsql_entry_object_name,
       e.procedure_name plsql_entry_procedure_name,
       p.owner plsql_owner,
       p.object_name plsql_object_name,
       p.procedure_name plsql_procedure_name
  FROM dba_hist_active_sess_history h,
       dba_procedures e,
       dba_procedures p
 WHERE instance_number = 2 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND h.plsql_entry_object_id IS NOT NULL
   AND h.plsql_entry_subprogram_id IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND e.object_id(+) = h.plsql_entry_object_id
   AND e.subprogram_id(+) = h.plsql_entry_subprogram_id
   AND p.object_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry_sub
program_id != h.plsql_subprogram_id THEN h.plsql_object_id END
   AND p.subprogram_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry
_subprogram_id != h.plsql_subprogram_id THEN h.plsql_subprogram_id END
 GROUP BY
       e.owner,
       e.object_name,
       e.procedure_name,
       p.owner,
       p.object_name,
       p.procedure_name
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6h.892 */ SUM(samples) samples FROM events
)
SELECT CASE WHEN e.plsql_entry_procedure_name||e.plsql_entry_object_name||e.plsql_entry_owner IS NUL
L THEN 'null' ELSE
       NVL(e.plsql_entry_owner, 'null')||'.'||NVL(e.plsql_entry_object_name, 'null')||'.'||NVL(e.pls
ql_entry_procedure_name, 'null')
       END||
       '('||CASE WHEN e.plsql_procedure_name||e.plsql_object_name||e.plsql_owner IS NULL THEN 'null'
 ELSE
       NVL(e.plsql_owner, 'null')||'.'||NVL(e.plsql_object_name, 'null')||'.'||NVL(e.plsql_procedure
_name, 'null')
       END||')'
       procedure_name,
       e.samples,
       ROUND(100 * e.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(e.samples), 0) samples,
       NVL(ROUND(100 * SUM(e.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:41:39 6h.903
Elapsed Hours so far:    2.323
Elapsed Hours so far: 2.323

Elapsed: 00:00:00.00

13:41:40 6h "01429_edb360_323688_6h_903_ash_top_plsql_procedures_for_instance_2_for_23_working_days.html"
13:41:42 6h "01430_edb360_323688_6h_903_ash_top_plsql_procedures_for_instance_2_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.325

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:41:45 6h "Active Session History (ASH) - Top PLSQL Procedures"
13:41:45 ASH Top PLSQL Procedures for Cluster for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
events AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6h.892 */ /* slow on ppts20 */
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples,
       e.owner plsql_entry_owner,
       e.object_name plsql_entry_object_name,
       e.procedure_name plsql_entry_procedure_name,
       p.owner plsql_owner,
       p.object_name plsql_object_name,
       p.procedure_name plsql_procedure_name
  FROM dba_hist_active_sess_history h,
       dba_procedures e,
       dba_procedures p
 WHERE 1 = 1
   AND h.plsql_entry_object_id IS NOT NULL
   AND h.plsql_entry_subprogram_id IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND e.object_id(+) = h.plsql_entry_object_id
   AND e.subprogram_id(+) = h.plsql_entry_subprogram_id
   AND p.object_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry_sub
program_id != h.plsql_subprogram_id THEN h.plsql_object_id END
   AND p.subprogram_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry
_subprogram_id != h.plsql_subprogram_id THEN h.plsql_subprogram_id END
 GROUP BY
       e.owner,
       e.object_name,
       e.procedure_name,
       p.owner,
       p.object_name,
       p.procedure_name
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6h.892 */ SUM(samples) samples FROM events
)
SELECT CASE WHEN e.plsql_entry_procedure_name||e.plsql_entry_object_name||e.plsql_entry_owner IS NUL
L THEN 'null' ELSE
       NVL(e.plsql_entry_owner, 'null')||'.'||NVL(e.plsql_entry_object_name, 'null')||'.'||NVL(e.pls
ql_entry_procedure_name, 'null')
       END||
       '('||CASE WHEN e.plsql_procedure_name||e.plsql_object_name||e.plsql_owner IS NULL THEN 'null'
 ELSE
       NVL(e.plsql_owner, 'null')||'.'||NVL(e.plsql_object_name, 'null')||'.'||NVL(e.plsql_procedure
_name, 'null')
       END||')'
       procedure_name,
       e.samples,
       ROUND(100 * e.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(e.samples), 0) samples,
       NVL(ROUND(100 * SUM(e.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:41:45 6h.904
Elapsed Hours so far:    2.325
Elapsed Hours so far: 2.325

Elapsed: 00:00:00.00

13:41:45 6h "01431_edb360_323688_6h_904_ash_top_plsql_procedures_for_cluster_for_31_days_of_history.html"
13:41:52 6h "01432_edb360_323688_6h_904_ash_top_plsql_procedures_for_cluster_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.327

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:41:54 6h "Active Session History (ASH) - Top PLSQL Procedures"
13:41:54 ASH Top PLSQL Procedures for Instance 1 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
events AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6h.892 */ /* slow on ppts20 */
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples,
       e.owner plsql_entry_owner,
       e.object_name plsql_entry_object_name,
       e.procedure_name plsql_entry_procedure_name,
       p.owner plsql_owner,
       p.object_name plsql_object_name,
       p.procedure_name plsql_procedure_name
  FROM dba_hist_active_sess_history h,
       dba_procedures e,
       dba_procedures p
 WHERE instance_number = 1
   AND h.plsql_entry_object_id IS NOT NULL
   AND h.plsql_entry_subprogram_id IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND e.object_id(+) = h.plsql_entry_object_id
   AND e.subprogram_id(+) = h.plsql_entry_subprogram_id
   AND p.object_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry_sub
program_id != h.plsql_subprogram_id THEN h.plsql_object_id END
   AND p.subprogram_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry
_subprogram_id != h.plsql_subprogram_id THEN h.plsql_subprogram_id END
 GROUP BY
       e.owner,
       e.object_name,
       e.procedure_name,
       p.owner,
       p.object_name,
       p.procedure_name
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6h.892 */ SUM(samples) samples FROM events
)
SELECT CASE WHEN e.plsql_entry_procedure_name||e.plsql_entry_object_name||e.plsql_entry_owner IS NUL
L THEN 'null' ELSE
       NVL(e.plsql_entry_owner, 'null')||'.'||NVL(e.plsql_entry_object_name, 'null')||'.'||NVL(e.pls
ql_entry_procedure_name, 'null')
       END||
       '('||CASE WHEN e.plsql_procedure_name||e.plsql_object_name||e.plsql_owner IS NULL THEN 'null'
 ELSE
       NVL(e.plsql_owner, 'null')||'.'||NVL(e.plsql_object_name, 'null')||'.'||NVL(e.plsql_procedure
_name, 'null')
       END||')'
       procedure_name,
       e.samples,
       ROUND(100 * e.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(e.samples), 0) samples,
       NVL(ROUND(100 * SUM(e.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:41:54 6h.905
Elapsed Hours so far:    2.327
Elapsed Hours so far: 2.327

Elapsed: 00:00:00.00

13:41:54 6h "01433_edb360_323688_6h_905_ash_top_plsql_procedures_for_instance_1_for_31_days_of_history.html"
13:42:02 6h "01434_edb360_323688_6h_905_ash_top_plsql_procedures_for_instance_1_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.330

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:42:04 6h "Active Session History (ASH) - Top PLSQL Procedures"
13:42:04 ASH Top PLSQL Procedures for Instance 2 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
events AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6h.892 */ /* slow on ppts20 */
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples,
       e.owner plsql_entry_owner,
       e.object_name plsql_entry_object_name,
       e.procedure_name plsql_entry_procedure_name,
       p.owner plsql_owner,
       p.object_name plsql_object_name,
       p.procedure_name plsql_procedure_name
  FROM dba_hist_active_sess_history h,
       dba_procedures e,
       dba_procedures p
 WHERE instance_number = 2
   AND h.plsql_entry_object_id IS NOT NULL
   AND h.plsql_entry_subprogram_id IS NOT NULL
   AND h.snap_id BETWEEN 3473 AND 4962
   AND h.dbid = 2109323688
   AND e.object_id(+) = h.plsql_entry_object_id
   AND e.subprogram_id(+) = h.plsql_entry_subprogram_id
   AND p.object_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry_sub
program_id != h.plsql_subprogram_id THEN h.plsql_object_id END
   AND p.subprogram_id(+) = CASE WHEN h.plsql_entry_object_id != h.plsql_object_id AND h.plsql_entry
_subprogram_id != h.plsql_subprogram_id THEN h.plsql_subprogram_id END
 GROUP BY
       e.owner,
       e.object_name,
       e.procedure_name,
       p.owner,
       p.object_name,
       p.procedure_name
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6h.892 */ SUM(samples) samples FROM events
)
SELECT CASE WHEN e.plsql_entry_procedure_name||e.plsql_entry_object_name||e.plsql_entry_owner IS NUL
L THEN 'null' ELSE
       NVL(e.plsql_entry_owner, 'null')||'.'||NVL(e.plsql_entry_object_name, 'null')||'.'||NVL(e.pls
ql_entry_procedure_name, 'null')
       END||
       '('||CASE WHEN e.plsql_procedure_name||e.plsql_object_name||e.plsql_owner IS NULL THEN 'null'
 ELSE
       NVL(e.plsql_owner, 'null')||'.'||NVL(e.plsql_object_name, 'null')||'.'||NVL(e.plsql_procedure
_name, 'null')
       END||')'
       procedure_name,
       e.samples,
       ROUND(100 * e.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples >= t.samples / 1000 AND rn <= 14
 UNION ALL
SELECT 'Others',
       NVL(SUM(e.samples), 0) samples,
       NVL(ROUND(100 * SUM(e.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM events e,
       total t
 WHERE e.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:42:04 6h.906
Elapsed Hours so far:    2.330
Elapsed Hours so far: 2.33

Elapsed: 00:00:00.00

13:42:05 6h "01435_edb360_323688_6h_906_ash_top_plsql_procedures_for_instance_2_for_31_days_of_history.html"
13:42:07 6h "01436_edb360_323688_6h_906_ash_top_plsql_procedures_for_instance_2_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.332

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:42:11 6i "Active Session History (ASH) - Top Data Objects"
13:42:11 ASH Top Data Objects for Cluster for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6i.907 */ /* slow on ppts20 */
       current_obj#,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 1 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND current_obj# >= 0
   AND wait_class IN ('Application', 'Cluster', 'Concurrency', 'System I/O', 'User I/O')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       current_obj#
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6i.907 */ SUM(samples) samples FROM hist
)
SELECT h.current_obj#||
       CASE h.current_obj# WHEN 0 THEN ' UNDO' ELSE
       TRIM('.' FROM ' '||o.owner||'.'||o.object_name||'.'||o.subobject_name)
       END
       data_object,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_objects o
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND o.object_id(+) = h.current_obj#
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:42:11 6i.907
Elapsed Hours so far:    2.332
Elapsed Hours so far: 2.332

Elapsed: 00:00:00.00

13:42:11 6i "01437_edb360_323688_6i_907_ash_top_data_objects_for_cluster_for_1_day.html"
13:42:24 6i "01438_edb360_323688_6i_907_ash_top_data_objects_for_cluster_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.337

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:42:28 6i "Active Session History (ASH) - Top Data Objects"
13:42:28 ASH Top Data Objects for Instance 1 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6i.907 */ /* slow on ppts20 */
       current_obj#,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND current_obj# >= 0
   AND wait_class IN ('Application', 'Cluster', 'Concurrency', 'System I/O', 'User I/O')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       current_obj#
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6i.907 */ SUM(samples) samples FROM hist
)
SELECT h.current_obj#||
       CASE h.current_obj# WHEN 0 THEN ' UNDO' ELSE
       TRIM('.' FROM ' '||o.owner||'.'||o.object_name||'.'||o.subobject_name)
       END
       data_object,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_objects o
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND o.object_id(+) = h.current_obj#
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:42:28 6i.908
Elapsed Hours so far:    2.337
Elapsed Hours so far: 2.337

Elapsed: 00:00:00.00

13:42:29 6i "01439_edb360_323688_6i_908_ash_top_data_objects_for_instance_1_for_1_day.html"
13:42:39 6i "01440_edb360_323688_6i_908_ash_top_data_objects_for_instance_1_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.341

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:42:43 6i "Active Session History (ASH) - Top Data Objects"
13:42:43 ASH Top Data Objects for Instance 2 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6i.907 */ /* slow on ppts20 */
       current_obj#,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND current_obj# >= 0
   AND wait_class IN ('Application', 'Cluster', 'Concurrency', 'System I/O', 'User I/O')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       current_obj#
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6i.907 */ SUM(samples) samples FROM hist
)
SELECT h.current_obj#||
       CASE h.current_obj# WHEN 0 THEN ' UNDO' ELSE
       TRIM('.' FROM ' '||o.owner||'.'||o.object_name||'.'||o.subobject_name)
       END
       data_object,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_objects o
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND o.object_id(+) = h.current_obj#
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:42:43 6i.909
Elapsed Hours so far:    2.341
Elapsed Hours so far: 2.341

Elapsed: 00:00:00.01

13:42:43 6i "01441_edb360_323688_6i_909_ash_top_data_objects_for_instance_2_for_1_day.html"
13:42:51 6i "01442_edb360_323688_6i_909_ash_top_data_objects_for_instance_2_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.344

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:42:55 6i "Active Session History (ASH) - Top Data Objects"
13:42:55 ASH Top Data Objects for Cluster for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6i.907 */ /* slow on ppts20 */
       current_obj#,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(s
ample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND current_obj# >= 0
   AND wait_class IN ('Application', 'Cluster', 'Concurrency', 'System I/O', 'User I/O')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       current_obj#
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6i.907 */ SUM(samples) samples FROM hist
)
SELECT h.current_obj#||
       CASE h.current_obj# WHEN 0 THEN ' UNDO' ELSE
       TRIM('.' FROM ' '||o.owner||'.'||o.object_name||'.'||o.subobject_name)
       END
       data_object,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_objects o
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND o.object_id(+) = h.current_obj#
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:42:55 6i.910
Elapsed Hours so far:    2.344
Elapsed Hours so far: 2.344

Elapsed: 00:00:00.00

13:42:55 6i "01443_edb360_323688_6i_910_ash_top_data_objects_for_cluster_for_5_working_days.html"
13:43:06 6i "01444_edb360_323688_6i_910_ash_top_data_objects_for_cluster_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.348

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:43:10 6i "Active Session History (ASH) - Top Data Objects"
13:43:10 ASH Top Data Objects for Instance 1 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6i.907 */ /* slow on ppts20 */
       current_obj#,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND current_obj# >= 0
   AND wait_class IN ('Application', 'Cluster', 'Concurrency', 'System I/O', 'User I/O')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       current_obj#
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6i.907 */ SUM(samples) samples FROM hist
)
SELECT h.current_obj#||
       CASE h.current_obj# WHEN 0 THEN ' UNDO' ELSE
       TRIM('.' FROM ' '||o.owner||'.'||o.object_name||'.'||o.subobject_name)
       END
       data_object,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_objects o
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND o.object_id(+) = h.current_obj#
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:43:10 6i.911
Elapsed Hours so far:    2.348
Elapsed Hours so far: 2.348

Elapsed: 00:00:00.00

13:43:10 6i "01445_edb360_323688_6i_911_ash_top_data_objects_for_instance_1_for_5_working_days.html"
13:43:22 6i "01446_edb360_323688_6i_911_ash_top_data_objects_for_instance_1_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.353

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:43:27 6i "Active Session History (ASH) - Top Data Objects"
13:43:27 ASH Top Data Objects for Instance 2 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6i.907 */ /* slow on ppts20 */
       current_obj#,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND current_obj# >= 0
   AND wait_class IN ('Application', 'Cluster', 'Concurrency', 'System I/O', 'User I/O')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       current_obj#
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6i.907 */ SUM(samples) samples FROM hist
)
SELECT h.current_obj#||
       CASE h.current_obj# WHEN 0 THEN ' UNDO' ELSE
       TRIM('.' FROM ' '||o.owner||'.'||o.object_name||'.'||o.subobject_name)
       END
       data_object,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_objects o
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND o.object_id(+) = h.current_obj#
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:43:27 6i.912
Elapsed Hours so far:    2.353
Elapsed Hours so far: 2.353

Elapsed: 00:00:00.00

13:43:27 6i "01447_edb360_323688_6i_912_ash_top_data_objects_for_instance_2_for_5_working_days.html"
13:43:35 6i "01448_edb360_323688_6i_912_ash_top_data_objects_for_instance_2_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.357

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:43:40 6i "Active Session History (ASH) - Top Data Objects"
13:43:40 ASH Top Data Objects for Cluster for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6i.907 */ /* slow on ppts20 */
       current_obj#,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND current_obj# >= 0
   AND wait_class IN ('Application', 'Cluster', 'Concurrency', 'System I/O', 'User I/O')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       current_obj#
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6i.907 */ SUM(samples) samples FROM hist
)
SELECT h.current_obj#||
       CASE h.current_obj# WHEN 0 THEN ' UNDO' ELSE
       TRIM('.' FROM ' '||o.owner||'.'||o.object_name||'.'||o.subobject_name)
       END
       data_object,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_objects o
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND o.object_id(+) = h.current_obj#
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:43:40 6i.913
Elapsed Hours so far:    2.357
Elapsed Hours so far: 2.357

Elapsed: 00:00:00.00

13:43:40 6i "01449_edb360_323688_6i_913_ash_top_data_objects_for_cluster_for_7_days.html"
13:43:49 6i "01450_edb360_323688_6i_913_ash_top_data_objects_for_cluster_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.361

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:43:54 6i "Active Session History (ASH) - Top Data Objects"
13:43:54 ASH Top Data Objects for Instance 1 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6i.907 */ /* slow on ppts20 */
       current_obj#,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND current_obj# >= 0
   AND wait_class IN ('Application', 'Cluster', 'Concurrency', 'System I/O', 'User I/O')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       current_obj#
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6i.907 */ SUM(samples) samples FROM hist
)
SELECT h.current_obj#||
       CASE h.current_obj# WHEN 0 THEN ' UNDO' ELSE
       TRIM('.' FROM ' '||o.owner||'.'||o.object_name||'.'||o.subobject_name)
       END
       data_object,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_objects o
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND o.object_id(+) = h.current_obj#
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:43:54 6i.914
Elapsed Hours so far:    2.361
Elapsed Hours so far: 2.361

Elapsed: 00:00:00.00

13:43:54 6i "01451_edb360_323688_6i_914_ash_top_data_objects_for_instance_1_for_7_days.html"
13:44:03 6i "01452_edb360_323688_6i_914_ash_top_data_objects_for_instance_1_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.364

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:44:08 6i "Active Session History (ASH) - Top Data Objects"
13:44:08 ASH Top Data Objects for Instance 2 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6i.907 */ /* slow on ppts20 */
       current_obj#,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND current_obj# >= 0
   AND wait_class IN ('Application', 'Cluster', 'Concurrency', 'System I/O', 'User I/O')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       current_obj#
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6i.907 */ SUM(samples) samples FROM hist
)
SELECT h.current_obj#||
       CASE h.current_obj# WHEN 0 THEN ' UNDO' ELSE
       TRIM('.' FROM ' '||o.owner||'.'||o.object_name||'.'||o.subobject_name)
       END
       data_object,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_objects o
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND o.object_id(+) = h.current_obj#
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:44:08 6i.915
Elapsed Hours so far:    2.364
Elapsed Hours so far: 2.364

Elapsed: 00:00:00.01

13:44:08 6i "01453_edb360_323688_6i_915_ash_top_data_objects_for_instance_2_for_7_days.html"
13:44:13 6i "01454_edb360_323688_6i_915_ash_top_data_objects_for_instance_2_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.367

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:44:18 6i "Active Session History (ASH) - Top Data Objects"
13:44:18 ASH Top Data Objects for Cluster for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6i.907 */ /* slow on ppts20 */
       current_obj#,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730'
 AND '1930'
   AND current_obj# >= 0
   AND wait_class IN ('Application', 'Cluster', 'Concurrency', 'System I/O', 'User I/O')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       current_obj#
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6i.907 */ SUM(samples) samples FROM hist
)
SELECT h.current_obj#||
       CASE h.current_obj# WHEN 0 THEN ' UNDO' ELSE
       TRIM('.' FROM ' '||o.owner||'.'||o.object_name||'.'||o.subobject_name)
       END
       data_object,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_objects o
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND o.object_id(+) = h.current_obj#
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:44:18 6i.916
Elapsed Hours so far:    2.367
Elapsed Hours so far: 2.367

Elapsed: 00:00:00.00

13:44:18 6i "01455_edb360_323688_6i_916_ash_top_data_objects_for_cluster_for_23_working_days.html"
13:44:30 6i "01456_edb360_323688_6i_916_ash_top_data_objects_for_cluster_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.373

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:44:37 6i "Active Session History (ASH) - Top Data Objects"
13:44:37 ASH Top Data Objects for Instance 1 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6i.907 */ /* slow on ppts20 */
       current_obj#,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND current_obj# >= 0
   AND wait_class IN ('Application', 'Cluster', 'Concurrency', 'System I/O', 'User I/O')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       current_obj#
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6i.907 */ SUM(samples) samples FROM hist
)
SELECT h.current_obj#||
       CASE h.current_obj# WHEN 0 THEN ' UNDO' ELSE
       TRIM('.' FROM ' '||o.owner||'.'||o.object_name||'.'||o.subobject_name)
       END
       data_object,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_objects o
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND o.object_id(+) = h.current_obj#
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:44:37 6i.917
Elapsed Hours so far:    2.373
Elapsed Hours so far: 2.373

Elapsed: 00:00:00.00

13:44:37 6i "01457_edb360_323688_6i_917_ash_top_data_objects_for_instance_1_for_23_working_days.html"
13:44:48 6i "01458_edb360_323688_6i_917_ash_top_data_objects_for_instance_1_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.377

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:44:54 6i "Active Session History (ASH) - Top Data Objects"
13:44:54 ASH Top Data Objects for Instance 2 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6i.907 */ /* slow on ppts20 */
       current_obj#,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND current_obj# >= 0
   AND wait_class IN ('Application', 'Cluster', 'Concurrency', 'System I/O', 'User I/O')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       current_obj#
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6i.907 */ SUM(samples) samples FROM hist
)
SELECT h.current_obj#||
       CASE h.current_obj# WHEN 0 THEN ' UNDO' ELSE
       TRIM('.' FROM ' '||o.owner||'.'||o.object_name||'.'||o.subobject_name)
       END
       data_object,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_objects o
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND o.object_id(+) = h.current_obj#
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:44:54 6i.918
Elapsed Hours so far:    2.377
Elapsed Hours so far: 2.377

Elapsed: 00:00:00.01

13:44:54 6i "01459_edb360_323688_6i_918_ash_top_data_objects_for_instance_2_for_23_working_days.html"
13:45:00 6i "01460_edb360_323688_6i_918_ash_top_data_objects_for_instance_2_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.381

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:45:09 6i "Active Session History (ASH) - Top Data Objects"
13:45:09 ASH Top Data Objects for Cluster for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6i.907 */ /* slow on ppts20 */
       current_obj#,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE 1 = 1
   AND current_obj# >= 0
   AND wait_class IN ('Application', 'Cluster', 'Concurrency', 'System I/O', 'User I/O')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       current_obj#
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6i.907 */ SUM(samples) samples FROM hist
)
SELECT h.current_obj#||
       CASE h.current_obj# WHEN 0 THEN ' UNDO' ELSE
       TRIM('.' FROM ' '||o.owner||'.'||o.object_name||'.'||o.subobject_name)
       END
       data_object,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_objects o
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND o.object_id(+) = h.current_obj#
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:45:09 6i.919
Elapsed Hours so far:    2.381
Elapsed Hours so far: 2.381

Elapsed: 00:00:00.00

13:45:09 6i "01461_edb360_323688_6i_919_ash_top_data_objects_for_cluster_for_31_days_of_history.html"
13:45:21 6i "01462_edb360_323688_6i_919_ash_top_data_objects_for_cluster_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.386

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:45:26 6i "Active Session History (ASH) - Top Data Objects"
13:45:26 ASH Top Data Objects for Instance 1 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6i.907 */ /* slow on ppts20 */
       current_obj#,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1
   AND current_obj# >= 0
   AND wait_class IN ('Application', 'Cluster', 'Concurrency', 'System I/O', 'User I/O')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       current_obj#
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6i.907 */ SUM(samples) samples FROM hist
)
SELECT h.current_obj#||
       CASE h.current_obj# WHEN 0 THEN ' UNDO' ELSE
       TRIM('.' FROM ' '||o.owner||'.'||o.object_name||'.'||o.subobject_name)
       END
       data_object,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_objects o
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND o.object_id(+) = h.current_obj#
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:45:26 6i.920
Elapsed Hours so far:    2.386
Elapsed Hours so far: 2.386

Elapsed: 00:00:00.00

13:45:26 6i "01463_edb360_323688_6i_920_ash_top_data_objects_for_instance_1_for_31_days_of_history.html"
13:45:41 6i "01464_edb360_323688_6i_920_ash_top_data_objects_for_instance_1_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.391

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:45:45 6i "Active Session History (ASH) - Top Data Objects"
13:45:45 ASH Top Data Objects for Instance 2 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6i.907 */ /* slow on ppts20 */
       current_obj#,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2
   AND current_obj# >= 0
   AND wait_class IN ('Application', 'Cluster', 'Concurrency', 'System I/O', 'User I/O')
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       current_obj#
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6i.907 */ SUM(samples) samples FROM hist
)
SELECT h.current_obj#||
       CASE h.current_obj# WHEN 0 THEN ' UNDO' ELSE
       TRIM('.' FROM ' '||o.owner||'.'||o.object_name||'.'||o.subobject_name)
       END
       data_object,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_objects o
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND o.object_id(+) = h.current_obj#
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:45:45 6i.921
Elapsed Hours so far:    2.391
Elapsed Hours so far: 2.391

Elapsed: 00:00:00.00

13:45:45 6i "01465_edb360_323688_6i_921_ash_top_data_objects_for_instance_2_for_31_days_of_history.html"
13:45:55 6i "01466_edb360_323688_6i_921_ash_top_data_objects_for_instance_2_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.396

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:46:00 6j "Active Session History (ASH) - Service and User"
13:46:00 ASH Top Services and Users for Cluster for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6j.922 */
       service_hash,
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 1 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND service_hash IS NOT NULL
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       service_hash,
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6j.922 */ SUM(samples) samples FROM hist
)
SELECT NVL(s.service_name, h.service_hash)||' '||
       NVL(u.username, h.user_id) service_username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_hist_service_name s,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.dbid(+) = 2109323688 AND s.service_name_hash(+) = h.service_hash
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 3 DESC NULLS LAST

13:46:00 6j.922
Elapsed Hours so far:    2.396
Elapsed Hours so far: 2.396

Elapsed: 00:00:00.01

13:46:00 6j "01467_edb360_323688_6j_922_ash_top_services_and_users_for_cluster_for_1_day.html"
13:46:08 6j "01468_edb360_323688_6j_922_ash_top_services_and_users_for_cluster_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.398

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:46:10 6j "Active Session History (ASH) - Service and User"
13:46:10 ASH Top Services and Users for Instance 1 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6j.922 */
       service_hash,
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND service_hash IS NOT NULL
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       service_hash,
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6j.922 */ SUM(samples) samples FROM hist
)
SELECT NVL(s.service_name, h.service_hash)||' '||
       NVL(u.username, h.user_id) service_username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_hist_service_name s,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.dbid(+) = 2109323688 AND s.service_name_hash(+) = h.service_hash
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 3 DESC NULLS LAST

13:46:10 6j.923
Elapsed Hours so far:    2.398
Elapsed Hours so far: 2.398

Elapsed: 00:00:00.00

13:46:10 6j "01469_edb360_323688_6j_923_ash_top_services_and_users_for_instance_1_for_1_day.html"
13:46:18 6j "01470_edb360_323688_6j_923_ash_top_services_and_users_for_instance_1_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.401

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:46:20 6j "Active Session History (ASH) - Service and User"
13:46:20 ASH Top Services and Users for Instance 2 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6j.922 */
       service_hash,
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND service_hash IS NOT NULL
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       service_hash,
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6j.922 */ SUM(samples) samples FROM hist
)
SELECT NVL(s.service_name, h.service_hash)||' '||
       NVL(u.username, h.user_id) service_username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_hist_service_name s,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.dbid(+) = 2109323688 AND s.service_name_hash(+) = h.service_hash
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 3 DESC NULLS LAST

13:46:20 6j.924
Elapsed Hours so far:    2.401
Elapsed Hours so far: 2.401

Elapsed: 00:00:00.00

13:46:20 6j "01471_edb360_323688_6j_924_ash_top_services_and_users_for_instance_2_for_1_day.html"
13:46:22 6j "01472_edb360_323688_6j_924_ash_top_services_and_users_for_instance_2_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.402

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:46:23 6j "Active Session History (ASH) - Service and User"
13:46:23 ASH Top Services and Users for Cluster for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6j.922 */
       service_hash,
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(s
ample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND service_hash IS NOT NULL
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       service_hash,
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6j.922 */ SUM(samples) samples FROM hist
)
SELECT NVL(s.service_name, h.service_hash)||' '||
       NVL(u.username, h.user_id) service_username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_hist_service_name s,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.dbid(+) = 2109323688 AND s.service_name_hash(+) = h.service_hash
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 3 DESC NULLS LAST

13:46:23 6j.925
Elapsed Hours so far:    2.402
Elapsed Hours so far: 2.402

Elapsed: 00:00:00.00

13:46:23 6j "01473_edb360_323688_6j_925_ash_top_services_and_users_for_cluster_for_5_working_days.html"
13:46:26 6j "01474_edb360_323688_6j_925_ash_top_services_and_users_for_cluster_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.403

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:46:28 6j "Active Session History (ASH) - Service and User"
13:46:28 ASH Top Services and Users for Instance 1 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6j.922 */
       service_hash,
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND service_hash IS NOT NULL
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       service_hash,
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6j.922 */ SUM(samples) samples FROM hist
)
SELECT NVL(s.service_name, h.service_hash)||' '||
       NVL(u.username, h.user_id) service_username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_hist_service_name s,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.dbid(+) = 2109323688 AND s.service_name_hash(+) = h.service_hash
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 3 DESC NULLS LAST

13:46:28 6j.926
Elapsed Hours so far:    2.403
Elapsed Hours so far: 2.403

Elapsed: 00:00:00.00

13:46:28 6j "01475_edb360_323688_6j_926_ash_top_services_and_users_for_instance_1_for_5_working_days.html"
13:46:30 6j "01476_edb360_323688_6j_926_ash_top_services_and_users_for_instance_1_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.404

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:46:32 6j "Active Session History (ASH) - Service and User"
13:46:32 ASH Top Services and Users for Instance 2 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6j.922 */
       service_hash,
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND service_hash IS NOT NULL
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       service_hash,
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6j.922 */ SUM(samples) samples FROM hist
)
SELECT NVL(s.service_name, h.service_hash)||' '||
       NVL(u.username, h.user_id) service_username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_hist_service_name s,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.dbid(+) = 2109323688 AND s.service_name_hash(+) = h.service_hash
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 3 DESC NULLS LAST

13:46:32 6j.927
Elapsed Hours so far:    2.404
Elapsed Hours so far: 2.404

Elapsed: 00:00:00.00

13:46:32 6j "01477_edb360_323688_6j_927_ash_top_services_and_users_for_instance_2_for_5_working_days.html"
13:46:34 6j "01478_edb360_323688_6j_927_ash_top_services_and_users_for_instance_2_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.406

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:46:36 6j "Active Session History (ASH) - Service and User"
13:46:36 ASH Top Services and Users for Cluster for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6j.922 */
       service_hash,
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND service_hash IS NOT NULL
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       service_hash,
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6j.922 */ SUM(samples) samples FROM hist
)
SELECT NVL(s.service_name, h.service_hash)||' '||
       NVL(u.username, h.user_id) service_username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_hist_service_name s,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.dbid(+) = 2109323688 AND s.service_name_hash(+) = h.service_hash
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 3 DESC NULLS LAST

13:46:36 6j.928
Elapsed Hours so far:    2.406
Elapsed Hours so far: 2.406

Elapsed: 00:00:00.00

13:46:36 6j "01479_edb360_323688_6j_928_ash_top_services_and_users_for_cluster_for_7_days.html"
13:46:43 6j "01480_edb360_323688_6j_928_ash_top_services_and_users_for_cluster_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.408

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:46:44 6j "Active Session History (ASH) - Service and User"
13:46:44 ASH Top Services and Users for Instance 1 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6j.922 */
       service_hash,
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND service_hash IS NOT NULL
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       service_hash,
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6j.922 */ SUM(samples) samples FROM hist
)
SELECT NVL(s.service_name, h.service_hash)||' '||
       NVL(u.username, h.user_id) service_username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_hist_service_name s,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.dbid(+) = 2109323688 AND s.service_name_hash(+) = h.service_hash
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 3 DESC NULLS LAST

13:46:44 6j.929
Elapsed Hours so far:    2.408
Elapsed Hours so far: 2.408

Elapsed: 00:00:00.00

13:46:44 6j "01481_edb360_323688_6j_929_ash_top_services_and_users_for_instance_1_for_7_days.html"
13:46:51 6j "01482_edb360_323688_6j_929_ash_top_services_and_users_for_instance_1_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.410

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:46:52 6j "Active Session History (ASH) - Service and User"
13:46:52 ASH Top Services and Users for Instance 2 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6j.922 */
       service_hash,
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND service_hash IS NOT NULL
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       service_hash,
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6j.922 */ SUM(samples) samples FROM hist
)
SELECT NVL(s.service_name, h.service_hash)||' '||
       NVL(u.username, h.user_id) service_username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_hist_service_name s,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.dbid(+) = 2109323688 AND s.service_name_hash(+) = h.service_hash
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 3 DESC NULLS LAST

13:46:52 6j.930
Elapsed Hours so far:    2.410
Elapsed Hours so far: 2.41

Elapsed: 00:00:00.00

13:46:52 6j "01483_edb360_323688_6j_930_ash_top_services_and_users_for_instance_2_for_7_days.html"
13:46:54 6j "01484_edb360_323688_6j_930_ash_top_services_and_users_for_instance_2_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.411

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:46:56 6j "Active Session History (ASH) - Service and User"
13:46:56 ASH Top Services and Users for Cluster for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6j.922 */
       service_hash,
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730'
 AND '1930'
   AND service_hash IS NOT NULL
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       service_hash,
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6j.922 */ SUM(samples) samples FROM hist
)
SELECT NVL(s.service_name, h.service_hash)||' '||
       NVL(u.username, h.user_id) service_username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_hist_service_name s,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.dbid(+) = 2109323688 AND s.service_name_hash(+) = h.service_hash
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 3 DESC NULLS LAST

13:46:56 6j.931
Elapsed Hours so far:    2.411
Elapsed Hours so far: 2.411

Elapsed: 00:00:00.00

13:46:56 6j "01485_edb360_323688_6j_931_ash_top_services_and_users_for_cluster_for_23_working_days.html"
13:47:00 6j "01486_edb360_323688_6j_931_ash_top_services_and_users_for_cluster_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.413

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:47:03 6j "Active Session History (ASH) - Service and User"
13:47:03 ASH Top Services and Users for Instance 1 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6j.922 */
       service_hash,
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND service_hash IS NOT NULL
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       service_hash,
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6j.922 */ SUM(samples) samples FROM hist
)
SELECT NVL(s.service_name, h.service_hash)||' '||
       NVL(u.username, h.user_id) service_username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_hist_service_name s,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.dbid(+) = 2109323688 AND s.service_name_hash(+) = h.service_hash
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 3 DESC NULLS LAST

13:47:03 6j.932
Elapsed Hours so far:    2.413
Elapsed Hours so far: 2.413

Elapsed: 00:00:00.00

13:47:03 6j "01487_edb360_323688_6j_932_ash_top_services_and_users_for_instance_1_for_23_working_days.html"
13:47:06 6j "01488_edb360_323688_6j_932_ash_top_services_and_users_for_instance_1_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.414

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:47:08 6j "Active Session History (ASH) - Service and User"
13:47:08 ASH Top Services and Users for Instance 2 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6j.922 */
       service_hash,
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND service_hash IS NOT NULL
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       service_hash,
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6j.922 */ SUM(samples) samples FROM hist
)
SELECT NVL(s.service_name, h.service_hash)||' '||
       NVL(u.username, h.user_id) service_username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_hist_service_name s,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.dbid(+) = 2109323688 AND s.service_name_hash(+) = h.service_hash
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 3 DESC NULLS LAST

13:47:08 6j.933
Elapsed Hours so far:    2.414
Elapsed Hours so far: 2.414

Elapsed: 00:00:00.00

13:47:08 6j "01489_edb360_323688_6j_933_ash_top_services_and_users_for_instance_2_for_23_working_days.html"
13:47:11 6j "01490_edb360_323688_6j_933_ash_top_services_and_users_for_instance_2_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.416

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:47:13 6j "Active Session History (ASH) - Service and User"
13:47:13 ASH Top Services and Users for Cluster for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6j.922 */
       service_hash,
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE 1 = 1
   AND service_hash IS NOT NULL
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       service_hash,
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6j.922 */ SUM(samples) samples FROM hist
)
SELECT NVL(s.service_name, h.service_hash)||' '||
       NVL(u.username, h.user_id) service_username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_hist_service_name s,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.dbid(+) = 2109323688 AND s.service_name_hash(+) = h.service_hash
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 3 DESC NULLS LAST

13:47:13 6j.934
Elapsed Hours so far:    2.416
Elapsed Hours so far: 2.416

Elapsed: 00:00:00.00

13:47:13 6j "01491_edb360_323688_6j_934_ash_top_services_and_users_for_cluster_for_31_days_of_history.html"
13:47:21 6j "01492_edb360_323688_6j_934_ash_top_services_and_users_for_cluster_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.418

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:47:23 6j "Active Session History (ASH) - Service and User"
13:47:23 ASH Top Services and Users for Instance 1 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6j.922 */
       service_hash,
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1
   AND service_hash IS NOT NULL
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       service_hash,
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6j.922 */ SUM(samples) samples FROM hist
)
SELECT NVL(s.service_name, h.service_hash)||' '||
       NVL(u.username, h.user_id) service_username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_hist_service_name s,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.dbid(+) = 2109323688 AND s.service_name_hash(+) = h.service_hash
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 3 DESC NULLS LAST

13:47:23 6j.935
Elapsed Hours so far:    2.418
Elapsed Hours so far: 2.418

Elapsed: 00:00:00.00

13:47:23 6j "01493_edb360_323688_6j_935_ash_top_services_and_users_for_instance_1_for_31_days_of_history.html"
13:47:30 6j "01494_edb360_323688_6j_935_ash_top_services_and_users_for_instance_1_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.421

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:47:32 6j "Active Session History (ASH) - Service and User"
13:47:32 ASH Top Services and Users for Instance 2 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6j.922 */
       service_hash,
       user_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2
   AND service_hash IS NOT NULL
   AND user_id IS NOT NULL
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       service_hash,
       user_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6j.922 */ SUM(samples) samples FROM hist
)
SELECT NVL(s.service_name, h.service_hash)||' '||
       NVL(u.username, h.user_id) service_username,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_hist_service_name s,
       dba_users u
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.dbid(+) = 2109323688 AND s.service_name_hash(+) = h.service_hash
   AND u.user_id(+) = h.user_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 3 DESC NULLS LAST

13:47:32 6j.936
Elapsed Hours so far:    2.421
Elapsed Hours so far: 2.421

Elapsed: 00:00:00.00

13:47:32 6j "01495_edb360_323688_6j_936_ash_top_services_and_users_for_instance_2_for_31_days_of_history.html"
13:47:34 6j "01496_edb360_323688_6j_936_ash_top_services_and_users_for_instance_2_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.422

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:47:36 6k "Active Session History (ASH) - Top PHV"
13:47:36 ASH Top PHV for Cluster for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6k.937 */
       con_id,
       sql_plan_hash_value,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) sample_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 1 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND sql_plan_hash_value > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_plan_hash_value,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6k.937 */ SUM(samples) samples FROM hist
)
SELECT h.sql_plan_hash_value||'('||h.distinct_sql_id||')' plan_hash_value,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sample_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:47:36 6k.937
Elapsed Hours so far:    2.422
Elapsed Hours so far: 2.422

Elapsed: 00:00:00.01

13:47:36 6k "01497_edb360_323688_6k_937_ash_top_phv_for_cluster_for_1_day.html"
13:47:44 6k "01498_edb360_323688_6k_937_ash_top_phv_for_cluster_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.425

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:47:45 6k "Active Session History (ASH) - Top PHV"
13:47:45 ASH Top PHV for Instance 1 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6k.937 */
       con_id,
       sql_plan_hash_value,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) sample_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND sql_plan_hash_value > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_plan_hash_value,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6k.937 */ SUM(samples) samples FROM hist
)
SELECT h.sql_plan_hash_value||'('||h.distinct_sql_id||')' plan_hash_value,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sample_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:47:45 6k.938
Elapsed Hours so far:    2.425
Elapsed Hours so far: 2.425

Elapsed: 00:00:00.00

13:47:45 6k "01499_edb360_323688_6k_938_ash_top_phv_for_instance_1_for_1_day.html"
13:47:53 6k "01500_edb360_323688_6k_938_ash_top_phv_for_instance_1_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.427

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:47:54 6k "Active Session History (ASH) - Top PHV"
13:47:54 ASH Top PHV for Instance 2 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6k.937 */
       con_id,
       sql_plan_hash_value,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) sample_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND sql_plan_hash_value > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_plan_hash_value,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6k.937 */ SUM(samples) samples FROM hist
)
SELECT h.sql_plan_hash_value||'('||h.distinct_sql_id||')' plan_hash_value,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sample_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:47:54 6k.939
Elapsed Hours so far:    2.427
Elapsed Hours so far: 2.427

Elapsed: 00:00:00.00

13:47:54 6k "01501_edb360_323688_6k_939_ash_top_phv_for_instance_2_for_1_day.html"
13:47:56 6k "01502_edb360_323688_6k_939_ash_top_phv_for_instance_2_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.428

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:47:57 6k "Active Session History (ASH) - Top PHV"
13:47:57 ASH Top PHV for Cluster for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6k.937 */
       con_id,
       sql_plan_hash_value,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) sample_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(s
ample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND sql_id IS NOT NULL
   AND sql_plan_hash_value > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_plan_hash_value,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6k.937 */ SUM(samples) samples FROM hist
)
SELECT h.sql_plan_hash_value||'('||h.distinct_sql_id||')' plan_hash_value,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sample_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:47:57 6k.940
Elapsed Hours so far:    2.428
Elapsed Hours so far: 2.428

Elapsed: 00:00:00.00

13:47:57 6k "01503_edb360_323688_6k_940_ash_top_phv_for_cluster_for_5_working_days.html"
13:47:59 6k "01504_edb360_323688_6k_940_ash_top_phv_for_cluster_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.429

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:48:00 6k "Active Session History (ASH) - Top PHV"
13:48:00 ASH Top PHV for Instance 1 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6k.937 */
       con_id,
       sql_plan_hash_value,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) sample_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND sql_id IS NOT NULL
   AND sql_plan_hash_value > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_plan_hash_value,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6k.937 */ SUM(samples) samples FROM hist
)
SELECT h.sql_plan_hash_value||'('||h.distinct_sql_id||')' plan_hash_value,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sample_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:48:00 6k.941
Elapsed Hours so far:    2.429
Elapsed Hours so far: 2.429

Elapsed: 00:00:00.00

13:48:00 6k "01505_edb360_323688_6k_941_ash_top_phv_for_instance_1_for_5_working_days.html"
13:48:02 6k "01506_edb360_323688_6k_941_ash_top_phv_for_instance_1_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.430

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:48:04 6k "Active Session History (ASH) - Top PHV"
13:48:04 ASH Top PHV for Instance 2 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6k.937 */
       con_id,
       sql_plan_hash_value,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) sample_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND sql_id IS NOT NULL
   AND sql_plan_hash_value > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_plan_hash_value,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6k.937 */ SUM(samples) samples FROM hist
)
SELECT h.sql_plan_hash_value||'('||h.distinct_sql_id||')' plan_hash_value,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sample_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:48:04 6k.942
Elapsed Hours so far:    2.430
Elapsed Hours so far: 2.43

Elapsed: 00:00:00.00

13:48:04 6k "01507_edb360_323688_6k_942_ash_top_phv_for_instance_2_for_5_working_days.html"
13:48:05 6k "01508_edb360_323688_6k_942_ash_top_phv_for_instance_2_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.431

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:48:07 6k "Active Session History (ASH) - Top PHV"
13:48:07 ASH Top PHV for Cluster for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6k.937 */
       con_id,
       sql_plan_hash_value,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) sample_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND sql_plan_hash_value > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_plan_hash_value,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6k.937 */ SUM(samples) samples FROM hist
)
SELECT h.sql_plan_hash_value||'('||h.distinct_sql_id||')' plan_hash_value,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sample_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:48:07 6k.943
Elapsed Hours so far:    2.431
Elapsed Hours so far: 2.431

Elapsed: 00:00:00.00

13:48:07 6k "01509_edb360_323688_6k_943_ash_top_phv_for_cluster_for_7_days.html"
13:48:13 6k "01510_edb360_323688_6k_943_ash_top_phv_for_cluster_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.433

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:48:14 6k "Active Session History (ASH) - Top PHV"
13:48:14 ASH Top PHV for Instance 1 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6k.937 */
       con_id,
       sql_plan_hash_value,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) sample_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND sql_plan_hash_value > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_plan_hash_value,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6k.937 */ SUM(samples) samples FROM hist
)
SELECT h.sql_plan_hash_value||'('||h.distinct_sql_id||')' plan_hash_value,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sample_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:48:14 6k.944
Elapsed Hours so far:    2.433
Elapsed Hours so far: 2.433

Elapsed: 00:00:00.01

13:48:14 6k "01511_edb360_323688_6k_944_ash_top_phv_for_instance_1_for_7_days.html"
13:48:16 6k "01512_edb360_323688_6k_944_ash_top_phv_for_instance_1_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.434

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:48:20 6k "Active Session History (ASH) - Top PHV"
13:48:20 ASH Top PHV for Instance 2 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6k.937 */
       con_id,
       sql_plan_hash_value,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) sample_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND sql_plan_hash_value > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_plan_hash_value,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6k.937 */ SUM(samples) samples FROM hist
)
SELECT h.sql_plan_hash_value||'('||h.distinct_sql_id||')' plan_hash_value,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sample_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:48:20 6k.945
Elapsed Hours so far:    2.434
Elapsed Hours so far: 2.434

Elapsed: 00:00:00.00

13:48:20 6k "01513_edb360_323688_6k_945_ash_top_phv_for_instance_2_for_7_days.html"
13:48:22 6k "01514_edb360_323688_6k_945_ash_top_phv_for_instance_2_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.435

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:48:23 6k "Active Session History (ASH) - Top PHV"
13:48:23 ASH Top PHV for Cluster for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6k.937 */
       con_id,
       sql_plan_hash_value,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) sample_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730'
 AND '1930'
   AND sql_id IS NOT NULL
   AND sql_plan_hash_value > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_plan_hash_value,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6k.937 */ SUM(samples) samples FROM hist
)
SELECT h.sql_plan_hash_value||'('||h.distinct_sql_id||')' plan_hash_value,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sample_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:48:23 6k.946
Elapsed Hours so far:    2.435
Elapsed Hours so far: 2.435

Elapsed: 00:00:00.00

13:48:23 6k "01515_edb360_323688_6k_946_ash_top_phv_for_cluster_for_23_working_days.html"
13:48:27 6k "01516_edb360_323688_6k_946_ash_top_phv_for_cluster_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.437

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:48:29 6k "Active Session History (ASH) - Top PHV"
13:48:29 ASH Top PHV for Instance 1 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6k.937 */
       con_id,
       sql_plan_hash_value,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) sample_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND sql_id IS NOT NULL
   AND sql_plan_hash_value > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_plan_hash_value,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6k.937 */ SUM(samples) samples FROM hist
)
SELECT h.sql_plan_hash_value||'('||h.distinct_sql_id||')' plan_hash_value,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sample_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:48:29 6k.947
Elapsed Hours so far:    2.437
Elapsed Hours so far: 2.437

Elapsed: 00:00:00.00

13:48:29 6k "01517_edb360_323688_6k_947_ash_top_phv_for_instance_1_for_23_working_days.html"
13:48:32 6k "01518_edb360_323688_6k_947_ash_top_phv_for_instance_1_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.438

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:48:33 6k "Active Session History (ASH) - Top PHV"
13:48:33 ASH Top PHV for Instance 2 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6k.937 */
       con_id,
       sql_plan_hash_value,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) sample_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND sql_id IS NOT NULL
   AND sql_plan_hash_value > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_plan_hash_value,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6k.937 */ SUM(samples) samples FROM hist
)
SELECT h.sql_plan_hash_value||'('||h.distinct_sql_id||')' plan_hash_value,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sample_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:48:33 6k.948
Elapsed Hours so far:    2.438
Elapsed Hours so far: 2.438

Elapsed: 00:00:00.00

13:48:33 6k "01519_edb360_323688_6k_948_ash_top_phv_for_instance_2_for_23_working_days.html"
13:48:36 6k "01520_edb360_323688_6k_948_ash_top_phv_for_instance_2_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.439

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:48:37 6k "Active Session History (ASH) - Top PHV"
13:48:37 ASH Top PHV for Cluster for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6k.937 */
       con_id,
       sql_plan_hash_value,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) sample_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE 1 = 1
   AND sql_id IS NOT NULL
   AND sql_plan_hash_value > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_plan_hash_value,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6k.937 */ SUM(samples) samples FROM hist
)
SELECT h.sql_plan_hash_value||'('||h.distinct_sql_id||')' plan_hash_value,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sample_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:48:37 6k.949
Elapsed Hours so far:    2.439
Elapsed Hours so far: 2.439

Elapsed: 00:00:00.00

13:48:38 6k "01521_edb360_323688_6k_949_ash_top_phv_for_cluster_for_31_days_of_history.html"
13:48:44 6k "01522_edb360_323688_6k_949_ash_top_phv_for_cluster_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.441

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:48:45 6k "Active Session History (ASH) - Top PHV"
13:48:45 ASH Top PHV for Instance 1 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6k.937 */
       con_id,
       sql_plan_hash_value,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) sample_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1
   AND sql_id IS NOT NULL
   AND sql_plan_hash_value > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_plan_hash_value,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6k.937 */ SUM(samples) samples FROM hist
)
SELECT h.sql_plan_hash_value||'('||h.distinct_sql_id||')' plan_hash_value,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sample_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:48:45 6k.950
Elapsed Hours so far:    2.441
Elapsed Hours so far: 2.441

Elapsed: 00:00:00.00

13:48:45 6k "01523_edb360_323688_6k_950_ash_top_phv_for_instance_1_for_31_days_of_history.html"
13:48:52 6k "01524_edb360_323688_6k_950_ash_top_phv_for_instance_1_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.443

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:48:53 6k "Active Session History (ASH) - Top PHV"
13:48:53 ASH Top PHV for Instance 2 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6k.937 */
       con_id,
       sql_plan_hash_value,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) sample_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2
   AND sql_id IS NOT NULL
   AND sql_plan_hash_value > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       sql_plan_hash_value,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6k.937 */ SUM(samples) samples FROM hist
)
SELECT h.sql_plan_hash_value||'('||h.distinct_sql_id||')' plan_hash_value,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.sample_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:48:53 6k.951
Elapsed Hours so far:    2.443
Elapsed Hours so far: 2.443

Elapsed: 00:00:00.00

13:48:53 6k "01525_edb360_323688_6k_951_ash_top_phv_for_instance_2_for_31_days_of_history.html"
13:48:54 6k "01526_edb360_323688_6k_951_ash_top_phv_for_instance_2_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.444

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:48:56 6l "Active Session History (ASH) - Top Signature"
13:48:56 ASH Top FORCE_MATCHING_SIGNATURE for Cluster for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6l.952 */
       con_id,
       force_matching_signature,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) min_sql_id,
       MAX(sql_id) max_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 1 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND force_matching_signature > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       force_matching_signature,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6l.952 */ SUM(samples) samples FROM hist
)
SELECT h.force_matching_signature||'('||h.distinct_sql_id||')' force_matching_signature,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       --h.min_sql_id,
       --h.max_sql_id,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.min_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       --NULL min_sql_id,
       --NULL max_sql_id,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:48:56 6l.952
Elapsed Hours so far:    2.444
Elapsed Hours so far: 2.444

Elapsed: 00:00:00.00

13:48:56 6l "01527_edb360_323688_6l_952_ash_top_forcematchingsignature_for_cluster_for_1_day.html"
13:49:02 6l "01528_edb360_323688_6l_952_ash_top_forcematchingsignature_for_cluster_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.446

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:49:03 6l "Active Session History (ASH) - Top Signature"
13:49:03 ASH Top FORCE_MATCHING_SIGNATURE for Instance 1 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6l.952 */
       con_id,
       force_matching_signature,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) min_sql_id,
       MAX(sql_id) max_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND force_matching_signature > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       force_matching_signature,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6l.952 */ SUM(samples) samples FROM hist
)
SELECT h.force_matching_signature||'('||h.distinct_sql_id||')' force_matching_signature,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       --h.min_sql_id,
       --h.max_sql_id,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.min_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       --NULL min_sql_id,
       --NULL max_sql_id,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:49:03 6l.953
Elapsed Hours so far:    2.446
Elapsed Hours so far: 2.446

Elapsed: 00:00:00.00

13:49:04 6l "01529_edb360_323688_6l_953_ash_top_forcematchingsignature_for_instance_1_for_1_day.html"
13:49:10 6l "01530_edb360_323688_6l_953_ash_top_forcematchingsignature_for_instance_1_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.449

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:49:11 6l "Active Session History (ASH) - Top Signature"
13:49:11 ASH Top FORCE_MATCHING_SIGNATURE for Instance 2 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6l.952 */
       con_id,
       force_matching_signature,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) min_sql_id,
       MAX(sql_id) max_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND force_matching_signature > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       force_matching_signature,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6l.952 */ SUM(samples) samples FROM hist
)
SELECT h.force_matching_signature||'('||h.distinct_sql_id||')' force_matching_signature,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       --h.min_sql_id,
       --h.max_sql_id,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.min_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       --NULL min_sql_id,
       --NULL max_sql_id,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:49:11 6l.954
Elapsed Hours so far:    2.449
Elapsed Hours so far: 2.449

Elapsed: 00:00:00.00

13:49:11 6l "01531_edb360_323688_6l_954_ash_top_forcematchingsignature_for_instance_2_for_1_day.html"
13:49:13 6l "01532_edb360_323688_6l_954_ash_top_forcematchingsignature_for_instance_2_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.450

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:49:14 6l "Active Session History (ASH) - Top Signature"
13:49:14 ASH Top FORCE_MATCHING_SIGNATURE for Cluster for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6l.952 */
       con_id,
       force_matching_signature,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) min_sql_id,
       MAX(sql_id) max_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(s
ample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND sql_id IS NOT NULL
   AND force_matching_signature > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       force_matching_signature,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6l.952 */ SUM(samples) samples FROM hist
)
SELECT h.force_matching_signature||'('||h.distinct_sql_id||')' force_matching_signature,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       --h.min_sql_id,
       --h.max_sql_id,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.min_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       --NULL min_sql_id,
       --NULL max_sql_id,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:49:14 6l.955
Elapsed Hours so far:    2.450
Elapsed Hours so far: 2.45

Elapsed: 00:00:00.00

13:49:15 6l "01533_edb360_323688_6l_955_ash_top_forcematchingsignature_for_cluster_for_5_working_days.html"
13:49:17 6l "01534_edb360_323688_6l_955_ash_top_forcematchingsignature_for_cluster_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.451

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:49:18 6l "Active Session History (ASH) - Top Signature"
13:49:18 ASH Top FORCE_MATCHING_SIGNATURE for Instance 1 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6l.952 */
       con_id,
       force_matching_signature,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) min_sql_id,
       MAX(sql_id) max_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND sql_id IS NOT NULL
   AND force_matching_signature > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       force_matching_signature,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6l.952 */ SUM(samples) samples FROM hist
)
SELECT h.force_matching_signature||'('||h.distinct_sql_id||')' force_matching_signature,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       --h.min_sql_id,
       --h.max_sql_id,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.min_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       --NULL min_sql_id,
       --NULL max_sql_id,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:49:18 6l.956
Elapsed Hours so far:    2.451
Elapsed Hours so far: 2.451

Elapsed: 00:00:00.00

13:49:18 6l "01535_edb360_323688_6l_956_ash_top_forcematchingsignature_for_instance_1_for_5_working_days.html"
13:49:20 6l "01536_edb360_323688_6l_956_ash_top_forcematchingsignature_for_instance_1_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.452

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:49:22 6l "Active Session History (ASH) - Top Signature"
13:49:22 ASH Top FORCE_MATCHING_SIGNATURE for Instance 2 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6l.952 */
       con_id,
       force_matching_signature,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) min_sql_id,
       MAX(sql_id) max_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND sql_id IS NOT NULL
   AND force_matching_signature > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       force_matching_signature,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6l.952 */ SUM(samples) samples FROM hist
)
SELECT h.force_matching_signature||'('||h.distinct_sql_id||')' force_matching_signature,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       --h.min_sql_id,
       --h.max_sql_id,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.min_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       --NULL min_sql_id,
       --NULL max_sql_id,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:49:22 6l.957
Elapsed Hours so far:    2.452
Elapsed Hours so far: 2.452

Elapsed: 00:00:00.00

13:49:22 6l "01537_edb360_323688_6l_957_ash_top_forcematchingsignature_for_instance_2_for_5_working_days.html"
13:49:24 6l "01538_edb360_323688_6l_957_ash_top_forcematchingsignature_for_instance_2_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.453

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:49:26 6l "Active Session History (ASH) - Top Signature"
13:49:26 ASH Top FORCE_MATCHING_SIGNATURE for Cluster for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6l.952 */
       con_id,
       force_matching_signature,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) min_sql_id,
       MAX(sql_id) max_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND force_matching_signature > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       force_matching_signature,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6l.952 */ SUM(samples) samples FROM hist
)
SELECT h.force_matching_signature||'('||h.distinct_sql_id||')' force_matching_signature,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       --h.min_sql_id,
       --h.max_sql_id,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.min_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       --NULL min_sql_id,
       --NULL max_sql_id,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:49:26 6l.958
Elapsed Hours so far:    2.453
Elapsed Hours so far: 2.453

Elapsed: 00:00:00.00

13:49:26 6l "01539_edb360_323688_6l_958_ash_top_forcematchingsignature_for_cluster_for_7_days.html"
13:49:32 6l "01540_edb360_323688_6l_958_ash_top_forcematchingsignature_for_cluster_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.455

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:49:33 6l "Active Session History (ASH) - Top Signature"
13:49:33 ASH Top FORCE_MATCHING_SIGNATURE for Instance 1 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6l.952 */
       con_id,
       force_matching_signature,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) min_sql_id,
       MAX(sql_id) max_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND force_matching_signature > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       force_matching_signature,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6l.952 */ SUM(samples) samples FROM hist
)
SELECT h.force_matching_signature||'('||h.distinct_sql_id||')' force_matching_signature,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       --h.min_sql_id,
       --h.max_sql_id,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.min_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       --NULL min_sql_id,
       --NULL max_sql_id,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:49:33 6l.959
Elapsed Hours so far:    2.455
Elapsed Hours so far: 2.455

Elapsed: 00:00:00.00

13:49:33 6l "01541_edb360_323688_6l_959_ash_top_forcematchingsignature_for_instance_1_for_7_days.html"
13:49:40 6l "01542_edb360_323688_6l_959_ash_top_forcematchingsignature_for_instance_1_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.458

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:49:43 6l "Active Session History (ASH) - Top Signature"
13:49:43 ASH Top FORCE_MATCHING_SIGNATURE for Instance 2 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6l.952 */
       con_id,
       force_matching_signature,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) min_sql_id,
       MAX(sql_id) max_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND sql_id IS NOT NULL
   AND force_matching_signature > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       force_matching_signature,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6l.952 */ SUM(samples) samples FROM hist
)
SELECT h.force_matching_signature||'('||h.distinct_sql_id||')' force_matching_signature,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       --h.min_sql_id,
       --h.max_sql_id,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.min_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       --NULL min_sql_id,
       --NULL max_sql_id,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:49:43 6l.960
Elapsed Hours so far:    2.458
Elapsed Hours so far: 2.458

Elapsed: 00:00:00.01

13:49:43 6l "01543_edb360_323688_6l_960_ash_top_forcematchingsignature_for_instance_2_for_7_days.html"
13:49:45 6l "01544_edb360_323688_6l_960_ash_top_forcematchingsignature_for_instance_2_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.458

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:49:47 6l "Active Session History (ASH) - Top Signature"
13:49:47 ASH Top FORCE_MATCHING_SIGNATURE for Cluster for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6l.952 */
       con_id,
       force_matching_signature,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) min_sql_id,
       MAX(sql_id) max_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730'
 AND '1930'
   AND sql_id IS NOT NULL
   AND force_matching_signature > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       force_matching_signature,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6l.952 */ SUM(samples) samples FROM hist
)
SELECT h.force_matching_signature||'('||h.distinct_sql_id||')' force_matching_signature,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       --h.min_sql_id,
       --h.max_sql_id,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.min_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       --NULL min_sql_id,
       --NULL max_sql_id,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:49:47 6l.961
Elapsed Hours so far:    2.458
Elapsed Hours so far: 2.458

Elapsed: 00:00:00.00

13:49:47 6l "01545_edb360_323688_6l_961_ash_top_forcematchingsignature_for_cluster_for_23_working_days.html"
13:49:50 6l "01546_edb360_323688_6l_961_ash_top_forcematchingsignature_for_cluster_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.460

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:49:53 6l "Active Session History (ASH) - Top Signature"
13:49:53 ASH Top FORCE_MATCHING_SIGNATURE for Instance 1 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6l.952 */
       con_id,
       force_matching_signature,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) min_sql_id,
       MAX(sql_id) max_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND sql_id IS NOT NULL
   AND force_matching_signature > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       force_matching_signature,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6l.952 */ SUM(samples) samples FROM hist
)
SELECT h.force_matching_signature||'('||h.distinct_sql_id||')' force_matching_signature,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       --h.min_sql_id,
       --h.max_sql_id,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.min_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       --NULL min_sql_id,
       --NULL max_sql_id,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:49:53 6l.962
Elapsed Hours so far:    2.460
Elapsed Hours so far: 2.46

Elapsed: 00:00:00.01

13:49:53 6l "01547_edb360_323688_6l_962_ash_top_forcematchingsignature_for_instance_1_for_23_working_days.html"
13:49:56 6l "01548_edb360_323688_6l_962_ash_top_forcematchingsignature_for_instance_1_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.462

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:49:58 6l "Active Session History (ASH) - Top Signature"
13:49:58 ASH Top FORCE_MATCHING_SIGNATURE for Instance 2 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6l.952 */
       con_id,
       force_matching_signature,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) min_sql_id,
       MAX(sql_id) max_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND sql_id IS NOT NULL
   AND force_matching_signature > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       force_matching_signature,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6l.952 */ SUM(samples) samples FROM hist
)
SELECT h.force_matching_signature||'('||h.distinct_sql_id||')' force_matching_signature,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       --h.min_sql_id,
       --h.max_sql_id,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.min_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       --NULL min_sql_id,
       --NULL max_sql_id,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:49:58 6l.963
Elapsed Hours so far:    2.462
Elapsed Hours so far: 2.462

Elapsed: 00:00:00.00

13:49:58 6l "01549_edb360_323688_6l_963_ash_top_forcematchingsignature_for_instance_2_for_23_working_days.html"
13:50:00 6l "01550_edb360_323688_6l_963_ash_top_forcematchingsignature_for_instance_2_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.463

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:50:02 6l "Active Session History (ASH) - Top Signature"
13:50:02 ASH Top FORCE_MATCHING_SIGNATURE for Cluster for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6l.952 */
       con_id,
       force_matching_signature,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) min_sql_id,
       MAX(sql_id) max_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE 1 = 1
   AND sql_id IS NOT NULL
   AND force_matching_signature > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       force_matching_signature,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6l.952 */ SUM(samples) samples FROM hist
)
SELECT h.force_matching_signature||'('||h.distinct_sql_id||')' force_matching_signature,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       --h.min_sql_id,
       --h.max_sql_id,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.min_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       --NULL min_sql_id,
       --NULL max_sql_id,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:50:02 6l.964
Elapsed Hours so far:    2.463
Elapsed Hours so far: 2.463

Elapsed: 00:00:00.00

13:50:02 6l "01551_edb360_323688_6l_964_ash_top_forcematchingsignature_for_cluster_for_31_days_of_history.html"
13:50:09 6l "01552_edb360_323688_6l_964_ash_top_forcematchingsignature_for_cluster_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.465

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:50:10 6l "Active Session History (ASH) - Top Signature"
13:50:10 ASH Top FORCE_MATCHING_SIGNATURE for Instance 1 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6l.952 */
       con_id,
       force_matching_signature,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) min_sql_id,
       MAX(sql_id) max_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1
   AND sql_id IS NOT NULL
   AND force_matching_signature > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       force_matching_signature,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6l.952 */ SUM(samples) samples FROM hist
)
SELECT h.force_matching_signature||'('||h.distinct_sql_id||')' force_matching_signature,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       --h.min_sql_id,
       --h.max_sql_id,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.min_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       --NULL min_sql_id,
       --NULL max_sql_id,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:50:10 6l.965
Elapsed Hours so far:    2.465
Elapsed Hours so far: 2.465

Elapsed: 00:00:00.00

13:50:10 6l "01553_edb360_323688_6l_965_ash_top_forcematchingsignature_for_instance_1_for_31_days_of_history.html"
13:50:17 6l "01554_edb360_323688_6l_965_ash_top_forcematchingsignature_for_instance_1_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.467

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:50:18 6l "Active Session History (ASH) - Top Signature"
13:50:18 ASH Top FORCE_MATCHING_SIGNATURE for Instance 2 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6l.952 */
       con_id,
       force_matching_signature,
       dbid,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(DISTINCT sql_id) distinct_sql_id,
       MIN(sql_id) min_sql_id,
       MAX(sql_id) max_sql_id,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2
   AND sql_id IS NOT NULL
   AND force_matching_signature > 0
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id,
       force_matching_signature,
       dbid
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6l.952 */ SUM(samples) samples FROM hist
)
SELECT h.force_matching_signature||'('||h.distinct_sql_id||')' force_matching_signature,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       --h.min_sql_id,
       --h.max_sql_id,
       DBMS_LOB.SUBSTR(s.sql_text, 1000) sample_sql_text
  FROM hist h,
       total t,
       dba_hist_sqltext s
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND s.sql_id(+) = h.min_sql_id AND s.dbid(+) = h.dbid
   AND s.con_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       --NULL min_sql_id,
       --NULL max_sql_id,
       NULL sample_sql_text
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:50:18 6l.966
Elapsed Hours so far:    2.467
Elapsed Hours so far: 2.467

Elapsed: 00:00:00.00

13:50:18 6l "01555_edb360_323688_6l_966_ash_top_forcematchingsignature_for_instance_2_for_31_days_of_history.html"
13:50:20 6l "01556_edb360_323688_6l_966_ash_top_forcematchingsignature_for_instance_2_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.468

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:50:22 6m "Active Session History (ASH) - Top PDBs"
13:50:22 ASH Top PDBs for Cluster for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6m.967 */
       con_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 1 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6m.967 */ SUM(samples) samples FROM hist
)
SELECT NVL(p.pdb_name, h.con_id) pdb_name,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_pdbs p
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND p.pdb_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:50:22 6m.967
Elapsed Hours so far:    2.468
Elapsed Hours so far: 2.468

Elapsed: 00:00:00.00

13:50:22 6m "01557_edb360_323688_6m_967_ash_top_pdbs_for_cluster_for_1_day.html"
13:50:27 6m "01558_edb360_323688_6m_967_ash_top_pdbs_for_cluster_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.470

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:50:28 6m "Active Session History (ASH) - Top PDBs"
13:50:28 ASH Top PDBs for Instance 1 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6m.967 */
       con_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6m.967 */ SUM(samples) samples FROM hist
)
SELECT NVL(p.pdb_name, h.con_id) pdb_name,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_pdbs p
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND p.pdb_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:50:28 6m.968
Elapsed Hours so far:    2.470
Elapsed Hours so far: 2.47

Elapsed: 00:00:00.01

13:50:28 6m "01559_edb360_323688_6m_968_ash_top_pdbs_for_instance_1_for_1_day.html"
13:50:34 6m "01560_edb360_323688_6m_968_ash_top_pdbs_for_instance_1_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.472

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:50:35 6m "Active Session History (ASH) - Top PDBs"
13:50:35 ASH Top PDBs for Instance 2 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6m.967 */
       con_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6m.967 */ SUM(samples) samples FROM hist
)
SELECT NVL(p.pdb_name, h.con_id) pdb_name,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_pdbs p
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND p.pdb_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:50:35 6m.969
Elapsed Hours so far:    2.472
Elapsed Hours so far: 2.472

Elapsed: 00:00:00.00

13:50:35 6m "01561_edb360_323688_6m_969_ash_top_pdbs_for_instance_2_for_1_day.html"
13:50:36 6m "01562_edb360_323688_6m_969_ash_top_pdbs_for_instance_2_for_1_day_pie_chart.html"
Elapsed Hours so far:    2.473

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:50:37 6m "Active Session History (ASH) - Top PDBs"
13:50:37 ASH Top PDBs for Cluster for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6m.967 */
       con_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(s
ample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6m.967 */ SUM(samples) samples FROM hist
)
SELECT NVL(p.pdb_name, h.con_id) pdb_name,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_pdbs p
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND p.pdb_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:50:37 6m.970
Elapsed Hours so far:    2.473
Elapsed Hours so far: 2.473

Elapsed: 00:00:00.00

13:50:37 6m "01563_edb360_323688_6m_970_ash_top_pdbs_for_cluster_for_5_working_days.html"
13:50:38 6m "01564_edb360_323688_6m_970_ash_top_pdbs_for_cluster_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.473

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:50:39 6m "Active Session History (ASH) - Top PDBs"
13:50:39 ASH Top PDBs for Instance 1 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6m.967 */
       con_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6m.967 */ SUM(samples) samples FROM hist
)
SELECT NVL(p.pdb_name, h.con_id) pdb_name,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_pdbs p
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND p.pdb_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:50:39 6m.971
Elapsed Hours so far:    2.473
Elapsed Hours so far: 2.473

Elapsed: 00:00:00.01

13:50:40 6m "01565_edb360_323688_6m_971_ash_top_pdbs_for_instance_1_for_5_working_days.html"
13:50:41 6m "01566_edb360_323688_6m_971_ash_top_pdbs_for_instance_1_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.474

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:50:42 6m "Active Session History (ASH) - Top PDBs"
13:50:42 ASH Top PDBs for Instance 2 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6m.967 */
       con_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6m.967 */ SUM(samples) samples FROM hist
)
SELECT NVL(p.pdb_name, h.con_id) pdb_name,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_pdbs p
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND p.pdb_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:50:42 6m.972
Elapsed Hours so far:    2.474
Elapsed Hours so far: 2.474

Elapsed: 00:00:00.00

13:50:42 6m "01567_edb360_323688_6m_972_ash_top_pdbs_for_instance_2_for_5_working_days.html"
13:50:43 6m "01568_edb360_323688_6m_972_ash_top_pdbs_for_instance_2_for_5_working_days_pie_chart.html"
Elapsed Hours so far:    2.475

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:50:44 6m "Active Session History (ASH) - Top PDBs"
13:50:44 ASH Top PDBs for Cluster for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6m.967 */
       con_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6m.967 */ SUM(samples) samples FROM hist
)
SELECT NVL(p.pdb_name, h.con_id) pdb_name,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_pdbs p
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND p.pdb_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:50:44 6m.973
Elapsed Hours so far:    2.475
Elapsed Hours so far: 2.475

Elapsed: 00:00:00.00

13:50:45 6m "01569_edb360_323688_6m_973_ash_top_pdbs_for_cluster_for_7_days.html"
13:50:45 6m "01570_edb360_323688_6m_973_ash_top_pdbs_for_cluster_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.475

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:50:46 6m "Active Session History (ASH) - Top PDBs"
13:50:46 ASH Top PDBs for Instance 1 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6m.967 */
       con_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6m.967 */ SUM(samples) samples FROM hist
)
SELECT NVL(p.pdb_name, h.con_id) pdb_name,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_pdbs p
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND p.pdb_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:50:46 6m.974
Elapsed Hours so far:    2.475
Elapsed Hours so far: 2.475

Elapsed: 00:00:00.00

13:50:46 6m "01571_edb360_323688_6m_974_ash_top_pdbs_for_instance_1_for_7_days.html"
13:50:47 6m "01572_edb360_323688_6m_974_ash_top_pdbs_for_instance_1_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.476

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:50:48 6m "Active Session History (ASH) - Top PDBs"
13:50:48 ASH Top PDBs for Instance 2 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6m.967 */
       con_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6m.967 */ SUM(samples) samples FROM hist
)
SELECT NVL(p.pdb_name, h.con_id) pdb_name,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_pdbs p
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND p.pdb_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:50:48 6m.975
Elapsed Hours so far:    2.476
Elapsed Hours so far: 2.476

Elapsed: 00:00:00.00

13:50:49 6m "01573_edb360_323688_6m_975_ash_top_pdbs_for_instance_2_for_7_days.html"
13:50:50 6m "01574_edb360_323688_6m_975_ash_top_pdbs_for_instance_2_for_7_days_pie_chart.html"
Elapsed Hours so far:    2.476

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:50:51 6m "Active Session History (ASH) - Top PDBs"
13:50:51 ASH Top PDBs for Cluster for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6m.967 */
       con_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730'
 AND '1930'
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6m.967 */ SUM(samples) samples FROM hist
)
SELECT NVL(p.pdb_name, h.con_id) pdb_name,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_pdbs p
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND p.pdb_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:50:51 6m.976
Elapsed Hours so far:    2.476
Elapsed Hours so far: 2.476

Elapsed: 00:00:00.00

13:50:51 6m "01575_edb360_323688_6m_976_ash_top_pdbs_for_cluster_for_23_working_days.html"
13:50:52 6m "01576_edb360_323688_6m_976_ash_top_pdbs_for_cluster_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.478

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:50:57 6m "Active Session History (ASH) - Top PDBs"
13:50:57 ASH Top PDBs for Instance 1 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6m.967 */
       con_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6m.967 */ SUM(samples) samples FROM hist
)
SELECT NVL(p.pdb_name, h.con_id) pdb_name,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_pdbs p
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND p.pdb_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:50:57 6m.977
Elapsed Hours so far:    2.478
Elapsed Hours so far: 2.478

Elapsed: 00:00:00.00

13:50:57 6m "01577_edb360_323688_6m_977_ash_top_pdbs_for_instance_1_for_23_working_days.html"
13:51:03 6m "01578_edb360_323688_6m_977_ash_top_pdbs_for_instance_1_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.480

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:51:05 6m "Active Session History (ASH) - Top PDBs"
13:51:05 ASH Top PDBs for Instance 2 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6m.967 */
       con_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6m.967 */ SUM(samples) samples FROM hist
)
SELECT NVL(p.pdb_name, h.con_id) pdb_name,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_pdbs p
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND p.pdb_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:51:05 6m.978
Elapsed Hours so far:    2.480
Elapsed Hours so far: 2.48

Elapsed: 00:00:00.00

13:51:05 6m "01579_edb360_323688_6m_978_ash_top_pdbs_for_instance_2_for_23_working_days.html"
13:51:06 6m "01580_edb360_323688_6m_978_ash_top_pdbs_for_instance_2_for_23_working_days_pie_chart.html"
Elapsed Hours so far:    2.481

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:51:07 6m "Active Session History (ASH) - Top PDBs"
13:51:07 ASH Top PDBs for Cluster for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6m.967 */
       con_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE 1 = 1
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6m.967 */ SUM(samples) samples FROM hist
)
SELECT NVL(p.pdb_name, h.con_id) pdb_name,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_pdbs p
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND p.pdb_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:51:07 6m.979
Elapsed Hours so far:    2.481
Elapsed Hours so far: 2.481

Elapsed: 00:00:00.01

13:51:08 6m "01581_edb360_323688_6m_979_ash_top_pdbs_for_cluster_for_31_days_of_history.html"
13:51:12 6m "01582_edb360_323688_6m_979_ash_top_pdbs_for_cluster_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.483

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:51:13 6m "Active Session History (ASH) - Top PDBs"
13:51:13 ASH Top PDBs for Instance 1 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6m.967 */
       con_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6m.967 */ SUM(samples) samples FROM hist
)
SELECT NVL(p.pdb_name, h.con_id) pdb_name,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_pdbs p
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND p.pdb_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:51:13 6m.980
Elapsed Hours so far:    2.483
Elapsed Hours so far: 2.483

Elapsed: 00:00:00.00

13:51:13 6m "01583_edb360_323688_6m_980_ash_top_pdbs_for_instance_1_for_31_days_of_history.html"
13:51:18 6m "01584_edb360_323688_6m_980_ash_top_pdbs_for_instance_1_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.484

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:51:19 6m "Active Session History (ASH) - Top PDBs"
13:51:19 ASH Top PDBs for Instance 2 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

WITH
hist AS (
SELECT /*+  MATERIALIZE NO_MERGE   DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH
(h.sn h.ash h.evt)   FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.a
sh) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DB
A_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6m.967 */
       con_id,
       ROW_NUMBER () OVER (ORDER BY COUNT(*) DESC) rn,
       COUNT(*) samples
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       con_id
),
total AS (
SELECT /*+  MATERIALIZE NO_MERGE  */ /* 6m.967 */ SUM(samples) samples FROM hist
)
SELECT NVL(p.pdb_name, h.con_id) pdb_name,
       h.samples,
       ROUND(100 * h.samples / t.samples, 1) percent,
       NULL dummy_01
  FROM hist h,
       total t,
       dba_pdbs p
 WHERE h.samples >= t.samples / 1000 AND rn <= 14
   AND p.pdb_id(+) = h.con_id
 UNION ALL
SELECT 'Others',
       NVL(SUM(h.samples), 0) samples,
       NVL(ROUND(100 * SUM(h.samples) / AVG(t.samples), 1), 0) percent,
       NULL dummy_01
  FROM hist h,
       total t
 WHERE h.samples < t.samples / 1000 OR rn > 14
 ORDER BY 2 DESC NULLS LAST

13:51:19 6m.981
Elapsed Hours so far:    2.484
Elapsed Hours so far: 2.484

Elapsed: 00:00:00.00

13:51:19 6m "01585_edb360_323688_6m_981_ash_top_pdbs_for_instance_2_for_31_days_of_history.html"
13:51:20 6m "01586_edb360_323688_6m_981_ash_top_pdbs_for_instance_2_for_31_days_of_history_pie_chart.html"
Elapsed Hours so far:    2.485

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:51:23 6n "Active Session History (ASH) - Top PDBs - Time Series"
13:51:23 ASH Top PDBs for Cluster for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6n.982 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN con_id IN
       (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_01",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_02",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_03",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_04",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_05",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_06",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_07",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_08",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_09",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_10",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_11",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_12",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_13",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_14"
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 1 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:51:23 6n.982
Elapsed Hours so far:    2.485
Elapsed Hours so far: 2.485

Elapsed: 00:00:00.00

13:51:23 6n "01587_edb360_323688_6n_982_ash_top_pdbs_for_cluster_for_1_day.html"
13:51:28 6n "01588_edb360_323688_6n_982_ash_top_pdbs_for_cluster_for_1_day_line_chart.html"
Elapsed Hours so far:    2.488

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:51:33 6n "Active Session History (ASH) - Top PDBs - Time Series"
13:51:33 ASH Top PDBs for Instance 1 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6n.982 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN con_id IN
       (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_01",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_02",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_03",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_04",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_05",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_06",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_07",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_08",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_09",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_10",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_11",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_12",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_13",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_14"
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:51:33 6n.983
Elapsed Hours so far:    2.488
Elapsed Hours so far: 2.488

Elapsed: 00:00:00.01

13:51:33 6n "01589_edb360_323688_6n_983_ash_top_pdbs_for_instance_1_for_1_day.html"
13:51:34 6n "01590_edb360_323688_6n_983_ash_top_pdbs_for_instance_1_for_1_day_line_chart.html"
Elapsed Hours so far:    2.489

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:51:35 6n "Active Session History (ASH) - Top PDBs - Time Series"
13:51:35 ASH Top PDBs for Instance 2 for 1 day, between 2020-11-05 11:11:07 and 2020-11-06 11:11:07

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6n.982 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN con_id IN
       (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_01",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_02",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_03",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_04",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_05",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_06",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_07",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_08",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_09",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_10",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_11",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_12",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_13",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_14"
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 1 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:51:35 6n.984
Elapsed Hours so far:    2.489
Elapsed Hours so far: 2.489

Elapsed: 00:00:00.01

13:51:35 6n "01591_edb360_323688_6n_984_ash_top_pdbs_for_instance_2_for_1_day.html"
13:51:36 6n "01592_edb360_323688_6n_984_ash_top_pdbs_for_instance_2_for_1_day_line_chart.html"
Elapsed Hours so far:    2.489

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:51:37 6n "Active Session History (ASH) - Top PDBs - Time Series"
13:51:37 ASH Top PDBs for Cluster for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6n.982 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN con_id IN
       (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_01",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_02",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_03",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_04",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_05",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_06",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_07",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_08",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_09",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_10",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_11",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_12",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_13",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_14"
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(s
ample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:51:37 6n.985
Elapsed Hours so far:    2.489
Elapsed Hours so far: 2.489

Elapsed: 00:00:00.00

13:51:37 6n "01593_edb360_323688_6n_985_ash_top_pdbs_for_cluster_for_5_working_days.html"
13:51:38 6n "01594_edb360_323688_6n_985_ash_top_pdbs_for_cluster_for_5_working_days_line_chart.html"
Elapsed Hours so far:    2.490

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:51:39 6n "Active Session History (ASH) - Top PDBs - Time Series"
13:51:39 ASH Top PDBs for Instance 1 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6n.982 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN con_id IN
       (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_01",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_02",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_03",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_04",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_05",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_06",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_07",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_08",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_09",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_10",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_11",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_12",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_13",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_14"
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:51:39 6n.986
Elapsed Hours so far:    2.490
Elapsed Hours so far: 2.49

Elapsed: 00:00:00.00

13:51:39 6n "01595_edb360_323688_6n_986_ash_top_pdbs_for_instance_1_for_5_working_days.html"
13:51:40 6n "01596_edb360_323688_6n_986_ash_top_pdbs_for_instance_1_for_5_working_days_line_chart.html"
Elapsed Hours so far:    2.490

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:51:42 6n "Active Session History (ASH) - Top PDBs - Time Series"
13:51:42 ASH Top PDBs for Instance 2 for 5 working days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07, and between 0730 and 1930 hours

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6n.982 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN con_id IN
       (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_01",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_02",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_03",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_04",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_05",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_06",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_07",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_08",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_09",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_10",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_11",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_12",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_13",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_14"
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') AND TO_CHAR(sample_time, 'D') BETWEEN '
2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730' AND '1930'
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:51:42 6n.987
Elapsed Hours so far:    2.490
Elapsed Hours so far: 2.49

Elapsed: 00:00:00.00

13:51:42 6n "01597_edb360_323688_6n_987_ash_top_pdbs_for_instance_2_for_5_working_days.html"
13:51:43 6n "01598_edb360_323688_6n_987_ash_top_pdbs_for_instance_2_for_5_working_days_line_chart.html"
Elapsed Hours so far:    2.491

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:51:44 6n "Active Session History (ASH) - Top PDBs - Time Series"
13:51:44 ASH Top PDBs for Cluster for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6n.982 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN con_id IN
       (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_01",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_02",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_03",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_04",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_05",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_06",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_07",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_08",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_09",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_10",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_11",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_12",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_13",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_14"
  FROM dba_hist_active_sess_history h
 WHERE sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS') - 7 AND TO_TIMESTAMP('
20201106112807', 'YYYYMMDDHH24MISS')
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:51:44 6n.988
Elapsed Hours so far:    2.491
Elapsed Hours so far: 2.491

Elapsed: 00:00:00.00

13:51:44 6n "01599_edb360_323688_6n_988_ash_top_pdbs_for_cluster_for_7_days.html"
13:51:44 6n "01600_edb360_323688_6n_988_ash_top_pdbs_for_cluster_for_7_days_line_chart.html"
Elapsed Hours so far:    2.492

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:51:46 6n "Active Session History (ASH) - Top PDBs - Time Series"
13:51:46 ASH Top PDBs for Instance 1 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6n.982 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN con_id IN
       (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_01",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_02",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_03",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_04",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_05",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_06",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_07",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_08",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_09",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_10",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_11",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_12",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_13",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_14"
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:51:46 6n.989
Elapsed Hours so far:    2.492
Elapsed Hours so far: 2.492

Elapsed: 00:00:00.01

13:51:46 6n "01601_edb360_323688_6n_989_ash_top_pdbs_for_instance_1_for_7_days.html"
13:51:46 6n "01602_edb360_323688_6n_989_ash_top_pdbs_for_instance_1_for_7_days_line_chart.html"
Elapsed Hours so far:    2.492

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:51:48 6n "Active Session History (ASH) - Top PDBs - Time Series"
13:51:48 ASH Top PDBs for Instance 2 for 7 days, between 2020-10-30 11:10:07 and 2020-11-06 11:11:07

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6n.982 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN con_id IN
       (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_01",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_02",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_03",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_04",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_05",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_06",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_07",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_08",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_09",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_10",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_11",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_12",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_13",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_14"
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND sample_time BETWEEN TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS'
) - 7 AND TO_TIMESTAMP('20201106112807', 'YYYYMMDDHH24MISS')
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:51:48 6n.990
Elapsed Hours so far:    2.492
Elapsed Hours so far: 2.492

Elapsed: 00:00:00.00

13:51:48 6n "01603_edb360_323688_6n_990_ash_top_pdbs_for_instance_2_for_7_days.html"
13:51:49 6n "01604_edb360_323688_6n_990_ash_top_pdbs_for_instance_2_for_7_days_line_chart.html"
Elapsed Hours so far:    2.493

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:51:51 6n "Active Session History (ASH) - Top PDBs - Time Series"
13:51:51 ASH Top PDBs for Cluster for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6n.982 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN con_id IN
       (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_01",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_02",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_03",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_04",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_05",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_06",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_07",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_08",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_09",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_10",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_11",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_12",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_13",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_14"
  FROM dba_hist_active_sess_history h
 WHERE TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time, 'HH24') BETWEEN '0730'
 AND '1930'
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:51:51 6n.991
Elapsed Hours so far:    2.493
Elapsed Hours so far: 2.493

Elapsed: 00:00:00.00

13:51:51 6n "01605_edb360_323688_6n_991_ash_top_pdbs_for_cluster_for_23_working_days.html"
13:51:52 6n "01606_edb360_323688_6n_991_ash_top_pdbs_for_cluster_for_23_working_days_line_chart.html"
Elapsed Hours so far:    2.494

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:51:54 6n "Active Session History (ASH) - Top PDBs - Time Series"
13:51:54 ASH Top PDBs for Instance 1 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6n.982 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN con_id IN
       (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_01",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_02",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_03",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_04",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_05",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_06",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_07",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_08",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_09",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_10",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_11",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_12",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_13",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_14"
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:51:54 6n.992
Elapsed Hours so far:    2.494
Elapsed Hours so far: 2.494

Elapsed: 00:00:00.00

13:51:54 6n "01607_edb360_323688_6n_992_ash_top_pdbs_for_instance_1_for_23_working_days.html"
13:51:55 6n "01608_edb360_323688_6n_992_ash_top_pdbs_for_instance_1_for_23_working_days_line_chart.html"
Elapsed Hours so far:    2.495

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:51:57 6n "Active Session History (ASH) - Top PDBs - Time Series"
13:51:57 ASH Top PDBs for Instance 2 for 23 working days, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16, and between 0730 and 1930 hours

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6n.982 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN con_id IN
       (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_01",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_02",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_03",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_04",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_05",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_06",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_07",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_08",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_09",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_10",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_11",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_12",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_13",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_14"
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2 AND TO_CHAR(sample_time, 'D') BETWEEN '2' AND '6' AND TO_CHAR(sample_time
, 'HH24') BETWEEN '0730' AND '1930'
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:51:57 6n.993
Elapsed Hours so far:    2.495
Elapsed Hours so far: 2.495

Elapsed: 00:00:00.00

13:51:58 6n "01609_edb360_323688_6n_993_ash_top_pdbs_for_instance_2_for_23_working_days.html"
13:51:58 6n "01610_edb360_323688_6n_993_ash_top_pdbs_for_instance_2_for_23_working_days_line_chart.html"
Elapsed Hours so far:    2.497

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:52:06 6n "Active Session History (ASH) - Top PDBs - Time Series"
13:52:06 ASH Top PDBs for Cluster for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6n.982 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN con_id IN
       (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_01",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_02",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_03",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_04",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_05",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_06",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_07",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_08",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_09",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_10",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_11",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_12",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_13",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_14"
  FROM dba_hist_active_sess_history h
 WHERE 1 = 1
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:52:06 6n.994
Elapsed Hours so far:    2.497
Elapsed Hours so far: 2.497

Elapsed: 00:00:00.00

13:52:06 6n "01611_edb360_323688_6n_994_ash_top_pdbs_for_cluster_for_31_days_of_history.html"
13:52:07 6n "01612_edb360_323688_6n_994_ash_top_pdbs_for_cluster_for_31_days_of_history_line_chart.html"
Elapsed Hours so far:    2.499

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:52:12 6n "Active Session History (ASH) - Top PDBs - Time Series"
13:52:12 ASH Top PDBs for Instance 1 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6n.982 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN con_id IN
       (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_01",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_02",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_03",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_04",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_05",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_06",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_07",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_08",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_09",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_10",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_11",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_12",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_13",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_14"
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 1
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:52:12 6n.995
Elapsed Hours so far:    2.499
Elapsed Hours so far: 2.499

Elapsed: 00:00:00.00

13:52:12 6n "01613_edb360_323688_6n_995_ash_top_pdbs_for_instance_1_for_31_days_of_history.html"
13:52:13 6n "01614_edb360_323688_6n_995_ash_top_pdbs_for_instance_1_for_31_days_of_history_line_chart.html"
Elapsed Hours so far:    2.499

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:52:14 6n "Active Session History (ASH) - Top PDBs - Time Series"
13:52:14 ASH Top PDBs for Instance 2 for 31 days of history, between 2020-10-06T11:22:16 and 2020-11-06T11:22:16

SELECT /*+  DYNAMIC_SAMPLING(4)   FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt)   FU
LL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST
_ACT_SESS_HISTORY.evt)   USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY
.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt)  */
       /* 6n.982 */
       snap_id,
       TO_CHAR(MIN(sample_time), 'YYYY-MM-DD HH24:MI:SS') begin_time,
       TO_CHAR(MAX(sample_time), 'YYYY-MM-DD HH24:MI:SS') end_time,
       ROUND(SUM(CASE WHEN con_id IN
       (-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1)
       THEN 0 ELSE 10 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS DATE) - CAST(MIN(sample_time) A
S DATE), (1/24/3600)) * 24 * 60 * 60), 3) "Others",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_01",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_02",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_03",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_04",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_05",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_06",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_07",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_08",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_09",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_10",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_11",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_12",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_13",
       ROUND(SUM(CASE con_id WHEN -1 THEN 10 ELSE 0 END) / ROUND(GREATEST(CAST(MAX(sample_time) AS D
ATE) - CAST(MIN(sample_time) AS DATE), (1/24/3600)) * 24 * 60 * 60), 3) "PDB_NAME_14"
  FROM dba_hist_active_sess_history h
 WHERE instance_number = 2
   AND 4 < 2
   AND con_id > 1
   AND snap_id BETWEEN 3473 AND 4962
   AND dbid = 2109323688
 GROUP BY
       snap_id
 ORDER BY
       snap_id

13:52:14 6n.996
Elapsed Hours so far:    2.499
Elapsed Hours so far: 2.499

Elapsed: 00:00:00.00

13:52:14 6n "01615_edb360_323688_6n_996_ash_top_pdbs_for_instance_2_for_31_days_of_history.html"
13:52:15 6n "01616_edb360_323688_6n_996_ash_top_pdbs_for_instance_2_for_31_days_of_history_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:54:58 edb360_323688_perfhub_rac_4924_4925_max5wd1
13:54:58 7a 01617_edb360_323688_perfhub_rac_4924_4925_max5wd1.html
Elapsed Hours so far: 2.545

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:56:18 edb360_323688_awrrpt_rac_4924_4925_max5wd1
13:56:18 7a 01618_edb360_323688_awrrpt_rac_4924_4925_max5wd1.html
Elapsed Hours so far: 2.567
13:58:50 7a 01619_edb360_323688_awrrpt_rac_4924_4925_max5wd1_diff.html
Elapsed Hours so far: 2.609

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

13:59:01 edb360_323688_perfhub_rac_4868_4869_max5wd2
13:59:01 7a 01620_edb360_323688_perfhub_rac_4868_4869_max5wd2.html
Elapsed Hours so far: 2.612

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:00:22 edb360_323688_awrrpt_rac_4868_4869_max5wd2
14:00:23 7a 01621_edb360_323688_awrrpt_rac_4868_4869_max5wd2.html
Elapsed Hours so far: 2.635
14:02:54 7a 01622_edb360_323688_awrrpt_rac_4868_4869_max5wd2_diff.html
Elapsed Hours so far: 2.677

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:03:01 edb360_323688_perfhub_rac_4820_4821_max5wd3
14:03:02 7a 01623_edb360_323688_perfhub_rac_4820_4821_max5wd3.html
Elapsed Hours so far: 2.679

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:04:18 edb360_323688_awrrpt_rac_4820_4821_max5wd3
14:04:18 7a 01624_edb360_323688_awrrpt_rac_4820_4821_max5wd3.html
Elapsed Hours so far: 2.701
14:06:48 7a 01625_edb360_323688_awrrpt_rac_4820_4821_max5wd3_diff.html
Elapsed Hours so far: 2.742

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:06:53 edb360_323688_perfhub_rac_4886_4887_max7d1
14:06:53 7a 01626_edb360_323688_perfhub_rac_4886_4887_max7d1.html
Elapsed Hours so far: 2.744

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:08:09 edb360_323688_awrrpt_rac_4886_4887_max7d1
14:08:09 7a 01627_edb360_323688_awrrpt_rac_4886_4887_max7d1.html
Elapsed Hours so far: 2.765
14:10:34 7a 01628_edb360_323688_awrrpt_rac_4886_4887_max7d1_diff.html
Elapsed Hours so far: 2.805

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:10:38 edb360_323688_perfhub_rac_4838_4839_max7d2
14:10:38 7a 01629_edb360_323688_perfhub_rac_4838_4839_max7d2.html
Elapsed Hours so far: 2.806

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:11:55 edb360_323688_awrrpt_rac_4838_4839_max7d2
14:11:55 7a 01630_edb360_323688_awrrpt_rac_4838_4839_max7d2.html
Elapsed Hours so far: 2.827
14:14:23 7a 01631_edb360_323688_awrrpt_rac_4838_4839_max7d2_diff.html
Elapsed Hours so far: 2.869

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:14:28 edb360_323688_perfhub_rac_4790_4791_max7d3
14:14:28 7a 01632_edb360_323688_perfhub_rac_4790_4791_max7d3.html
Elapsed Hours so far: 2.87

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:15:46 edb360_323688_awrrpt_rac_4790_4791_max7d3
14:15:46 7a 01633_edb360_323688_awrrpt_rac_4790_4791_max7d3.html
Elapsed Hours so far: 2.892
14:18:14 7a 01634_edb360_323688_awrrpt_rac_4790_4791_max7d3_diff.html
Elapsed Hours so far: 2.933

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:18:19 edb360_323688_perfhub_rac_3947_3948_max23wd1
14:18:19 7a 01635_edb360_323688_perfhub_rac_3947_3948_max23wd1.html
Elapsed Hours so far: 2.934

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:19:36 edb360_323688_awrrpt_rac_3947_3948_max23wd1
14:19:36 7a 01636_edb360_323688_awrrpt_rac_3947_3948_max23wd1.html
Elapsed Hours so far: 2.956
14:22:04 7a 01637_edb360_323688_awrrpt_rac_3947_3948_max23wd1_diff.html
Elapsed Hours so far: 2.997

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:22:10 edb360_323688_perfhub_rac_3899_3900_max23wd2
14:22:10 7a 01638_edb360_323688_perfhub_rac_3899_3900_max23wd2.html
Elapsed Hours so far: 2.998

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:23:25 edb360_323688_awrrpt_rac_3899_3900_max23wd2
14:23:26 7a 01639_edb360_323688_awrrpt_rac_3899_3900_max23wd2.html
Elapsed Hours so far: 3.019
14:25:47 7a 01640_edb360_323688_awrrpt_rac_3899_3900_max23wd2_diff.html
Elapsed Hours so far: 3.059

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:25:52 edb360_323688_perfhub_rac_3851_3852_max23wd3
14:25:52 7a 01641_edb360_323688_perfhub_rac_3851_3852_max23wd3.html
Elapsed Hours so far: 3.06

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:27:07 edb360_323688_awrrpt_rac_3851_3852_max23wd3
14:27:07 7a 01642_edb360_323688_awrrpt_rac_3851_3852_max23wd3.html
Elapsed Hours so far: 3.081
14:29:31 7a 01643_edb360_323688_awrrpt_rac_3851_3852_max23wd3_diff.html
Elapsed Hours so far: 3.121

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:29:36 edb360_323688_perfhub_rac_3995_3996_max31d1
14:29:36 7a 01644_edb360_323688_perfhub_rac_3995_3996_max31d1.html
Elapsed Hours so far: 3.122

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:30:50 edb360_323688_awrrpt_rac_3995_3996_max31d1
14:30:50 7a 01645_edb360_323688_awrrpt_rac_3995_3996_max31d1.html
Elapsed Hours so far: 3.143
14:33:12 7a 01646_edb360_323688_awrrpt_rac_3995_3996_max31d1_diff.html
Elapsed Hours so far: 3.182

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:33:18 edb360_323688_perfhub_rac_3803_3804_max31d2
14:33:18 7a 01647_edb360_323688_perfhub_rac_3803_3804_max31d2.html
Elapsed Hours so far: 3.184

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:34:30 edb360_323688_awrrpt_rac_3803_3804_max31d2
14:34:30 7a 01648_edb360_323688_awrrpt_rac_3803_3804_max31d2.html
Elapsed Hours so far: 3.204
14:36:45 7a 01649_edb360_323688_awrrpt_rac_3803_3804_max31d2_diff.html
Elapsed Hours so far: 3.242

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:36:50 edb360_323688_perfhub_rac_3755_3756_max31d3
14:36:50 7a 01650_edb360_323688_perfhub_rac_3755_3756_max31d3.html
Elapsed Hours so far: 3.243

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:38:05 edb360_323688_awrrpt_rac_3755_3756_max31d3
14:38:05 7a 01651_edb360_323688_awrrpt_rac_3755_3756_max31d3.html
Elapsed Hours so far: 3.264
14:40:27 7a 01652_edb360_323688_awrrpt_rac_3755_3756_max31d3_diff.html
Elapsed Hours so far: 3.303

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:40:33 edb360_323688_awrrpt_rac_4670_4671_med7d
14:40:33 7a 01653_edb360_323688_awrrpt_rac_4670_4671_med7d.html
Elapsed Hours so far: 3.305

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:42:50 edb360_323688_awrrpt_rac_3561_3562_med31d
14:42:51 7a 01654_edb360_323688_awrrpt_rac_3561_3562_med31d.html
Elapsed Hours so far: 3.343

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:45:09 edb360_323688_awrrpt_rac_4637_4638_min5wd
14:45:09 7a 01655_edb360_323688_awrrpt_rac_4637_4638_min5wd.html
Elapsed Hours so far: 3.381

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:47:29 edb360_323688_awrrpt_rac_4534_4535_min23wd
14:47:29 7a 01656_edb360_323688_awrrpt_rac_4534_4535_min23wd.html
Elapsed Hours so far: 3.42

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:49:45 edb360_323688_perfhub_1_4640_4641_max5wd1
14:49:45 7a 01657_edb360_323688_perfhub_1_4640_4641_max5wd1.html
Elapsed Hours so far: 3.458

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:50:56 edb360_323688_awrrpt_1_4640_4641_max5wd1
14:50:56 7a 01658_edb360_323688_awrrpt_1_4640_4641_max5wd1.html
Elapsed Hours so far: 3.478
14:53:16 7a 01659_edb360_323688_awrrpt_1_4640_4641_max5wd1_diff.html
Elapsed Hours so far: 3.517

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:53:23 edb360_323688_perfhub_1_4833_4834_max5wd2
14:53:23 7a 01660_edb360_323688_perfhub_1_4833_4834_max5wd2.html
Elapsed Hours so far: 3.519

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:54:33 edb360_323688_awrrpt_1_4833_4834_max5wd2
14:54:33 7a 01661_edb360_323688_awrrpt_1_4833_4834_max5wd2.html
Elapsed Hours so far: 3.538
14:56:53 7a 01662_edb360_323688_awrrpt_1_4833_4834_max5wd2_diff.html
Elapsed Hours so far: 3.577

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:56:58 edb360_323688_perfhub_1_4834_4835_max5wd3
14:56:59 7a 01663_edb360_323688_perfhub_1_4834_4835_max5wd3.html
Elapsed Hours so far: 3.578

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

14:58:12 edb360_323688_awrrpt_1_4834_4835_max5wd3
14:58:12 7a 01664_edb360_323688_awrrpt_1_4834_4835_max5wd3.html
Elapsed Hours so far: 3.599
15:00:34 7a 01665_edb360_323688_awrrpt_1_4834_4835_max5wd3_diff.html
Elapsed Hours so far: 3.638

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:00:40 edb360_323688_perfhub_1_4593_4594_max7d1
15:00:41 7a 01666_edb360_323688_perfhub_1_4593_4594_max7d1.html
Elapsed Hours so far: 3.64

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:01:55 edb360_323688_awrrpt_1_4593_4594_max7d1
15:01:55 7a 01667_edb360_323688_awrrpt_1_4593_4594_max7d1.html
Elapsed Hours so far: 3.661
15:04:14 7a 01668_edb360_323688_awrrpt_1_4593_4594_max7d1_diff.html
Elapsed Hours so far: 3.7

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:04:21 edb360_323688_perfhub_1_4709_4710_max7d2
15:04:21 7a 01669_edb360_323688_perfhub_1_4709_4710_max7d2.html
Elapsed Hours so far: 3.701

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:05:34 edb360_323688_awrrpt_1_4709_4710_max7d2
15:05:34 7a 01670_edb360_323688_awrrpt_1_4709_4710_max7d2.html
Elapsed Hours so far: 3.722
15:07:52 7a 01671_edb360_323688_awrrpt_1_4709_4710_max7d2_diff.html
Elapsed Hours so far: 3.76

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:07:56 edb360_323688_perfhub_1_4756_4757_max7d3
15:07:57 7a 01672_edb360_323688_perfhub_1_4756_4757_max7d3.html
Elapsed Hours so far: 3.761

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:09:09 edb360_323688_awrrpt_1_4756_4757_max7d3
15:09:09 7a 01673_edb360_323688_awrrpt_1_4756_4757_max7d3.html
Elapsed Hours so far: 3.781
15:11:27 7a 01674_edb360_323688_awrrpt_1_4756_4757_max7d3_diff.html
Elapsed Hours so far: 3.82

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:11:33 edb360_323688_perfhub_1_4302_4303_max23wd1
15:11:33 7a 01675_edb360_323688_perfhub_1_4302_4303_max23wd1.html
Elapsed Hours so far: 3.821

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:12:44 edb360_323688_awrrpt_1_4302_4303_max23wd1
15:12:44 7a 01676_edb360_323688_awrrpt_1_4302_4303_max23wd1.html
Elapsed Hours so far: 3.841
15:15:00 7a 01677_edb360_323688_awrrpt_1_4302_4303_max23wd1_diff.html
Elapsed Hours so far: 3.879

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:15:05 edb360_323688_perfhub_1_4285_4286_max23wd2
15:15:05 7a 01678_edb360_323688_perfhub_1_4285_4286_max23wd2.html
Elapsed Hours so far: 3.88

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:16:19 edb360_323688_awrrpt_1_4285_4286_max23wd2
15:16:19 7a 01679_edb360_323688_awrrpt_1_4285_4286_max23wd2.html
Elapsed Hours so far: 3.901
15:18:37 7a 01680_edb360_323688_awrrpt_1_4285_4286_max23wd2_diff.html
Elapsed Hours so far: 3.939

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:18:41 edb360_323688_perfhub_1_4284_4285_max23wd3
15:18:41 7a 01681_edb360_323688_perfhub_1_4284_4285_max23wd3.html
Elapsed Hours so far: 3.94

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:19:53 edb360_323688_awrrpt_1_4284_4285_max23wd3
15:19:53 7a 01682_edb360_323688_awrrpt_1_4284_4285_max23wd3.html
Elapsed Hours so far: 3.96
15:22:13 7a 01683_edb360_323688_awrrpt_1_4284_4285_max23wd3_diff.html
Elapsed Hours so far: 3.999

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:22:18 edb360_323688_perfhub_1_4402_4403_max31d1
15:22:18 7a 01684_edb360_323688_perfhub_1_4402_4403_max31d1.html
Elapsed Hours so far: 4

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:23:29 edb360_323688_awrrpt_1_4402_4403_max31d1
15:23:29 7a 01685_edb360_323688_awrrpt_1_4402_4403_max31d1.html
Elapsed Hours so far: 4.02
15:25:44 7a 01686_edb360_323688_awrrpt_1_4402_4403_max31d1_diff.html
Elapsed Hours so far: 4.058

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:25:49 edb360_323688_perfhub_1_4398_4399_max31d2
15:25:49 7a 01687_edb360_323688_perfhub_1_4398_4399_max31d2.html
Elapsed Hours so far: 4.059

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:27:04 edb360_323688_awrrpt_1_4398_4399_max31d2
15:27:04 7a 01688_edb360_323688_awrrpt_1_4398_4399_max31d2.html
Elapsed Hours so far: 4.08
15:29:27 7a 01689_edb360_323688_awrrpt_1_4398_4399_max31d2_diff.html
Elapsed Hours so far: 4.12

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:29:32 edb360_323688_perfhub_1_4354_4355_max31d3
15:29:32 7a 01690_edb360_323688_perfhub_1_4354_4355_max31d3.html
Elapsed Hours so far: 4.121

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:30:48 edb360_323688_awrrpt_1_4354_4355_max31d3
15:30:49 7a 01691_edb360_323688_awrrpt_1_4354_4355_max31d3.html
Elapsed Hours so far: 4.142
15:33:10 7a 01692_edb360_323688_awrrpt_1_4354_4355_max31d3_diff.html
Elapsed Hours so far: 4.182

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:33:15 edb360_323688_awrrpt_1_4793_4794_med7d
15:33:15 7a 01693_edb360_323688_awrrpt_1_4793_4794_med7d.html
Elapsed Hours so far: 4.183

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:35:32 edb360_323688_awrrpt_1_4246_4247_med31d
15:35:32 7a 01694_edb360_323688_awrrpt_1_4246_4247_med31d.html
Elapsed Hours so far: 4.221

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:37:47 edb360_323688_awrrpt_1_4927_4928_min5wd
15:37:47 7a 01695_edb360_323688_awrrpt_1_4927_4928_min5wd.html
Elapsed Hours so far: 4.259

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:40:01 edb360_323688_awrrpt_1_4534_4535_min23wd
15:40:01 7a 01696_edb360_323688_awrrpt_1_4534_4535_min23wd.html
Elapsed Hours so far: 4.296

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:42:15 edb360_323688_perfhub_2_4924_4925_max5wd1
15:42:15 7a 01697_edb360_323688_perfhub_2_4924_4925_max5wd1.html
Elapsed Hours so far: 4.333

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:43:25 edb360_323688_awrrpt_2_4924_4925_max5wd1
15:43:25 7a 01698_edb360_323688_awrrpt_2_4924_4925_max5wd1.html
Elapsed Hours so far: 4.352
15:45:42 7a 01699_edb360_323688_awrrpt_2_4924_4925_max5wd1_diff.html
Elapsed Hours so far: 4.391

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:45:48 edb360_323688_perfhub_2_4868_4869_max5wd2
15:45:49 7a 01700_edb360_323688_perfhub_2_4868_4869_max5wd2.html
Elapsed Hours so far: 4.392

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:47:01 edb360_323688_awrrpt_2_4868_4869_max5wd2
15:47:01 7a 01701_edb360_323688_awrrpt_2_4868_4869_max5wd2.html
Elapsed Hours so far: 4.412
15:49:18 7a 01702_edb360_323688_awrrpt_2_4868_4869_max5wd2_diff.html
Elapsed Hours so far: 4.451

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:49:23 edb360_323688_perfhub_2_4820_4821_max5wd3
15:49:23 7a 01703_edb360_323688_perfhub_2_4820_4821_max5wd3.html
Elapsed Hours so far: 4.452

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:50:35 edb360_323688_awrrpt_2_4820_4821_max5wd3
15:50:35 7a 01704_edb360_323688_awrrpt_2_4820_4821_max5wd3.html
Elapsed Hours so far: 4.472
15:52:52 7a 01705_edb360_323688_awrrpt_2_4820_4821_max5wd3_diff.html
Elapsed Hours so far: 4.51

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:52:57 edb360_323688_perfhub_2_4886_4887_max7d1
15:52:57 7a 01706_edb360_323688_perfhub_2_4886_4887_max7d1.html
Elapsed Hours so far: 4.511

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:54:10 edb360_323688_awrrpt_2_4886_4887_max7d1
15:54:10 7a 01707_edb360_323688_awrrpt_2_4886_4887_max7d1.html
Elapsed Hours so far: 4.532
15:56:25 7a 01708_edb360_323688_awrrpt_2_4886_4887_max7d1_diff.html
Elapsed Hours so far: 4.569

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:56:29 edb360_323688_perfhub_2_4838_4839_max7d2
15:56:29 7a 01709_edb360_323688_perfhub_2_4838_4839_max7d2.html
Elapsed Hours so far: 4.57

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

15:57:45 edb360_323688_awrrpt_2_4838_4839_max7d2
15:57:45 7a 01710_edb360_323688_awrrpt_2_4838_4839_max7d2.html
Elapsed Hours so far: 4.591
16:00:05 7a 01711_edb360_323688_awrrpt_2_4838_4839_max7d2_diff.html
Elapsed Hours so far: 4.63

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:00:14 edb360_323688_perfhub_2_4790_4791_max7d3
16:00:14 7a 01712_edb360_323688_perfhub_2_4790_4791_max7d3.html
Elapsed Hours so far: 4.633

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:01:51 edb360_323688_awrrpt_2_4790_4791_max7d3
16:01:52 7a 01713_edb360_323688_awrrpt_2_4790_4791_max7d3.html
Elapsed Hours so far: 4.66
16:04:23 7a 01714_edb360_323688_awrrpt_2_4790_4791_max7d3_diff.html
Elapsed Hours so far: 4.702

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:04:30 edb360_323688_perfhub_2_3947_3948_max23wd1
16:04:30 7a 01715_edb360_323688_perfhub_2_3947_3948_max23wd1.html
Elapsed Hours so far: 4.704

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:05:43 edb360_323688_awrrpt_2_3947_3948_max23wd1
16:05:43 7a 01716_edb360_323688_awrrpt_2_3947_3948_max23wd1.html
Elapsed Hours so far: 4.724
16:08:10 7a 01717_edb360_323688_awrrpt_2_3947_3948_max23wd1_diff.html
Elapsed Hours so far: 4.765

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:08:15 edb360_323688_perfhub_2_3899_3900_max23wd2
16:08:16 7a 01718_edb360_323688_perfhub_2_3899_3900_max23wd2.html
Elapsed Hours so far: 4.767

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:09:29 edb360_323688_awrrpt_2_3899_3900_max23wd2
16:09:29 7a 01719_edb360_323688_awrrpt_2_3899_3900_max23wd2.html
Elapsed Hours so far: 4.787
16:11:46 7a 01720_edb360_323688_awrrpt_2_3899_3900_max23wd2_diff.html
Elapsed Hours so far: 4.825

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:11:51 edb360_323688_perfhub_2_3851_3852_max23wd3
16:11:52 7a 01721_edb360_323688_perfhub_2_3851_3852_max23wd3.html
Elapsed Hours so far: 4.827

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:13:05 edb360_323688_awrrpt_2_3851_3852_max23wd3
16:13:05 7a 01722_edb360_323688_awrrpt_2_3851_3852_max23wd3.html
Elapsed Hours so far: 4.847
16:15:34 7a 01723_edb360_323688_awrrpt_2_3851_3852_max23wd3_diff.html
Elapsed Hours so far: 4.888

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:15:39 edb360_323688_perfhub_2_3995_3996_max31d1
16:15:39 7a 01724_edb360_323688_perfhub_2_3995_3996_max31d1.html
Elapsed Hours so far: 4.89

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:16:54 edb360_323688_awrrpt_2_3995_3996_max31d1
16:16:54 7a 01725_edb360_323688_awrrpt_2_3995_3996_max31d1.html
Elapsed Hours so far: 4.911
16:19:18 7a 01726_edb360_323688_awrrpt_2_3995_3996_max31d1_diff.html
Elapsed Hours so far: 4.951

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:19:23 edb360_323688_perfhub_2_3803_3804_max31d2
16:19:24 7a 01727_edb360_323688_perfhub_2_3803_3804_max31d2.html
Elapsed Hours so far: 4.952

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:20:38 edb360_323688_awrrpt_2_3803_3804_max31d2
16:20:38 7a 01728_edb360_323688_awrrpt_2_3803_3804_max31d2.html
Elapsed Hours so far: 4.973
16:23:01 7a 01729_edb360_323688_awrrpt_2_3803_3804_max31d2_diff.html
Elapsed Hours so far: 5.012

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:23:06 edb360_323688_perfhub_2_3755_3756_max31d3
16:23:06 7a 01730_edb360_323688_perfhub_2_3755_3756_max31d3.html
Elapsed Hours so far: 5.014

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:24:19 edb360_323688_awrrpt_2_3755_3756_max31d3
16:24:19 7a 01731_edb360_323688_awrrpt_2_3755_3756_max31d3.html
Elapsed Hours so far: 5.034
16:26:40 7a 01732_edb360_323688_awrrpt_2_3755_3756_max31d3_diff.html
Elapsed Hours so far: 5.073

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:26:45 edb360_323688_awrrpt_2_4944_4945_med7d
16:26:45 7a 01733_edb360_323688_awrrpt_2_4944_4945_med7d.html
Elapsed Hours so far: 5.075

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:29:09 edb360_323688_awrrpt_2_3849_3850_med31d
16:29:09 7a 01734_edb360_323688_awrrpt_2_3849_3850_med31d.html
Elapsed Hours so far: 5.115

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:31:28 edb360_323688_awrrpt_2_4637_4638_min5wd
16:31:28 7a 01735_edb360_323688_awrrpt_2_4637_4638_min5wd.html
Elapsed Hours so far: 5.153

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:33:47 edb360_323688_awrrpt_2_4534_4535_min23wd
16:33:47 7a 01736_edb360_323688_awrrpt_2_4534_4535_min23wd.html
Elapsed Hours so far: 5.192

PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rank:1 sql_id:3hwq5m5h3gkaq
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO changes PDB to FRSTPROD
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
16:36:18 PLANX rank:1 SQL_ID:3hwq5m5h3gkaq TOP_type:1
Elapsed Hours so far: 5.234

PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rank:1 sql_id:00540ttuxh7n9
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO changes PDB to FRSTPROD
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
16:36:45 PLANX rank:1 SQL_ID:00540ttuxh7n9 TOP_type:3
Elapsed Hours so far: 5.241

PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rank:2 sql_id:d1bmu84pdu6gx
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO changes PDB to FRSTPROD
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
16:36:52 PLANX rank:2 SQL_ID:d1bmu84pdu6gx TOP_type:1
Elapsed Hours so far: 5.243

PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rank:2 sql_id:3hwq5m5h3gkaq
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO changes PDB to FRSTPROD
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
16:37:01 PLANX rank:2 SQL_ID:3hwq5m5h3gkaq TOP_type:3
Elapsed Hours so far: 5.246

PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rank:3 sql_id:17vjd1aast5q7
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO changes PDB to FRSTPROD
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
16:37:12 PLANX rank:3 SQL_ID:17vjd1aast5q7 TOP_type:1
Elapsed Hours so far: 5.249

PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rank:4 sql_id:0sjx29v99zfqc
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO changes PDB to FRSTPROD
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
16:37:21 PLANX rank:4 SQL_ID:0sjx29v99zfqc TOP_type:1
Elapsed Hours so far: 5.251

PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rank:5 sql_id:brg5vk35jcqtv
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO changes PDB to FRSTPROD
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
16:37:38 PLANX rank:5 SQL_ID:brg5vk35jcqtv TOP_type:1
Elapsed Hours so far: 5.256

PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rank:6 sql_id:6ta0azw9znyz8
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO changes PDB to FRSTPROD
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
16:37:51 PLANX rank:6 SQL_ID:6ta0azw9znyz8 TOP_type:1
Elapsed Hours so far: 5.26

PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rank:7 sql_id:cydgfyx406q8j
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO changes PDB to FRSTPROD
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
16:37:59 PLANX rank:7 SQL_ID:cydgfyx406q8j TOP_type:1
Elapsed Hours so far: 5.262

PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rank:8 sql_id:7uxfahgurqu0d
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO changes PDB to FRSTPROD
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
16:38:07 PLANX rank:8 SQL_ID:7uxfahgurqu0d TOP_type:1
Elapsed Hours so far: 5.264

PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rank:9 sql_id:1hd6zv2xrvp7a
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO changes PDB to FRSTPROD
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
16:38:14 PLANX rank:9 SQL_ID:1hd6zv2xrvp7a TOP_type:1
Elapsed Hours so far: 5.266

PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rank:10 sql_id:561s98r3c15ad
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO changes PDB to FRSTPROD
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
16:38:22 PLANX rank:10 SQL_ID:561s98r3c15ad TOP_type:1
Elapsed Hours so far: 5.268

PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rank:11 sql_id:gczs60dfwg9gm
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO changes PDB to FRSTPROD
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
16:38:28 PLANX rank:11 SQL_ID:gczs60dfwg9gm TOP_type:1
Elapsed Hours so far: 5.27

PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rank:12 sql_id:gd4x6gvgb9xa0
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO changes PDB to FRSTPROD
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
16:38:35 PLANX rank:12 SQL_ID:gd4x6gvgb9xa0 TOP_type:1
Elapsed Hours so far: 5.272

PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rank:13 sql_id:0g2sz99zbn7ur
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO changes PDB to FRSTPROD
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
16:38:47 PLANX rank:13 SQL_ID:0g2sz99zbn7ur TOP_type:1
Elapsed Hours so far: 5.275

PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rank:14 sql_id:2mrjsarqc32h3
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO changes PDB to FRSTPROD
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
16:38:54 PLANX rank:14 SQL_ID:2mrjsarqc32h3 TOP_type:1
Elapsed Hours so far: 5.277

PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rank:15 sql_id:bzsm5n1q7g4z6
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO changes PDB to FRSTPROD
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
16:39:01 PLANX rank:15 SQL_ID:bzsm5n1q7g4z6 TOP_type:1
Elapsed Hours so far: 5.279

PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

rank:16 sql_id:1wjt2ut7cah6k
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO changes PDB to FRSTPROD
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
16:39:08 PLANX rank:16 SQL_ID:1wjt2ut7cah6k TOP_type:1
Elapsed Hours so far: 5.281
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO changes PDB to FRSTPROD
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
16:39:16 SQLD360 rank:1 SQL_ID:3hwq5m5h3gkaq TOP_type:1
Elapsed Hours so far: 5.283
16:39:16 SQLD360 rank:1 SQL_ID:00540ttuxh7n9 TOP_type:3
Elapsed Hours so far: 5.283
16:39:16 SQLD360 rank:2 SQL_ID:d1bmu84pdu6gx TOP_type:1
Elapsed Hours so far: 5.283
16:39:16 SQLD360 rank:2 SQL_ID:3hwq5m5h3gkaq TOP_type:3
Elapsed Hours so far: 5.283
16:39:16 SQLD360 rank:3 SQL_ID:17vjd1aast5q7 TOP_type:1
Elapsed Hours so far: 5.283
16:39:16 SQLD360 rank:4 SQL_ID:0sjx29v99zfqc TOP_type:1
Elapsed Hours so far: 5.283
16:39:16 SQLD360 rank:5 SQL_ID:brg5vk35jcqtv TOP_type:1
Elapsed Hours so far: 5.283
16:39:16 SQLD360 rank:6 SQL_ID:6ta0azw9znyz8 TOP_type:1
Elapsed Hours so far: 5.283
16:39:16 SQLD360 rank:7 SQL_ID:cydgfyx406q8j TOP_type:1
Elapsed Hours so far: 5.283
16:39:16 SQLD360 rank:8 SQL_ID:7uxfahgurqu0d TOP_type:1
Elapsed Hours so far: 5.283
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO plan_table content before calling sqld360
OPERATION||''||OBJECT_NODE||''||OPTIONS||''||OBJECT_NODE

3hwq5m5h3gkaq FRSTPROD 110031 FRSTPROD
00540ttuxh7n9 FRSTPROD 110031 FRSTPROD
d1bmu84pdu6gx FRSTPROD 110031 FRSTPROD
3hwq5m5h3gkaq FRSTPROD 110031 FRSTPROD
17vjd1aast5q7 FRSTPROD 110031 FRSTPROD
0sjx29v99zfqc FRSTPROD 110031 FRSTPROD
brg5vk35jcqtv FRSTPROD 110031 FRSTPROD
6ta0azw9znyz8 FRSTPROD 110031 FRSTPROD
cydgfyx406q8j FRSTPROD 110031 FRSTPROD
7uxfahgurqu0d FRSTPROD 110031 FRSTPROD
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
DEFINE _DATE           = "2020-11-06T16:39:16" (CHAR)
DEFINE _CONNECT_IDENTIFIER = "PRD1" (CHAR)
DEFINE _USER           = "SYS" (CHAR)
DEFINE _PRIVILEGE      = "AS SYSDBA" (CHAR)
DEFINE _SQLPLUS_RELEASE = "1201000200" (CHAR)
DEFINE _EDITOR         = "ed" (CHAR)
DEFINE _O_VERSION      = "Oracle Database 12c EE Extreme Perf Release 12.1.0.2.0 - 64bit Production
With the Partitioning, Real Application Clusters, Automatic Storage Management, Oracle Label Security,
OLAP, Advanced Analytics and Real Application Testing options" (CHAR)
DEFINE _O_RELEASE      = "1201000200" (CHAR)
DEFINE ASH_VALIDATION  = "" (CHAR)
DEFINE V_DOLLAR        = "V$" (CHAR)
DEFINE MY_SID          = "5432" (CHAR)
DEFINE LICENSE_PACK    = "T" (CHAR)
DEFINE DIAGNOSTICS_PACK = "Y" (CHAR)
DEFINE SKIP_DIAGNOSTICS = "" (CHAR)
DEFINE TUNING_PACK     = "Y" (CHAR)
DEFINE SKIP_TUNING     = "" (CHAR)
DEFINE CUSTOM_CONFIG_FILENAME = "null" (CHAR)
DEFINE EDB360_ESTIMATED_HRS = "1" (CHAR)
DEFINE ASH_DATE_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS" (CHAR)
DEFINE MY_SPOOL_FILENAME = "awr_ash_pre_check_PRD.txt" (CHAR)
DEFINE ASH_EDB360_DAYS = "31" (CHAR)
DEFINE ASH_FTS_ON_EDB360 = "250" (CHAR)
DEFINE ASH_DATABASE_BLOCK_SIZE = "8192" (CHAR)
DEFINE NUMBER_OF_INSTANCES =                    2 (NUMBER)
DEFINE THIS_DBID       =           2109323688 (NUMBER)
DEFINE ASH_MIN_SNAP_ID = "0" (CHAR)
DEFINE ASH_MAX_SNAP_ID = "0" (CHAR)
DEFINE LAST_PURGE_TIME = "2020-09-18T00:28:18" (CHAR)
DEFINE DAYS_SINCE_PURGE = "49.5" (CHAR)
DEFINE ASH_LAST_ANALYZED = "2020-09-19T06:58:17" (CHAR)
DEFINE ASH_CBO_STATS_AGE_DAYS = "48.2" (CHAR)
DEFINE PERCENT_OF_INSERTS = "" (CHAR)
DEFINE ASH_SIZE_GB     = "2.6 GBs" (CHAR)
DEFINE LAST_DDL_TIME   = "2020-09-18T21:40:39" (CHAR)
DEFINE SEG_LAST_DDL_TIME = "2020-09-18T21:40:39" (CHAR)
DEFINE LAST_DDL_AGE_DAYS = "48.6" (CHAR)
DEFINE ASH_FTS_SECONDS = "122" (CHAR)
DEFINE ASH_DAYS_OF_HISTORY = "92.8" (CHAR)
DEFINE ASH_MED_SAMPLE_DATE = "2020-07-08T03:20:17" (CHAR)
DEFINE ASH_MEDIAN_AGE_DAYS = "121.3" (CHAR)
DEFINE IGNORE_THIS     =                    0 (NUMBER)
DEFINE EDB360_FTS_SECONDS = "1" (CHAR)
DEFINE _RC             = "10" (CHAR)
DEFINE EDB360_SECTIONS = "" (CHAR)
DEFINE SQL_TRACE_LEVEL = "1" (CHAR)
DEFINE EDB360_CONF_DAYS = "31" (CHAR)
DEFINE EDB360_CONF_DATE_FROM = "YYYY-MM-DD" (CHAR)
DEFINE EDB360_CONF_DATE_TO = "YYYY-MM-DD" (CHAR)
DEFINE EDB360_CONF_WORK_TIME_FROM = "0730" (CHAR)
DEFINE EDB360_CONF_WORK_TIME_TO = "1930" (CHAR)
DEFINE EDB360_CONF_WORK_DAY_FROM = "2" (CHAR)
DEFINE EDB360_CONF_WORK_DAY_TO = "6" (CHAR)
DEFINE EDB360_CONF_MAX_HOURS = "24" (CHAR)
DEFINE EDB360_CHART_WIDTH = "809px" (CHAR)
DEFINE EDB360_CONF_INCL_DBNAME_INDEX = "N" (CHAR)
DEFINE EDB360_CONF_INCL_DBNAME_FILE = "N" (CHAR)
DEFINE EDB360_CONF_INCL_ASH_MEM = "N" (CHAR)
DEFINE EDB360_CONF_INCL_SQL_MON = "N" (CHAR)
DEFINE EDB360_CONF_INCL_STAT_MEM = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_PX_MEM = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_SEGMENTS = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_SOURCE = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_METADATA = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_EADAM = "Y" (CHAR)
DEFINE EDB360_EADAM_ROW_LIMIT = "10000000" (CHAR)
DEFINE TOOL_REPO_USER  = "" (CHAR)
DEFINE EDB360_OUTPUT_DIRECTORY = "" (CHAR)
DEFINE EDB360_MOVE_DIRECTORY = "" (CHAR)
DEFINE SKIP_ESP_AND_ESCP = "" (CHAR)
DEFINE EDB360_CONFIG_DBID = "" (CHAR)
DEFINE EDB360_HOST_NAME_SEPARATOR = "" (CHAR)
DEFINE EDB360_HOST_NAME_POSITION = "" (CHAR)
DEFINE EDB360_HOST_NAME_OCCURRENCE = "" (CHAR)
DEFINE EDB360_CONF_INCL_HTML = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_XML = "N" (CHAR)
DEFINE EDB360_CONF_INCL_TEXT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_CSV = "N" (CHAR)
DEFINE EDB360_CONF_INCL_LINE = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_PIE = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_BAR = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_PERFHUB = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_AWR_RPT = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_AWR_DIFF_RPT = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_AWR_RANGE_RPT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_ADDM_RPT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_ASH_RPT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_ASH_ANALY_RPT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_TKPROF = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_PLOT_AWR = "N" (CHAR)
DEFINE EDB360_CONF_SERIES_SELECTION = "N" (CHAR)
DEFINE EDB360_MAX_WORK_DAYS_PEAKS = "3" (CHAR)
DEFINE EDB360_MIN_WORK_DAYS_PEAKS = "1" (CHAR)
DEFINE EDB360_MAX_HISTORY_PEAKS = "3" (CHAR)
DEFINE EDB360_MED_HISTORY = "1" (CHAR)
DEFINE EDB360_MAX_5WD_PEAKS = "3" (CHAR)
DEFINE EDB360_MIN_5WD_PEAKS = "1" (CHAR)
DEFINE EDB360_MAX_7D_PEAKS = "3" (CHAR)
DEFINE EDB360_MED_7D   = "1" (CHAR)
DEFINE EDB360_CONF_TOP_SQL = "16" (CHAR)
DEFINE EDB360_CONF_TOP_CUR = "2" (CHAR)
DEFINE EDB360_CONF_TOP_SIG = "2" (CHAR)
DEFINE EDB360_CONF_PLANX_TOP = "16" (CHAR)
DEFINE EDB360_CONF_SQLMON_TOP = "0" (CHAR)
DEFINE EDB360_CONF_SQLASH_TOP = "0" (CHAR)
DEFINE EDB360_CONF_SQLHC_TOP = "0" (CHAR)
DEFINE EDB360_CONF_SQLD360_TOP = "8" (CHAR)
DEFINE EDB360_CONF_SQLD360_TOP_TC = "0" (CHAR)
DEFINE TOOL_PREFIX_1   = "dba_hist#" (CHAR)
DEFINE TOOL_PREFIX_2   = "dba#" (CHAR)
DEFINE TOOL_PREFIX_3   = "gv#" (CHAR)
DEFINE TOOL_PREFIX_4   = "v#" (CHAR)
DEFINE EDB360_CONF_TOOL_PAGE = "<a href="http://carlos-sierra.net/edb360-an-oracle-database-360-degree-view/" target="_blank">" (CHAR)
DEFINE EDB360_CONF_ALL_PAGES_ICON = "<a href="http://carlos-sierra.net/edb360-an-oracle-database-360-degree-view/" target="_blank"><img src="database.jpg" alt="eDB360" height="33" width="52" /></a>" (CHAR)
DEFINE EDB360_CONF_ALL_PAGES_LOGO = "" (CHAR)
DEFINE EDB360_CONF_GOOGLE_CHARTS = "<script type="text/javascript" src="https://www.google.com/jsapi"></script>" (CHAR)
DEFINE EDB360_VYYNN    = "v192" (CHAR)
DEFINE EDB360_VRSN     = "v192 (2019-03-23)" (CHAR)
DEFINE EDB360_COPYRIGHT = " (c) 2019" (CHAR)
DEFINE EDB360_BYPASS   = "" (CHAR)
DEFINE AWR_HIST_PREFIX = "DBA_HIST_" (CHAR)
DEFINE AWR_OBJECT_PREFIX = "dba_hist_" (CHAR)
DEFINE DVA_VIEW_PREFIX = "DBA_" (CHAR)
DEFINE DVA_OBJECT_PREFIX = "dba_" (CHAR)
DEFINE GV_VIEW_PREFIX  = "GV$" (CHAR)
DEFINE GV_OBJECT_PREFIX = "gv$" (CHAR)
DEFINE V_VIEW_PREFIX   = "V$" (CHAR)
DEFINE V_OBJECT_PREFIX = "v$" (CHAR)
DEFINE EDB360_DBID     = "2109323688" (CHAR)
DEFINE HISTORY_DAYS    = "31" (CHAR)
DEFINE EDB360_DATE_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS" (CHAR)
DEFINE EDB360_TIMESTAMP_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS.FF" (CHAR)
DEFINE EDB360_TIMESTAMP_TZ_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS.FFTZH:TZM" (CHAR)
DEFINE EDB360_DATE_FROM = "2020-10-06T11:22:16" (CHAR)
DEFINE EDB360_DATE_TO  = "2020-11-06T11:22:16" (CHAR)
DEFINE HIST_WORK_DAYS  = "23" (CHAR)
DEFINE SKIP_EXTRAS     = "" (CHAR)
DEFINE EDB360_0G       = "edb360_0g_" (CHAR)
DEFINE EDB360_1A       = "edb360_1a_" (CHAR)
DEFINE EDB360_1B       = "edb360_1b_" (CHAR)
DEFINE EDB360_1C       = "edb360_1c_" (CHAR)
DEFINE EDB360_1D       = "edb360_1d_" (CHAR)
DEFINE EDB360_1E       = "edb360_1e_" (CHAR)
DEFINE EDB360_1F       = "edb360_1f_" (CHAR)
DEFINE EDB360_1G       = "edb360_1g_" (CHAR)
DEFINE EDB360_2A       = "edb360_2a_" (CHAR)
DEFINE EDB360_2B       = "edb360_2b_" (CHAR)
DEFINE EDB360_2C       = "edb360_2c_" (CHAR)
DEFINE EDB360_2D       = "edb360_2d_" (CHAR)
DEFINE EDB360_2E       = "edb360_2e_" (CHAR)
DEFINE EDB360_3A       = "edb360_3a_" (CHAR)
DEFINE EDB360_3B       = "edb360_3b_" (CHAR)
DEFINE EDB360_3C       = "edb360_3c_" (CHAR)
DEFINE EDB360_3D       = "edb360_3d_" (CHAR)
DEFINE EDB360_3E       = "edb360_3e_" (CHAR)
DEFINE EDB360_3F       = "edb360_3f_" (CHAR)
DEFINE EDB360_3G       = "edb360_3g_" (CHAR)
DEFINE EDB360_3H       = "edb360_3h_" (CHAR)
DEFINE EDB360_3I       = "edb360_3i_" (CHAR)
DEFINE EDB360_3J       = "edb360_3j_" (CHAR)
DEFINE EDB360_4A       = "edb360_4a_" (CHAR)
DEFINE EDB360_4B       = "edb360_4b_" (CHAR)
DEFINE EDB360_4C       = "edb360_4c_" (CHAR)
DEFINE EDB360_4D       = "edb360_4d_" (CHAR)
DEFINE EDB360_4E       = "edb360_4e_" (CHAR)
DEFINE EDB360_4F       = "edb360_4f_" (CHAR)
DEFINE EDB360_4G       = "edb360_4g_" (CHAR)
DEFINE EDB360_4H       = "edb360_4h_" (CHAR)
DEFINE EDB360_4I       = "edb360_4i_" (CHAR)
DEFINE EDB360_4J       = "edb360_4j_" (CHAR)
DEFINE EDB360_4K       = "edb360_4k_" (CHAR)
DEFINE EDB360_4L       = "edb360_4l_" (CHAR)
DEFINE EDB360_5A       = "edb360_5a_" (CHAR)
DEFINE EDB360_5B       = "edb360_5b_" (CHAR)
DEFINE EDB360_5C       = "edb360_5c_" (CHAR)
DEFINE EDB360_5D       = "edb360_5d_" (CHAR)
DEFINE EDB360_5E       = "edb360_5e_" (CHAR)
DEFINE EDB360_5F       = "edb360_5f_" (CHAR)
DEFINE EDB360_5G       = "edb360_5g_" (CHAR)
DEFINE EDB360_6A       = "edb360_6a_" (CHAR)
DEFINE EDB360_6B       = "edb360_6b_" (CHAR)
DEFINE EDB360_6C       = "edb360_6c_" (CHAR)
DEFINE EDB360_6D       = "edb360_6d_" (CHAR)
DEFINE EDB360_6E       = "edb360_6e_" (CHAR)
DEFINE EDB360_6F       = "edb360_6f_" (CHAR)
DEFINE EDB360_6G       = "edb360_6g_" (CHAR)
DEFINE EDB360_6H       = "edb360_6h_" (CHAR)
DEFINE EDB360_6I       = "edb360_6i_" (CHAR)
DEFINE EDB360_6J       = "edb360_6j_" (CHAR)
DEFINE EDB360_6K       = "edb360_6k_" (CHAR)
DEFINE EDB360_6L       = "edb360_6l_" (CHAR)
DEFINE EDB360_6M       = "edb360_6m_" (CHAR)
DEFINE EDB360_6N       = "edb360_6n_" (CHAR)
DEFINE EDB360_7A       = "edb360_7a_" (CHAR)
DEFINE EDB360_7B       = "edb360_7b_" (CHAR)
DEFINE EDB360_7C       = "edb360_7c_" (CHAR)
DEFINE EDB360_PREFIX   = "edb360" (CHAR)
DEFINE ECR_COLLECTION_KEY = "PRD1219183590" (CHAR)
DEFINE SKIP_SCRIPT     = "sql/edb360_0f_skip_script.sql " (CHAR)
DEFINE EDB360_CON_ID   = "4" (CHAR)
DEFINE EDB360_PDB_NAME = "FRSTPROD" (CHAR)
DEFINE EDB360_DBMOD    = "323688" (CHAR)
DEFINE CONNECT_INSTANCE_NUMBER = "1" (CHAR)
DEFINE DATABASE_NAME_SHORT = "prd" (CHAR)
DEFINE HOST_NAME_SHORT = "aupp-hroradb-f9exx1" (CHAR)
DEFINE HOST_NAME_SUFFIX = "" (CHAR)
DEFINE ESP_HOST_NAME_SHORT = "aupp-hroradb-f9exx1" (CHAR)
DEFINE HOST_HASH       = "742967" (CHAR)
DEFINE ESP_COLLECTION_YYYYMMDD = "20201106" (CHAR)
DEFINE MAIN_TABLE      = "DBA_HIST_ACTIVE_SESS_HISTORY" (CHAR)
DEFINE TITLE           = "ASH Top PDBs for Instance 8 for 31 days of history" (CHAR)
DEFINE TITLE_NO_SPACES = "ash_top_pdbs_for_instance_2_for_31_days_of_history" (CHAR)
DEFINE TITLE_SUFFIX    = "" (CHAR)
DEFINE EDB360_FILE_TIME = "20201106_1122" (CHAR)
DEFINE COMMON_EDB360_PREFIX = "edb360_323688" (CHAR)
DEFINE EDB360_MAIN_REPORT = "00001_edb360_323688_index" (CHAR)
DEFINE EDB360_LOG      = "00002_edb360_323688_log" (CHAR)
DEFINE EDB360_LOG2     = "00003_edb360_323688_log2" (CHAR)
DEFINE EDB360_LOG3     = "00004_edb360_323688_log3" (CHAR)
DEFINE EDB360_TKPROF   = "00005_edb360_323688_tkprof" (CHAR)
DEFINE EDB360_MAIN_FILENAME = "edb360_323688_742967" (CHAR)
DEFINE EDB360_ZIP_FILENAME = "edb360_323688_742967_20201106_1122" (CHAR)
DEFINE EDB360_TRACEFILE_IDENTIFIER = "edb360_323688" (CHAR)
DEFINE EDB360_TAR_FILENAME = "00008_edb360_323688_742967_20201106_1122" (CHAR)
DEFINE EDB360_MV_HOST_COMMAND = "" (CHAR)
DEFINE DB_VERS_OFE     = "12.1.0.2" (CHAR)
DEFINE SKIP_AWR        = "" (CHAR)
DEFINE SKIP_STATSPACK  = "--skip--" (CHAR)
DEFINE ESP_DBNAME_SHORT = "prd" (CHAR)
DEFINE ESCP_MAX_DAYS   = "365" (CHAR)
DEFINE ESCP_DATE_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS" (CHAR)
DEFINE ESCP_HOST_NAME_SHORT = "aupp-hroradb-f9exx1" (CHAR)
DEFINE ESCP_DBNAME_SHORT = "prd" (CHAR)
DEFINE ESCP_COLLECTION_YYYYMMDD_HHMI = "20201106_1122" (CHAR)
DEFINE ESCP_COLLECTION_DAYS = "8" (CHAR)
DEFINE ESCP_THIS_DBID  = "2109323688" (CHAR)
DEFINE ESCP_THIS_INST_NUM = "1" (CHAR)
DEFINE ESCP_MIN_SNAP_ID = "4578" (CHAR)
DEFINE MAX_DAYS        = "365" (CHAR)
DEFINE INCLUDE_IC      = "Y" (CHAR)
DEFINE INCLUDE_NETW    = "Y" (CHAR)
DEFINE ESP_COLLECTION_YYYYMMDD_HHMI = "20201106_1128" (CHAR)
DEFINE COLLECTION_DAYS = "8" (CHAR)
DEFINE SKIP_ON_10G     = "" (CHAR)
DEFINE ECR_SQ_FACT_HINTS = "MATERIALIZE NO_MERGE" (CHAR)
DEFINE ECR_DATE_FORMAT = "YYYY-MM-DD/HH24:MI:SS" (CHAR)
DEFINE ECR_DBID        = "2109323688" (CHAR)
DEFINE ECR_INSTANCE_NUMBER = "1" (CHAR)
DEFINE ECR_MIN_SNAP_ID = "4578" (CHAR)
DEFINE ECR_COLLECTION_HOST = "aupp-hroradb-f9exx1" (CHAR)
DEFINE USE_ON_10G      = "--" (CHAR)
DEFINE DB_VERSION      = "12.1.0.2.0" (CHAR)
DEFINE SKIP_10G_COLUMN = "" (CHAR)
DEFINE SKIP_10G_SCRIPT = "" (CHAR)
DEFINE SKIP_11G_COLUMN = "" (CHAR)
DEFINE SKIP_11G_SCRIPT = "" (CHAR)
DEFINE SKIP_11R1_COLUMN = "" (CHAR)
DEFINE SKIP_11R1_SCRIPT = "" (CHAR)
DEFINE SKIP_NON_REPO_COLUMN = "" (CHAR)
DEFINE SKIP_NON_REPO_SCRIPT = "" (CHAR)
DEFINE SKIP_12C_COLUMN = " -- skip 12c " (CHAR)
DEFINE SKIP_12C_SCRIPT = " echo skip 12c " (CHAR)
DEFINE SKIP_12R2_COLUMN = "" (CHAR)
DEFINE SKIP_12R2_SCRIPT = "" (CHAR)
DEFINE SKIP_18C_COLUMN = "" (CHAR)
DEFINE SKIP_18C_SCRIPT = "" (CHAR)
DEFINE SKIP_19C_COLUMN = "" (CHAR)
DEFINE SKIP_19C_SCRIPT = "" (CHAR)
DEFINE AVG_CPU_COUNT   = "16" (CHAR)
DEFINE SUM_CPU_COUNT   = "32" (CHAR)
DEFINE AVG_CORE_COUNT  = "16" (CHAR)
DEFINE AVG_THREAD_COUNT = "16" (CHAR)
DEFINE CPU_LOAD_THRESHOLD =                   32 (NUMBER)
DEFINE HOSTS_COUNT     = "2" (CHAR)
DEFINE CORES_THREADS_HOSTS = "cores:16(avg) threads:16(avg) hosts:2(avg)" (CHAR)
DEFINE DATABASE_BLOCK_SIZE = "8192" (CHAR)
DEFINE TOOL_SYSDATE    = "20201106112807" (CHAR)
DEFINE BETWEEN_DATES   = ", between 2020-10-06T11:22:16 and 2020-11-06T11:22:16" (CHAR)
DEFINE MINIMUM_SNAP_ID = "3473" (CHAR)
DEFINE MAXIMUM_SNAP_ID = "4962" (CHAR)
DEFINE INST1_PRESENT   = "1" (CHAR)
DEFINE INST2_PRESENT   = "2" (CHAR)
DEFINE INST3_PRESENT   = "" (CHAR)
DEFINE INST4_PRESENT   = "" (CHAR)
DEFINE INST5_PRESENT   = "" (CHAR)
DEFINE INST6_PRESENT   = "" (CHAR)
DEFINE INST7_PRESENT   = "" (CHAR)
DEFINE INST8_PRESENT   = "" (CHAR)
DEFINE IS_SINGLE_INSTANCE = "" (CHAR)
DEFINE SKIP_INST1      = "" (CHAR)
DEFINE SKIP_INST2      = "" (CHAR)
DEFINE SKIP_INST3      = "-- skip inst3" (CHAR)
DEFINE SKIP_INST4      = "-- skip inst4" (CHAR)
DEFINE SKIP_INST5      = "-- skip inst5" (CHAR)
DEFINE SKIP_INST6      = "-- skip inst6" (CHAR)
DEFINE SKIP_INST7      = "-- skip inst7" (CHAR)
DEFINE SKIP_INST8      = "-- skip inst8" (CHAR)
DEFINE CHART_SETUP_DRIVER = "99800_edb360_323688_chart_setup_driver1.sql" (CHAR)
DEFINE EDB360_EADAM_SNAPS = "-666, 4925, 4869, 4821, 4887, 4839, 4791, 3948, 3900, 3852, 3996, 3804, 3756" (CHAR)
DEFINE EBS_RELEASE     = "" (CHAR)
DEFINE EBS_SYSTEM_NAME = "" (CHAR)
DEFINE SIEBEL_SCHEMA   = "NOT_A_SIEBEL_DB" (CHAR)
DEFINE SIEBEL_APP_VER  = "" (CHAR)
DEFINE PSFT_SCHEMA     = "NOT_A_PSFT_DB" (CHAR)
DEFINE PSFT_TOOLS_REL  = "" (CHAR)
DEFINE EDB360_SKIP_HTML = "" (CHAR)
DEFINE EDB360_SKIP_XML = " echo skip xml " (CHAR)
DEFINE EDB360_SKIP_TEXT = " echo skip text " (CHAR)
DEFINE EDB360_SKIP_CSV = " echo skip csv " (CHAR)
DEFINE EDB360_SKIP_LINE = "" (CHAR)
DEFINE EDB360_SKIP_PIE = "" (CHAR)
DEFINE EDB360_SKIP_BAR = "" (CHAR)
DEFINE EDB360_SKIP_METADATA = "" (CHAR)
DEFINE EDB360_SKIP_ASH_MEM = " echo skip ash mem " (CHAR)
DEFINE EDB360_SKIP_SQL_MON = " echo skip sql mon " (CHAR)
DEFINE EDB360_SKIP_STAT_MEM = "" (CHAR)
DEFINE EDB360_SKIP_PX_MEM = "" (CHAR)
DEFINE TOP_LEVEL_HINTS = " NO_MERGE " (CHAR)
DEFINE SQ_FACT_HINTS   = " MATERIALIZE NO_MERGE " (CHAR)
DEFINE DS_HINT         = " DYNAMIC_SAMPLING(4) " (CHAR)
DEFINE ASH_HINTS1      = " FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt) " (CHAR)
DEFINE ASH_HINTS2      = " FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt) " (CHAR)
DEFINE ASH_HINTS3      = " USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt) " (CHAR)
DEFINE DEF_MAX_ROWS    = "10000" (CHAR)
DEFINE MAX_ROWS        = "10000" (CHAR)
DEFINE EXCLUSION_LIST  = "('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','ORDSYS','OUTLN','OWBSYS')" (CHAR)
DEFINE EXCLUSION_LIST2 = "('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')" (CHAR)
DEFINE SKIP_HTML       = "" (CHAR)
DEFINE SKIP_TEXT       = "" (CHAR)
DEFINE SKIP_CSV        = "" (CHAR)
DEFINE SKIP_LCH        = "Y" (CHAR)
DEFINE SKIP_LCH2       = "--skip--" (CHAR)
DEFINE SKIP_PCH        = "Y" (CHAR)
DEFINE SKIP_BCH        = "--skip--" (CHAR)
DEFINE SKIP_ALL        = "Y" (CHAR)
DEFINE ABSTRACT        = "" (CHAR)
DEFINE ABSTRACT2       = "" (CHAR)
DEFINE FOOT            = "" (CHAR)
DEFINE ABSTRACT_UOM    = "Memory is accounted as power of two (binary) while storage and network traffic as power of ten (decimal). <br />" (CHAR)
DEFINE CHARTYPE        = "AreaChart" (CHAR)
DEFINE STACKED         = "isStacked: true," (CHAR)
DEFINE HAXIS           = " 12.1.0.2.0 cores:16(avg) threads:16(avg) hosts:2(avg)" (CHAR)
DEFINE VAXIS           = "Average Active Sessions AAS (stacked)" (CHAR)
DEFINE VBASELINE       = "" (CHAR)
DEFINE BAR_HEIGHT      = "45%" (CHAR)
DEFINE TIT_01          = "Others" (CHAR)
DEFINE TIT_02          = "PDB_NAME_01" (CHAR)
DEFINE TIT_03          = "PDB_NAME_02" (CHAR)
DEFINE TIT_04          = "PDB_NAME_03" (CHAR)
DEFINE TIT_05          = "PDB_NAME_04" (CHAR)
DEFINE TIT_06          = "PDB_NAME_05" (CHAR)
DEFINE TIT_07          = "PDB_NAME_06" (CHAR)
DEFINE TIT_08          = "PDB_NAME_07" (CHAR)
DEFINE TIT_09          = "PDB_NAME_08" (CHAR)
DEFINE TIT_10          = "PDB_NAME_09" (CHAR)
DEFINE TIT_11          = "PDB_NAME_10" (CHAR)
DEFINE TIT_12          = "PDB_NAME_11" (CHAR)
DEFINE TIT_13          = "PDB_NAME_12" (CHAR)
DEFINE TIT_14          = "PDB_NAME_13" (CHAR)
DEFINE TIT_15          = "PDB_NAME_14" (CHAR)
DEFINE CONT_01         = "-1" (CHAR)
DEFINE CONT_02         =                   -1 (NUMBER)
DEFINE CONT_03         =                   -1 (NUMBER)
DEFINE CONT_04         =                   -1 (NUMBER)
DEFINE CONT_05         =                   -1 (NUMBER)
DEFINE CONT_06         =                   -1 (NUMBER)
DEFINE CONT_07         =                   -1 (NUMBER)
DEFINE CONT_08         =                   -1 (NUMBER)
DEFINE CONT_09         =                   -1 (NUMBER)
DEFINE CONT_10         =                   -1 (NUMBER)
DEFINE CONT_11         =                   -1 (NUMBER)
DEFINE CONT_12         =                   -1 (NUMBER)
DEFINE CONT_13         =                   -1 (NUMBER)
DEFINE CONT_14         =                   -1 (NUMBER)
DEFINE CONT_15         =                   -1 (NUMBER)
DEFINE WAIT_CLASS_01   = "Application" (CHAR)
DEFINE EVENT_NAME_01   = "enq: TM - contention" (CHAR)
DEFINE WAIT_CLASS_02   = "User I/O" (CHAR)
DEFINE EVENT_NAME_02   = "cell single block physical read" (CHAR)
DEFINE WAIT_CLASS_03   = "Network" (CHAR)
DEFINE EVENT_NAME_03   = "SQL*Net more data to client" (CHAR)
DEFINE WAIT_CLASS_04   = "Administrative" (CHAR)
DEFINE EVENT_NAME_04   = "Backup: MML write backup piece" (CHAR)
DEFINE WAIT_CLASS_05   = "Cluster" (CHAR)
DEFINE EVENT_NAME_05   = "gc cr disk read" (CHAR)
DEFINE WAIT_CLASS_06   = "Concurrency" (CHAR)
DEFINE EVENT_NAME_06   = "cursor: pin S wait on X" (CHAR)
DEFINE WAIT_CLASS_07   = "User I/O" (CHAR)
DEFINE EVENT_NAME_07   = "direct path read" (CHAR)
DEFINE WAIT_CLASS_08   = "Other" (CHAR)
DEFINE EVENT_NAME_08   = "rdbms ipc reply" (CHAR)
DEFINE WAIT_CLASS_09   = "Application" (CHAR)
DEFINE EVENT_NAME_09   = "enq: TX - row lock contention" (CHAR)
DEFINE WAIT_CLASS_10   = "User I/O" (CHAR)
DEFINE EVENT_NAME_10   = "cell multiblock read request" (CHAR)
DEFINE WAIT_CLASS_11   = "User I/O" (CHAR)
DEFINE EVENT_NAME_11   = "cell multiblock physical read" (CHAR)
DEFINE WAIT_CLASS_12   = "Cluster" (CHAR)
DEFINE EVENT_NAME_12   = "gc current block 2-way" (CHAR)
DEFINE EXADATA         = "" (CHAR)
DEFINE MAX_COL_NUMBER  = "7" (CHAR)
DEFINE COLUMN_NUMBER   = "7" (CHAR)
DEFINE RECOVERY        = "& recovery" (CHAR)
DEFINE TOTAL_HOURS     = "" (CHAR)
DEFINE EDB360_TIME_STAMP = "2020-11-06T13:52:14" (CHAR)
DEFINE REPORT_SEQUENCE = "1063" (CHAR)
DEFINE CURRENT_TIME    = "20201106_163908" (CHAR)
DEFINE EXACT_MATCHING_SIGNATURE = "" (CHAR)
DEFINE FORCE_MATCHING_SIGNATURE = "" (CHAR)
DEFINE WAIT_CLASS_COLORS = " CASE wait_class WHEN 'ON CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' THEN '0252D7' WHEN 'System I/O' THEN '1E96DD' " (CHAR)
DEFINE WAIT_CLASS_COLORS2 = " WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05' WHEN 'Configuration' THEN '594611'  " (CHAR)
DEFINE WAIT_CLASS_COLORS3 = " WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0' " (CHAR)
DEFINE WAIT_CLASS_COLORS4 = " WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' ELSE '000000' END " (CHAR)
DEFINE SERIES_01       = "" (CHAR)
DEFINE SERIES_02       = "" (CHAR)
DEFINE SERIES_03       = "" (CHAR)
DEFINE SERIES_04       = "" (CHAR)
DEFINE SERIES_05       = "" (CHAR)
DEFINE SERIES_06       = "" (CHAR)
DEFINE SERIES_07       = "" (CHAR)
DEFINE SERIES_08       = "" (CHAR)
DEFINE SERIES_09       = "" (CHAR)
DEFINE SERIES_10       = "" (CHAR)
DEFINE SERIES_11       = "" (CHAR)
DEFINE SERIES_12       = "" (CHAR)
DEFINE SERIES_13       = "" (CHAR)
DEFINE SERIES_14       = "" (CHAR)
DEFINE SERIES_15       = "" (CHAR)
DEFINE SKIP_LCHP       = "--skip--" (CHAR)
DEFINE EDB360_UDUMP_PATH = "/u02/app/oracle/diag/rdbms/prd_iad3vt/PRD1/trace/" (CHAR)
DEFINE EDB360_SPID     = "274417" (CHAR)
DEFINE REPORT_DBNAME   = "" (CHAR)
DEFINE SECTION_ID      = "7b" (CHAR)
DEFINE SECTION_NAME    = "SQL Sample" (CHAR)
DEFINE PROCESSOR_MODEL = "Intel(R) Xeon(R) Platinum 8270CL CPU @ 2.70GHz" (CHAR)
DEFINE HH_MM_SS        = "16:39:16" (CHAR)
DEFINE SPOOL_FILENAME  = "edb360_323688_6n_996_ash_top_pdbs_for_instance_2_for_31_days_of_history" (CHAR)
DEFINE ROW_NUM         = "0" (CHAR)
DEFINE EDB360_PREV_SQL_ID = "7uwhxftumj625" (CHAR)
DEFINE EDB360_PREV_CHILD_NUMBER = "0" (CHAR)
DEFINE ONE_SPOOL_FILENAME = "01616_edb360_323688_6n_996_ash_top_pdbs_for_instance_2_for_31_days_of_history" (CHAR)
DEFINE 3               = "N" (CHAR)
DEFINE EDB360_TUNING_PACK_FOR_SQLMON = "N" (CHAR)
DEFINE SKIP_SQLMON_EXEC = " echo skip sqlmon" (CHAR)
DEFINE EDB360_SQL_TEXT_100 = "SELECT TO_CHAR(ROWNUM) row_num, v0.* FROM /* 4b.455 */ ( WITH pgastat_denorm_1 AS ( SELECT /*+  MATE" (CHAR)
DEFINE 4               = "7uwhxftumj625" (CHAR)
DEFINE STATSPACK_USER  = "perfstat" (CHAR)
DEFINE SP_MINIMUM_SNAP_ID = "-1" (CHAR)
DEFINE SP_MAXIMUM_SNAP_ID = "-1" (CHAR)
DEFINE SKIP_IF_MISSING = " echo skip " (CHAR)
DEFINE TOTAL_BUFFER_GETS =          20276118710 (NUMBER)
DEFINE TOTAL_DISK_READS =            123439198 (NUMBER)
DEFINE REPORT_DATE     = "2020-11-06T11:45:41" (CHAR)
DEFINE DAYS_OF_HISTORY_ACCESSED = "31" (CHAR)
DEFINE CAPTURED_AT_LEAST_X_TIMES = "10" (CHAR)
DEFINE CAPTURED_AT_LEAST_X_DAYS_APART = "5" (CHAR)
DEFINE MED_ELAP_MICROSECS_THRESHOLD = "1e4" (CHAR)
DEFINE MIN_SLOPE_THRESHOLD = "0.1" (CHAR)
DEFINE MAX_NUM_ROWS_X  = "20" (CHAR)
DEFINE SKIP_INST       = "" (CHAR)
DEFINE CORES_OVER_THREADS = "" (CHAR)
DEFINE SUBPOOL_01      = "SQLA" (CHAR)
DEFINE SUBPOOL_02      = "Result Cache" (CHAR)
DEFINE SUBPOOL_03      = "KGLH0" (CHAR)
DEFINE SUBPOOL_04      = "gcs resources" (CHAR)
DEFINE SUBPOOL_05      = "gcs shadows" (CHAR)
DEFINE SUBPOOL_06      = "" (CHAR)
DEFINE SUBPOOL_07      = "" (CHAR)
DEFINE SUBPOOL_08      = "" (CHAR)
DEFINE SUBPOOL_09      = "" (CHAR)
DEFINE SUBPOOL_10      = "" (CHAR)
DEFINE TEXT            = "Y" (CHAR)
DEFINE ACTIVE          = "Y" (CHAR)
DEFINE MAX_REPORTS     = "12" (CHAR)
DEFINE INPUT_LICENSE   = "Y" (CHAR)
DEFINE SQL_ID          = "1wjt2ut7cah6k" (CHAR)
DEFINE DATE_MASK       = "YYYYMMDDHH24MISS" (CHAR)
DEFINE 2               = "1wjt2ut7cah6k" (CHAR)
DEFINE WAIT_CLASS_13   = "Concurrency" (CHAR)
DEFINE EVENT_NAME_13   = "row cache lock" (CHAR)
DEFINE WAIT_CLASS_14   = "Cluster" (CHAR)
DEFINE EVENT_NAME_14   = "gc cr multi block request" (CHAR)
DEFINE WAIT_CLASS_15   = "Cluster" (CHAR)
DEFINE EVENT_NAME_15   = "gc cr grant 2-way" (CHAR)
DEFINE WAIT_CLASS_16   = "Cluster" (CHAR)
DEFINE EVENT_NAME_16   = "gc current grant 2-way" (CHAR)
DEFINE WAIT_CLASS_17   = "Concurrency" (CHAR)
DEFINE EVENT_NAME_17   = "library cache lock" (CHAR)
DEFINE WAIT_CLASS_18   = "Other" (CHAR)
DEFINE EVENT_NAME_18   = "DFS lock handle" (CHAR)
DEFINE WAIT_CLASS_19   = "User I/O" (CHAR)
DEFINE EVENT_NAME_19   = "cell smart table scan" (CHAR)
DEFINE WAIT_CLASS_20   = "User I/O" (CHAR)
DEFINE EVENT_NAME_20   = "direct path read temp" (CHAR)
DEFINE WAIT_CLASS_21   = "Scheduler" (CHAR)
DEFINE EVENT_NAME_21   = "resmgr:cpu quantum" (CHAR)
DEFINE WAIT_CLASS_22   = "User I/O" (CHAR)
DEFINE EVENT_NAME_22   = "cell single block read request" (CHAR)
DEFINE WAIT_CLASS_23   = "Cluster" (CHAR)
DEFINE EVENT_NAME_23   = "gc cr block busy" (CHAR)
DEFINE WAIT_CLASS_24   = "Other" (CHAR)
DEFINE EVENT_NAME_24   = "gcs drm freeze in enter server mode" (CHAR)
DEFINE ONE_MS_COMP     = "<=" (CHAR)
DEFINE TWO_MS_COMP     = ">" (CHAR)
DEFINE VAXIS1          = "Waits Count" (CHAR)
DEFINE VAXIS2          = "Average Latency in milliseconds" (CHAR)
DEFINE 5               = "edb360_9a_pre_one.sql" (CHAR)
DEFINE 6               = "mem" (CHAR)
DEFINE 7               = "edb360_9a_pre_one.sql" (CHAR)
DEFINE BETWEEN_TIMES   = ", between 2020-10-06T11:22:16 and 2020-11-06T11:22:16" (CHAR)
DEFINE FILTER_PREDICATE = "instance_number = 8" (CHAR)
DEFINE CALL_SQLD360_BITMASK = "110031" (CHAR)
DEFINE CALL_SQLD360_BITMASK_TC = "111031" (CHAR)
DEFINE FILES_PREFIX    = "" (CHAR)
DEFINE SQ_FACT_SQL_SAMPLE_HINTS = " MATERIALIZE NO_MERGE " (CHAR)
DEFINE IS_10G          = "" (CHAR)
DEFINE IS_11R1         = "" (CHAR)
DEFINE IS_11R2         = "" (CHAR)
DEFINE X_MINIMUM_SNAP_ID = "3483" (CHAR)
DEFINE X_MAXIMUM_SNAP_ID = "4973" (CHAR)
DEFINE X_MINIMUM_DATE  = "2020-10-06T16:30:07" (CHAR)
DEFINE X_MAXIMUM_DATE  = "2020-11-06T16:30:43" (CHAR)
DEFINE SIGNATURE       = "9380065298533696050" (CHAR)
DEFINE SIGNATUREF      = "9380065298533696050" (CHAR)
DEFINE X_HOST_NAME     = "aupp-hroradb-f9exx1" (CHAR)
DEFINE X_DB_NAME       = "PRD" (CHAR)
DEFINE X_CONTAINER     = "FRSTPROD" (CHAR)
DEFINE SQL_HANDLE      = "" (CHAR)
DEFINE X_SLICES        = "20" (CHAR)
DEFINE X_DAYS          = "31" (CHAR)
DEFINE TABLES_LIST     = "(('THH_C4C','A_APBL'),('THH_C4C','A_APBLSRVC'),('THH_C4C','A_MEMBDGISBASE'),('THH_C4C','A_USR'),('THH_C4C','MV_PATID_CLINIC_COND_SRVCD'),('THH_C4C','T_DRUGCLM'),('THH_C4C','T_MDCLCLM'),('THH_C4C','T_MDCT'),('THH_C4C','T_SRVC'),('THH_C4C','T_USR'))" (CHAR)
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO calling eadam (ash) for top sql and peak snaps
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO seconds left on eDB360 before calling SQLd360
                         67310

67310
PRO calling sqld360
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO returns to original PDB
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO plan_table after calling sqld360

3hwq5m5h3gkaq FRSTPROD sqld360_323688_3hwq5m5h3gkaq_742967_20201106_1653.zip
00540ttuxh7n9 FRSTPROD sqld360_323688_00540ttuxh7n9_742967_20201106_1650.zip
d1bmu84pdu6gx FRSTPROD sqld360_323688_d1bmu84pdu6gx_742967_20201106_1652.zip
3hwq5m5h3gkaq FRSTPROD sqld360_323688_3hwq5m5h3gkaq_742967_20201106_1653.zip
17vjd1aast5q7 FRSTPROD sqld360_323688_17vjd1aast5q7_742967_20201106_1711.zip
0sjx29v99zfqc FRSTPROD sqld360_323688_0sjx29v99zfqc_742967_20201106_1715.zip
brg5vk35jcqtv FRSTPROD sqld360_323688_brg5vk35jcqtv_742967_20201106_1723.zip
6ta0azw9znyz8 FRSTPROD sqld360_323688_6ta0azw9znyz8_742967_20201106_1725.zip
cydgfyx406q8j FRSTPROD sqld360_323688_cydgfyx406q8j_742967_20201106_1728.zip
7uxfahgurqu0d FRSTPROD sqld360_323688_7uxfahgurqu0d_742967_20201106_1730.zip
PRO just in case individual file "mv" failed

PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
PRO changes PDB to FRSTPROD
PRO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

TOOL_EXEC_HOURS
---------------------------------------------------------------------
Tool Execution Hours so far: 6.161
DEFINE _DATE           = "2020-11-06/17:31:55" (CHAR)
DEFINE _CONNECT_IDENTIFIER = "PRD1" (CHAR)
DEFINE _USER           = "SYS" (CHAR)
DEFINE _PRIVILEGE      = "AS SYSDBA" (CHAR)
DEFINE _SQLPLUS_RELEASE = "1201000200" (CHAR)
DEFINE _EDITOR         = "ed" (CHAR)
DEFINE _O_VERSION      = "Oracle Database 12c EE Extreme Perf Release 12.1.0.2.0 - 64bit Production
With the Partitioning, Real Application Clusters, Automatic Storage Management, Oracle Label Security,
OLAP, Advanced Analytics and Real Application Testing options" (CHAR)
DEFINE _O_RELEASE      = "1201000200" (CHAR)
DEFINE ASH_VALIDATION  = "" (CHAR)
DEFINE V_DOLLAR        = "V$" (CHAR)
DEFINE MY_SID          = "5432" (CHAR)
DEFINE LICENSE_PACK    = "T" (CHAR)
DEFINE DIAGNOSTICS_PACK = "Y" (CHAR)
DEFINE SKIP_DIAGNOSTICS = "" (CHAR)
DEFINE TUNING_PACK     = "Y" (CHAR)
DEFINE SKIP_TUNING     = "" (CHAR)
DEFINE CUSTOM_CONFIG_FILENAME = "null" (CHAR)
DEFINE EDB360_ESTIMATED_HRS = "1" (CHAR)
DEFINE ASH_DATE_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS" (CHAR)
DEFINE MY_SPOOL_FILENAME = "awr_ash_pre_check_PRD.txt" (CHAR)
DEFINE ASH_EDB360_DAYS = "31" (CHAR)
DEFINE ASH_FTS_ON_EDB360 = "250" (CHAR)
DEFINE ASH_DATABASE_BLOCK_SIZE = "8192" (CHAR)
DEFINE NUMBER_OF_INSTANCES =                    2 (NUMBER)
DEFINE THIS_DBID       =           2109323688 (NUMBER)
DEFINE ASH_MIN_SNAP_ID = "0" (CHAR)
DEFINE ASH_MAX_SNAP_ID = "0" (CHAR)
DEFINE LAST_PURGE_TIME = "2020-09-18T00:28:18" (CHAR)
DEFINE DAYS_SINCE_PURGE = "49.5" (CHAR)
DEFINE ASH_LAST_ANALYZED = "2020-09-19T06:58:17" (CHAR)
DEFINE ASH_CBO_STATS_AGE_DAYS = "48.2" (CHAR)
DEFINE PERCENT_OF_INSERTS = "" (CHAR)
DEFINE ASH_SIZE_GB     = "2.6 GBs" (CHAR)
DEFINE LAST_DDL_TIME   = "2020-09-18T21:40:39" (CHAR)
DEFINE SEG_LAST_DDL_TIME = "2020-09-18T21:40:39" (CHAR)
DEFINE LAST_DDL_AGE_DAYS = "48.6" (CHAR)
DEFINE ASH_FTS_SECONDS = "122" (CHAR)
DEFINE ASH_DAYS_OF_HISTORY = "92.8" (CHAR)
DEFINE ASH_MED_SAMPLE_DATE = "2020-07-08T03:20:17" (CHAR)
DEFINE ASH_MEDIAN_AGE_DAYS = "121.3" (CHAR)
DEFINE IGNORE_THIS     =                    0 (NUMBER)
DEFINE EDB360_FTS_SECONDS = "1" (CHAR)
DEFINE _RC             = "10" (CHAR)
DEFINE EDB360_SECTIONS = "" (CHAR)
DEFINE SQL_TRACE_LEVEL = "1" (CHAR)
DEFINE EDB360_CONF_DAYS = "31" (CHAR)
DEFINE EDB360_CONF_DATE_FROM = "YYYY-MM-DD" (CHAR)
DEFINE EDB360_CONF_DATE_TO = "YYYY-MM-DD" (CHAR)
DEFINE EDB360_CONF_WORK_TIME_FROM = "0730" (CHAR)
DEFINE EDB360_CONF_WORK_TIME_TO = "1930" (CHAR)
DEFINE EDB360_CONF_WORK_DAY_FROM = "2" (CHAR)
DEFINE EDB360_CONF_WORK_DAY_TO = "6" (CHAR)
DEFINE EDB360_CONF_MAX_HOURS = "24" (CHAR)
DEFINE EDB360_CHART_WIDTH = "809px" (CHAR)
DEFINE EDB360_CONF_INCL_DBNAME_INDEX = "N" (CHAR)
DEFINE EDB360_CONF_INCL_DBNAME_FILE = "N" (CHAR)
DEFINE EDB360_CONF_INCL_ASH_MEM = "N" (CHAR)
DEFINE EDB360_CONF_INCL_SQL_MON = "N" (CHAR)
DEFINE EDB360_CONF_INCL_STAT_MEM = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_PX_MEM = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_SEGMENTS = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_SOURCE = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_METADATA = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_EADAM = "Y" (CHAR)
DEFINE EDB360_EADAM_ROW_LIMIT = "10000000" (CHAR)
DEFINE TOOL_REPO_USER  = "" (CHAR)
DEFINE EDB360_OUTPUT_DIRECTORY = "" (CHAR)
DEFINE EDB360_MOVE_DIRECTORY = "" (CHAR)
DEFINE SKIP_ESP_AND_ESCP = "" (CHAR)
DEFINE EDB360_CONFIG_DBID = "" (CHAR)
DEFINE EDB360_HOST_NAME_SEPARATOR = "" (CHAR)
DEFINE EDB360_HOST_NAME_POSITION = "" (CHAR)
DEFINE EDB360_HOST_NAME_OCCURRENCE = "" (CHAR)
DEFINE EDB360_CONF_INCL_HTML = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_XML = "N" (CHAR)
DEFINE EDB360_CONF_INCL_TEXT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_CSV = "N" (CHAR)
DEFINE EDB360_CONF_INCL_LINE = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_PIE = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_BAR = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_PERFHUB = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_AWR_RPT = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_AWR_DIFF_RPT = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_AWR_RANGE_RPT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_ADDM_RPT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_ASH_RPT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_ASH_ANALY_RPT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_TKPROF = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_PLOT_AWR = "N" (CHAR)
DEFINE EDB360_CONF_SERIES_SELECTION = "N" (CHAR)
DEFINE EDB360_MAX_WORK_DAYS_PEAKS = "3" (CHAR)
DEFINE EDB360_MIN_WORK_DAYS_PEAKS = "1" (CHAR)
DEFINE EDB360_MAX_HISTORY_PEAKS = "3" (CHAR)
DEFINE EDB360_MED_HISTORY = "1" (CHAR)
DEFINE EDB360_MAX_5WD_PEAKS = "3" (CHAR)
DEFINE EDB360_MIN_5WD_PEAKS = "1" (CHAR)
DEFINE EDB360_MAX_7D_PEAKS = "3" (CHAR)
DEFINE EDB360_MED_7D   = "1" (CHAR)
DEFINE EDB360_CONF_TOP_SQL = "16" (CHAR)
DEFINE EDB360_CONF_TOP_CUR = "2" (CHAR)
DEFINE EDB360_CONF_TOP_SIG = "2" (CHAR)
DEFINE EDB360_CONF_PLANX_TOP = "16" (CHAR)
DEFINE EDB360_CONF_SQLMON_TOP = "0" (CHAR)
DEFINE EDB360_CONF_SQLASH_TOP = "0" (CHAR)
DEFINE EDB360_CONF_SQLHC_TOP = "0" (CHAR)
DEFINE EDB360_CONF_SQLD360_TOP = "8" (CHAR)
DEFINE EDB360_CONF_SQLD360_TOP_TC = "0" (CHAR)
DEFINE TOOL_PREFIX_1   = "dba_hist#" (CHAR)
DEFINE TOOL_PREFIX_2   = "dba#" (CHAR)
DEFINE TOOL_PREFIX_3   = "gv#" (CHAR)
DEFINE TOOL_PREFIX_4   = "v#" (CHAR)
DEFINE EDB360_CONF_TOOL_PAGE = "<a href="http://carlos-sierra.net/edb360-an-oracle-database-360-degree-view/" target="_blank">" (CHAR)
DEFINE EDB360_CONF_ALL_PAGES_ICON = "<a href="http://carlos-sierra.net/edb360-an-oracle-database-360-degree-view/" target="_blank"><img src="database.jpg" alt="eDB360" height="33" width="52" /></a>" (CHAR)
DEFINE EDB360_CONF_ALL_PAGES_LOGO = "" (CHAR)
DEFINE EDB360_CONF_GOOGLE_CHARTS = "<script type="text/javascript" src="https://www.google.com/jsapi"></script>" (CHAR)
DEFINE EDB360_VYYNN    = "v192" (CHAR)
DEFINE EDB360_VRSN     = "v192 (2019-03-23)" (CHAR)
DEFINE EDB360_COPYRIGHT = " (c) 2019" (CHAR)
DEFINE EDB360_BYPASS   = "" (CHAR)
DEFINE AWR_HIST_PREFIX = "DBA_HIST_" (CHAR)
DEFINE AWR_OBJECT_PREFIX = "dba_hist_" (CHAR)
DEFINE DVA_VIEW_PREFIX = "DBA_" (CHAR)
DEFINE DVA_OBJECT_PREFIX = "dba_" (CHAR)
DEFINE GV_VIEW_PREFIX  = "GV$" (CHAR)
DEFINE GV_OBJECT_PREFIX = "gv$" (CHAR)
DEFINE V_VIEW_PREFIX   = "V$" (CHAR)
DEFINE V_OBJECT_PREFIX = "v$" (CHAR)
DEFINE EDB360_DBID     = "2109323688" (CHAR)
DEFINE HISTORY_DAYS    = "31" (CHAR)
DEFINE EDB360_DATE_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS" (CHAR)
DEFINE EDB360_TIMESTAMP_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS.FF" (CHAR)
DEFINE EDB360_TIMESTAMP_TZ_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS.FFTZH:TZM" (CHAR)
DEFINE EDB360_DATE_FROM = "2020-10-06T11:22:16" (CHAR)
DEFINE EDB360_DATE_TO  = "2020-11-06T11:22:16" (CHAR)
DEFINE HIST_WORK_DAYS  = "23" (CHAR)
DEFINE SKIP_EXTRAS     = "" (CHAR)
DEFINE EDB360_0G       = "edb360_0g_" (CHAR)
DEFINE EDB360_1A       = "edb360_1a_" (CHAR)
DEFINE EDB360_1B       = "edb360_1b_" (CHAR)
DEFINE EDB360_1C       = "edb360_1c_" (CHAR)
DEFINE EDB360_1D       = "edb360_1d_" (CHAR)
DEFINE EDB360_1E       = "edb360_1e_" (CHAR)
DEFINE EDB360_1F       = "edb360_1f_" (CHAR)
DEFINE EDB360_1G       = "edb360_1g_" (CHAR)
DEFINE EDB360_2A       = "edb360_2a_" (CHAR)
DEFINE EDB360_2B       = "edb360_2b_" (CHAR)
DEFINE EDB360_2C       = "edb360_2c_" (CHAR)
DEFINE EDB360_2D       = "edb360_2d_" (CHAR)
DEFINE EDB360_2E       = "edb360_2e_" (CHAR)
DEFINE EDB360_3A       = "edb360_3a_" (CHAR)
DEFINE EDB360_3B       = "edb360_3b_" (CHAR)
DEFINE EDB360_3C       = "edb360_3c_" (CHAR)
DEFINE EDB360_3D       = "edb360_3d_" (CHAR)
DEFINE EDB360_3E       = "edb360_3e_" (CHAR)
DEFINE EDB360_3F       = "edb360_3f_" (CHAR)
DEFINE EDB360_3G       = "edb360_3g_" (CHAR)
DEFINE EDB360_3H       = "edb360_3h_" (CHAR)
DEFINE EDB360_3I       = "edb360_3i_" (CHAR)
DEFINE EDB360_3J       = "edb360_3j_" (CHAR)
DEFINE EDB360_4A       = "edb360_4a_" (CHAR)
DEFINE EDB360_4B       = "edb360_4b_" (CHAR)
DEFINE EDB360_4C       = "edb360_4c_" (CHAR)
DEFINE EDB360_4D       = "edb360_4d_" (CHAR)
DEFINE EDB360_4E       = "edb360_4e_" (CHAR)
DEFINE EDB360_4F       = "edb360_4f_" (CHAR)
DEFINE EDB360_4G       = "edb360_4g_" (CHAR)
DEFINE EDB360_4H       = "edb360_4h_" (CHAR)
DEFINE EDB360_4I       = "edb360_4i_" (CHAR)
DEFINE EDB360_4J       = "edb360_4j_" (CHAR)
DEFINE EDB360_4K       = "edb360_4k_" (CHAR)
DEFINE EDB360_4L       = "edb360_4l_" (CHAR)
DEFINE EDB360_5A       = "edb360_5a_" (CHAR)
DEFINE EDB360_5B       = "edb360_5b_" (CHAR)
DEFINE EDB360_5C       = "edb360_5c_" (CHAR)
DEFINE EDB360_5D       = "edb360_5d_" (CHAR)
DEFINE EDB360_5E       = "edb360_5e_" (CHAR)
DEFINE EDB360_5F       = "edb360_5f_" (CHAR)
DEFINE EDB360_5G       = "edb360_5g_" (CHAR)
DEFINE EDB360_6A       = "edb360_6a_" (CHAR)
DEFINE EDB360_6B       = "edb360_6b_" (CHAR)
DEFINE EDB360_6C       = "edb360_6c_" (CHAR)
DEFINE EDB360_6D       = "edb360_6d_" (CHAR)
DEFINE EDB360_6E       = "edb360_6e_" (CHAR)
DEFINE EDB360_6F       = "edb360_6f_" (CHAR)
DEFINE EDB360_6G       = "edb360_6g_" (CHAR)
DEFINE EDB360_6H       = "edb360_6h_" (CHAR)
DEFINE EDB360_6I       = "edb360_6i_" (CHAR)
DEFINE EDB360_6J       = "edb360_6j_" (CHAR)
DEFINE EDB360_6K       = "edb360_6k_" (CHAR)
DEFINE EDB360_6L       = "edb360_6l_" (CHAR)
DEFINE EDB360_6M       = "edb360_6m_" (CHAR)
DEFINE EDB360_6N       = "edb360_6n_" (CHAR)
DEFINE EDB360_7A       = "edb360_7a_" (CHAR)
DEFINE EDB360_7B       = "edb360_7b_" (CHAR)
DEFINE EDB360_7C       = "edb360_7c_" (CHAR)
DEFINE EDB360_PREFIX   = "edb360" (CHAR)
DEFINE ECR_COLLECTION_KEY = "PRD1219183590" (CHAR)
DEFINE SKIP_SCRIPT     = "sql/edb360_0f_skip_script.sql " (CHAR)
DEFINE EDB360_CON_ID   = "4" (CHAR)
DEFINE EDB360_PDB_NAME = "FRSTPROD" (CHAR)
DEFINE EDB360_DBMOD    = "323688" (CHAR)
DEFINE CONNECT_INSTANCE_NUMBER = "1" (CHAR)
DEFINE DATABASE_NAME_SHORT = "prd" (CHAR)
DEFINE HOST_NAME_SHORT = "aupp-hroradb-f9exx1" (CHAR)
DEFINE HOST_NAME_SUFFIX = "" (CHAR)
DEFINE ESP_HOST_NAME_SHORT = "aupp-hroradb-f9exx1" (CHAR)
DEFINE HOST_HASH       = "742967" (CHAR)
DEFINE ESP_COLLECTION_YYYYMMDD = "20201106" (CHAR)
DEFINE MAIN_TABLE      = "DBA_ADVISOR_TASK" (CHAR)
DEFINE TITLE           = "STA report" (CHAR)
DEFINE TITLE_NO_SPACES = "sta_report" (CHAR)
DEFINE TITLE_SUFFIX    = "" (CHAR)
DEFINE EDB360_FILE_TIME = "20201106_1122" (CHAR)
DEFINE COMMON_EDB360_PREFIX = "edb360_323688" (CHAR)
DEFINE EDB360_MAIN_REPORT = "00001_edb360_323688_index" (CHAR)
DEFINE EDB360_LOG      = "00002_edb360_323688_log" (CHAR)
DEFINE EDB360_LOG2     = "00003_edb360_323688_log2" (CHAR)
DEFINE EDB360_LOG3     = "00004_edb360_323688_log3" (CHAR)
DEFINE EDB360_TKPROF   = "00005_edb360_323688_tkprof" (CHAR)
DEFINE EDB360_MAIN_FILENAME = "edb360_323688_742967" (CHAR)
DEFINE EDB360_ZIP_FILENAME = "edb360_323688_742967_20201106_1122" (CHAR)
DEFINE EDB360_TRACEFILE_IDENTIFIER = "edb360_323688" (CHAR)
DEFINE EDB360_TAR_FILENAME = "00008_edb360_323688_742967_20201106_1122" (CHAR)
DEFINE EDB360_MV_HOST_COMMAND = "" (CHAR)
DEFINE DB_VERS_OFE     = "12.1.0.2" (CHAR)
DEFINE SKIP_AWR        = "" (CHAR)
DEFINE SKIP_STATSPACK  = "--skip--" (CHAR)
DEFINE ESP_DBNAME_SHORT = "prd" (CHAR)
DEFINE ESCP_MAX_DAYS   = "365" (CHAR)
DEFINE ESCP_DATE_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS" (CHAR)
DEFINE ESCP_HOST_NAME_SHORT = "aupp-hroradb-f9exx1" (CHAR)
DEFINE ESCP_DBNAME_SHORT = "prd" (CHAR)
DEFINE ESCP_COLLECTION_YYYYMMDD_HHMI = "20201106_1122" (CHAR)
DEFINE ESCP_COLLECTION_DAYS = "8" (CHAR)
DEFINE ESCP_THIS_DBID  = "2109323688" (CHAR)
DEFINE ESCP_THIS_INST_NUM = "1" (CHAR)
DEFINE ESCP_MIN_SNAP_ID = "4578" (CHAR)
DEFINE MAX_DAYS        = "365" (CHAR)
DEFINE INCLUDE_IC      = "Y" (CHAR)
DEFINE INCLUDE_NETW    = "Y" (CHAR)
DEFINE ESP_COLLECTION_YYYYMMDD_HHMI = "20201106_1128" (CHAR)
DEFINE COLLECTION_DAYS = "8" (CHAR)
DEFINE SKIP_ON_10G     = "" (CHAR)
DEFINE ECR_SQ_FACT_HINTS = "MATERIALIZE NO_MERGE" (CHAR)
DEFINE ECR_DATE_FORMAT = "YYYY-MM-DD/HH24:MI:SS" (CHAR)
DEFINE ECR_DBID        = "2109323688" (CHAR)
DEFINE ECR_INSTANCE_NUMBER = "1" (CHAR)
DEFINE ECR_MIN_SNAP_ID = "4578" (CHAR)
DEFINE ECR_COLLECTION_HOST = "aupp-hroradb-f9exx1" (CHAR)
DEFINE USE_ON_10G      = "--" (CHAR)
DEFINE DB_VERSION      = "12.1.0.2.0" (CHAR)
DEFINE SKIP_10G_COLUMN = "" (CHAR)
DEFINE SKIP_10G_SCRIPT = "" (CHAR)
DEFINE SKIP_11G_COLUMN = "" (CHAR)
DEFINE SKIP_11G_SCRIPT = "" (CHAR)
DEFINE SKIP_11R1_COLUMN = "" (CHAR)
DEFINE SKIP_11R1_SCRIPT = "" (CHAR)
DEFINE SKIP_NON_REPO_COLUMN = "" (CHAR)
DEFINE SKIP_NON_REPO_SCRIPT = "" (CHAR)
DEFINE SKIP_12C_COLUMN = " -- skip 12c " (CHAR)
DEFINE SKIP_12C_SCRIPT = " echo skip 12c " (CHAR)
DEFINE SKIP_12R2_COLUMN = "" (CHAR)
DEFINE SKIP_12R2_SCRIPT = "" (CHAR)
DEFINE SKIP_18C_COLUMN = "" (CHAR)
DEFINE SKIP_18C_SCRIPT = "" (CHAR)
DEFINE SKIP_19C_COLUMN = "" (CHAR)
DEFINE SKIP_19C_SCRIPT = "" (CHAR)
DEFINE AVG_CPU_COUNT   =                   16 (NUMBER)
DEFINE SUM_CPU_COUNT   =                   32 (NUMBER)
DEFINE AVG_CORE_COUNT  = "16" (CHAR)
DEFINE AVG_THREAD_COUNT = "16" (CHAR)
DEFINE CPU_LOAD_THRESHOLD =                   32 (NUMBER)
DEFINE HOSTS_COUNT     = "2" (CHAR)
DEFINE CORES_THREADS_HOSTS = "cores:16(avg) threads:16(avg) hosts:2(avg)" (CHAR)
DEFINE DATABASE_BLOCK_SIZE = "8192" (CHAR)
DEFINE TOOL_SYSDATE    = "20201106173042" (CHAR)
DEFINE BETWEEN_DATES   = ", between 2020-10-06T17:30:42 and 2020-11-06T17:30:42" (CHAR)
DEFINE MINIMUM_SNAP_ID = "3486" (CHAR)
DEFINE MAXIMUM_SNAP_ID = "4975" (CHAR)
DEFINE INST1_PRESENT   = "1" (CHAR)
DEFINE INST2_PRESENT   = "2" (CHAR)
DEFINE INST3_PRESENT   = "" (CHAR)
DEFINE INST4_PRESENT   = "" (CHAR)
DEFINE INST5_PRESENT   = "" (CHAR)
DEFINE INST6_PRESENT   = "" (CHAR)
DEFINE INST7_PRESENT   = "" (CHAR)
DEFINE INST8_PRESENT   = "" (CHAR)
DEFINE IS_SINGLE_INSTANCE = "" (CHAR)
DEFINE SKIP_INST1      = "" (CHAR)
DEFINE SKIP_INST2      = "" (CHAR)
DEFINE SKIP_INST3      = "-- skip inst3" (CHAR)
DEFINE SKIP_INST4      = "-- skip inst4" (CHAR)
DEFINE SKIP_INST5      = "-- skip inst5" (CHAR)
DEFINE SKIP_INST6      = "-- skip inst6" (CHAR)
DEFINE SKIP_INST7      = "-- skip inst7" (CHAR)
DEFINE SKIP_INST8      = "-- skip inst8" (CHAR)
DEFINE CHART_SETUP_DRIVER = "99800_edb360_323688_chart_setup_driver1.sql" (CHAR)
DEFINE EDB360_EADAM_SNAPS = "-666, 4925, 4869, 4821, 4887, 4839, 4791, 3948, 3900, 3852, 3996, 3804, 3756" (CHAR)
DEFINE EBS_RELEASE     = "" (CHAR)
DEFINE EBS_SYSTEM_NAME = "" (CHAR)
DEFINE SIEBEL_SCHEMA   = "" (CHAR)
DEFINE SIEBEL_APP_VER  = "" (CHAR)
DEFINE PSFT_SCHEMA     = "" (CHAR)
DEFINE PSFT_TOOLS_REL  = "" (CHAR)
DEFINE EDB360_SKIP_HTML = "" (CHAR)
DEFINE EDB360_SKIP_XML = " echo skip xml " (CHAR)
DEFINE EDB360_SKIP_TEXT = " echo skip text " (CHAR)
DEFINE EDB360_SKIP_CSV = " echo skip csv " (CHAR)
DEFINE EDB360_SKIP_LINE = "" (CHAR)
DEFINE EDB360_SKIP_PIE = "" (CHAR)
DEFINE EDB360_SKIP_BAR = "" (CHAR)
DEFINE EDB360_SKIP_METADATA = "" (CHAR)
DEFINE EDB360_SKIP_ASH_MEM = " echo skip ash mem " (CHAR)
DEFINE EDB360_SKIP_SQL_MON = " echo skip sql mon " (CHAR)
DEFINE EDB360_SKIP_STAT_MEM = "" (CHAR)
DEFINE EDB360_SKIP_PX_MEM = "" (CHAR)
DEFINE TOP_LEVEL_HINTS = "NO_MERGE" (CHAR)
DEFINE SQ_FACT_HINTS   = "MATERIALIZE NO_MERGE" (CHAR)
DEFINE DS_HINT         = "DYNAMIC_SAMPLING(4)" (CHAR)
DEFINE ASH_HINTS1      = " FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt) " (CHAR)
DEFINE ASH_HINTS2      = " FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt) " (CHAR)
DEFINE ASH_HINTS3      = " USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt) " (CHAR)
DEFINE DEF_MAX_ROWS    = "50000" (CHAR)
DEFINE MAX_ROWS        = "50000" (CHAR)
DEFINE EXCLUSION_LIST  = "('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','ORDSYS','OUTLN','OWBSYS')" (CHAR)
DEFINE EXCLUSION_LIST2 = "('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')" (CHAR)
DEFINE SKIP_HTML       = "" (CHAR)
DEFINE SKIP_TEXT       = "" (CHAR)
DEFINE SKIP_CSV        = "" (CHAR)
DEFINE SKIP_LCH        = "Y" (CHAR)
DEFINE SKIP_LCH2       = "--skip--" (CHAR)
DEFINE SKIP_PCH        = "Y" (CHAR)
DEFINE SKIP_BCH        = "Y" (CHAR)
DEFINE SKIP_ALL        = "" (CHAR)
DEFINE ABSTRACT        = "" (CHAR)
DEFINE ABSTRACT2       = "" (CHAR)
DEFINE FOOT            = "" (CHAR)
DEFINE ABSTRACT_UOM    = "Memory is accounted as power of two (binary) while storage and network traffic as power of ten (decimal). <br />" (CHAR)
DEFINE CHARTYPE        = "LineChart" (CHAR)
DEFINE STACKED         = "" (CHAR)
DEFINE HAXIS           = "7uxfahgurqu0d 12.1.0.2.0 cores:16(avg) threads:16(avg) hosts:2(avg)" (CHAR)
DEFINE VAXIS           = "Optimizer cost" (CHAR)
DEFINE VBASELINE       = "" (CHAR)
DEFINE BAR_HEIGHT      = "45%" (CHAR)
DEFINE TIT_01          = "0" (CHAR)
DEFINE TIT_02          = "" (CHAR)
DEFINE TIT_03          = "" (CHAR)
DEFINE TIT_04          = "" (CHAR)
DEFINE TIT_05          = "" (CHAR)
DEFINE TIT_06          = "" (CHAR)
DEFINE TIT_07          = "" (CHAR)
DEFINE TIT_08          = "" (CHAR)
DEFINE TIT_09          = "" (CHAR)
DEFINE TIT_10          = "" (CHAR)
DEFINE TIT_11          = "" (CHAR)
DEFINE TIT_12          = "" (CHAR)
DEFINE TIT_13          = "" (CHAR)
DEFINE TIT_14          = "" (CHAR)
DEFINE TIT_15          = "" (CHAR)
DEFINE CONT_01         = "-1" (CHAR)
DEFINE CONT_02         =                   -1 (NUMBER)
DEFINE CONT_03         =                   -1 (NUMBER)
DEFINE CONT_04         =                   -1 (NUMBER)
DEFINE CONT_05         =                   -1 (NUMBER)
DEFINE CONT_06         =                   -1 (NUMBER)
DEFINE CONT_07         =                   -1 (NUMBER)
DEFINE CONT_08         =                   -1 (NUMBER)
DEFINE CONT_09         =                   -1 (NUMBER)
DEFINE CONT_10         =                   -1 (NUMBER)
DEFINE CONT_11         =                   -1 (NUMBER)
DEFINE CONT_12         =                   -1 (NUMBER)
DEFINE CONT_13         =                   -1 (NUMBER)
DEFINE CONT_14         =                   -1 (NUMBER)
DEFINE CONT_15         =                   -1 (NUMBER)
DEFINE WAIT_CLASS_01   = "Application" (CHAR)
DEFINE EVENT_NAME_01   = "enq: TM - contention" (CHAR)
DEFINE WAIT_CLASS_02   = "User I/O" (CHAR)
DEFINE EVENT_NAME_02   = "cell single block physical read" (CHAR)
DEFINE WAIT_CLASS_03   = "Network" (CHAR)
DEFINE EVENT_NAME_03   = "SQL*Net more data to client" (CHAR)
DEFINE WAIT_CLASS_04   = "Administrative" (CHAR)
DEFINE EVENT_NAME_04   = "Backup: MML write backup piece" (CHAR)
DEFINE WAIT_CLASS_05   = "Cluster" (CHAR)
DEFINE EVENT_NAME_05   = "gc cr disk read" (CHAR)
DEFINE WAIT_CLASS_06   = "Concurrency" (CHAR)
DEFINE EVENT_NAME_06   = "cursor: pin S wait on X" (CHAR)
DEFINE WAIT_CLASS_07   = "User I/O" (CHAR)
DEFINE EVENT_NAME_07   = "direct path read" (CHAR)
DEFINE WAIT_CLASS_08   = "Other" (CHAR)
DEFINE EVENT_NAME_08   = "rdbms ipc reply" (CHAR)
DEFINE WAIT_CLASS_09   = "Application" (CHAR)
DEFINE EVENT_NAME_09   = "enq: TX - row lock contention" (CHAR)
DEFINE WAIT_CLASS_10   = "User I/O" (CHAR)
DEFINE EVENT_NAME_10   = "cell multiblock read request" (CHAR)
DEFINE WAIT_CLASS_11   = "User I/O" (CHAR)
DEFINE EVENT_NAME_11   = "cell multiblock physical read" (CHAR)
DEFINE WAIT_CLASS_12   = "Cluster" (CHAR)
DEFINE EVENT_NAME_12   = "gc current block 2-way" (CHAR)
DEFINE EXADATA         = "" (CHAR)
DEFINE MAX_COL_NUMBER  = "5" (CHAR)
DEFINE COLUMN_NUMBER   = "5" (CHAR)
DEFINE RECOVERY        = "& recovery" (CHAR)
DEFINE TOTAL_HOURS     = "" (CHAR)
DEFINE EDB360_TIME_STAMP = "2020-11-06T13:52:14" (CHAR)
DEFINE REPORT_SEQUENCE = "205" (CHAR)
DEFINE CURRENT_TIME    = "17:31:50" (CHAR)
DEFINE EXACT_MATCHING_SIGNATURE = 13480160502182269663 (NUMBER)
DEFINE FORCE_MATCHING_SIGNATURE =                    0 (NUMBER)
DEFINE WAIT_CLASS_COLORS = "CASE wait_class WHEN ''CPU'' THEN ''34CF27'' WHEN ''Scheduler'' THEN ''9FFA9D'' WHEN ''User I/O'' THEN ''0252D7'' WHEN ''System I/O'' THEN ''1E96DD'' " (CHAR)
DEFINE WAIT_CLASS_COLORS2 = " WHEN ''Concurrency'' THEN ''871C12'' WHEN ''Application'' THEN ''C42A05'' WHEN ''Commit'' THEN ''EA6A05'' WHEN ''Configuration'' THEN ''594611''  " (CHAR)
DEFINE WAIT_CLASS_COLORS3 = " WHEN ''Administrative'' THEN ''75763E''  WHEN ''Network'' THEN ''989779'' WHEN ''Other'' THEN ''F571A0'' " (CHAR)
DEFINE WAIT_CLASS_COLORS4 = " WHEN ''Cluster'' THEN ''CEC3B5'' WHEN ''Queueing'' THEN ''C6BAA5'' END" (CHAR)
DEFINE SERIES_01       = "" (CHAR)
DEFINE SERIES_02       = "" (CHAR)
DEFINE SERIES_03       = "" (CHAR)
DEFINE SERIES_04       = "" (CHAR)
DEFINE SERIES_05       = "" (CHAR)
DEFINE SERIES_06       = "" (CHAR)
DEFINE SERIES_07       = "" (CHAR)
DEFINE SERIES_08       = "" (CHAR)
DEFINE SERIES_09       = "" (CHAR)
DEFINE SERIES_10       = "" (CHAR)
DEFINE SERIES_11       = "" (CHAR)
DEFINE SERIES_12       = "" (CHAR)
DEFINE SERIES_13       = "" (CHAR)
DEFINE SERIES_14       = "" (CHAR)
DEFINE SERIES_15       = "" (CHAR)
DEFINE SKIP_LCHP       = "--skip--" (CHAR)
DEFINE EDB360_UDUMP_PATH = "/u02/app/oracle/diag/rdbms/prd_iad3vt/PRD1/trace/" (CHAR)
DEFINE EDB360_SPID     = "274417" (CHAR)
DEFINE REPORT_DBNAME   = "" (CHAR)
DEFINE SECTION_ID      = "5h" (CHAR)
DEFINE SECTION_NAME    = "SQL Tuning Advisor" (CHAR)
DEFINE PROCESSOR_MODEL = "Intel(R) Xeon(R) Platinum 8270CL CPU @ 2.70GHz" (CHAR)
DEFINE HH_MM_SS        = "17:31:50" (CHAR)
DEFINE SPOOL_FILENAME  = "sqld360_323688_7uxfahgurqu0d_5h_204_sta_report" (CHAR)
DEFINE ROW_NUM         = "2980" (CHAR)
DEFINE EDB360_PREV_SQL_ID = "7uwhxftumj625" (CHAR)
DEFINE EDB360_PREV_CHILD_NUMBER = "0" (CHAR)
DEFINE ONE_SPOOL_FILENAME = "00373_sqld360_323688_7uxfahgurqu0d_5h_204_sta_report" (CHAR)
DEFINE EDB360_TUNING_PACK_FOR_SQLMON = "N" (CHAR)
DEFINE SKIP_SQLMON_EXEC = " echo skip sqlmon" (CHAR)
DEFINE EDB360_SQL_TEXT_100 = "SELECT TO_CHAR(ROWNUM) row_num, v0.* FROM /* 4b.455 */ ( WITH pgastat_denorm_1 AS ( SELECT /*+  MATE" (CHAR)
DEFINE STATSPACK_USER  = "perfstat" (CHAR)
DEFINE SP_MINIMUM_SNAP_ID = "-1" (CHAR)
DEFINE SP_MAXIMUM_SNAP_ID = "-1" (CHAR)
DEFINE SKIP_IF_MISSING = " echo skip " (CHAR)
DEFINE TOTAL_BUFFER_GETS =          20276118710 (NUMBER)
DEFINE TOTAL_DISK_READS =            123439198 (NUMBER)
DEFINE REPORT_DATE     = "2020-11-06T11:45:41" (CHAR)
DEFINE DAYS_OF_HISTORY_ACCESSED = "31" (CHAR)
DEFINE CAPTURED_AT_LEAST_X_TIMES = "10" (CHAR)
DEFINE CAPTURED_AT_LEAST_X_DAYS_APART = "5" (CHAR)
DEFINE MED_ELAP_MICROSECS_THRESHOLD = "1e4" (CHAR)
DEFINE MIN_SLOPE_THRESHOLD = "0.1" (CHAR)
DEFINE MAX_NUM_ROWS_X  = "20" (CHAR)
DEFINE SKIP_INST       = "" (CHAR)
DEFINE CORES_OVER_THREADS = "" (CHAR)
DEFINE SUBPOOL_01      = "SQLA" (CHAR)
DEFINE SUBPOOL_02      = "Result Cache" (CHAR)
DEFINE SUBPOOL_03      = "KGLH0" (CHAR)
DEFINE SUBPOOL_04      = "gcs resources" (CHAR)
DEFINE SUBPOOL_05      = "gcs shadows" (CHAR)
DEFINE SUBPOOL_06      = "" (CHAR)
DEFINE SUBPOOL_07      = "" (CHAR)
DEFINE SUBPOOL_08      = "" (CHAR)
DEFINE SUBPOOL_09      = "" (CHAR)
DEFINE SUBPOOL_10      = "" (CHAR)
DEFINE TEXT            = "Y" (CHAR)
DEFINE ACTIVE          = "Y" (CHAR)
DEFINE MAX_REPORTS     = "12" (CHAR)
DEFINE INPUT_LICENSE   = "Y" (CHAR)
DEFINE SQL_ID          = "1wjt2ut7cah6k" (CHAR)
DEFINE DATE_MASK       = "YYYY-MM-DD/HH24:MI:SS" (CHAR)
DEFINE WAIT_CLASS_13   = "Concurrency" (CHAR)
DEFINE EVENT_NAME_13   = "row cache lock" (CHAR)
DEFINE WAIT_CLASS_14   = "Cluster" (CHAR)
DEFINE EVENT_NAME_14   = "gc cr multi block request" (CHAR)
DEFINE WAIT_CLASS_15   = "Cluster" (CHAR)
DEFINE EVENT_NAME_15   = "gc cr grant 2-way" (CHAR)
DEFINE WAIT_CLASS_16   = "Cluster" (CHAR)
DEFINE EVENT_NAME_16   = "gc current grant 2-way" (CHAR)
DEFINE WAIT_CLASS_17   = "Concurrency" (CHAR)
DEFINE EVENT_NAME_17   = "library cache lock" (CHAR)
DEFINE WAIT_CLASS_18   = "Other" (CHAR)
DEFINE EVENT_NAME_18   = "DFS lock handle" (CHAR)
DEFINE WAIT_CLASS_19   = "User I/O" (CHAR)
DEFINE EVENT_NAME_19   = "cell smart table scan" (CHAR)
DEFINE WAIT_CLASS_20   = "User I/O" (CHAR)
DEFINE EVENT_NAME_20   = "direct path read temp" (CHAR)
DEFINE WAIT_CLASS_21   = "Scheduler" (CHAR)
DEFINE EVENT_NAME_21   = "resmgr:cpu quantum" (CHAR)
DEFINE WAIT_CLASS_22   = "User I/O" (CHAR)
DEFINE EVENT_NAME_22   = "cell single block read request" (CHAR)
DEFINE WAIT_CLASS_23   = "Cluster" (CHAR)
DEFINE EVENT_NAME_23   = "gc cr block busy" (CHAR)
DEFINE WAIT_CLASS_24   = "Other" (CHAR)
DEFINE EVENT_NAME_24   = "gcs drm freeze in enter server mode" (CHAR)
DEFINE ONE_MS_COMP     = "<=" (CHAR)
DEFINE TWO_MS_COMP     = ">" (CHAR)
DEFINE VAXIS1          = "Waits Count" (CHAR)
DEFINE VAXIS2          = "" (CHAR)
DEFINE 7               = "edb360_9a_pre_one.sql" (CHAR)
DEFINE BETWEEN_TIMES   = ", between 2020-10-06T11:22:16 and 2020-11-06T11:22:16" (CHAR)
DEFINE FILTER_PREDICATE = "instance_number = 8" (CHAR)
DEFINE CALL_SQLD360_BITMASK = "110031" (CHAR)
DEFINE CALL_SQLD360_BITMASK_TC = "111031" (CHAR)
DEFINE FILES_PREFIX    = "" (CHAR)
DEFINE SQ_FACT_SQL_SAMPLE_HINTS = " MATERIALIZE NO_MERGE " (CHAR)
DEFINE IS_10G          = "" (CHAR)
DEFINE IS_11R1         = "" (CHAR)
DEFINE IS_11R2         = "" (CHAR)
DEFINE X_MINIMUM_SNAP_ID = "3483" (CHAR)
DEFINE X_MAXIMUM_SNAP_ID = "4973" (CHAR)
DEFINE X_MINIMUM_DATE  = "2020-10-06T16:30:07" (CHAR)
DEFINE X_MAXIMUM_DATE  = "2020-11-06T16:30:43" (CHAR)
DEFINE SIGNATURE       = "9380065298533696050" (CHAR)
DEFINE SIGNATUREF      = "9380065298533696050" (CHAR)
DEFINE X_HOST_NAME     = "aupp-hroradb-f9exx1" (CHAR)
DEFINE X_DB_NAME       = "PRD" (CHAR)
DEFINE X_CONTAINER     = "FRSTPROD" (CHAR)
DEFINE SQL_HANDLE      = "" (CHAR)
DEFINE X_SLICES        = "20" (CHAR)
DEFINE X_DAYS          = "31" (CHAR)
DEFINE TABLES_LIST     = "(('THH_C4C','A_APBL'),('THH_C4C','A_APBLSRVC'),('THH_C4C','A_MEMBDGISBASE'),('THH_C4C','A_USR'),('THH_C4C','MV_PATID_CLINIC_COND_SRVCD'),('THH_C4C','T_DRUGCLM'),('THH_C4C','T_MDCLCLM'),('THH_C4C','T_MDCT'),('THH_C4C','T_SRVC'),('THH_C4C','T_USR'))" (CHAR)
DEFINE TIMESTAMP_MASK  = "YYYY-MM-DD/HH24:MI:SS.FF6" (CHAR)
DEFINE FIELDS_DELIMITER = "<,>" (CHAR)
DEFINE EADAM_CURRENT_TIME = "20201106163916" (CHAR)
DEFINE EDB360_SECS2GO  = "67310" (CHAR)
DEFINE DRIVER_TIME     = "164026" (CHAR)
DEFINE FROM_EDB360     = "--" (CHAR)
DEFINE SKIP_TCB        = "--" (CHAR)
DEFINE SQLD360_FROMEDB360_DAYS = "31" (CHAR)
DEFINE SECS2GO_STARTTIME = "20201106173041" (CHAR)
DEFINE SKIP_SQLD360    = "" (CHAR)
DEFINE SQLD360_CONTAINER = "FRSTPROD" (CHAR)
DEFINE SQLD360_CONF_DAYS = "61" (CHAR)
DEFINE SQLD360_CONF_DATE_FROM = "YYYY-MM-DD" (CHAR)
DEFINE SQLD360_CONF_DATE_TO = "YYYY-MM-DD" (CHAR)
DEFINE SQLD360_CONF_INCL_HTML = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_TEXT = "N" (CHAR)
DEFINE SQLD360_CONF_INCL_CSV = "N" (CHAR)
DEFINE SQLD360_CONF_INCL_XML = "N" (CHAR)
DEFINE SQLD360_CONF_INCL_LINE = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_PIE = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_BAR = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_TREE = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_BUBBLE = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_SCATT = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_SQLMON = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_ASH_HIST = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_AWRRPT = "N" (CHAR)
DEFINE SQLD360_CONF_INCL_ASHRPT = "N" (CHAR)
DEFINE SQLD360_CONF_INCL_EADAM = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_RAWASH = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_STATS_H = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_FMATCH = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_METADATA = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_STATS = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_TCB = "N" (CHAR)
DEFINE SQLD360_CONF_INCL_STA = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_CBOENV = "N" (CHAR)
DEFINE SQLD360_CONF_TCB_SAMPLE = "0" (CHAR)
DEFINE SQLD360_CONF_TRANSLATE_LOWHIGH = "Y" (CHAR)
DEFINE SQLD360_CONF_FIRST_PART = "10" (CHAR)
DEFINE SQLD360_CONF_LAST_PART = "10" (CHAR)
DEFINE SQLD360_NUM_PLAN_DETAILS = "20" (CHAR)
DEFINE SQLD360_CONF_NUM_TOP_EXECS = "3" (CHAR)
DEFINE SQLD360_CONF_NUM_AWRRPT = "3" (CHAR)
DEFINE SQLD360_CONF_NUM_SQLMON_REP = "12" (CHAR)
DEFINE SQLD360_CONF_AVG_ET_PERCTH = "90" (CHAR)
DEFINE SQLD360_CONF_INCL_OBJ_DEPT = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_OBJ_ASHBASED = "N" (CHAR)
DEFINE SQLD360_SQLTRACE_LEVEL = "0" (CHAR)
DEFINE SQLD360_CONF_DBID = "" (CHAR)
DEFINE SQLD360_CONF_AWR_TIMESCALE = "ms" (CHAR)
DEFINE SQLD360_CONF_TOOL_PAGE = "<a href="http://mauro-pagano.com/2015/02/16/sqld360-sql-diagnostics-collection-made-faster/" target="_blank">" (CHAR)
DEFINE SQLD360_CONF_ALL_PAGES_ICON = "<a href="http://mauro-pagano.com/2015/02/16/sqld360-sql-diagnostics-collection-made-faster/" target="_blank"><img src="SQLd360_img.jpg" alt="SQLd360" height="33" width="52"></a>" (CHAR)
DEFINE SQLD360_CONF_ALL_PAGES_LOGO = "" (CHAR)
DEFINE SQLD360_CONF_GOOGLE_CHARTS = "<script type="text/javascript" src="https://www.google.com/jsapi"></script>" (CHAR)
DEFINE SQLD360_VYYNN   = "v192" (CHAR)
DEFINE SQLD360_VRSN    = "v192 (2019-03-23)" (CHAR)
DEFINE SQLD360_PREFIX  = "sqld360" (CHAR)
DEFINE SQLD360_SQLID   = "7uxfahgurqu0d" (CHAR)
DEFINE SQLD360_DBID    = "2109323688" (CHAR)
DEFINE SQLD360_DBMOD   = "323688" (CHAR)
DEFINE CONNECT_INSTANCE_NAME = "PRD1" (CHAR)
DEFINE SQLD360_DB_BLOCK_SIZE = "8192" (CHAR)
DEFINE SQLD360_DATE_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS" (CHAR)
DEFINE SQLD360_TIMESTAMP_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS.FF" (CHAR)
DEFINE SQLD360_TIMESTAMP_TZ_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS.FFTZH:TZM" (CHAR)
DEFINE SQLD360_DATE_FROM = "2020-10-06T17:30:42" (CHAR)
DEFINE SQLD360_DATE_TO = "2020-11-06T17:30:42" (CHAR)
DEFINE SKIP_10G        = "" (CHAR)
DEFINE SKIP_11G        = "" (CHAR)
DEFINE SKIP_11R1       = "" (CHAR)
DEFINE SKIP_11R201     = "" (CHAR)
DEFINE SKIP_11R203     = "" (CHAR)
DEFINE SKIP_12C        = "--" (CHAR)
DEFINE SKIP_12R101     = "" (CHAR)
DEFINE SKIP_12R1       = "--" (CHAR)
DEFINE SKIP_18C        = "" (CHAR)
DEFINE SKIP_19C        = "" (CHAR)
DEFINE SQLD360_FILE_TIME = "20201106_1730" (CHAR)
DEFINE AS_OF_DATE      = ", as of Fri Nov 06 @05:30PM" (CHAR)
DEFINE SQLD360_ASHDISKFILTER =                   10 (NUMBER)
DEFINE SQLD360_ASHSAMPLE =                    1 (NUMBER)
DEFINE SQLD360_ASHTIMEVALUE =                   10 (NUMBER)
DEFINE SQLD360_REMOTE_EXEC = "--" (CHAR)
DEFINE SQLD360_LOCAL_EXEC = "" (CHAR)
DEFINE SQLD360_UDUMP_PATH = "/u02/app/oracle/product/12.1.0/dbhome_3/rdbms/log/" (CHAR)
DEFINE SQLD360_DIAGTRACE_PATH = "/u02/app/oracle/diag/rdbms/prd_iad3vt/PRD1/trace/" (CHAR)
DEFINE SQLD360_SPID    = "274417" (CHAR)
DEFINE SQLD360_SQLTXT  = "begin dbms_mview.REFRESH('MV_DIM_CLAIM','C'); end;" (CHAR)
DEFINE SQLD360_IS_INSERT = "N" (CHAR)
DEFINE XPLAN_USER      = "THH_C4C" (CHAR)
DEFINE CURRENT_USER    = "SYS" (CHAR)
DEFINE XPLAN_SQL       = "begin dbms_mview.REFRESH('MV_DIM_CLAIM','C'); end;" (CHAR)
DEFINE SQLD360_XPLAN_SQLID = "9babjv8yq8ru3" (CHAR)
DEFINE SKIP_FORCE_MATCH = "--" (CHAR)
DEFINE SQLD360_SKIP_HTML = "" (CHAR)
DEFINE SQLD360_SKIP_XML = "--" (CHAR)
DEFINE SQLD360_SKIP_TEXT = "--" (CHAR)
DEFINE SQLD360_SKIP_CSV = "--" (CHAR)
DEFINE SQLD360_SKIP_LINE = "" (CHAR)
DEFINE SQLD360_SKIP_PIE = "" (CHAR)
DEFINE SQLD360_SKIP_BAR = "" (CHAR)
DEFINE SQLD360_SKIP_TREE = "" (CHAR)
DEFINE SQLD360_SKIP_BUBBLE = "" (CHAR)
DEFINE SQLD360_SKIP_SCATT = "" (CHAR)
DEFINE SQLD360_SKIP_AWRRPT = "--" (CHAR)
DEFINE SQLD360_SKIP_ASHRPT = "--" (CHAR)
DEFINE SQLD360_SKIP_SQLMON = "" (CHAR)
DEFINE SQLD360_SKIP_STA = "" (CHAR)
DEFINE SQLD360_SKIP_EADAM = "" (CHAR)
DEFINE SQLD360_SKIP_RAWASH = "" (CHAR)
DEFINE SQLD360_SKIP_STATS_H = "" (CHAR)
DEFINE SQLD360_SKIP_FMATCH = "" (CHAR)
DEFINE SQLD360_SKIP_METADATA = "" (CHAR)
DEFINE SQLD360_SKIP_STATS = "" (CHAR)
DEFINE SQLD360_SKIP_TCB = "--" (CHAR)
DEFINE SQLD360_SKIP_CBOENV = "--" (CHAR)
DEFINE SQLD360_TCB_EXP_DATA = "FALSE" (CHAR)
DEFINE SQLD360_TCB_EXP_SAMPLE =                    0 (NUMBER)
DEFINE SQLD360_SKIP_OBJD = "" (CHAR)
DEFINE SQLD360_SKIP_OBJ_ASHBASED = "--" (CHAR)
DEFINE SQLD360_SKIP_LOWHIGH = "" (CHAR)
DEFINE SQLD360_HAS_PLSQL = "" (CHAR)
DEFINE SQLD360_NO_READ_STATS_H = "" (CHAR)
DEFINE SQLD360_AWR_TIMESCALE_D = "1e3" (CHAR)
DEFINE SQLD360_AWR_TIMESCALE_L = "ms" (CHAR)
DEFINE COMMON_SQLD360_PREFIX = "sqld360_323688_7uxfahgurqu0d" (CHAR)
DEFINE SQLD360_MAIN_REPORT = "00001_sqld360_323688_7uxfahgurqu0d_index" (CHAR)
DEFINE SQLD360_LOG     = "00002_sqld360_323688_7uxfahgurqu0d_log" (CHAR)
DEFINE SQLD360_TKPROF  = "00003_sqld360_323688_7uxfahgurqu0d_tkprof" (CHAR)
DEFINE SQLD360_MAIN_FILENAME = "sqld360_323688_7uxfahgurqu0d_742967" (CHAR)
DEFINE SQLD360_LOG2    = "00004_sqld360_323688_7uxfahgurqu0d_log2" (CHAR)
DEFINE SQLD360_TRACEFILE_IDENTIFIER = "sqld360_323688_7uxfahgurqu0d" (CHAR)
DEFINE SQLD360_COPYRIGHT = " (c) 2015" (CHAR)
DEFINE NUM_PARTS       = "100" (CHAR)
DEFINE DEFAULT_DIR     = "SQLD360_DIR" (CHAR)
DEFINE SQLMON_DATE_MASK = "YYYYMMDDHH24MISS" (CHAR)
DEFINE SQLMON_TEXT     = "Y" (CHAR)
DEFINE SQLMON_ACTIVE   = "Y" (CHAR)
DEFINE SQLMON_HIST     = "Y" (CHAR)
DEFINE ASH_DATE_MASK   = "YYYYMMDDHH24MISS" (CHAR)
DEFINE ASH_TEXT        = "Y" (CHAR)
DEFINE ASH_HTML        = "Y" (CHAR)
DEFINE ASH_MEM         = "Y" (CHAR)
DEFINE ASH_AWR         = "Y" (CHAR)
DEFINE ASH_MAX_REPORTS = "12" (CHAR)
DEFINE WAIT_CLASS_COLORS_S = "CASE wait_class WHEN ''CPU'' THEN ''color: ''''#34CF27'''''' WHEN ''Scheduler'' THEN ''color: ''''#9FFA9D'''''' WHEN ''User I/O'' THEN ''color: ''''#0252D7'''''' WHEN ''System I/O'' THEN ''color: ''''#1E96DD'''''' " (CHAR)
DEFINE WAIT_CLASS_COLORS2_S = " WHEN ''Concurrency'' THEN ''color: ''''#871C12'''''' WHEN ''Application'' THEN ''color: ''''#C42A05'''''' WHEN ''Commit'' THEN ''color: ''''#EA6A05'''''' WHEN ''Configuration'' THEN ''color: ''''#594611''''''  " (CHAR)
DEFINE WAIT_CLASS_COLORS3_S = " WHEN ''Administrative'' THEN ''color: ''''#75763E''''''  WHEN ''Network'' THEN ''color: ''''#989779'''''' WHEN ''Other'' THEN ''color: ''''#F571A0'''''' " (CHAR)
DEFINE WAIT_CLASS_COLORS4_S = " WHEN ''Cluster'' THEN ''color: ''''#CEC3B5'''''' WHEN ''Queueing'' THEN ''color: ''''#C6BAA5'''''' END" (CHAR)
DEFINE SKIP_XML        = "" (CHAR)
DEFINE SKIP_TCH        = "Y" (CHAR)
DEFINE SKIP_UCH        = "Y" (CHAR)
DEFINE SKIP_SCH        = "Y" (CHAR)
DEFINE TREECOLOR       = "" (CHAR)
DEFINE BUBBLEMAXVALUE  = "" (CHAR)
DEFINE BUBBLESERIES    = "series: {'CPU': {color: '#34CF27'}, 'I/O': {color: '#0252D7'}, 'Concurrency': {color: '#871C12'}, 'Cluster': {color: '#CEC3B5'}, 'Other': {color: '#C6BAA5'}, 'Multiple': {color: '#CCFFFF'}}," (CHAR)
DEFINE BUBBLESDETAILS  = "" (CHAR)
DEFINE SQL_TEXT        = "" (CHAR)
DEFINE SQLD360_TIME_STAMP = "2020-11-06/17:31:50" (CHAR)
DEFINE NUM_PLANS       = "1" (CHAR)
DEFINE SQLD360_MAIN_REPORT_BCK = "00001_sqld360_323688_7uxfahgurqu0d_index" (CHAR)
DEFINE NUM_BINDS       = "0" (CHAR)
DEFINE NUM_HISTOGRAMS  = "0" (CHAR)
DEFINE COLS_FROM_PART_TABLES = "0" (CHAR)
DEFINE PART_TABLES     = "0" (CHAR)
DEFINE TIT_01_AWR      = "0" (CHAR)
DEFINE TIT_02_AWR      = "" (CHAR)
DEFINE TIT_03_AWR      = "" (CHAR)
DEFINE TIT_04_AWR      = "" (CHAR)
DEFINE TIT_05_AWR      = "" (CHAR)
DEFINE TIT_06_AWR      = "" (CHAR)
DEFINE TIT_07_AWR      = "" (CHAR)
DEFINE TIT_08_AWR      = "" (CHAR)
DEFINE TIT_09_AWR      = "" (CHAR)
DEFINE TIT_10_AWR      = "" (CHAR)
DEFINE TIT_11_AWR      = "" (CHAR)
DEFINE TIT_12_AWR      = "" (CHAR)
DEFINE TIT_13_AWR      = "" (CHAR)
DEFINE TIT_14_AWR      = "" (CHAR)
DEFINE TIT_15_AWR      = "" (CHAR)
DEFINE PHV_01_AWR      =                    0 (NUMBER)
DEFINE PHV_02_AWR      =                   -1 (NUMBER)
DEFINE PHV_03_AWR      =                   -1 (NUMBER)
DEFINE PHV_04_AWR      =                   -1 (NUMBER)
DEFINE PHV_05_AWR      =                   -1 (NUMBER)
DEFINE PHV_06_AWR      =                   -1 (NUMBER)
DEFINE PHV_07_AWR      =                   -1 (NUMBER)
DEFINE PHV_08_AWR      =                   -1 (NUMBER)
DEFINE PHV_09_AWR      =                   -1 (NUMBER)
DEFINE PHV_10_AWR      =                   -1 (NUMBER)
DEFINE PHV_11_AWR      =                   -1 (NUMBER)
DEFINE PHV_12_AWR      =                   -1 (NUMBER)
DEFINE PHV_13_AWR      =                   -1 (NUMBER)
DEFINE PHV_14_AWR      =                   -1 (NUMBER)
DEFINE PHV_15_AWR      =                   -1 (NUMBER)
DEFINE PHV_01          =                    0 (NUMBER)
DEFINE PHV_02          =                   -1 (NUMBER)
DEFINE PHV_03          =                   -1 (NUMBER)
DEFINE PHV_04          =                   -1 (NUMBER)
DEFINE PHV_05          =                   -1 (NUMBER)
DEFINE PHV_06          =                   -1 (NUMBER)
DEFINE PHV_07          =                   -1 (NUMBER)
DEFINE PHV_08          =                   -1 (NUMBER)
DEFINE PHV_09          =                   -1 (NUMBER)
DEFINE PHV_10          =                   -1 (NUMBER)
DEFINE PHV_11          =                   -1 (NUMBER)
DEFINE PHV_12          =                   -1 (NUMBER)
DEFINE PHV_13          =                   -1 (NUMBER)
DEFINE PHV_14          =                   -1 (NUMBER)
DEFINE PHV_15          =                   -1 (NUMBER)
Parameters
FAMILY                                                                          SID                                     NAME                                    TYPE       VALUE                                             DISPLAY_VALUE                                     ISSPEC             ORDINAL              CON_ID
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
                                                                                *                                       cursor_sharing                          string     FORCE                                             FORCE                                             TRUE                     1                   4
                                                                                *                                       nls_date_format                         string     MM/DD/YYYY HH24:MI                                MM/DD/YYYY HH24:MI                                TRUE                     1                   4
                                                                                *                                       open_cursors                            integer    65535                                             65535                                             TRUE                     1                   4
                                                                                *                                       optimizer_index_caching                 integer    90                                                90                                                TRUE                     1                   4
                                                                                *                                       optimizer_index_cost_adj                integer    1                                                 1                                                 TRUE                     1                   4
                                                                                *                                       parallel_force_local                    boolean    TRUE                                              TRUE                                              TRUE                     1                   4
                                                                                *                                       sessions                                integer    3096                                              3096                                              TRUE                     1                   4
                                                                                *                                       smtp_out_server                         string     192.168.121.140:25                                192.168.121.140:25                                TRUE                     1                   4
NAME_COL_PLUS_SHOW_PARAM                                                        TYPE       VALUE_COL_PLUS_SHOW_PARAM

DBFIPS_140                                                                      boolean    FALSE
O7_DICTIONARY_ACCESSIBILITY                                                     boolean    FALSE
_always_semi_join                                                               string     CHOOSE
_and_pruning_enabled                                                            boolean    TRUE
_bct_public_dba_buffer_size                                                     big integer16777200
_enable_NUMA_support                                                            boolean    FALSE
_gby_hash_aggregation_enabled                                                   boolean    TRUE
_hash_join_enabled                                                              boolean    TRUE
_optim_peek_user_binds                                                          boolean    TRUE
_optimizer_aggr_groupby_elim                                                    boolean    FALSE
_optimizer_dsdir_usage_control                                                  integer    0
_optimizer_order_by_elimination_enabled                                         boolean    FALSE
_optimizer_skip_scan_enabled                                                    boolean    TRUE
_optimizer_sortmerge_join_enabled                                               boolean    TRUE
_parallel_adaptive_max_users                                                    integer    2
_parallel_syspls_obey_force                                                     boolean    TRUE
_serial_direct_read                                                             string     ALWAYS
_small_table_threshold                                                          integer    1001
_smm_auto_max_io_size                                                           integer    1024
_sql_plan_directive_mgmt_control                                                integer    0
_subquery_pruning_enabled                                                       boolean    TRUE
active_instance_count                                                           integer
allow_group_access_to_sga                                                       boolean    FALSE
aq_tm_processes                                                                 integer    1
archive_lag_target                                                              integer    0
asm_diskgroups                                                                  string
asm_diskstring                                                                  string
asm_power_limit                                                                 integer    1
asm_preferred_read_failure_groups                                               string
audit_file_dest                                                                 string     /u02/app/oracle/product/12.1.0/dbhome_3/rdbms/audit
audit_sys_operations                                                            boolean    TRUE
audit_syslog_level                                                              string
audit_trail                                                                     string     DB
awr_snapshot_time_offset                                                        integer    0
background_core_dump                                                            string     partial
background_dump_dest                                                            string     /u02/app/oracle/product/12.1.0/dbhome_3/rdbms/log
backup_tape_io_slaves                                                           boolean    FALSE
bitmap_merge_area_size                                                          integer    1048576
blank_trimming                                                                  boolean    FALSE
buffer_pool_keep                                                                string
buffer_pool_recycle                                                             string
cell_offload_compaction                                                         string     ADAPTIVE
cell_offload_decryption                                                         boolean    TRUE
cell_offload_parameters                                                         string
cell_offload_plan_display                                                       string     AUTO
cell_offload_processing                                                         boolean    TRUE
cell_offloadgroup_name                                                          string
circuits                                                                        integer
client_result_cache_lag                                                         big integer3000
client_result_cache_size                                                        big integer0
clonedb                                                                         boolean    FALSE
cluster_database                                                                boolean    TRUE
cluster_database_instances                                                      integer    2
cluster_interconnects                                                           string     192.168.132.26:192.168.132.27
commit_logging                                                                  string
commit_point_strength                                                           integer    1
commit_wait                                                                     string
commit_write                                                                    string
common_user_prefix                                                              string     C##
compatible                                                                      string     12.1.0.2.0
connection_brokers                                                              string     ((TYPE=DEDICATED)(BROKERS=1)), ((TYPE=EMON)(BROKERS=1))
control_file_record_keep_time                                                   integer    39
control_files                                                                   string     +DATAC1/PRD_iad3vt/CONTROLFILE/control.ctl
control_management_pack_access                                                  string     DIAGNOSTIC+TUNING
core_dump_dest                                                                  string     /u02/app/oracle/diag/rdbms/prd_iad3vt/PRD1/cdump
cpu_count                                                                       integer    16
create_bitmap_area_size                                                         integer    8388608
create_stored_outlines                                                          string
cursor_bind_capture_destination                                                 string     memory+disk
cursor_sharing                                                                  string     EXACT
cursor_space_for_time                                                           boolean    FALSE
db_16k_cache_size                                                               big integer0
db_2k_cache_size                                                                big integer0
db_32k_cache_size                                                               big integer0
db_4k_cache_size                                                                big integer0
db_8k_cache_size                                                                big integer0
db_big_table_cache_percent_target                                               string     0
db_block_buffers                                                                integer    0
db_block_checking                                                               string     OFF
db_block_checksum                                                               string     TYPICAL
db_block_size                                                                   integer    8192
db_cache_advice                                                                 string     ON
db_cache_size                                                                   big integer0
db_create_file_dest                                                             string     +DATAC1
db_create_online_log_dest_1                                                     string     +DATAC1
db_create_online_log_dest_2                                                     string
db_create_online_log_dest_3                                                     string
db_create_online_log_dest_4                                                     string
db_create_online_log_dest_5                                                     string
db_domain                                                                       string
db_file_multiblock_read_count                                                   integer    128
db_file_name_convert                                                            string     +DATAC1/PRD_PHX2XR, +DATAC1/PRD_IAD3VT
db_files                                                                        integer    1024
db_flash_cache_file                                                             string
db_flash_cache_size                                                             big integer0
db_flashback_retention_target                                                   integer    1440
db_index_compression_inheritance                                                string     NONE
db_keep_cache_size                                                              big integer0
db_lost_write_protect                                                           string     typical
db_name                                                                         string     PRD
db_performance_profile                                                          string
db_recovery_file_dest                                                           string     +RECOC1
db_recovery_file_dest_size                                                      big integer28910G
db_recycle_cache_size                                                           big integer0
db_securefile                                                                   string     PREFERRED
db_ultra_safe                                                                   string     OFF
db_unique_name                                                                  string     PRD_iad3vt
db_unrecoverable_scn_tracking                                                   boolean    TRUE
db_writer_processes                                                             integer    2
dbwr_io_slaves                                                                  integer    0
ddl_lock_timeout                                                                integer    0
deferred_segment_creation                                                       boolean    TRUE
dg_broker_config_file1                                                          string     +DATAC1/PRD_IAD3VT/DGCONFIG/dr1prd.dat
dg_broker_config_file2                                                          string     +DATAC1/PRD_IAD3VT/DGCONFIG/dr2prd.dat
dg_broker_start                                                                 boolean    FALSE
diagnostic_dest                                                                 string     /u02/app/oracle
disk_asynch_io                                                                  boolean    TRUE
dispatchers                                                                     string
distributed_lock_timeout                                                        integer    360
dml_locks                                                                       integer    27172
dnfs_batch_size                                                                 integer    4096
dst_upgrade_insert_conv                                                         boolean    TRUE
enable_ddl_logging                                                              boolean    TRUE
enable_goldengate_replication                                                   boolean    FALSE
enable_pluggable_database                                                       boolean    TRUE
encrypt_new_tablespaces                                                         string     ALWAYS
event                                                                           string
exafusion_enabled                                                               integer    0
exclude_seed_cdb_view                                                           boolean    TRUE
fal_client                                                                      string     PRDPRIM
fal_server                                                                      string     PSDSTBY
fast_start_io_target                                                            integer    0
fast_start_mttr_target                                                          integer    300
fast_start_parallel_rollback                                                    string     LOW
file_mapping                                                                    boolean    FALSE
fileio_network_adapters                                                         string
filesystemio_options                                                            string     setall
fixed_date                                                                      string
gcs_server_processes                                                            integer    2
global_context_pool_size                                                        string
global_names                                                                    boolean    TRUE
global_txn_processes                                                            integer    1
hash_area_size                                                                  integer    131072
heat_map                                                                        string     OFF
hi_shared_memory_address                                                        integer    0
hs_autoregister                                                                 boolean    TRUE
ifile                                                                           file
inmemory_clause_default                                                         string
inmemory_force                                                                  string     DEFAULT
inmemory_max_populate_servers                                                   integer    8
inmemory_query                                                                  string     ENABLE
inmemory_size                                                                   big integer1536M
inmemory_trickle_repopulate_servers_percent                                     integer    1
instance_groups                                                                 string
instance_name                                                                   string     PRD1
instance_number                                                                 integer    1
instance_type                                                                   string     RDBMS
instant_restore                                                                 boolean    FALSE
java_jit_enabled                                                                boolean    TRUE
java_max_sessionspace_size                                                      integer    0
java_pool_size                                                                  big integer0
java_restrict                                                                   string     none
java_soft_sessionspace_limit                                                    integer    0
job_queue_processes                                                             integer    1000
large_pool_size                                                                 big integer0
ldap_directory_access                                                           string     NONE
ldap_directory_sysauth                                                          string     no
license_max_sessions                                                            integer    0
license_max_users                                                               integer    0
license_sessions_warning                                                        integer    0
listener_networks                                                               string
local_listener                                                                  string      (ADDRESS=(PROTOCOL=TCP)(HOST=10.21.32.4)(PORT=1521)), (ADDRESS=(PROTOCOL=TCPS)(HOST=10.21.32.4)(PORT=2484))
lock_name_space                                                                 string
lock_sga                                                                        boolean    FALSE
log_archive_config                                                              string     DG_CONFIG=(PRD_IAD3VT,PRD_PHX2XR,CLSTD_UNIQ)
log_archive_dest                                                                string
log_archive_dest_1                                                              string     location=USE_DB_RECOVERY_FILE_DEST
log_archive_dest_10                                                             string
log_archive_dest_11                                                             string
log_archive_dest_12                                                             string
log_archive_dest_13                                                             string
log_archive_dest_14                                                             string
log_archive_dest_15                                                             string
log_archive_dest_16                                                             string
log_archive_dest_17                                                             string
log_archive_dest_18                                                             string
log_archive_dest_19                                                             string
log_archive_dest_2                                                              string     SERVICE=PSDSTBY LGWR ASYNC REGISTER VALID_FOR=(online_logfile,primary_role) REOPEN=60 DB_UNIQUE_NAME=PRD_PHX2XR
log_archive_dest_20                                                             string
log_archive_dest_21                                                             string
log_archive_dest_22                                                             string
log_archive_dest_23                                                             string
log_archive_dest_24                                                             string
log_archive_dest_25                                                             string
log_archive_dest_26                                                             string
log_archive_dest_27                                                             string
log_archive_dest_28                                                             string
log_archive_dest_29                                                             string
log_archive_dest_3                                                              string     SERVICE=CLSTD ARCH DB_UNIQUE_NAME=CLSTD_UNIQ
log_archive_dest_30                                                             string
log_archive_dest_31                                                             string
log_archive_dest_4                                                              string
log_archive_dest_5                                                              string
log_archive_dest_6                                                              string
log_archive_dest_7                                                              string
log_archive_dest_8                                                              string
log_archive_dest_9                                                              string
log_archive_dest_state_1                                                        string     enable
log_archive_dest_state_10                                                       string     enable
log_archive_dest_state_11                                                       string     enable
log_archive_dest_state_12                                                       string     enable
log_archive_dest_state_13                                                       string     enable
log_archive_dest_state_14                                                       string     enable
log_archive_dest_state_15                                                       string     enable
log_archive_dest_state_16                                                       string     enable
log_archive_dest_state_17                                                       string     enable
log_archive_dest_state_18                                                       string     enable
log_archive_dest_state_19                                                       string     enable
log_archive_dest_state_2                                                        string     ENABLE
log_archive_dest_state_20                                                       string     enable
log_archive_dest_state_21                                                       string     enable
log_archive_dest_state_22                                                       string     enable
log_archive_dest_state_23                                                       string     enable
log_archive_dest_state_24                                                       string     enable
log_archive_dest_state_25                                                       string     enable
log_archive_dest_state_26                                                       string     enable
log_archive_dest_state_27                                                       string     enable
log_archive_dest_state_28                                                       string     enable
log_archive_dest_state_29                                                       string     enable
log_archive_dest_state_3                                                        string     enable
log_archive_dest_state_30                                                       string     enable
log_archive_dest_state_31                                                       string     enable
log_archive_dest_state_4                                                        string     enable
log_archive_dest_state_5                                                        string     enable
log_archive_dest_state_6                                                        string     enable
log_archive_dest_state_7                                                        string     enable
log_archive_dest_state_8                                                        string     enable
log_archive_dest_state_9                                                        string     enable
log_archive_duplex_dest                                                         string
log_archive_format                                                              string     %t_%s_%r.dbf
log_archive_max_processes                                                       integer    4
log_archive_min_succeed_dest                                                    integer    1
log_archive_start                                                               boolean    TRUE
log_archive_trace                                                               integer    8191
log_buffer                                                                      big integer64M
log_checkpoint_interval                                                         integer    0
log_checkpoint_timeout                                                          integer    1800
log_checkpoints_to_alert                                                        boolean    FALSE
log_file_name_convert                                                           string     +DATAC1/PRD_PHX2XR, +DATAC1/PRD_IAD3VT
max_dispatchers                                                                 integer
max_dump_file_size                                                              string     1G
max_enabled_roles                                                               integer    150
max_shared_servers                                                              integer
max_string_size                                                                 string     STANDARD
memory_max_target                                                               big integer0
memory_target                                                                   big integer0
nls_calendar                                                                    string
nls_comp                                                                        string     BINARY
nls_currency                                                                    string
nls_date_format                                                                 string     YYYY-MM-DD/HH24:MI:SS
nls_date_language                                                               string
nls_dual_currency                                                               string
nls_iso_currency                                                                string
nls_language                                                                    string     AMERICAN
nls_length_semantics                                                            string     BYTE
nls_nchar_conv_excp                                                             string     FALSE
nls_numeric_characters                                                          string     .,
nls_sort                                                                        string     BINARY
nls_territory                                                                   string     AMERICA
nls_time_format                                                                 string
nls_time_tz_format                                                              string
nls_timestamp_format                                                            string     YYYY-MM-DD/HH24:MI:SS.FF
nls_timestamp_tz_format                                                         string     YYYY-MM-DD/HH24:MI:SS.FF TZH:TZM
noncdb_compatible                                                               boolean    FALSE
object_cache_max_size_percent                                                   integer    10
object_cache_optimal_size                                                       integer    102400
olap_page_pool_size                                                             big integer0
open_cursors                                                                    integer    65535
open_links                                                                      integer    4
open_links_per_instance                                                         integer    4
optimizer_adaptive_features                                                     boolean    TRUE
optimizer_adaptive_plans                                                        boolean    TRUE
optimizer_adaptive_reporting_only                                               boolean    FALSE
optimizer_adaptive_statistics                                                   boolean    TRUE
optimizer_capture_sql_plan_baselines                                            boolean    FALSE
optimizer_dynamic_sampling                                                      integer    0
optimizer_features_enable                                                       string     12.1.0.2
optimizer_index_caching                                                         integer    0
optimizer_index_cost_adj                                                        integer    100
optimizer_inmemory_aware                                                        boolean    TRUE
optimizer_mode                                                                  string     ALL_ROWS
optimizer_secure_view_merging                                                   boolean    TRUE
optimizer_use_invisible_indexes                                                 boolean    FALSE
optimizer_use_pending_statistics                                                boolean    FALSE
optimizer_use_sql_plan_baselines                                                boolean    TRUE
os_authent_prefix                                                               string
os_roles                                                                        boolean    FALSE
parallel_adaptive_multi_user                                                    boolean    FALSE
parallel_automatic_tuning                                                       boolean    FALSE
parallel_degree_level                                                           integer    100
parallel_degree_limit                                                           string     CPU
parallel_degree_policy                                                          string     MANUAL
parallel_execution_message_size                                                 integer    16384
parallel_force_local                                                            boolean    TRUE
parallel_instance_group                                                         string
parallel_io_cap_enabled                                                         boolean    FALSE
parallel_max_servers                                                            integer    160
parallel_min_percent                                                            integer    0
parallel_min_servers                                                            integer    32
parallel_min_time_threshold                                                     string     AUTO
parallel_server                                                                 boolean    TRUE
parallel_server_instances                                                       integer    2
parallel_servers_target                                                         integer    64
parallel_threads_per_cpu                                                        integer    1
pdb_file_name_convert                                                           string
pdb_lockdown                                                                    string
pdb_os_credential                                                               string
permit_92_wrap_format                                                           boolean    TRUE
pga_aggregate_limit                                                             big integer140G
pga_aggregate_target                                                            big integer70G
plscope_settings                                                                string     IDENTIFIERS:NONE
plsql_ccflags                                                                   string
plsql_code_type                                                                 string     INTERPRETED
plsql_debug                                                                     boolean    FALSE
plsql_optimize_level                                                            integer    2
plsql_v2_compatibility                                                          boolean    FALSE
plsql_warnings                                                                  string     DISABLE:ALL
pre_page_sga                                                                    boolean    FALSE
processes                                                                       integer    4096
processor_group_name                                                            string
query_rewrite_enabled                                                           string     TRUE
query_rewrite_integrity                                                         string     enforced
rdbms_server_dn                                                                 string
read_only_open_delayed                                                          boolean    FALSE
recovery_parallelism                                                            integer    0
recyclebin                                                                      string     on
redo_transport_user                                                             string
remote_dependencies_mode                                                        string     TIMESTAMP
remote_listener                                                                 string     aupp-hroradb-f9exx-scan.hlthedgexap.pvthlthedgeprod.oraclevcn.com:1521
remote_login_passwordfile                                                       string     EXCLUSIVE
remote_os_authent                                                               boolean    FALSE
remote_os_roles                                                                 boolean    FALSE
replication_dependency_tracking                                                 boolean    TRUE
resource_limit                                                                  boolean    TRUE
resource_manager_cpu_allocation                                                 integer    16
resource_manager_plan                                                           string
result_cache_max_result                                                         integer    5
result_cache_max_size                                                           big integer1G
result_cache_mode                                                               string     MANUAL
result_cache_remote_expiration                                                  integer    0
resumable_timeout                                                               integer    0
rollback_segments                                                               string
sec_case_sensitive_logon                                                        boolean    TRUE
sec_max_failed_login_attempts                                                   integer    3
sec_protocol_error_further_action                                               string     DROP,3
sec_protocol_error_trace_action                                                 string     TRACE
sec_return_server_release_banner                                                boolean    FALSE
serial_reuse                                                                    string     disable
service_names                                                                   string     PRD_iad3vt
session_cached_cursors                                                          integer    50
session_max_open_files                                                          integer    10
sessions                                                                        integer    3096
sga_max_size                                                                    big integer200G
sga_target                                                                      big integer200G
shadow_core_dump                                                                string     PARTIAL
shared_memory_address                                                           integer    0
shared_pool_reserved_size                                                       big integer1G
shared_pool_size                                                                big integer0
shared_server_sessions                                                          integer
shared_servers                                                                  integer    0
skip_unusable_indexes                                                           boolean    TRUE
smtp_out_server                                                                 string     192.168.121.140:25
sort_area_retained_size                                                         integer    0
sort_area_size                                                                  integer    65536
spatial_vector_acceleration                                                     boolean    FALSE
spfile                                                                          string     +DATAC1/PRD_iad3vt/spfileprd.ora
sql92_security                                                                  boolean    TRUE
sql_trace                                                                       boolean    FALSE
sqltune_category                                                                string     DEFAULT
standby_archive_dest                                                            string     ?/dbs/arch
standby_file_management                                                         string     AUTO
standby_pdb_source_file_dblink                                                  string
standby_pdb_source_file_directory                                               string
star_transformation_enabled                                                     string     FALSE
statistics_level                                                                string     TYPICAL
streams_pool_size                                                               big integer0
tape_asynch_io                                                                  boolean    TRUE
temp_undo_enabled                                                               boolean    FALSE
thread                                                                          integer    1
threaded_execution                                                              boolean    FALSE
timed_os_statistics                                                             integer    0
timed_statistics                                                                boolean    TRUE
trace_enabled                                                                   boolean    TRUE
tracefile_identifier                                                            string     sqld360_323688_7uxfahgurqu0d
transactions                                                                    integer    6793
transactions_per_rollback_segment                                               integer    5
undo_management                                                                 string     AUTO
undo_retention                                                                  integer    900
undo_tablespace                                                                 string     UNDOTBS1
unified_audit_sga_queue_size                                                    integer    1048576
use_dedicated_broker                                                            boolean    FALSE
use_indirect_data_buffers                                                       boolean    FALSE
use_large_pages                                                                 string     ONLY
user_dump_dest                                                                  string     /u02/app/oracle/product/12.1.0/dbhome_3/rdbms/log
utl_file_dir                                                                    string
workarea_size_policy                                                            string     AUTO
xml_db_events                                                                   string     enable

       ELAPSED_HOURS
--------------------
               6.161

TOOL_EXEC_HOURS
---------------------------------------------------------------------
Tool Execution Hours so far: 6.161
end log
