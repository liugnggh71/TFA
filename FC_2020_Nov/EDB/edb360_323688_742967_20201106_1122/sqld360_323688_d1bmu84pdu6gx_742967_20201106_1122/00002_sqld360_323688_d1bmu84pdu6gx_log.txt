begin log


DEFINE _DATE           = "2020-11-06/16:52:09" (CHAR)
DEFINE _CONNECT_IDENTIFIER = "PRD1" (CHAR)
DEFINE _USER           = "SYS" (CHAR)
DEFINE _PRIVILEGE      = "AS SYSDBA" (CHAR)
DEFINE _SQLPLUS_RELEASE = "1201000200" (CHAR)
DEFINE _EDITOR         = "ed" (CHAR)
DEFINE _O_VERSION      = "Oracle Database 12c EE Extreme Perf Release 12.1.0.2.0 - 64bit Production
With the Partitioning, Real Application Clusters, Automatic Storage Management, Oracle Label Security,
OLAP, Advanced Analytics and Real Application Testing options" (CHAR)
DEFINE _O_RELEASE      = "1201000200" (CHAR)
DEFINE ASH_VALIDATION  = "" (CHAR)
DEFINE V_DOLLAR        = "V$" (CHAR)
DEFINE MY_SID          = "5432" (CHAR)
DEFINE LICENSE_PACK    = "T" (CHAR)
DEFINE DIAGNOSTICS_PACK = "Y" (CHAR)
DEFINE SKIP_DIAGNOSTICS = "" (CHAR)
DEFINE TUNING_PACK     = "Y" (CHAR)
DEFINE SKIP_TUNING     = "" (CHAR)
DEFINE CUSTOM_CONFIG_FILENAME = "null" (CHAR)
DEFINE EDB360_ESTIMATED_HRS = "1" (CHAR)
DEFINE ASH_DATE_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS" (CHAR)
DEFINE MY_SPOOL_FILENAME = "awr_ash_pre_check_PRD.txt" (CHAR)
DEFINE ASH_EDB360_DAYS = "31" (CHAR)
DEFINE ASH_FTS_ON_EDB360 = "250" (CHAR)
DEFINE ASH_DATABASE_BLOCK_SIZE = "8192" (CHAR)
DEFINE NUMBER_OF_INSTANCES =                    2 (NUMBER)
DEFINE THIS_DBID       =           2109323688 (NUMBER)
DEFINE ASH_MIN_SNAP_ID = "0" (CHAR)
DEFINE ASH_MAX_SNAP_ID = "0" (CHAR)
DEFINE LAST_PURGE_TIME = "2020-09-18T00:28:18" (CHAR)
DEFINE DAYS_SINCE_PURGE = "49.5" (CHAR)
DEFINE ASH_LAST_ANALYZED = "2020-09-19T06:58:17" (CHAR)
DEFINE ASH_CBO_STATS_AGE_DAYS = "48.2" (CHAR)
DEFINE PERCENT_OF_INSERTS = "" (CHAR)
DEFINE ASH_SIZE_GB     = "2.6 GBs" (CHAR)
DEFINE LAST_DDL_TIME   = "2020-09-18T21:40:39" (CHAR)
DEFINE SEG_LAST_DDL_TIME = "2020-09-18T21:40:39" (CHAR)
DEFINE LAST_DDL_AGE_DAYS = "48.6" (CHAR)
DEFINE ASH_FTS_SECONDS = "122" (CHAR)
DEFINE ASH_DAYS_OF_HISTORY = "92.8" (CHAR)
DEFINE ASH_MED_SAMPLE_DATE = "2020-07-08T03:20:17" (CHAR)
DEFINE ASH_MEDIAN_AGE_DAYS = "121.3" (CHAR)
DEFINE IGNORE_THIS     =                    0 (NUMBER)
DEFINE EDB360_FTS_SECONDS = "1" (CHAR)
DEFINE _RC             = "10" (CHAR)
DEFINE EDB360_SECTIONS = "" (CHAR)
DEFINE SQL_TRACE_LEVEL = "1" (CHAR)
DEFINE EDB360_CONF_DAYS = "31" (CHAR)
DEFINE EDB360_CONF_DATE_FROM = "YYYY-MM-DD" (CHAR)
DEFINE EDB360_CONF_DATE_TO = "YYYY-MM-DD" (CHAR)
DEFINE EDB360_CONF_WORK_TIME_FROM = "0730" (CHAR)
DEFINE EDB360_CONF_WORK_TIME_TO = "1930" (CHAR)
DEFINE EDB360_CONF_WORK_DAY_FROM = "2" (CHAR)
DEFINE EDB360_CONF_WORK_DAY_TO = "6" (CHAR)
DEFINE EDB360_CONF_MAX_HOURS = "24" (CHAR)
DEFINE EDB360_CHART_WIDTH = "809px" (CHAR)
DEFINE EDB360_CONF_INCL_DBNAME_INDEX = "N" (CHAR)
DEFINE EDB360_CONF_INCL_DBNAME_FILE = "N" (CHAR)
DEFINE EDB360_CONF_INCL_ASH_MEM = "N" (CHAR)
DEFINE EDB360_CONF_INCL_SQL_MON = "N" (CHAR)
DEFINE EDB360_CONF_INCL_STAT_MEM = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_PX_MEM = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_SEGMENTS = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_SOURCE = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_METADATA = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_EADAM = "Y" (CHAR)
DEFINE EDB360_EADAM_ROW_LIMIT = "10000000" (CHAR)
DEFINE TOOL_REPO_USER  = "" (CHAR)
DEFINE EDB360_OUTPUT_DIRECTORY = "" (CHAR)
DEFINE EDB360_MOVE_DIRECTORY = "" (CHAR)
DEFINE SKIP_ESP_AND_ESCP = "" (CHAR)
DEFINE EDB360_CONFIG_DBID = "" (CHAR)
DEFINE EDB360_HOST_NAME_SEPARATOR = "" (CHAR)
DEFINE EDB360_HOST_NAME_POSITION = "" (CHAR)
DEFINE EDB360_HOST_NAME_OCCURRENCE = "" (CHAR)
DEFINE EDB360_CONF_INCL_HTML = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_XML = "N" (CHAR)
DEFINE EDB360_CONF_INCL_TEXT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_CSV = "N" (CHAR)
DEFINE EDB360_CONF_INCL_LINE = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_PIE = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_BAR = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_PERFHUB = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_AWR_RPT = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_AWR_DIFF_RPT = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_AWR_RANGE_RPT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_ADDM_RPT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_ASH_RPT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_ASH_ANALY_RPT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_TKPROF = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_PLOT_AWR = "N" (CHAR)
DEFINE EDB360_CONF_SERIES_SELECTION = "N" (CHAR)
DEFINE EDB360_MAX_WORK_DAYS_PEAKS = "3" (CHAR)
DEFINE EDB360_MIN_WORK_DAYS_PEAKS = "1" (CHAR)
DEFINE EDB360_MAX_HISTORY_PEAKS = "3" (CHAR)
DEFINE EDB360_MED_HISTORY = "1" (CHAR)
DEFINE EDB360_MAX_5WD_PEAKS = "3" (CHAR)
DEFINE EDB360_MIN_5WD_PEAKS = "1" (CHAR)
DEFINE EDB360_MAX_7D_PEAKS = "3" (CHAR)
DEFINE EDB360_MED_7D   = "1" (CHAR)
DEFINE EDB360_CONF_TOP_SQL = "16" (CHAR)
DEFINE EDB360_CONF_TOP_CUR = "2" (CHAR)
DEFINE EDB360_CONF_TOP_SIG = "2" (CHAR)
DEFINE EDB360_CONF_PLANX_TOP = "16" (CHAR)
DEFINE EDB360_CONF_SQLMON_TOP = "0" (CHAR)
DEFINE EDB360_CONF_SQLASH_TOP = "0" (CHAR)
DEFINE EDB360_CONF_SQLHC_TOP = "0" (CHAR)
DEFINE EDB360_CONF_SQLD360_TOP = "8" (CHAR)
DEFINE EDB360_CONF_SQLD360_TOP_TC = "0" (CHAR)
DEFINE TOOL_PREFIX_1   = "dba_hist#" (CHAR)
DEFINE TOOL_PREFIX_2   = "dba#" (CHAR)
DEFINE TOOL_PREFIX_3   = "gv#" (CHAR)
DEFINE TOOL_PREFIX_4   = "v#" (CHAR)
DEFINE EDB360_CONF_TOOL_PAGE = "<a href="http://carlos-sierra.net/edb360-an-oracle-database-360-degree-view/" target="_blank">" (CHAR)
DEFINE EDB360_CONF_ALL_PAGES_ICON = "<a href="http://carlos-sierra.net/edb360-an-oracle-database-360-degree-view/" target="_blank"><img src="database.jpg" alt="eDB360" height="33" width="52" /></a>" (CHAR)
DEFINE EDB360_CONF_ALL_PAGES_LOGO = "" (CHAR)
DEFINE EDB360_CONF_GOOGLE_CHARTS = "<script type="text/javascript" src="https://www.google.com/jsapi"></script>" (CHAR)
DEFINE EDB360_VYYNN    = "v192" (CHAR)
DEFINE EDB360_VRSN     = "v192 (2019-03-23)" (CHAR)
DEFINE EDB360_COPYRIGHT = " (c) 2019" (CHAR)
DEFINE EDB360_BYPASS   = "" (CHAR)
DEFINE AWR_HIST_PREFIX = "DBA_HIST_" (CHAR)
DEFINE AWR_OBJECT_PREFIX = "dba_hist_" (CHAR)
DEFINE DVA_VIEW_PREFIX = "DBA_" (CHAR)
DEFINE DVA_OBJECT_PREFIX = "dba_" (CHAR)
DEFINE GV_VIEW_PREFIX  = "GV$" (CHAR)
DEFINE GV_OBJECT_PREFIX = "gv$" (CHAR)
DEFINE V_VIEW_PREFIX   = "V$" (CHAR)
DEFINE V_OBJECT_PREFIX = "v$" (CHAR)
DEFINE EDB360_DBID     = "2109323688" (CHAR)
DEFINE HISTORY_DAYS    = "31" (CHAR)
DEFINE EDB360_DATE_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS" (CHAR)
DEFINE EDB360_TIMESTAMP_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS.FF" (CHAR)
DEFINE EDB360_TIMESTAMP_TZ_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS.FFTZH:TZM" (CHAR)
DEFINE EDB360_DATE_FROM = "2020-10-06T11:22:16" (CHAR)
DEFINE EDB360_DATE_TO  = "2020-11-06T11:22:16" (CHAR)
DEFINE HIST_WORK_DAYS  = "23" (CHAR)
DEFINE SKIP_EXTRAS     = "" (CHAR)
DEFINE EDB360_0G       = "edb360_0g_" (CHAR)
DEFINE EDB360_1A       = "edb360_1a_" (CHAR)
DEFINE EDB360_1B       = "edb360_1b_" (CHAR)
DEFINE EDB360_1C       = "edb360_1c_" (CHAR)
DEFINE EDB360_1D       = "edb360_1d_" (CHAR)
DEFINE EDB360_1E       = "edb360_1e_" (CHAR)
DEFINE EDB360_1F       = "edb360_1f_" (CHAR)
DEFINE EDB360_1G       = "edb360_1g_" (CHAR)
DEFINE EDB360_2A       = "edb360_2a_" (CHAR)
DEFINE EDB360_2B       = "edb360_2b_" (CHAR)
DEFINE EDB360_2C       = "edb360_2c_" (CHAR)
DEFINE EDB360_2D       = "edb360_2d_" (CHAR)
DEFINE EDB360_2E       = "edb360_2e_" (CHAR)
DEFINE EDB360_3A       = "edb360_3a_" (CHAR)
DEFINE EDB360_3B       = "edb360_3b_" (CHAR)
DEFINE EDB360_3C       = "edb360_3c_" (CHAR)
DEFINE EDB360_3D       = "edb360_3d_" (CHAR)
DEFINE EDB360_3E       = "edb360_3e_" (CHAR)
DEFINE EDB360_3F       = "edb360_3f_" (CHAR)
DEFINE EDB360_3G       = "edb360_3g_" (CHAR)
DEFINE EDB360_3H       = "edb360_3h_" (CHAR)
DEFINE EDB360_3I       = "edb360_3i_" (CHAR)
DEFINE EDB360_3J       = "edb360_3j_" (CHAR)
DEFINE EDB360_4A       = "edb360_4a_" (CHAR)
DEFINE EDB360_4B       = "edb360_4b_" (CHAR)
DEFINE EDB360_4C       = "edb360_4c_" (CHAR)
DEFINE EDB360_4D       = "edb360_4d_" (CHAR)
DEFINE EDB360_4E       = "edb360_4e_" (CHAR)
DEFINE EDB360_4F       = "edb360_4f_" (CHAR)
DEFINE EDB360_4G       = "edb360_4g_" (CHAR)
DEFINE EDB360_4H       = "edb360_4h_" (CHAR)
DEFINE EDB360_4I       = "edb360_4i_" (CHAR)
DEFINE EDB360_4J       = "edb360_4j_" (CHAR)
DEFINE EDB360_4K       = "edb360_4k_" (CHAR)
DEFINE EDB360_4L       = "edb360_4l_" (CHAR)
DEFINE EDB360_5A       = "edb360_5a_" (CHAR)
DEFINE EDB360_5B       = "edb360_5b_" (CHAR)
DEFINE EDB360_5C       = "edb360_5c_" (CHAR)
DEFINE EDB360_5D       = "edb360_5d_" (CHAR)
DEFINE EDB360_5E       = "edb360_5e_" (CHAR)
DEFINE EDB360_5F       = "edb360_5f_" (CHAR)
DEFINE EDB360_5G       = "edb360_5g_" (CHAR)
DEFINE EDB360_6A       = "edb360_6a_" (CHAR)
DEFINE EDB360_6B       = "edb360_6b_" (CHAR)
DEFINE EDB360_6C       = "edb360_6c_" (CHAR)
DEFINE EDB360_6D       = "edb360_6d_" (CHAR)
DEFINE EDB360_6E       = "edb360_6e_" (CHAR)
DEFINE EDB360_6F       = "edb360_6f_" (CHAR)
DEFINE EDB360_6G       = "edb360_6g_" (CHAR)
DEFINE EDB360_6H       = "edb360_6h_" (CHAR)
DEFINE EDB360_6I       = "edb360_6i_" (CHAR)
DEFINE EDB360_6J       = "edb360_6j_" (CHAR)
DEFINE EDB360_6K       = "edb360_6k_" (CHAR)
DEFINE EDB360_6L       = "edb360_6l_" (CHAR)
DEFINE EDB360_6M       = "edb360_6m_" (CHAR)
DEFINE EDB360_6N       = "edb360_6n_" (CHAR)
DEFINE EDB360_7A       = "edb360_7a_" (CHAR)
DEFINE EDB360_7B       = "edb360_7b_" (CHAR)
DEFINE EDB360_7C       = "edb360_7c_" (CHAR)
DEFINE EDB360_PREFIX   = "edb360" (CHAR)
DEFINE ECR_COLLECTION_KEY = "PRD1219183590" (CHAR)
DEFINE SKIP_SCRIPT     = "sql/edb360_0f_skip_script.sql " (CHAR)
DEFINE EDB360_CON_ID   = "4" (CHAR)
DEFINE EDB360_PDB_NAME = "FRSTPROD" (CHAR)
DEFINE EDB360_DBMOD    = "323688" (CHAR)
DEFINE CONNECT_INSTANCE_NUMBER = "1" (CHAR)
DEFINE DATABASE_NAME_SHORT = "prd" (CHAR)
DEFINE HOST_NAME_SHORT = "aupp-hroradb-f9exx1" (CHAR)
DEFINE HOST_NAME_SUFFIX = "" (CHAR)
DEFINE ESP_HOST_NAME_SHORT = "aupp-hroradb-f9exx1" (CHAR)
DEFINE HOST_HASH       = "742967" (CHAR)
DEFINE ESP_COLLECTION_YYYYMMDD = "20201106" (CHAR)
DEFINE MAIN_TABLE      = "" (CHAR)
DEFINE TITLE           = "" (CHAR)
DEFINE TITLE_NO_SPACES = "" (CHAR)
DEFINE TITLE_SUFFIX    = "" (CHAR)
DEFINE EDB360_FILE_TIME = "20201106_1122" (CHAR)
DEFINE COMMON_EDB360_PREFIX = "edb360_323688" (CHAR)
DEFINE EDB360_MAIN_REPORT = "00001_edb360_323688_index" (CHAR)
DEFINE EDB360_LOG      = "00002_edb360_323688_log" (CHAR)
DEFINE EDB360_LOG2     = "00003_edb360_323688_log2" (CHAR)
DEFINE EDB360_LOG3     = "00004_edb360_323688_log3" (CHAR)
DEFINE EDB360_TKPROF   = "00005_edb360_323688_tkprof" (CHAR)
DEFINE EDB360_MAIN_FILENAME = "edb360_323688_742967" (CHAR)
DEFINE EDB360_ZIP_FILENAME = "edb360_323688_742967_20201106_1122" (CHAR)
DEFINE EDB360_TRACEFILE_IDENTIFIER = "edb360_323688" (CHAR)
DEFINE EDB360_TAR_FILENAME = "00008_edb360_323688_742967_20201106_1122" (CHAR)
DEFINE EDB360_MV_HOST_COMMAND = "" (CHAR)
DEFINE DB_VERS_OFE     = "12.1.0.2" (CHAR)
DEFINE SKIP_AWR        = "" (CHAR)
DEFINE SKIP_STATSPACK  = "--skip--" (CHAR)
DEFINE ESP_DBNAME_SHORT = "prd" (CHAR)
DEFINE ESCP_MAX_DAYS   = "365" (CHAR)
DEFINE ESCP_DATE_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS" (CHAR)
DEFINE ESCP_HOST_NAME_SHORT = "aupp-hroradb-f9exx1" (CHAR)
DEFINE ESCP_DBNAME_SHORT = "prd" (CHAR)
DEFINE ESCP_COLLECTION_YYYYMMDD_HHMI = "20201106_1122" (CHAR)
DEFINE ESCP_COLLECTION_DAYS = "8" (CHAR)
DEFINE ESCP_THIS_DBID  = "2109323688" (CHAR)
DEFINE ESCP_THIS_INST_NUM = "1" (CHAR)
DEFINE ESCP_MIN_SNAP_ID = "4578" (CHAR)
DEFINE MAX_DAYS        = "365" (CHAR)
DEFINE INCLUDE_IC      = "Y" (CHAR)
DEFINE INCLUDE_NETW    = "Y" (CHAR)
DEFINE ESP_COLLECTION_YYYYMMDD_HHMI = "20201106_1128" (CHAR)
DEFINE COLLECTION_DAYS = "8" (CHAR)
DEFINE SKIP_ON_10G     = "" (CHAR)
DEFINE ECR_SQ_FACT_HINTS = "MATERIALIZE NO_MERGE" (CHAR)
DEFINE ECR_DATE_FORMAT = "YYYY-MM-DD/HH24:MI:SS" (CHAR)
DEFINE ECR_DBID        = "2109323688" (CHAR)
DEFINE ECR_INSTANCE_NUMBER = "1" (CHAR)
DEFINE ECR_MIN_SNAP_ID = "4578" (CHAR)
DEFINE ECR_COLLECTION_HOST = "aupp-hroradb-f9exx1" (CHAR)
DEFINE USE_ON_10G      = "--" (CHAR)
DEFINE DB_VERSION      = "12.1.0.2.0" (CHAR)
DEFINE SKIP_10G_COLUMN = "" (CHAR)
DEFINE SKIP_10G_SCRIPT = "" (CHAR)
DEFINE SKIP_11G_COLUMN = "" (CHAR)
DEFINE SKIP_11G_SCRIPT = "" (CHAR)
DEFINE SKIP_11R1_COLUMN = "" (CHAR)
DEFINE SKIP_11R1_SCRIPT = "" (CHAR)
DEFINE SKIP_NON_REPO_COLUMN = "" (CHAR)
DEFINE SKIP_NON_REPO_SCRIPT = "" (CHAR)
DEFINE SKIP_12C_COLUMN = " -- skip 12c " (CHAR)
DEFINE SKIP_12C_SCRIPT = " echo skip 12c " (CHAR)
DEFINE SKIP_12R2_COLUMN = "" (CHAR)
DEFINE SKIP_12R2_SCRIPT = "" (CHAR)
DEFINE SKIP_18C_COLUMN = "" (CHAR)
DEFINE SKIP_18C_SCRIPT = "" (CHAR)
DEFINE SKIP_19C_COLUMN = "" (CHAR)
DEFINE SKIP_19C_SCRIPT = "" (CHAR)
DEFINE AVG_CPU_COUNT   =                   16 (NUMBER)
DEFINE SUM_CPU_COUNT   =                   32 (NUMBER)
DEFINE AVG_CORE_COUNT  = "16" (CHAR)
DEFINE AVG_THREAD_COUNT = "16" (CHAR)
DEFINE CPU_LOAD_THRESHOLD =                   32 (NUMBER)
DEFINE HOSTS_COUNT     = "2" (CHAR)
DEFINE CORES_THREADS_HOSTS = "cores:16(avg) threads:16(avg) hosts:2(avg)" (CHAR)
DEFINE DATABASE_BLOCK_SIZE = "8192" (CHAR)
DEFINE TOOL_SYSDATE    = "20201106165209" (CHAR)
DEFINE BETWEEN_DATES   = ", between 2020-10-06T16:52:09 and 2020-11-06T16:52:09" (CHAR)
DEFINE MINIMUM_SNAP_ID = "3484" (CHAR)
DEFINE MAXIMUM_SNAP_ID = "4973" (CHAR)
DEFINE INST1_PRESENT   = "1" (CHAR)
DEFINE INST2_PRESENT   = "2" (CHAR)
DEFINE INST3_PRESENT   = "" (CHAR)
DEFINE INST4_PRESENT   = "" (CHAR)
DEFINE INST5_PRESENT   = "" (CHAR)
DEFINE INST6_PRESENT   = "" (CHAR)
DEFINE INST7_PRESENT   = "" (CHAR)
DEFINE INST8_PRESENT   = "" (CHAR)
DEFINE IS_SINGLE_INSTANCE = "" (CHAR)
DEFINE SKIP_INST1      = "" (CHAR)
DEFINE SKIP_INST2      = "" (CHAR)
DEFINE SKIP_INST3      = "-- skip inst3" (CHAR)
DEFINE SKIP_INST4      = "-- skip inst4" (CHAR)
DEFINE SKIP_INST5      = "-- skip inst5" (CHAR)
DEFINE SKIP_INST6      = "-- skip inst6" (CHAR)
DEFINE SKIP_INST7      = "-- skip inst7" (CHAR)
DEFINE SKIP_INST8      = "-- skip inst8" (CHAR)
DEFINE CHART_SETUP_DRIVER = "99800_edb360_323688_chart_setup_driver1.sql" (CHAR)
DEFINE EDB360_EADAM_SNAPS = "-666, 4925, 4869, 4821, 4887, 4839, 4791, 3948, 3900, 3852, 3996, 3804, 3756" (CHAR)
DEFINE EBS_RELEASE     = "" (CHAR)
DEFINE EBS_SYSTEM_NAME = "" (CHAR)
DEFINE SIEBEL_SCHEMA   = "" (CHAR)
DEFINE SIEBEL_APP_VER  = "" (CHAR)
DEFINE PSFT_SCHEMA     = "" (CHAR)
DEFINE PSFT_TOOLS_REL  = "" (CHAR)
DEFINE EDB360_SKIP_HTML = "" (CHAR)
DEFINE EDB360_SKIP_XML = " echo skip xml " (CHAR)
DEFINE EDB360_SKIP_TEXT = " echo skip text " (CHAR)
DEFINE EDB360_SKIP_CSV = " echo skip csv " (CHAR)
DEFINE EDB360_SKIP_LINE = "" (CHAR)
DEFINE EDB360_SKIP_PIE = "" (CHAR)
DEFINE EDB360_SKIP_BAR = "" (CHAR)
DEFINE EDB360_SKIP_METADATA = "" (CHAR)
DEFINE EDB360_SKIP_ASH_MEM = " echo skip ash mem " (CHAR)
DEFINE EDB360_SKIP_SQL_MON = " echo skip sql mon " (CHAR)
DEFINE EDB360_SKIP_STAT_MEM = "" (CHAR)
DEFINE EDB360_SKIP_PX_MEM = "" (CHAR)
DEFINE TOP_LEVEL_HINTS = "NO_MERGE" (CHAR)
DEFINE SQ_FACT_HINTS   = "MATERIALIZE NO_MERGE" (CHAR)
DEFINE DS_HINT         = "DYNAMIC_SAMPLING(4)" (CHAR)
DEFINE ASH_HINTS1      = " FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt) " (CHAR)
DEFINE ASH_HINTS2      = " FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt) " (CHAR)
DEFINE ASH_HINTS3      = " USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt) " (CHAR)
DEFINE DEF_MAX_ROWS    = "50000" (CHAR)
DEFINE MAX_ROWS        = "5e4" (CHAR)
DEFINE EXCLUSION_LIST  = "('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','ORDSYS','OUTLN','OWBSYS')" (CHAR)
DEFINE EXCLUSION_LIST2 = "('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')" (CHAR)
DEFINE SKIP_HTML       = "" (CHAR)
DEFINE SKIP_TEXT       = "" (CHAR)
DEFINE SKIP_CSV        = "" (CHAR)
DEFINE SKIP_LCH        = "Y" (CHAR)
DEFINE SKIP_LCH2       = "--skip--" (CHAR)
DEFINE SKIP_PCH        = "Y" (CHAR)
DEFINE SKIP_BCH        = "Y" (CHAR)
DEFINE SKIP_ALL        = "" (CHAR)
DEFINE ABSTRACT        = "" (CHAR)
DEFINE ABSTRACT2       = "" (CHAR)
DEFINE FOOT            = "" (CHAR)
DEFINE ABSTRACT_UOM    = "Memory is accounted as power of two (binary) while storage and network traffic as power of ten (decimal). <br />" (CHAR)
DEFINE CHARTYPE        = "" (CHAR)
DEFINE STACKED         = "" (CHAR)
DEFINE HAXIS           = "d1bmu84pdu6gx 12.1.0.2.0 cores:16(avg) threads:16(avg) hosts:2(avg)" (CHAR)
DEFINE VAXIS           = "" (CHAR)
DEFINE VBASELINE       = "" (CHAR)
DEFINE BAR_HEIGHT      = "45%" (CHAR)
DEFINE TIT_01          = "" (CHAR)
DEFINE TIT_02          = "" (CHAR)
DEFINE TIT_03          = "" (CHAR)
DEFINE TIT_04          = "" (CHAR)
DEFINE TIT_05          = "" (CHAR)
DEFINE TIT_06          = "" (CHAR)
DEFINE TIT_07          = "" (CHAR)
DEFINE TIT_08          = "" (CHAR)
DEFINE TIT_09          = "" (CHAR)
DEFINE TIT_10          = "" (CHAR)
DEFINE TIT_11          = "" (CHAR)
DEFINE TIT_12          = "" (CHAR)
DEFINE TIT_13          = "" (CHAR)
DEFINE TIT_14          = "" (CHAR)
DEFINE TIT_15          = "" (CHAR)
DEFINE CONT_01         = "-1" (CHAR)
DEFINE CONT_02         =                   -1 (NUMBER)
DEFINE CONT_03         =                   -1 (NUMBER)
DEFINE CONT_04         =                   -1 (NUMBER)
DEFINE CONT_05         =                   -1 (NUMBER)
DEFINE CONT_06         =                   -1 (NUMBER)
DEFINE CONT_07         =                   -1 (NUMBER)
DEFINE CONT_08         =                   -1 (NUMBER)
DEFINE CONT_09         =                   -1 (NUMBER)
DEFINE CONT_10         =                   -1 (NUMBER)
DEFINE CONT_11         =                   -1 (NUMBER)
DEFINE CONT_12         =                   -1 (NUMBER)
DEFINE CONT_13         =                   -1 (NUMBER)
DEFINE CONT_14         =                   -1 (NUMBER)
DEFINE CONT_15         =                   -1 (NUMBER)
DEFINE WAIT_CLASS_01   = "Application" (CHAR)
DEFINE EVENT_NAME_01   = "enq: TM - contention" (CHAR)
DEFINE WAIT_CLASS_02   = "User I/O" (CHAR)
DEFINE EVENT_NAME_02   = "cell single block physical read" (CHAR)
DEFINE WAIT_CLASS_03   = "Network" (CHAR)
DEFINE EVENT_NAME_03   = "SQL*Net more data to client" (CHAR)
DEFINE WAIT_CLASS_04   = "Administrative" (CHAR)
DEFINE EVENT_NAME_04   = "Backup: MML write backup piece" (CHAR)
DEFINE WAIT_CLASS_05   = "Cluster" (CHAR)
DEFINE EVENT_NAME_05   = "gc cr disk read" (CHAR)
DEFINE WAIT_CLASS_06   = "Concurrency" (CHAR)
DEFINE EVENT_NAME_06   = "cursor: pin S wait on X" (CHAR)
DEFINE WAIT_CLASS_07   = "User I/O" (CHAR)
DEFINE EVENT_NAME_07   = "direct path read" (CHAR)
DEFINE WAIT_CLASS_08   = "Other" (CHAR)
DEFINE EVENT_NAME_08   = "rdbms ipc reply" (CHAR)
DEFINE WAIT_CLASS_09   = "Application" (CHAR)
DEFINE EVENT_NAME_09   = "enq: TX - row lock contention" (CHAR)
DEFINE WAIT_CLASS_10   = "User I/O" (CHAR)
DEFINE EVENT_NAME_10   = "cell multiblock read request" (CHAR)
DEFINE WAIT_CLASS_11   = "User I/O" (CHAR)
DEFINE EVENT_NAME_11   = "cell multiblock physical read" (CHAR)
DEFINE WAIT_CLASS_12   = "Cluster" (CHAR)
DEFINE EVENT_NAME_12   = "gc current block 2-way" (CHAR)
DEFINE EXADATA         = "" (CHAR)
DEFINE MAX_COL_NUMBER  = "1" (CHAR)
DEFINE COLUMN_NUMBER   = "1" (CHAR)
DEFINE RECOVERY        = "& recovery" (CHAR)
DEFINE TOTAL_HOURS     = "" (CHAR)
DEFINE EDB360_TIME_STAMP = "2020-11-06T13:52:14" (CHAR)
DEFINE REPORT_SEQUENCE = "1" (CHAR)
DEFINE CURRENT_TIME    = "16:52:08" (CHAR)
DEFINE EXACT_MATCHING_SIGNATURE =  4260985471724335612 (NUMBER)
DEFINE FORCE_MATCHING_SIGNATURE =  4260985471724335612 (NUMBER)
DEFINE WAIT_CLASS_COLORS = "CASE wait_class WHEN ''CPU'' THEN ''34CF27'' WHEN ''Scheduler'' THEN ''9FFA9D'' WHEN ''User I/O'' THEN ''0252D7'' WHEN ''System I/O'' THEN ''1E96DD'' " (CHAR)
DEFINE WAIT_CLASS_COLORS2 = " WHEN ''Concurrency'' THEN ''871C12'' WHEN ''Application'' THEN ''C42A05'' WHEN ''Commit'' THEN ''EA6A05'' WHEN ''Configuration'' THEN ''594611''  " (CHAR)
DEFINE WAIT_CLASS_COLORS3 = " WHEN ''Administrative'' THEN ''75763E''  WHEN ''Network'' THEN ''989779'' WHEN ''Other'' THEN ''F571A0'' " (CHAR)
DEFINE WAIT_CLASS_COLORS4 = " WHEN ''Cluster'' THEN ''CEC3B5'' WHEN ''Queueing'' THEN ''C6BAA5'' END" (CHAR)
DEFINE SERIES_01       = "" (CHAR)
DEFINE SERIES_02       = "" (CHAR)
DEFINE SERIES_03       = "" (CHAR)
DEFINE SERIES_04       = "" (CHAR)
DEFINE SERIES_05       = "" (CHAR)
DEFINE SERIES_06       = "" (CHAR)
DEFINE SERIES_07       = "" (CHAR)
DEFINE SERIES_08       = "" (CHAR)
DEFINE SERIES_09       = "" (CHAR)
DEFINE SERIES_10       = "" (CHAR)
DEFINE SERIES_11       = "" (CHAR)
DEFINE SERIES_12       = "" (CHAR)
DEFINE SERIES_13       = "" (CHAR)
DEFINE SERIES_14       = "" (CHAR)
DEFINE SERIES_15       = "" (CHAR)
DEFINE SKIP_LCHP       = "--skip--" (CHAR)
DEFINE EDB360_UDUMP_PATH = "/u02/app/oracle/diag/rdbms/prd_iad3vt/PRD1/trace/" (CHAR)
DEFINE EDB360_SPID     = "274417" (CHAR)
DEFINE REPORT_DBNAME   = "" (CHAR)
DEFINE SECTION_ID      = "5h" (CHAR)
DEFINE SECTION_NAME    = "SQL Tuning Advisor" (CHAR)
DEFINE PROCESSOR_MODEL = "Intel(R) Xeon(R) Platinum 8270CL CPU @ 2.70GHz" (CHAR)
DEFINE HH_MM_SS        = "16:52:08" (CHAR)
DEFINE SPOOL_FILENAME  = "sqld360_323688_00540ttuxh7n9_5h_204_sta_report" (CHAR)
DEFINE ROW_NUM         = "2980" (CHAR)
DEFINE EDB360_PREV_SQL_ID = "7uwhxftumj625" (CHAR)
DEFINE EDB360_PREV_CHILD_NUMBER = "0" (CHAR)
DEFINE ONE_SPOOL_FILENAME = "00453_sqld360_323688_00540ttuxh7n9_5h_204_sta_report" (CHAR)
DEFINE EDB360_TUNING_PACK_FOR_SQLMON = "N" (CHAR)
DEFINE SKIP_SQLMON_EXEC = " echo skip sqlmon" (CHAR)
DEFINE EDB360_SQL_TEXT_100 = "SELECT TO_CHAR(ROWNUM) row_num, v0.* FROM /* 4b.455 */ ( WITH pgastat_denorm_1 AS ( SELECT /*+  MATE" (CHAR)
DEFINE STATSPACK_USER  = "perfstat" (CHAR)
DEFINE SP_MINIMUM_SNAP_ID = "-1" (CHAR)
DEFINE SP_MAXIMUM_SNAP_ID = "-1" (CHAR)
DEFINE SKIP_IF_MISSING = " echo skip " (CHAR)
DEFINE TOTAL_BUFFER_GETS =          20276118710 (NUMBER)
DEFINE TOTAL_DISK_READS =            123439198 (NUMBER)
DEFINE REPORT_DATE     = "2020-11-06T11:45:41" (CHAR)
DEFINE DAYS_OF_HISTORY_ACCESSED = "31" (CHAR)
DEFINE CAPTURED_AT_LEAST_X_TIMES = "10" (CHAR)
DEFINE CAPTURED_AT_LEAST_X_DAYS_APART = "5" (CHAR)
DEFINE MED_ELAP_MICROSECS_THRESHOLD = "1e4" (CHAR)
DEFINE MIN_SLOPE_THRESHOLD = "0.1" (CHAR)
DEFINE MAX_NUM_ROWS_X  = "20" (CHAR)
DEFINE SKIP_INST       = "" (CHAR)
DEFINE CORES_OVER_THREADS = "" (CHAR)
DEFINE SUBPOOL_01      = "SQLA" (CHAR)
DEFINE SUBPOOL_02      = "Result Cache" (CHAR)
DEFINE SUBPOOL_03      = "KGLH0" (CHAR)
DEFINE SUBPOOL_04      = "gcs resources" (CHAR)
DEFINE SUBPOOL_05      = "gcs shadows" (CHAR)
DEFINE SUBPOOL_06      = "" (CHAR)
DEFINE SUBPOOL_07      = "" (CHAR)
DEFINE SUBPOOL_08      = "" (CHAR)
DEFINE SUBPOOL_09      = "" (CHAR)
DEFINE SUBPOOL_10      = "" (CHAR)
DEFINE TEXT            = "Y" (CHAR)
DEFINE ACTIVE          = "Y" (CHAR)
DEFINE MAX_REPORTS     = "12" (CHAR)
DEFINE INPUT_LICENSE   = "Y" (CHAR)
DEFINE SQL_ID          = "1wjt2ut7cah6k" (CHAR)
DEFINE DATE_MASK       = "YYYY-MM-DD/HH24:MI:SS" (CHAR)
DEFINE WAIT_CLASS_13   = "Concurrency" (CHAR)
DEFINE EVENT_NAME_13   = "row cache lock" (CHAR)
DEFINE WAIT_CLASS_14   = "Cluster" (CHAR)
DEFINE EVENT_NAME_14   = "gc cr multi block request" (CHAR)
DEFINE WAIT_CLASS_15   = "Cluster" (CHAR)
DEFINE EVENT_NAME_15   = "gc cr grant 2-way" (CHAR)
DEFINE WAIT_CLASS_16   = "Cluster" (CHAR)
DEFINE EVENT_NAME_16   = "gc current grant 2-way" (CHAR)
DEFINE WAIT_CLASS_17   = "Concurrency" (CHAR)
DEFINE EVENT_NAME_17   = "library cache lock" (CHAR)
DEFINE WAIT_CLASS_18   = "Other" (CHAR)
DEFINE EVENT_NAME_18   = "DFS lock handle" (CHAR)
DEFINE WAIT_CLASS_19   = "User I/O" (CHAR)
DEFINE EVENT_NAME_19   = "cell smart table scan" (CHAR)
DEFINE WAIT_CLASS_20   = "User I/O" (CHAR)
DEFINE EVENT_NAME_20   = "direct path read temp" (CHAR)
DEFINE WAIT_CLASS_21   = "Scheduler" (CHAR)
DEFINE EVENT_NAME_21   = "resmgr:cpu quantum" (CHAR)
DEFINE WAIT_CLASS_22   = "User I/O" (CHAR)
DEFINE EVENT_NAME_22   = "cell single block read request" (CHAR)
DEFINE WAIT_CLASS_23   = "Cluster" (CHAR)
DEFINE EVENT_NAME_23   = "gc cr block busy" (CHAR)
DEFINE WAIT_CLASS_24   = "Other" (CHAR)
DEFINE EVENT_NAME_24   = "gcs drm freeze in enter server mode" (CHAR)
DEFINE ONE_MS_COMP     = "<=" (CHAR)
DEFINE TWO_MS_COMP     = ">" (CHAR)
DEFINE VAXIS1          = "Waits Count" (CHAR)
DEFINE VAXIS2          = "" (CHAR)
DEFINE 7               = "edb360_9a_pre_one.sql" (CHAR)
DEFINE BETWEEN_TIMES   = ", between 2020-10-06T11:22:16 and 2020-11-06T11:22:16" (CHAR)
DEFINE FILTER_PREDICATE = "instance_number = 8" (CHAR)
DEFINE CALL_SQLD360_BITMASK = "110031" (CHAR)
DEFINE CALL_SQLD360_BITMASK_TC = "111031" (CHAR)
DEFINE FILES_PREFIX    = "" (CHAR)
DEFINE SQ_FACT_SQL_SAMPLE_HINTS = " MATERIALIZE NO_MERGE " (CHAR)
DEFINE IS_10G          = "" (CHAR)
DEFINE IS_11R1         = "" (CHAR)
DEFINE IS_11R2         = "" (CHAR)
DEFINE X_MINIMUM_SNAP_ID = "3483" (CHAR)
DEFINE X_MAXIMUM_SNAP_ID = "4973" (CHAR)
DEFINE X_MINIMUM_DATE  = "2020-10-06T16:30:07" (CHAR)
DEFINE X_MAXIMUM_DATE  = "2020-11-06T16:30:43" (CHAR)
DEFINE SIGNATURE       = "9380065298533696050" (CHAR)
DEFINE SIGNATUREF      = "9380065298533696050" (CHAR)
DEFINE X_HOST_NAME     = "aupp-hroradb-f9exx1" (CHAR)
DEFINE X_DB_NAME       = "PRD" (CHAR)
DEFINE X_CONTAINER     = "FRSTPROD" (CHAR)
DEFINE SQL_HANDLE      = "" (CHAR)
DEFINE X_SLICES        = "20" (CHAR)
DEFINE X_DAYS          = "31" (CHAR)
DEFINE TABLES_LIST     = "(('THH_C4C','A_APBL'),('THH_C4C','A_APBLSRVC'),('THH_C4C','A_MEMBDGISBASE'),('THH_C4C','A_USR'),('THH_C4C','MV_PATID_CLINIC_COND_SRVCD'),('THH_C4C','T_DRUGCLM'),('THH_C4C','T_MDCLCLM'),('THH_C4C','T_MDCT'),('THH_C4C','T_SRVC'),('THH_C4C','T_USR'))" (CHAR)
DEFINE TIMESTAMP_MASK  = "YYYY-MM-DD/HH24:MI:SS.FF6" (CHAR)
DEFINE FIELDS_DELIMITER = "<,>" (CHAR)
DEFINE EADAM_CURRENT_TIME = "20201106163916" (CHAR)
DEFINE EDB360_SECS2GO  = "67310" (CHAR)
DEFINE DRIVER_TIME     = "164026" (CHAR)
DEFINE FROM_EDB360     = "--" (CHAR)
DEFINE SKIP_TCB        = "--" (CHAR)
DEFINE SQLD360_FROMEDB360_DAYS = "31" (CHAR)
DEFINE SECS2GO_STARTTIME = "20201106165209" (CHAR)
DEFINE SKIP_SQLD360    = "" (CHAR)
DEFINE SQLD360_CONTAINER = "FRSTPROD" (CHAR)
DEFINE SQLD360_CONF_DAYS = "61" (CHAR)
DEFINE SQLD360_CONF_DATE_FROM = "YYYY-MM-DD" (CHAR)
DEFINE SQLD360_CONF_DATE_TO = "YYYY-MM-DD" (CHAR)
DEFINE SQLD360_CONF_INCL_HTML = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_TEXT = "N" (CHAR)
DEFINE SQLD360_CONF_INCL_CSV = "N" (CHAR)
DEFINE SQLD360_CONF_INCL_XML = "N" (CHAR)
DEFINE SQLD360_CONF_INCL_LINE = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_PIE = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_BAR = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_TREE = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_BUBBLE = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_SCATT = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_SQLMON = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_ASH_HIST = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_AWRRPT = "N" (CHAR)
DEFINE SQLD360_CONF_INCL_ASHRPT = "N" (CHAR)
DEFINE SQLD360_CONF_INCL_EADAM = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_RAWASH = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_STATS_H = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_FMATCH = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_METADATA = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_STATS = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_TCB = "N" (CHAR)
DEFINE SQLD360_CONF_INCL_STA = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_CBOENV = "N" (CHAR)
DEFINE SQLD360_CONF_TCB_SAMPLE = "0" (CHAR)
DEFINE SQLD360_CONF_TRANSLATE_LOWHIGH = "Y" (CHAR)
DEFINE SQLD360_CONF_FIRST_PART = "10" (CHAR)
DEFINE SQLD360_CONF_LAST_PART = "10" (CHAR)
DEFINE SQLD360_NUM_PLAN_DETAILS = "20" (CHAR)
DEFINE SQLD360_CONF_NUM_TOP_EXECS = "3" (CHAR)
DEFINE SQLD360_CONF_NUM_AWRRPT = "3" (CHAR)
DEFINE SQLD360_CONF_NUM_SQLMON_REP = "12" (CHAR)
DEFINE SQLD360_CONF_AVG_ET_PERCTH = "90" (CHAR)
DEFINE SQLD360_CONF_INCL_OBJ_DEPT = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_OBJ_ASHBASED = "N" (CHAR)
DEFINE SQLD360_SQLTRACE_LEVEL = "0" (CHAR)
DEFINE SQLD360_CONF_DBID = "" (CHAR)
DEFINE SQLD360_CONF_AWR_TIMESCALE = "ms" (CHAR)
DEFINE SQLD360_CONF_TOOL_PAGE = "<a href="http://mauro-pagano.com/2015/02/16/sqld360-sql-diagnostics-collection-made-faster/" target="_blank">" (CHAR)
DEFINE SQLD360_CONF_ALL_PAGES_ICON = "<a href="http://mauro-pagano.com/2015/02/16/sqld360-sql-diagnostics-collection-made-faster/" target="_blank"><img src="SQLd360_img.jpg" alt="SQLd360" height="33" width="52"></a>" (CHAR)
DEFINE SQLD360_CONF_ALL_PAGES_LOGO = "" (CHAR)
DEFINE SQLD360_CONF_GOOGLE_CHARTS = "<script type="text/javascript" src="https://www.google.com/jsapi"></script>" (CHAR)
DEFINE SQLD360_VYYNN   = "v192" (CHAR)
DEFINE SQLD360_VRSN    = "v192 (2019-03-23)" (CHAR)
DEFINE SQLD360_PREFIX  = "sqld360" (CHAR)
DEFINE SQLD360_SQLID   = "d1bmu84pdu6gx" (CHAR)
DEFINE SQLD360_DBID    = "2109323688" (CHAR)
DEFINE SQLD360_DBMOD   = "323688" (CHAR)
DEFINE CONNECT_INSTANCE_NAME = "PRD1" (CHAR)
DEFINE SQLD360_DB_BLOCK_SIZE = "8192" (CHAR)
DEFINE SQLD360_DATE_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS" (CHAR)
DEFINE SQLD360_TIMESTAMP_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS.FF" (CHAR)
DEFINE SQLD360_TIMESTAMP_TZ_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS.FFTZH:TZM" (CHAR)
DEFINE SQLD360_DATE_FROM = "2020-10-06T16:52:09" (CHAR)
DEFINE SQLD360_DATE_TO = "2020-11-06T16:52:09" (CHAR)
DEFINE SKIP_10G        = "" (CHAR)
DEFINE SKIP_11G        = "" (CHAR)
DEFINE SKIP_11R1       = "" (CHAR)
DEFINE SKIP_11R201     = "" (CHAR)
DEFINE SKIP_11R203     = "" (CHAR)
DEFINE SKIP_12C        = "--" (CHAR)
DEFINE SKIP_12R101     = "" (CHAR)
DEFINE SKIP_12R1       = "--" (CHAR)
DEFINE SKIP_18C        = "" (CHAR)
DEFINE SKIP_19C        = "" (CHAR)
DEFINE SQLD360_FILE_TIME = "20201106_1652" (CHAR)
DEFINE AS_OF_DATE      = ", as of Fri Nov 06 @04:52PM" (CHAR)
DEFINE SQLD360_ASHDISKFILTER =                   10 (NUMBER)
DEFINE SQLD360_ASHSAMPLE =                    1 (NUMBER)
DEFINE SQLD360_ASHTIMEVALUE =                   10 (NUMBER)
DEFINE SQLD360_REMOTE_EXEC = "--" (CHAR)
DEFINE SQLD360_LOCAL_EXEC = "" (CHAR)
DEFINE SQLD360_UDUMP_PATH = "/u02/app/oracle/product/12.1.0/dbhome_3/rdbms/log/" (CHAR)
DEFINE SQLD360_DIAGTRACE_PATH = "/u02/app/oracle/diag/rdbms/prd_iad3vt/PRD1/trace/" (CHAR)
DEFINE SQLD360_SPID    = "274417" (CHAR)
DEFINE SQLD360_SQLTXT  = "begin dbms_mview.REFRESH('MV_DIM_MEMBER_ADDR_TMPRL','C'); end;" (CHAR)
DEFINE SQLD360_IS_INSERT = "N" (CHAR)
DEFINE XPLAN_USER      = "THH_C4C" (CHAR)
DEFINE CURRENT_USER    = "SYS" (CHAR)
DEFINE XPLAN_SQL       = "begin dbms_mview.REFRESH('MV_DIM_MEMBER_ADDR_TMPRL','C'); end;" (CHAR)
DEFINE SQLD360_XPLAN_SQLID = "9babjv8yq8ru3" (CHAR)
DEFINE SKIP_FORCE_MATCH = "--" (CHAR)
DEFINE SQLD360_SKIP_HTML = "" (CHAR)
DEFINE SQLD360_SKIP_XML = "--" (CHAR)
DEFINE SQLD360_SKIP_TEXT = "--" (CHAR)
DEFINE SQLD360_SKIP_CSV = "--" (CHAR)
DEFINE SQLD360_SKIP_LINE = "" (CHAR)
DEFINE SQLD360_SKIP_PIE = "" (CHAR)
DEFINE SQLD360_SKIP_BAR = "" (CHAR)
DEFINE SQLD360_SKIP_TREE = "" (CHAR)
DEFINE SQLD360_SKIP_BUBBLE = "" (CHAR)
DEFINE SQLD360_SKIP_SCATT = "" (CHAR)
DEFINE SQLD360_SKIP_AWRRPT = "--" (CHAR)
DEFINE SQLD360_SKIP_ASHRPT = "--" (CHAR)
DEFINE SQLD360_SKIP_SQLMON = "" (CHAR)
DEFINE SQLD360_SKIP_STA = "" (CHAR)
DEFINE SQLD360_SKIP_EADAM = "" (CHAR)
DEFINE SQLD360_SKIP_RAWASH = "" (CHAR)
DEFINE SQLD360_SKIP_STATS_H = "" (CHAR)
DEFINE SQLD360_SKIP_FMATCH = "" (CHAR)
DEFINE SQLD360_SKIP_METADATA = "" (CHAR)
DEFINE SQLD360_SKIP_STATS = "" (CHAR)
DEFINE SQLD360_SKIP_TCB = "--" (CHAR)
DEFINE SQLD360_SKIP_CBOENV = "--" (CHAR)
DEFINE SQLD360_TCB_EXP_DATA = "FALSE" (CHAR)
DEFINE SQLD360_TCB_EXP_SAMPLE =                    0 (NUMBER)
DEFINE SQLD360_SKIP_OBJD = "" (CHAR)
DEFINE SQLD360_SKIP_OBJ_ASHBASED = "--" (CHAR)
DEFINE SQLD360_SKIP_LOWHIGH = "" (CHAR)
DEFINE SQLD360_HAS_PLSQL = "" (CHAR)
DEFINE SQLD360_NO_READ_STATS_H = "" (CHAR)
DEFINE SQLD360_AWR_TIMESCALE_D = "1e3" (CHAR)
DEFINE SQLD360_AWR_TIMESCALE_L = "ms" (CHAR)
DEFINE COMMON_SQLD360_PREFIX = "sqld360_323688_d1bmu84pdu6gx" (CHAR)
DEFINE SQLD360_MAIN_REPORT = "00001_sqld360_323688_d1bmu84pdu6gx_index" (CHAR)
DEFINE SQLD360_LOG     = "00002_sqld360_323688_d1bmu84pdu6gx_log" (CHAR)
DEFINE SQLD360_TKPROF  = "00003_sqld360_323688_d1bmu84pdu6gx_tkprof" (CHAR)
DEFINE SQLD360_MAIN_FILENAME = "sqld360_323688_d1bmu84pdu6gx_742967" (CHAR)
DEFINE SQLD360_LOG2    = "00004_sqld360_323688_d1bmu84pdu6gx_log2" (CHAR)
DEFINE SQLD360_TRACEFILE_IDENTIFIER = "sqld360_323688_d1bmu84pdu6gx" (CHAR)
DEFINE SQLD360_COPYRIGHT = " (c) 2015" (CHAR)
DEFINE NUM_PARTS       = "100" (CHAR)
DEFINE DEFAULT_DIR     = "SQLD360_DIR" (CHAR)
DEFINE SQLMON_DATE_MASK = "YYYYMMDDHH24MISS" (CHAR)
DEFINE SQLMON_TEXT     = "Y" (CHAR)
DEFINE SQLMON_ACTIVE   = "Y" (CHAR)
DEFINE SQLMON_HIST     = "Y" (CHAR)
DEFINE ASH_DATE_MASK   = "YYYYMMDDHH24MISS" (CHAR)
DEFINE ASH_TEXT        = "Y" (CHAR)
DEFINE ASH_HTML        = "Y" (CHAR)
DEFINE ASH_MEM         = "Y" (CHAR)
DEFINE ASH_AWR         = "Y" (CHAR)
DEFINE ASH_MAX_REPORTS = "12" (CHAR)
DEFINE WAIT_CLASS_COLORS_S = "CASE wait_class WHEN ''CPU'' THEN ''color: ''''#34CF27'''''' WHEN ''Scheduler'' THEN ''color: ''''#9FFA9D'''''' WHEN ''User I/O'' THEN ''color: ''''#0252D7'''''' WHEN ''System I/O'' THEN ''color: ''''#1E96DD'''''' " (CHAR)
DEFINE WAIT_CLASS_COLORS2_S = " WHEN ''Concurrency'' THEN ''color: ''''#871C12'''''' WHEN ''Application'' THEN ''color: ''''#C42A05'''''' WHEN ''Commit'' THEN ''color: ''''#EA6A05'''''' WHEN ''Configuration'' THEN ''color: ''''#594611''''''  " (CHAR)
DEFINE WAIT_CLASS_COLORS3_S = " WHEN ''Administrative'' THEN ''color: ''''#75763E''''''  WHEN ''Network'' THEN ''color: ''''#989779'''''' WHEN ''Other'' THEN ''color: ''''#F571A0'''''' " (CHAR)
DEFINE WAIT_CLASS_COLORS4_S = " WHEN ''Cluster'' THEN ''color: ''''#CEC3B5'''''' WHEN ''Queueing'' THEN ''color: ''''#C6BAA5'''''' END" (CHAR)
DEFINE SKIP_XML        = "" (CHAR)
DEFINE SKIP_TCH        = "Y" (CHAR)
DEFINE SKIP_UCH        = "Y" (CHAR)
DEFINE SKIP_SCH        = "Y" (CHAR)
DEFINE TREECOLOR       = "" (CHAR)
DEFINE BUBBLEMAXVALUE  = "" (CHAR)
DEFINE BUBBLESERIES    = "series: {'CPU': {color: '#34CF27'}, 'I/O': {color: '#0252D7'}, 'Concurrency': {color: '#871C12'}, 'Cluster': {color: '#CEC3B5'}, 'Other': {color: '#C6BAA5'}, 'Multiple': {color: '#CCFFFF'}}," (CHAR)
DEFINE BUBBLESDETAILS  = "" (CHAR)
DEFINE SQL_TEXT        = "" (CHAR)
DEFINE SQLD360_TIME_STAMP = "2020-11-06/16:52:09" (CHAR)
DEFINE NUM_PLANS       = "1" (CHAR)
DEFINE SQLD360_MAIN_REPORT_BCK = "00001_sqld360_323688_00540ttuxh7n9_index" (CHAR)
DEFINE NUM_BINDS       = "0" (CHAR)
DEFINE NUM_HISTOGRAMS  = "4" (CHAR)
DEFINE COLS_FROM_PART_TABLES = "0" (CHAR)
DEFINE PART_TABLES     = "0" (CHAR)
DEFINE TIT_01_AWR      = "368490531" (CHAR)
DEFINE TIT_02_AWR      = "" (CHAR)
DEFINE TIT_03_AWR      = "" (CHAR)
DEFINE TIT_04_AWR      = "" (CHAR)
DEFINE TIT_05_AWR      = "" (CHAR)
DEFINE TIT_06_AWR      = "" (CHAR)
DEFINE TIT_07_AWR      = "" (CHAR)
DEFINE TIT_08_AWR      = "" (CHAR)
DEFINE TIT_09_AWR      = "" (CHAR)
DEFINE TIT_10_AWR      = "" (CHAR)
DEFINE TIT_11_AWR      = "" (CHAR)
DEFINE TIT_12_AWR      = "" (CHAR)
DEFINE TIT_13_AWR      = "" (CHAR)
DEFINE TIT_14_AWR      = "" (CHAR)
DEFINE TIT_15_AWR      = "" (CHAR)
DEFINE PHV_01_AWR      =            368490531 (NUMBER)
DEFINE PHV_02_AWR      =                   -1 (NUMBER)
DEFINE PHV_03_AWR      =                   -1 (NUMBER)
DEFINE PHV_04_AWR      =                   -1 (NUMBER)
DEFINE PHV_05_AWR      =                   -1 (NUMBER)
DEFINE PHV_06_AWR      =                   -1 (NUMBER)
DEFINE PHV_07_AWR      =                   -1 (NUMBER)
DEFINE PHV_08_AWR      =                   -1 (NUMBER)
DEFINE PHV_09_AWR      =                   -1 (NUMBER)
DEFINE PHV_10_AWR      =                   -1 (NUMBER)
DEFINE PHV_11_AWR      =                   -1 (NUMBER)
DEFINE PHV_12_AWR      =                   -1 (NUMBER)
DEFINE PHV_13_AWR      =                   -1 (NUMBER)
DEFINE PHV_14_AWR      =                   -1 (NUMBER)
DEFINE PHV_15_AWR      =                   -1 (NUMBER)
DEFINE PHV_01          =            368490531 (NUMBER)
DEFINE PHV_02          =                   -1 (NUMBER)
DEFINE PHV_03          =                   -1 (NUMBER)
DEFINE PHV_04          =                   -1 (NUMBER)
DEFINE PHV_05          =                   -1 (NUMBER)
DEFINE PHV_06          =                   -1 (NUMBER)
DEFINE PHV_07          =                   -1 (NUMBER)
DEFINE PHV_08          =                   -1 (NUMBER)
DEFINE PHV_09          =                   -1 (NUMBER)
DEFINE PHV_10          =                   -1 (NUMBER)
DEFINE PHV_11          =                   -1 (NUMBER)
DEFINE PHV_12          =                   -1 (NUMBER)
DEFINE PHV_13          =                   -1 (NUMBER)
DEFINE PHV_14          =                   -1 (NUMBER)
DEFINE PHV_15          =                   -1 (NUMBER)
DEFINE 1               = "d1bmu84pdu6gx" (CHAR)
DEFINE 2               = "T" (CHAR)
DEFINE 3               = "null" (CHAR)

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:09
Extracting ASH data
10900 rows extracted.
2020-11-06/16:52:10
16:52:10
Done exctrating ASH data

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:10
Extracting table list
2020-11-06/16:52:13
16:52:13
Done extracting table list
16:52:13

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:13 col:1of5 "Database Configuration"
16:52:13 System Under Observation

WITH
rac AS (SELECT /*+ MATERIALIZE NO_MERGE */ COUNT(*) instances, CASE COUNT(*) WHEN 1 THEN 'Single-instance' ELSE COUNT(*)||'-node RAC cluster' END db_type FROM gv$instance),
hrac AS (SELECT /*+ MATERIALIZE NO_MERGE */ CASE 2 WHEN 1 THEN ' (historically Single-instance in AWR)' ELSE ' (historicly 2-node RAC cluster in AWR)' END db_type
           FROM rac WHERE TO_CHAR(RAC.instances)<>2),
mem AS (SELECT /*+ MATERIALIZE NO_MERGE */ SUM(value) target FROM gv$system_parameter2 WHERE name = 'memory_target'),
sga AS (SELECT /*+ MATERIALIZE NO_MERGE */ SUM(value) target FROM gv$system_parameter2 WHERE name = 'sga_target'),
pga AS (SELECT /*+ MATERIALIZE NO_MERGE */ SUM(value) target FROM gv$system_parameter2 WHERE name = 'pga_aggregate_target'),
db_block AS (SELECT /*+ MATERIALIZE NO_MERGE */ value bytes FROM v$system_parameter2 WHERE name = 'db_block_size'),
db AS (SELECT /*+ MATERIALIZE NO_MERGE */ name, platform_name FROM v$database),
  pdbs AS (SELECT /*+ MATERIALIZE NO_MERGE */ * FROM v$pdbs), -- need 12c flag
inst AS (SELECT /*+ MATERIALIZE NO_MERGE */ host_name, version db_version FROM v$instance),
data AS (SELECT /*+ MATERIALIZE NO_MERGE */ SUM(bytes) bytes, COUNT(*) files, COUNT(DISTINCT ts#) tablespaces FROM v$datafile),
temp AS (SELECT /*+ MATERIALIZE NO_MERGE */ SUM(bytes) bytes FROM v$tempfile),
log AS (SELECT /*+ MATERIALIZE NO_MERGE */ SUM(bytes) * MAX(members) bytes FROM v$log),
control AS (SELECT /*+ MATERIALIZE NO_MERGE */ SUM(block_size * file_size_blks) bytes FROM v$controlfile),
 cell AS (SELECT /*+ MATERIALIZE NO_MERGE */ COUNT(DISTINCT cell_name) cnt FROM v$cell_state),
core AS (SELECT /*+ MATERIALIZE NO_MERGE */ SUM(value) cnt FROM gv$osstat WHERE stat_name = 'NUM_CPU_CORES'),
cpu AS (SELECT /*+ MATERIALIZE NO_MERGE */ SUM(value) cnt FROM gv$osstat WHERE stat_name = 'NUM_CPUS'),
pmem AS (SELECT /*+ MATERIALIZE NO_MERGE */ SUM(value) bytes FROM gv$osstat WHERE stat_name = 'PHYSICAL_MEMORY_BYTES')
SELECT /*+ NO_MERGE */ 'Database name:' system_item, db.name system_value FROM db
 UNION ALL
 SELECT '    pdb:'||name, 'Open Mode:'||open_mode FROM pdbs -- need 12c flag
 UNION ALL
SELECT 'Oracle Database version:', inst.db_version FROM inst
 UNION ALL
SELECT 'Database block size:', TRIM(TO_CHAR(db_block.bytes / POWER(2,10), '90'))||' KB' FROM db_block
 UNION ALL
SELECT 'Database size:', TRIM(TO_CHAR(ROUND((data.bytes + temp.bytes + log.bytes + control.bytes) / POWER(10,12), 3), '999,999,990.000'))||' TB'
  FROM db, data, temp, log, control
 UNION ALL
SELECT 'Datafiles:', data.files||' (on '||data.tablespaces||' tablespaces)' FROM data
 UNION ALL
SELECT 'Instance configuration:', rac.db_type||(select hrac.db_type FROM hrac ) FROM rac
 UNION ALL
SELECT 'Database memory:',
       CASE WHEN mem.target > 0 THEN 'MEMORY'  ||TRIM(TO_CHAR(ROUND(mem.target / POWER(2,30), 1), '999,990.0'))||' GB, ' END||
       CASE WHEN sga.target > 0 THEN 'SGA '   ||TRIM(TO_CHAR(ROUND(sga.target / POWER(2,30), 1), '999,990.0'))||' GB, ' END||
       CASE WHEN pga.target > 0 THEN 'PGA '   ||TRIM(TO_CHAR(ROUND(pga.target / POWER(2,30), 1), '999,990.0'))||' GB, ' END||
       CASE WHEN mem.target > 0 THEN 'AMM ' ELSE CASE WHEN sga.target > 0 THEN 'ASMM' ELSE 'MANUAL' END END
  FROM mem, sga, pga
 UNION ALL
SELECT 'Hardware:', CASE WHEN cell.cnt > 0 THEN 'Engineered System '||
        CASE WHEN 'Intel(R) Xeon(R) Platinum 8270CL CPU @ 2.70GHz' LIKE '%5675%' THEN 'X2-2 ' END||
        CASE WHEN 'Intel(R) Xeon(R) Platinum 8270CL CPU @ 2.70GHz' LIKE '%2690%' THEN 'X3-2 ' END||
        CASE WHEN 'Intel(R) Xeon(R) Platinum 8270CL CPU @ 2.70GHz' LIKE '%2697%' THEN 'X4-2 ' END||
        CASE WHEN 'Intel(R) Xeon(R) Platinum 8270CL CPU @ 2.70GHz' LIKE '%2699%' THEN 'X5-2 ' END||
        CASE WHEN 'Intel(R) Xeon(R) Platinum 8270CL CPU @ 2.70GHz' LIKE '%8870%' THEN 'X3-8 ' END||
        CASE WHEN 'Intel(R) Xeon(R) Platinum 8270CL CPU @ 2.70GHz' LIKE '%8895%' THEN 'X4-8 or X5-8 ' END||
        'with '||cell.cnt||' storage servers'
        ELSE 'Unknown' END FROM cell
 UNION ALL
SELECT 'Processor:', 'Intel(R) Xeon(R) Platinum 8270CL CPU @ 2.70GHz' FROM DUAL
 UNION ALL
SELECT 'Physical CPUs:', core.cnt||' cores'||CASE WHEN rac.instances > 0 THEN ', on '||rac.db_type END FROM rac, core
 UNION ALL
SELECT 'Oracle CPUs:', cpu.cnt||' CPUs (threads)'||CASE WHEN rac.instances > 0 THEN ', on '||rac.db_type END FROM rac, cpu
 UNION ALL
SELECT 'Physical RAM:', TRIM(TO_CHAR(ROUND(pmem.bytes / POWER(2,30), 1), '999,990.0'))||' GB'||CASE WHEN rac.instances > 0 THEN ', on '||rac.db_type END FROM rac, pmem
 UNION ALL
SELECT 'Operating system:', db.platform_name FROM db

16:52:13 col:1of5.

16:52:13 col:1of5 "00006_sqld360_323688_d1bmu84pdu6gx_1a_1_system_under_observation.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:14 col:1of5 "Database Configuration"
16:52:14 Identification

SELECT d.dbid,
       d.name dbname,
       d.db_unique_name,
       d.platform_name,
       i.version,
       i.inst_id,
       i.instance_number,
       i.instance_name,
       LOWER(SUBSTR(i.host_name||'.', 1, INSTR(i.host_name||'.', '.') - 1)) host_name,
       LPAD(ORA_HASH(LOWER(SUBSTR(i.host_name||'.', 1, INSTR(i.host_name||'.', '.') - 1)),999999),6,'6') host_hv,
       p.value cpu_count,
       '' ebs_release,
       '' ebs_system_name,
       '' siebel_schema,
       '' siebel_app_ver,
       '' psft_schema,
       '' psft_tools_rel
  FROM v$database d,
       gv$instance i,
       gv$system_parameter2 p
 WHERE p.inst_id = i.inst_id
   AND p.name = 'cpu_count'

16:52:14 col:1of5.

16:52:14 col:1of5 "00007_sqld360_323688_d1bmu84pdu6gx_1a_2_identification.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:14 col:1of5 "Database Configuration"
16:52:14 Version

SELECT /*+ NO_MERGE */
       *
  FROM v$version

16:52:14 col:1of5.

16:52:14 col:1of5 "00008_sqld360_323688_d1bmu84pdu6gx_1a_3_version.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:14 col:1of5 "Database Configuration"
16:52:14 Database

SELECT /*+ NO_MERGE */
       *
  FROM v$database

16:52:14 col:1of5.

16:52:14 col:1of5 "00009_sqld360_323688_d1bmu84pdu6gx_1a_4_database.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:15 col:1of5 "Database Configuration"
16:52:15 Instance

SELECT /*+ NO_MERGE */
       *
  FROM gv$instance
 ORDER BY
       inst_id

16:52:15 col:1of5.

16:52:15 col:1of5 "00010_sqld360_323688_d1bmu84pdu6gx_1a_5_instance.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:15 col:1of5 "Database Configuration"
16:52:15 Modified Parameters

SELECT /*+ NO_MERGE */
       *
  FROM gv$system_parameter2
 WHERE ismodified = 'MODIFIED'
 ORDER BY
       name,
       inst_id,
       ordinal

16:52:15 col:1of5.

16:52:15 col:1of5 "00011_sqld360_323688_d1bmu84pdu6gx_1a_6_modified_parameters.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:15 col:1of5 "Database Configuration"
16:52:15 Non-default Parameters

SELECT /*+ NO_MERGE */
       *
  FROM gv$system_parameter2
 WHERE isdefault = 'FALSE'
 ORDER BY
       name,
       inst_id,
       ordinal

16:52:15 col:1of5.

16:52:15 col:1of5 "00012_sqld360_323688_d1bmu84pdu6gx_1a_7_nondefault_parameters.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:15 col:1of5 "Database Configuration"
16:52:15 All Parameters

SELECT /*+ NO_MERGE */
       *
  FROM gv$system_parameter2
 ORDER BY
       name,
       inst_id,
       ordinal

16:52:15 col:1of5.

16:52:15 col:1of5 "00013_sqld360_323688_d1bmu84pdu6gx_1a_8_all_parameters.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:15 col:1of5 "Database Configuration"
16:52:15 Parameter File

SELECT /*+ NO_MERGE */
       *
  FROM v$spparameter
 WHERE isspecified = 'TRUE'
 ORDER BY
       name,
       sid,
       ordinal

16:52:15 col:1of5.

16:52:15 col:1of5 "00014_sqld360_323688_d1bmu84pdu6gx_1a_9_parameter_file.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:15 col:1of5 "Database Configuration"
16:52:15 System Stats

SELECT /*+ NO_MERGE */
       *
  FROM sys.aux_stats$

16:52:15 col:1of5.

16:52:15 col:1of5 "00015_sqld360_323688_d1bmu84pdu6gx_1a_10_system_stats.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:15 col:1of5 "Database Configuration"
16:52:15 IO Calibration

SELECT /*+ NO_MERGE */
       *
  FROM dba_rsrc_io_calibrate

16:52:15 col:1of5.

16:52:15 col:1of5 "00016_sqld360_323688_d1bmu84pdu6gx_1a_11_io_calibration.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:15 col:1of5 "Database Configuration"
16:52:15 Non-default Fix Controls

SELECT /*+ NO_MERGE */
       *
  FROM v$system_fix_control
 WHERE is_default = 0
 ORDER BY bugno

16:52:15 col:1of5.

16:52:15 col:1of5 "00017_sqld360_323688_d1bmu84pdu6gx_1a_12_nondefault_fix_controls.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:15 col:1of5 "Database Configuration"
16:52:15 All Fix Controls

SELECT /*+ NO_MERGE */
       *
  FROM v$system_fix_control
 ORDER BY bugno

16:52:15 col:1of5.

16:52:15 col:1of5 "00018_sqld360_323688_d1bmu84pdu6gx_1a_13_all_fix_controls.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:15 col:1of5 "Database Configuration"
16:52:15 Optimizer Processing Rate

SELECT /*+ NO_MERGE */
       *
  FROM v$optimizer_processing_rate
 ORDER BY operation_name

16:52:15 col:1of5.

16:52:15 col:1of5 "00019_sqld360_323688_d1bmu84pdu6gx_1a_14_optimizer_processing_rate.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:15 col:1of5 "NLS Settings"
16:52:15 Session Parameters

SELECT /*+ NO_MERGE */
       *
  FROM nls_session_parameters
 ORDER BY parameter

16:52:15 col:1of5.

16:52:15 col:1of5 "00020_sqld360_323688_d1bmu84pdu6gx_1e_15_session_parameters.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:15 col:1of5 "NLS Settings"
16:52:15 Instance Parameters

SELECT /*+ NO_MERGE */
       *
  FROM nls_instance_parameters
 ORDER BY parameter

16:52:15 col:1of5.

16:52:15 col:1of5 "00021_sqld360_323688_d1bmu84pdu6gx_1e_16_instance_parameters.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:15 col:1of5 "NLS Settings"
16:52:15 Database Parameters

SELECT /*+ NO_MERGE */
       *
  FROM nls_database_parameters
 ORDER BY parameter

16:52:15 col:1of5.

16:52:15 col:1of5 "00022_sqld360_323688_d1bmu84pdu6gx_1e_17_database_parameters.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:16 col:1of5 "Observations"
16:52:16 System-wide observations

WITH cbo_parameters AS (SELECT /*+ MATERIALIZE */ inst_id, name, value, isdefault FROM gv$sys_optimizer_env),
     fix_controls   AS (SELECT /*+ MATERIALIZE */ inst_id, bugno, value, is_default FROM gv$system_fix_control),
     instances      AS (SELECT /*+ MATERIALIZE */ inst_id, version FROM gv$instance),
     systemstats    AS (SELECT /*+ MATERIALIZE */ MAX(CASE WHEN pname = 'CPUSPEED' THEN pval1 ELSE NULL END) cpuspeed, -- used to determine if workload ss in place
                                                  MAX(CASE WHEN pname = 'CPUSPEEDN' THEN pval1 ELSE NULL END) cpuspeednw,
                                                  MAX(CASE WHEN pname = 'SREADTIM' THEN pval1 ELSE NULL END) sreadtim,
                                                  MAX(CASE WHEN pname = 'MREADTIM' THEN pval1 ELSE NULL END) mreadtim,
                                                  MAX(CASE WHEN pname = 'MBRC' THEN pval1 ELSE NULL END) mbrc
                          FROM sys.aux_stats$)
SELECT inst_id instance, scope, message
  FROM (SELECT inst_id, 'SYSTEM' scope, 'There are '||num_nondef_fixc||' CBO-related parameters set to non-default value' message
           FROM (SELECT COUNT(*) num_nondef_fixc, inst_id
                   FROM cbo_parameters
                  WHERE isdefault = 'NO'
                  GROUP BY inst_id)
          WHERE num_nondef_fixc > 0
        UNION ALL
        SELECT inst_id, 'PARAMETER', 'Parameter '||name||' is set to non-default value of '||value
          FROM cbo_parameters
         WHERE isdefault = 'NO'
        UNION ALL
        SELECT inst_id, 'SYSTEM', 'There are '||num_nondef_fixc||' fix_controls set to non-default value'
          FROM (SELECT COUNT(*) num_nondef_fixc, inst_id
                  FROM fix_controls
                 WHERE is_default = 0
                 GROUP BY inst_id)
         WHERE num_nondef_fixc > 0
        UNION ALL
        SELECT inst_id, 'FIX_CONTROL', 'Fix control '||bugno||' is set to non-default value of '||value
          FROM fix_controls
         WHERE is_default = 0
        UNION ALL
        SELECT cbo_parameters.inst_id, 'OFE', 'OPTIMIZER_FEATURES_ENABLE set to a value ('||cbo_parameters.value||') different than RDBMS version ('||db_version.version||')'
          FROM cbo_parameters,
               (SELECT inst_id, version
                  FROM instances) db_version
         WHERE cbo_parameters.name = 'optimizer_features_enable'
           AND cbo_parameters.value <> SUBSTR(version,1,INSTR(version,'.',1,4)-1)
           AND cbo_parameters.inst_id = db_version.inst_id
        UNION ALL
        SELECT NULL, 'SYSTEM_STATS', 'SREADTIM is not null ('||sreadtim||') while MREADTIME is null'
          FROM systemstats
         WHERE cpuspeed IS NOT NULL
           AND sreadtim IS NOT NULL
           AND mreadtim IS NULL
        UNION ALL
        SELECT NULL, 'SYSTEM_STATS', 'MREADTIM is not null ('||mreadtim||') while SREADTIME is null'
          FROM systemstats
         WHERE cpuspeed IS NOT NULL
           AND sreadtim IS NULL
           AND mreadtim IS NOT NULL
        UNION ALL
        SELECT NULL, 'SYSTEM_STATS', 'Workload system stats gathered but MBRC is null'
          FROM systemstats
         WHERE cpuspeed IS NOT NULL
           AND mbrc IS NULL
        )
 ORDER BY inst_id, scope, message

16:52:16 col:1of5.

16:52:16 col:1of5 "00023_sqld360_323688_d1bmu84pdu6gx_1f_18_systemwide_observations.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:16 col:1of5 "Observations"
16:52:16 Cursors and Plans specific observations

WITH vsql           AS (SELECT /*+ MATERIALIZE */ DISTINCT plan_hash_value, optimizer_env_hash_value FROM gv$sql WHERE sql_id = 'd1bmu84pdu6gx'),
     vsqlplan       AS (SELECT /*+ MATERIALIZE */ DISTINCT plan_hash_value, id, operation, object_owner, object_name, cost, cardinality, filter_predicates FROM gv$sql_plan WHERE sql_id = 'd1bmu84pdu6gx'),
     dbahistsql     AS (SELECT /*+ MATERIALIZE */ DISTINCT plan_hash_value, optimizer_env_hash_value FROM dba_hist_sqlstat WHERE sql_id = 'd1bmu84pdu6gx' AND 'Y' = 'Y'),
     dbahistsqlplan AS (SELECT /*+ MATERIALIZE */ DISTINCT plan_hash_value, id, operation, object_owner, object_name, cost, cardinality, filter_predicates FROM dba_hist_sql_plan WHERE sql_id = 'd1bmu84pdu6gx' AND 'Y' = 'Y'),
     indexes        AS (SELECT /*+ MATERIALIZE */ table_owner, table_name, owner, index_name, degree FROM dba_indexes WHERE (table_owner, table_name) IN (SELECT object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')),
     ashdata        AS (SELECT /*+ INLINE */ cost sql_plan_hash_value,
                               operation sql_plan_operation,
                               options sql_plan_options,
                               object_node event,
                               other_tag wait_class,
                               id sql_plan_line_id,
                               partition_id sql_exec_id,
                               TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,2)+1,INSTR(partition_start,',',1,3)-INSTR(partition_start,',',1,2)-1)) p1,
                               TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,4)+1,INSTR(partition_start,',',1,5)-INSTR(partition_start,',',1,4)-1)) p2,
                               TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,6)+1,INSTR(partition_start,',',1,7)-INSTR(partition_start,',',1,6)-1)) p3,
                               object_instance obj#
                          FROM plan_table
                         WHERE statement_id
                          LIKE 'SQLD360_ASH_DATA%'
                          AND remarks = 'd1bmu84pdu6gx'),
    list_of_plans AS (SELECT plan_hash_value FROM vsql UNION SELECT plan_hash_value FROM dbahistsql UNION SELECT sql_plan_hash_value FROM ashdata)
SELECT scope, message
  FROM (SELECT 'OPTIMIZER_ENV' scope, 'There is/are '||COUNT(DISTINCT optimizer_env_hash_value)||' distinct CBO environments between memory and history for this SQL' message
         FROM (SELECT optimizer_env_hash_value
                 FROM vsql
                UNION ALL
               SELECT optimizer_env_hash_value
                 FROM dbahistsql)
         UNION ALL
        SELECT 'INTERNAL_FUNCTION', 'Filter predicate potentially include implicit data-type conversion (might be a red herring in case of long in-list)'
          FROM (SELECT 1
                  FROM vsqlplan
                 WHERE filter_predicates LIKE '%INTERNAL FUNCTION%'
                   AND ROWNUM < 2
                 UNION ALL
                SELECT 1
                  FROM dbahistsqlplan
                 WHERE filter_predicates LIKE '%INTERNAL FUNCTION%'
                   AND ROWNUM < 2)
         WHERE ROWNUM < 2
         UNION ALL
        SELECT 'COST_OF_0', 'Plan Hash Value '||plan_hash_value||' includes operation with a cost of 0, VERY suspicious'
          FROM (SELECT plan_hash_value
                  FROM vsqlplan
                 WHERE cost = 0
                   AND cardinality >= 1 -- always true, btw
                 UNION
                SELECT plan_hash_value
                  FROM dbahistsqlplan
                 WHERE cost = 0
                   AND cardinality >= 1 -- always true, btw
                )
         UNION ALL
        SELECT DISTINCT 'INDEX_NOT_FOUND', 'Plan Hash Value '||plan_hash_value||' refences an index that was not found anymore, maybe dropped?'
          FROM (SELECT plan_hash_value, object_owner, object_name
                  FROM vsqlplan
                 WHERE operation = 'INDEX'
                 UNION
                SELECT plan_hash_value, object_owner, object_name
                  FROM dbahistsqlplan
                 WHERE operation = 'INDEX'
                ) plans,
               indexes
         WHERE plans.object_owner = indexes.owner(+)
           AND plans.object_name = indexes.index_name(+)
           AND indexes.index_name IS NULL
         UNION ALL
        SELECT 'FULL_SCAN_DOING_SINGLE_READS', 'From the ASH *sampled* data for physical reads, Plan Hash Value '||sql_plan_hash_value||' issued single block reads during full scan operations '||TRUNC(num_single_block_reads/num_samples,3)*100||'% of the times'
          FROM (SELECT sql_plan_hash_value,
                       COUNT(*) num_samples,
                       SUM(CASE WHEN event IN ('db file sequential read', 'cell single block physical read') THEN 1 ELSE 0 END) num_single_block_reads
                  FROM ashdata
                 WHERE sql_plan_operation IN ('TABLE ACCESS','INDEX')
                   AND (sql_plan_options LIKE 'FULL%' OR sql_plan_options LIKE 'STORAGE FULL%')
                   AND wait_class = 'User I/O'
                 GROUP BY sql_plan_hash_value)
         WHERE TRUNC(num_single_block_reads/num_samples,3) >= 0.02 -- 2%
         UNION ALL
        SELECT 'FULL_SCAN_READING_FEW_BLOCKS', 'From the ASH *sampled* data for physical reads, Plan Hash Value '||sql_plan_hash_value||' spends most of its time ('||percent_per_phv_and_p3||'%) reading '||p3||' blocks at a time instead of '||POWER(1024,2)/8192||' during full scans'
          FROM (SELECT sql_plan_hash_value,
                       p3,
                       TRUNC(RATIO_TO_REPORT(COUNT(*)) OVER ()*100,3) percent_per_phv_and_p3,
                       ROW_NUMBER() OVER (PARTITION BY sql_plan_hash_value ORDER BY COUNT(*) DESC) rwn
                  FROM ashdata
                 WHERE sql_plan_operation IN ('TABLE ACCESS','INDEX')
                   AND sql_plan_options LIKE 'FULL%'
                   AND event IN ('db file scattered read', 'direct path read')
                 GROUP BY sql_plan_hash_value, p3)
         WHERE rwn = 1
           AND p3 < (POWER(1024,2)/8192)
         UNION ALL
        SELECT 'SQL_MOSTLY_NOT_ON_CPU', 'From the ASH *sampled* data, Plan Hash Value '||sql_plan_hash_value||' spends '||TRUNC(num_samples_per_class/total_samples_per_phv*100,3)||'% of the time on '||wait_class||'-related wait events instead of CPU (usually preferrable, with exceptions :-)'
          FROM (SELECT sql_plan_hash_value,
                       wait_class,
                       num_samples_per_class,
                       ROW_NUMBER() OVER (PARTITION BY sql_plan_hash_value ORDER BY num_samples_per_class DESC) rwn,
                       SUM(num_samples_per_class) OVER(PARTITION BY sql_plan_hash_value) total_samples_per_phv
                  FROM (SELECT sql_plan_hash_value,
                               wait_class,
                               COUNT(*) num_samples_per_class
                          FROM ashdata
                         GROUP BY sql_plan_hash_value, wait_class))
         WHERE rwn = 1
           AND wait_class <> 'CPU' -- so not on CPU
         UNION ALL
        SELECT 'MULTIPLE_PLANS','This SQL has/had '||COUNT(*)||' distinct execution plan(s)'
               ||', list of PHV is ('||LISTAGG(plan_hash_value, ',') WITHIN GROUP (ORDER BY plan_hash_value)||')'
          FROM list_of_plans
         UNION ALL
        SELECT 'POTENTIAL_PARSE_TIME', 'From the ASH *sampled* data, Plan Hash Value '||sql_plan_hash_value||' spent '||potential_parse_time||'% of the time not executing (SQL_EXEC_ID NULL), which usually is parse time'
          FROM (SELECT sql_plan_hash_value,
                       TRUNC(SUM(CASE WHEN sql_exec_id IS NULL THEN 1 ELSE 0 END)/COUNT(*),3) potential_parse_time
                  FROM ashdata
                 GROUP BY sql_plan_hash_value)
         WHERE potential_parse_time >= 0.1
         UNION ALL
        SELECT 'POTENTIAL_HWM_DESYNC', 'Object#: '||obj#||' block class#: '||p3||' sampled '||COUNT(*)||' times'
          FROM ashdata,
               (SELECT name
                  FROM v$event_name
                 WHERE parameter3 = 'class#'
                    OR (name LIKE '%-way' AND parameter3 IS NULL) --parameter3 not named even though it is populated
               ) e
         WHERE e.name = ashdata.event
           AND p3 IN (8,9,10,11,12)
         GROUP BY obj#, p3
         UNION ALL
        SELECT 'LARGE_PERC_PHV0', 'Large number of ASH samples ('||perc_0||'%) have PHV 0 with a valid SQL_EXEC_ID, very likely unresolved adaptive plan (some info based on ASH could be misleading)'
          FROM (SELECT TRUNC(SUM(CASE WHEN sql_plan_hash_value = 0 AND sql_exec_id IS NOT NULL THEN 1 ELSE 0 END)/COUNT(*),3)*100 perc_0
                  FROM ashdata
                 WHERE 'N' <> 'Y')
         WHERE perc_0 >= 2
        )
 ORDER BY scope, message

16:52:16 col:1of5.

16:52:16 col:1of5 "00024_sqld360_323688_d1bmu84pdu6gx_1f_19_cursors_and_plans_specific_observations.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:17 col:1of5 "Observations"
16:52:17 Table-level observations

WITH tablespaces AS (SELECT /*+ MATERIALIZE */ tablespace_name, block_size
                       FROM dba_tablespaces),
     tables    AS (SELECT /*+ MATERIALIZE */ owner, table_name, tablespace_name, num_rows, blocks, last_analyzed, degree
                     FROM dba_tables
                    WHERE (owner, table_name) IN (SELECT object_owner, object_name
                                                    FROM plan_table
                                                   WHERE statement_id = 'LIST_OF_TABLES'
                                                     AND remarks = 'd1bmu84pdu6gx')),
     partitions AS (SELECT /*+ MATERIALIZE */ table_owner, table_name, partition_name, num_rows, blocks, last_analyzed
                      FROM dba_tab_partitions
                     WHERE (table_owner, table_name) IN (SELECT object_owner, object_name
                                                           FROM plan_table
                                                          WHERE statement_id = 'LIST_OF_TABLES'
                                                            AND remarks = 'd1bmu84pdu6gx')),
     table_and_part_stats AS (SELECT /*+ MATERIALIZE */ owner, table_name, partition_name, stale_stats, stattype_locked
                                FROM dba_tab_statistics
                               WHERE (owner, table_name) IN (SELECT object_owner, object_name
                                                               FROM plan_table
                                                              WHERE statement_id = 'LIST_OF_TABLES'
                                                                AND remarks = 'd1bmu84pdu6gx')
                                 AND subpartition_name IS NULL),
     indexes    AS (SELECT /*+ MATERIALIZE */ table_owner, table_name, index_name, degree
                      FROM dba_indexes
                     WHERE (table_owner, table_name) IN (SELECT object_owner, object_name
                                                           FROM plan_table
                                                          WHERE statement_id = 'LIST_OF_TABLES'
                                                            AND remarks = 'd1bmu84pdu6gx')),
     ind_cols AS (SELECT col.index_owner, col.index_name, col.table_owner, col.table_name, idx.index_type, idx.uniqueness,
                         MAX(CASE col.column_position WHEN 01 THEN      col.column_name END)||
                         MAX(CASE col.column_position WHEN 02 THEN ':'||col.column_name END)||
                         MAX(CASE col.column_position WHEN 03 THEN ':'||col.column_name END)||
                         MAX(CASE col.column_position WHEN 04 THEN ':'||col.column_name END)||
                         MAX(CASE col.column_position WHEN 05 THEN ':'||col.column_name END)||
                         MAX(CASE col.column_position WHEN 06 THEN ':'||col.column_name END)||
                         MAX(CASE col.column_position WHEN 07 THEN ':'||col.column_name END)||
                         MAX(CASE col.column_position WHEN 08 THEN ':'||col.column_name END)||
                         MAX(CASE col.column_position WHEN 09 THEN ':'||col.column_name END)||
                         MAX(CASE col.column_position WHEN 10 THEN ':'||col.column_name END)||
                         MAX(CASE col.column_position WHEN 11 THEN ':'||col.column_name END)||
                         MAX(CASE col.column_position WHEN 12 THEN ':'||col.column_name END)||
                         MAX(CASE col.column_position WHEN 13 THEN ':'||col.column_name END)||
                         MAX(CASE col.column_position WHEN 14 THEN ':'||col.column_name END)||
                         MAX(CASE col.column_position WHEN 15 THEN ':'||col.column_name END)||
                         MAX(CASE col.column_position WHEN 16 THEN ':'||col.column_name END) indexed_columns
                    FROM dba_ind_columns col,
                         dba_indexes idx
                   WHERE (idx.table_owner, idx.table_name) IN (SELECT object_owner, object_name
                                                                 FROM plan_table
                                                                WHERE statement_id = 'LIST_OF_TABLES'
                                                                  AND remarks = 'd1bmu84pdu6gx')
                     AND idx.owner = col.index_owner
                     AND idx.index_name = col.index_name
                   GROUP BY col.index_owner,col.index_name,col.table_owner,col.table_name,idx.index_type,idx.uniqueness)
     , tab_stats_history AS (SELECT o.owner, o.object_name, h.analyzetime, h.rowcnt
                               FROM sys.wri$_optstat_tab_history h,
                                    dba_objects o
                              WHERE (o.owner, o.object_name) IN (SELECT object_owner, object_name
                                                                   FROM plan_table
                                                                  WHERE statement_id = 'LIST_OF_TABLES'
                                                                    AND remarks = 'd1bmu84pdu6gx')
                                AND o.object_type = 'TABLE'
                                AND o.object_id = h.obj#
                                AND 'Y' = 'Y'
                              UNION ALL
                             SELECT owner, table_name, last_analyzed, num_rows
                               FROM tables
                            )
SELECT scope, owner, table_name, message
  FROM (SELECT 'TABLE_STATS' scope, owner, table_name,  'Table '||table_name||' has statistics more than a month old ('||TRUNC(SYSDATE-last_analyzed)||' days old)' message
          FROM tables
         WHERE last_analyzed < ADD_MONTHS(TRUNC(SYSDATE),-1)
         UNION ALL
        SELECT 'TABLE_STALE_STATS', owner, table_name,  'Table '||table_name||' has stale stats'
          FROM table_and_part_stats
         WHERE stale_stats = 'YES'
           AND partition_name IS NULL
         UNION ALL
        SELECT 'TABLE_LOCKED_STATS', owner, table_name,  'Table '||table_name||' has locked stats'
          FROM table_and_part_stats
         WHERE stattype_locked IN ('ALL','DATA')
           AND partition_name IS NULL
         UNION ALL
        SELECT 'TABLE_MISSING_STATS', owner, table_name,  'Table '||table_name||' has no stats'
          FROM tables
         WHERE num_rows IS NULL
         UNION ALL
        SELECT 'PARTITION_STATS', table_owner, table_name,  'Table '||table_name||' has '||num_old_parts||' partition(s) with statistics more than a month old'
          FROM (SELECT COUNT(*) num_old_parts, table_owner, table_name
                  FROM partitions
                 WHERE last_analyzed < ADD_MONTHS(TRUNC(SYSDATE),-1)
                 GROUP BY table_owner, table_name)
         WHERE num_old_parts > 0
         UNION ALL
        SELECT 'PARTITION_STALE_STATS', owner, table_name,  'Table partition '||table_name||'.'||partition_name||' has stale stats'
          FROM table_and_part_stats
         WHERE stale_stats = 'YES'
           AND partition_name IS NOT NULL
         UNION ALL
        SELECT 'PARTITION_LOCKED_STATS', owner, table_name,  'Table partition '||table_name||'.'||partition_name||' has locked stats'
          FROM table_and_part_stats
         WHERE stattype_locked IN ('ALL','DATA')
           AND partition_name IS NOT NULL
         UNION ALL
        SELECT 'PARTITION_MISSING_STATS', table_owner, table_name,  'Table partition '||table_name||'.'||partition_name||' has no stats'
          FROM partitions
         WHERE num_rows IS NULL
         UNION ALL
        SELECT 'TABLE_STATS', owner, table_name,  'Table '||table_name||' stores 0 rows but accounts for more than 0 blocks'
          FROM tables
         WHERE num_rows = 0 and blocks > 0
         UNION ALL
        SELECT 'PARTITION_STATS', table_owner, table_name||'.'||partition_name,  'Table partition '||table_name||'.'||partition_name||' stores 0 rows but accounts for more than 0 blocks'
          FROM partitions
         WHERE num_rows = 0 and blocks > 0
         UNION ALL
        SELECT 'TABLE_STATS', owner, table_name,  'Table '||table_name||' seems empty (0 rows and 0 blocks)'
          FROM tables
         WHERE num_rows = 0 and blocks = 0
         UNION ALL
        SELECT 'PARTITION_STATS', table_owner, table_name||'.'||partition_name,  'Table partition '||table_name||'.'||partition_name||' seems empty (0 rows and 0 blocks)'
          FROM partitions
         WHERE num_rows = 0 and blocks = 0
         UNION ALL
        SELECT 'TABLE_DEGREE', owner, table_name,  'Table '||table_name||' has a non-default DEGREE ('||TRIM(degree)||')'
          FROM tables
         WHERE TRIM(degree) <> '1'
         UNION ALL
        SELECT 'TABLE_DEGREE', owner, table_name,  'Table '||table_name||' is smaller than 1G in size ('||TRUNC((tbs.block_size * t.blocks)/POWER(10,9),3)||'G) but has DEGREE different than 1 ('||TRIM(degree)||')'
          FROM tables t, tablespaces tbs
         WHERE t.tablespace_name = tbs.tablespace_name
           AND TRIM(degree) <> '1'
           AND (tbs.block_size * t.blocks)/POWER(10,9) <= 1
         UNION ALL
        SELECT 'INDEX_DEGREE', tables.owner, tables.table_name, 'Table '||tables.table_name||' has '||COUNT(*)||' indexes with DEGREE different than the table itself'
          FROM tables,
               indexes
         WHERE tables.owner = indexes.table_owner
           AND tables.table_name = indexes.table_name
           AND TRIM(tables.degree) <> TRIM(indexes.degree)
         GROUP BY tables.owner, tables.table_name
         HAVING COUNT(*) > 0
         UNION ALL
        SELECT 'REDUNDANT_INDEX', r.table_owner, r.table_name, 'Index '||r.index_name||' ('||r.indexed_columns||') is redundant because of '||i.index_name||' ('||i.indexed_columns||')'
          FROM ind_cols r,
               ind_cols i
         WHERE i.table_owner = r.table_owner
           AND i.table_name = r.table_name
           AND i.index_type = r.index_type
           AND i.index_name != r.index_name
           AND i.indexed_columns LIKE r.indexed_columns||':%'
           AND r.uniqueness = 'NONUNIQUE'
         UNION ALL
         SELECT 'TABLE_STATS_HISTORY', owner, table_name, 'Stats were 0 at some point, starting '||init_zero||' up until stats gathering on '||end_zero
           FROM (SELECT owner, object_name table_name, to_char(init_zero,'YYYY-MM-DD/HH24:MI:SS') init_zero, to_char(end_zero,'YYYY-MM-DD/HH24:MI:SS') end_zero
                   FROM tab_stats_history
                   MATCH_RECOGNIZE (
                     PARTITION BY owner, object_name ORDER BY analyzetime
                     MEASURES FIRST(iszero.analyzetime) init_zero,
                              FIRST(a_nonzero.analyzetime) end_zero
                     --ALL ROWS PER MATCH
                     AFTER MATCH SKIP TO FIRST a_nonzero
                     PATTERN (b_nonzero+ iszero+ a_nonzero+)
                     DEFINE b_nonzero AS rowcnt <> 0,
                            iszero  AS rowcnt = 0,
                            a_nonzero AS rowcnt <> 0
                   )
                )
        )
 ORDER BY owner, table_name, scope DESC

16:52:17 col:1of5.

16:52:17 col:1of5 "00025_sqld360_323688_d1bmu84pdu6gx_1f_20_tablelevel_observations.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:17 col:2of5 "Identification"
16:52:17 Formatted SQL

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:17 col:2of5 "Identification"
16:52:17 Standalone SQL

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:17 col:2of5 "Identification"
16:52:17 Expanded SQL

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:18 col:2of5 "Identification"
16:52:18 SQL Text

SELECT /*+ NO_MERGE */
       *
  FROM v$sqltext_with_newlines
 WHERE sql_id = 'd1bmu84pdu6gx'
 ORDER BY piece

16:52:18 col:2of5.

16:52:18 col:2of5 "00029_sqld360_323688_d1bmu84pdu6gx_2a_25_sql_text.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:18 col:2of5 "Identification"
16:52:18 SQL Text from AWR

SELECT /*+ NO_MERGE */
       *
  FROM dba_hist_sqltext
 WHERE sql_id = 'd1bmu84pdu6gx'

16:52:18 col:2of5.

16:52:18 col:2of5 "00030_sqld360_323688_d1bmu84pdu6gx_2a_26_sql_text_from_awr.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:18 col:2of5 "Performance"
16:52:18 SQL Performance Summary

 SELECT /*+ NO_MERGE */
       source, plan_hash_value, force_matching_signature, SUM(executions) execs, SUM(end_of_fetch_count) eof_count, ROUND(SUM(buffer_gets)/DECODE(SUM(executions),0,1,SUM(executions))) avg_buffer_gets,
       ROUND(SUM(elapsed_time)/1e6/DECODE(SUM(executions),0,1,SUM(executions)),6) avg_elapsed_time_secs, ROUND(SUM(cpu_time)/1e6/DECODE(SUM(executions),0,1,SUM(executions)),6) avg_cpu_time_secs,
       ROUND(SUM(io_time)/1e6/DECODE(SUM(executions),0,1,SUM(executions)),6) avg_io_time_secs, ROUND(SUM(rows_processed)/DECODE(SUM(executions),0,1,SUM(executions)),3) avg_rows_processed,
       ROUND(SUM(rows_processed)/DECODE(SUM(fetches),0,1,SUM(fetches)),3) avg_rows_per_fetch,
       sql_profile,
       sql_plan_baseline, sql_patch,
       ROUND(AVG(cost)) avg_cost, MIN(cost) min_cost, MAX(cost) max_cost,
       MIN(first_load_time) first_load_time, MAX(last_load_time) last_load_time,
       MIN(optimizer_env_hash_value) min_cbo_env, max(optimizer_env_hash_value) max_cbo_env,
       MIN(min_dop) min_req_dop, MAX(max_dop) max_req_dop
  FROM (SELECT 'MEM' source, a.plan_hash_value, a.force_matching_signature, a.sql_profile,
                a.sql_plan_baseline, a.sql_patch,
                executions, fetches, end_of_fetch_count, elapsed_time, cpu_time, rows_processed, buffer_gets, first_load_time, last_load_time, optimizer_cost cost, optimizer_env_hash_value, min_dop, max_dop, user_io_wait_time io_time
          FROM gv$sql a,
               (SELECT plan_hash_value, MIN(TO_NUMBER(extractValue(XMLType(other_xml),'/other_xml/info[@type="dop"]'))) min_dop,
                       MAX(TO_NUMBER(extractValue(XMLType(other_xml),'/other_xml/info[@type="dop"]'))) max_dop
                  FROM gv$sql_plan
                 WHERE sql_id = 'd1bmu84pdu6gx'
                   AND other_xml IS NOT NULL
                 GROUP BY plan_hash_value) dop
         WHERE sql_id = 'd1bmu84pdu6gx'
           AND a.plan_hash_value = dop.plan_hash_value(+)
        UNION ALL
        SELECT 'HIST' source, a.plan_hash_value, a.force_matching_signature, a.sql_profile,
               'N/A' sql_plan_baseline, 'N/A' sql_patch,
               executions_delta executions, fetches_delta fetches,  end_of_fetch_count_delta end_of_fetch_count, elapsed_time_delta elapsed_time, cpu_time_delta cpu_time, rows_processed_delta rows_processed,
               buffer_gets_delta buffer_gets, null first_load_time, null last_load_time, optimizer_cost, optimizer_env_hash_value, min_dop, max_dop, iowait_delta
          FROM dba_hist_sqlstat a,
               (SELECT plan_hash_value, MIN(TO_NUMBER(extractValue(XMLType(other_xml),'/other_xml/info[@type="dop"]'))) min_dop,
                       MAX(TO_NUMBER(extractValue(XMLType(other_xml),'/other_xml/info[@type="dop"]'))) max_dop
                  FROM dba_hist_sql_plan
                 WHERE sql_id = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                   AND other_xml IS NOT NULL
                 GROUP BY plan_hash_value) dop
         WHERE sql_id = 'd1bmu84pdu6gx'
           AND 'Y' = 'Y'
           AND snap_id BETWEEN 3484 AND 4973
           AND a.plan_hash_value = dop.plan_hash_value(+))
 GROUP BY source, plan_hash_value, force_matching_signature,
          sql_plan_baseline, sql_patch,
          sql_profile

16:52:18 col:2of5.

16:52:18 col:2of5 "00031_sqld360_323688_d1bmu84pdu6gx_2b_27_sql_performance_summary.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:18 col:2of5 "Performance"
16:52:18 SQL Statistics from Memory


16:52:18 col:2of5.

16:52:18 col:2of5 "00032_sqld360_323688_d1bmu84pdu6gx_2b_28_sql_statistics_from_memory.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:18 col:2of5 "Performance"
16:52:18 SQL Statistics from Memory (SQLSTATS)


16:52:18 col:2of5.

16:52:18 col:2of5 "00033_sqld360_323688_d1bmu84pdu6gx_2b_29_sql_statistics_from_memory_sqlstats.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:18 col:2of5 "Performance"
16:52:18 SQL Plan Statistics from Memory

SELECT /*+ NO_MERGE */
       *
  FROM gv$sql_plan_statistics_all
 WHERE sql_id = 'd1bmu84pdu6gx'
 ORDER BY inst_id, plan_hash_value, child_number, id

16:52:18 col:2of5.

16:52:18 col:2of5 "00034_sqld360_323688_d1bmu84pdu6gx_2b_30_sql_plan_statistics_from_memory.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:18 col:2of5 "Performance"
16:52:18 SQL Plan Statistics from Memory (SQLSTATS)


16:52:18 col:2of5.

16:52:18 col:2of5 "00035_sqld360_323688_d1bmu84pdu6gx_2b_31_sql_plan_statistics_from_memory_sqlstats.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:18 col:2of5 "Performance"
16:52:18 SQL Statistics from History

SELECT /*+ NO_MERGE */
       sn.begin_interval_time, sn.end_interval_time,
       s.*
  FROM dba_hist_sqlstat s,
       dba_hist_snapshot sn
 WHERE s.snap_id = sn.snap_id
   AND s.instance_number = sn.instance_number
   AND s.sql_id = 'd1bmu84pdu6gx'
   AND 'Y' = 'Y'
   AND s.snap_id BETWEEN 3484 AND 4973
 ORDER BY s.snap_id desc, s.instance_number, s.plan_hash_value

16:52:18 col:2of5.

16:52:18 col:2of5 "00036_sqld360_323688_d1bmu84pdu6gx_2b_32_sql_statistics_from_history.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:18 col:2of5 "Performance"
16:52:18 SQL Plan Statistics from History

SELECT /*+ NO_MERGE */
       *
  FROM dba_hist_sql_plan
 WHERE sql_id = 'd1bmu84pdu6gx'
   AND 'Y' = 'Y'
 ORDER BY plan_hash_value, id

16:52:18 col:2of5.

16:52:18 col:2of5 "00037_sqld360_323688_d1bmu84pdu6gx_2b_33_sql_plan_statistics_from_history.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:18 col:2of5 "Execution Plans"
16:52:18 Plan Details

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:19 col:2of5 "Execution Plans"
16:52:19 Plan Tree for PHV 0 with subtree

WITH ashdata AS (-- count the number of samples in ASH for each step
-- goal is to compute RATIO_TO_REPORT
SELECT NVL(id,0) id,
COUNT(*) num_samples,
ROUND(100*NVL(RATIO_TO_REPORT(COUNT(*)) OVER (),0),2) perc_impact
FROM plan_table
WHERE statement_id LIKE 'SQLD360_ASH_DATA%'
AND /*cost*/ bytes =0
AND remarks = 'd1bmu84pdu6gx'
GROUP BY NVL(id,0)),
orig_plan AS (-- extract the plan steps "as is", just replace to single quote in the filter predicates
-- precedence is given to plan from memory since it has filters
-- using RANK since there could be more than one entry but with different predicate ordering
SELECT sql_id, plan_hash_value, id, parent_id, operation, options, object_name, access_predicates, filter_predicates, other_xml
FROM (SELECT sql_id, plan_hash_value, id, parent_id, operation, options, object_name,
REPLACE(SUBSTR(access_predicates,1,1500), CHR(39) , CHR(92)||CHR(39)) access_predicates,
REPLACE(SUBSTR(filter_predicates,1,1500), CHR(39) , CHR(92)||CHR(39)) filter_predicates,
other_xml,
RANK() OVER (ORDER BY inst_id, child_number) rnk
FROM gv$sql_plan_statistics_all
WHERE sql_id = 'd1bmu84pdu6gx'
AND plan_hash_value =0)
WHERE rnk = 1
UNION ALL
SELECT sql_id, plan_hash_value, id, parent_id, operation, options, object_name,
REPLACE(access_predicates, CHR(39), CHR(92)||CHR(39)) access_predicates,
REPLACE(filter_predicates, CHR(39), CHR(92)||CHR(39)) filter_predicates,
other_xml
FROM dba_hist_sql_plan
WHERE sql_id = 'd1bmu84pdu6gx'
AND plan_hash_value =0
AND NOT EXISTS (SELECT 1
FROM gv$sql_plan_statistics_all
WHERE plan_hash_value =0
AND sql_id = 'd1bmu84pdu6gx'
AND 'Y' = 'Y')),
skip_steps AS (-- extract the display_map for the plan, to identify why steps are "skipped" because of adaptive
SELECT sql_id, plan_hash_value, EXTRACTVALUE(VALUE(b),'/row/@op') stepid, EXTRACTVALUE(VALUE(b),'/row/@skp') skp, EXTRACTVALUE(VALUE(b),'/row/@dep') dep
FROM orig_plan a,
TABLE(XMLSEQUENCE(EXTRACT(XMLTYPE(a.other_xml),'/*/display_map/row'))) b
WHERE sql_id = 'd1bmu84pdu6gx'
AND other_xml IS NOT NULL),
adapt_plan_no_parent AS (-- generate adaptive_id (aka step_id) once the adaptive steps are excluded
SELECT a.sql_id, a.plan_hash_value, a.id, a.parent_id, b.dep,
(ROW_NUMBER() OVER (ORDER BY a.id))-1 adapt_id, a.operation, a.options, a.object_name, a.access_predicates, a.filter_predicates, b.skp
FROM orig_plan a,
skip_steps b
WHERE a.id = b.stepid(+)
AND (b.skp = 0 OR b.skp IS NULL)),
full_adaptive_plan AS (-- generate the parent adaptive step id
SELECT id, adapt_id, NVL(adapt_parent_id, parent_id) parent_id, operation, options, object_name, access_predicates, filter_predicates
FROM (SELECT dep, adapt_id, id, (SELECT MAX(adapt_id) FROM adapt_plan_no_parent b WHERE a.dep-1 = NVL(b.dep,0) AND b.adapt_id < a.adapt_id ) adapt_parent_id,
parent_id, a.operation operation, a.options, a.object_name, a.access_predicates, a.filter_predicates
FROM adapt_plan_no_parent a)),
plan_with_ash AS (SELECT full_adaptive_plan.*, NVL(ashdata.num_samples,0) num_samples, NVL(ashdata.perc_impact,0) perc_impact
FROM full_adaptive_plan,
ashdata
WHERE ashdata.id(+) = full_adaptive_plan.id),
plan_with_rec_impact AS (-- compute recursive impact (substree impact)
SELECT a.*, (SELECT sum(b.perc_impact)
FROM plan_with_ash b
START WITH b.adapt_id = a.adapt_id
CONNECT BY prior b.adapt_id = b.parent_id) sum_perc_impact
FROM plan_with_ash a)
SELECT '{v: '''||adapt_id||''',f: '''||adapt_id||' - '||operation||' '||options||NVL2(object_name,'<br>',' ')||object_name||'''}' id,
parent_id,
SUBSTR('Step ID: '||adapt_id||' (ASH Step ID: '||id||')\nASH Samples: '||num_samples||' ('||perc_impact||'%)'||
'\nSubstree Impact '||sum_perc_impact||'%'||
NVL2(access_predicates,'\n\nAccess Predicates: '||access_predicates,'')||NVL2(filter_predicates,'\n\nFilter Predicates: '||filter_predicates,''),1,4000) message,
adapt_id id3
FROM plan_with_rec_impact
ORDER BY id3

16:52:19 col:2of5.

16:52:19 col:2of5 "00039_sqld360_323688_d1bmu84pdu6gx_2d_1_plan_tree_for_phv_0_with_subtree_org_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:19 col:2of5 "Execution Plans"
16:52:19 Plan from Memory for PHV 0
Completed: 16:52:19


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:19 col:2of5 "Execution Plans"
16:52:19 Plan from History for PHV 0
Completed: 16:52:19


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:19 col:2of5 "Execution Plans"
16:52:19 Avg et/exec for recent execs for PHV 0

SELECT 0 snap_id,
TO_CHAR(start_time, 'YYYY-MM-DD HH24:MI') begin_time,
TO_CHAR(start_time, 'YYYY-MM-DD HH24:MI') end_time,
avg_et,
avg_cpu_time,
avg_db_time,
min_et,
max_et,
AVG(avg_et) OVER (ORDER BY start_time ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) avg_et_trend,
0 dummy_07,
0 dummy_08,
0 dummy_09,
0 dummy_10,
0 dummy_11,
0 dummy_12,
0 dummy_13,
0 dummy_14,
0 dummy_15
FROM (SELECT start_time,
TRUNC(AVG(et),2) avg_et,
TRUNC(AVG(cpu_time),2) avg_cpu_time,
TRUNC(AVG(db_time),2) avg_db_time,
TRUNC(MIN(et),2) min_et,
TRUNC(MAX(et),2) max_et
FROM (SELECT TO_DATE(SUBSTR(distribution,1,12),'YYYYMMDDHH24MI') start_time,
NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
NVL(partition_id,0)||'-'||NVL(distribution,'x') uniq_exec,
1+86400*(MAX(timestamp)-MIN(timestamp)) et,
SUM(CASE WHEN object_node = 'ON CPU' THEN                    1 ELSE 0 END) cpu_time,
COUNT(*) db_time
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_MEM'
AND /*cost*/ bytes =  0
AND remarks = 'd1bmu84pdu6gx'
AND partition_id IS NOT NULL
AND 'Y' = 'Y'
GROUP BY TO_DATE(SUBSTR(distribution,1,12),'YYYYMMDDHH24MI'),
NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
NVL(partition_id,0)||'-'||NVL(distribution,'x'))
GROUP BY start_time)
ORDER BY 3

16:52:19 col:2of5.

16:52:19 col:2of5 "00042_sqld360_323688_d1bmu84pdu6gx_2d_2_avg_etexec_for_recent_execs_for_phv_0.html"
16:52:19 col:2of5 "00043_sqld360_323688_d1bmu84pdu6gx_2d_2_avg_etexec_for_recent_execs_for_phv_0_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:19 col:2of5 "Execution Plans"
16:52:19 Avg et/exec for historical execs for PHV 0

SELECT b.snap_id snap_id,
TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI') begin_time,
TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI') end_time,
NVL(avg_et,0) avg_et,
NVL(avg_cpu_time,0) avg_cpu_time,
NVL(avg_db_time,0) avg_db_time,
NVL(min_et,0) min_et,
NVL(max_et,0) max_et,
NVL(AVG(avg_et) OVER (ORDER BY b.snap_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),0) avg_et_trend,
0 dummy_07,
0 dummy_08,
0 dummy_09,
0 dummy_10,
0 dummy_11,
0 dummy_12,
0 dummy_13,
0 dummy_14,
0 dummy_15
FROM (SELECT snap_id,
TRUNC(MAX(avg_et),2) avg_et,
TRUNC(MAX(avg_cpu_time),2) avg_cpu_time,
TRUNC(MAX(avg_db_time),2) avg_db_time,
TRUNC(MAX(min_et),2) min_et,
TRUNC(MAX(max_et),2) max_et
FROM (SELECT start_time,
MIN(start_snap_id) snap_id,
AVG(et) avg_et,
AVG(cpu_time) avg_cpu_time,
AVG(db_time) avg_db_time,
MIN(et) min_et,
MAX(et) max_et
FROM (SELECT TO_DATE(SUBSTR(distribution,1,12),'YYYYMMDDHH24MI') start_time,
NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
NVL(partition_id,0)||'-'||NVL(distribution,'x') uniq_exec,
MIN(cardinality) start_snap_id,
10+86400*(MAX(timestamp)-MIN(timestamp)) et,
SUM(CASE WHEN object_node = 'ON CPU' THEN                   10 ELSE 0 END) cpu_time,
SUM(                  10) db_time
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND partition_id IS NOT NULL
AND /*cost*/ bytes = 0
AND remarks = 'd1bmu84pdu6gx'
AND 'Y' = 'Y'
GROUP BY TO_DATE(SUBSTR(distribution,1,12),'YYYYMMDDHH24MI'),
NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
NVL(partition_id,0)||'-'||NVL(distribution,'x'))
GROUP BY start_time)
GROUP BY snap_id) ash,
(SELECT snap_id, begin_interval_time, end_interval_time
FROM (SELECT snap_id, begin_interval_time, end_interval_time,
ROW_NUMBER() OVER (PARTITION BY snap_id ORDER BY instance_number) rn
FROM dba_hist_snapshot)
WHERE rn = 1) b
WHERE ash.snap_id(+) = b.snap_id
AND b.snap_id BETWEEN 3484 AND 4973
ORDER BY 3

16:52:19 col:2of5.

16:52:19 col:2of5 "00044_sqld360_323688_d1bmu84pdu6gx_2d_3_avg_etexec_for_historical_execs_for_phv_0.html"
16:52:19 col:2of5 "00045_sqld360_323688_d1bmu84pdu6gx_2d_3_avg_etexec_for_historical_execs_for_phv_0_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:20 col:2of5 "Execution Plans"
16:52:20 Peak PGA and TEMP usage for recent execs for PHV 0

SELECT 0 snap_id,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI') begin_time,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI') end_time,
NVL(pga_allocated_min,0) pga_allocated_min,
NVL(temp_space_allocated_min,0) temp_space_allocated_min,
0 dummy_03,
0 dummy_04,
0 dummy_05,
0 dummy_06,
0 dummy_07,
0 dummy_08,
0 dummy_09,
0 dummy_10,
0 dummy_11,
0 dummy_12,
0 dummy_13,
0 dummy_14,
0 dummy_15
FROM (SELECT TRUNC(end_time,'mi') end_time,
MAX(pga_allocated) pga_allocated_min,
MAX(temp_space_allocated) temp_space_allocated_min
FROM (SELECT timestamp end_time,
SUM(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,11)+1,INSTR(partition_stop,',',1,12)-INSTR(partition_stop,',',1,11)-1))) pga_allocated,
SUM(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,12)+1,INSTR(partition_stop,',',1,13)-INSTR(partition_stop,',',1,12)-1))) temp_space_allocated
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_MEM'
AND /*cost*/ bytes =  0
AND remarks = 'd1bmu84pdu6gx'
AND partition_id IS NOT NULL
AND 'Y' = 'Y'
GROUP BY timestamp)
GROUP BY TRUNC(end_time,'mi'))
ORDER BY 3

16:52:20 col:2of5.

16:52:20 col:2of5 "00046_sqld360_323688_d1bmu84pdu6gx_2d_4_peak_pga_and_temp_usage_for_recent_execs_for_phv_0.html"
16:52:20 col:2of5 "00047_sqld360_323688_d1bmu84pdu6gx_2d_4_peak_pga_and_temp_usage_for_recent_execs_for_phv_0_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:20 col:2of5 "Execution Plans"
16:52:20 Peak PGA and TEMP usage for historical execs for PHV 0

SELECT b.snap_id snap_id,
TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI') begin_time,
TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI') end_time,
NVL(pga_allocated_hour,0) pga_allocated_hour,
NVL(temp_space_allocated_hour,0) temp_space_allocated_hour,
0 dummy_03,
0 dummy_04,
0 dummy_05,
0 dummy_06,
0 dummy_07,
0 dummy_08,
0 dummy_09,
0 dummy_10,
0 dummy_11,
0 dummy_12,
0 dummy_13,
0 dummy_14,
0 dummy_15
FROM (SELECT snap_id,
MAX(pga_allocated) pga_allocated_hour,
MAX(temp_space_allocated) temp_space_allocated_hour
FROM (SELECT cardinality snap_id,
timestamp end_time,
SUM(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,11)+1,INSTR(partition_stop,',',1,12)-INSTR(partition_stop,',',1,11)-1))) pga_allocated,
SUM(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,12)+1,INSTR(partition_stop,',',1,13)-INSTR(partition_stop,',',1,12)-1))) temp_space_allocated
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes = 0
AND remarks = 'd1bmu84pdu6gx'
AND 'Y' = 'Y'
GROUP BY cardinality, timestamp)
GROUP BY snap_id) ash,
(SELECT snap_id, begin_interval_time, end_interval_time
FROM (SELECT snap_id, begin_interval_time, end_interval_time,
ROW_NUMBER() OVER (PARTITION BY snap_id ORDER BY instance_number) rn
FROM dba_hist_snapshot)
WHERE rn = 1) b
WHERE ash.snap_id(+) = b.snap_id
AND b.snap_id BETWEEN 3484 AND 4973
ORDER BY 3

16:52:20 col:2of5.

16:52:20 col:2of5 "00048_sqld360_323688_d1bmu84pdu6gx_2d_5_peak_pga_and_temp_usage_for_historical_execs_for_phv_0.html"
16:52:20 col:2of5 "00049_sqld360_323688_d1bmu84pdu6gx_2d_5_peak_pga_and_temp_usage_for_historical_execs_for_phv_0_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:20 col:2of5 "Execution Plans"
16:52:20 Peak Read and Write I/O requests for recent execs for PHV 0

SELECT 0 snap_id,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI') begin_time,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI') end_time,
NVL(read_io_requests_min,0)  read_io_requests_min,
NVL(write_io_requests_min,0)  write_io_requests_min,
0 dummy_03,
0 dummy_04,
0 dummy_05,
0 dummy_06,
0 dummy_07,
0 dummy_08,
0 dummy_09,
0 dummy_10,
0 dummy_11,
0 dummy_12,
0 dummy_13,
0 dummy_14,
0 dummy_15
FROM (SELECT TRUNC(end_time,'mi') end_time,
TRUNC(MAX(read_io_requests),2) read_io_requests_min,
TRUNC(MAX(write_io_requests),2) write_io_requests_min
FROM (SELECT timestamp end_time,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,14)+1,INSTR(partition_stop,',',1,15)-INSTR(partition_stop,',',1,14)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) read_io_requests,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,15)+1,INSTR(partition_stop,',',1,16)-INSTR(partition_stop,',',1,15)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) write_io_requests
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_MEM'
AND /*cost*/ bytes =  0
AND remarks = 'd1bmu84pdu6gx'
AND partition_id IS NOT NULL
AND 'Y' = 'Y'
GROUP BY timestamp)
GROUP BY TRUNC(end_time,'mi'))
ORDER BY 3

16:52:20 col:2of5.

16:52:20 col:2of5 "00050_sqld360_323688_d1bmu84pdu6gx_2d_6_peak_read_and_write_io_requests_for_recent_execs_for_phv_0.html"
16:52:20 col:2of5 "00051_sqld360_323688_d1bmu84pdu6gx_2d_6_peak_read_and_write_io_requests_for_recent_execs_for_phv_0_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:20 col:2of5 "Execution Plans"
16:52:20 Peak Read and Write I/O requests for historical execs for PHV 0

SELECT b.snap_id snap_id,
TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI') begin_time,
TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI') end_time,
NVL(read_io_requests_hour,0) read_io_requests_hour,
NVL(write_io_requests_hour,0) write_io_requests_hour,
0 dummy_03,
0 dummy_04,
0 dummy_05,
0 dummy_06,
0 dummy_07,
0 dummy_08,
0 dummy_09,
0 dummy_10,
0 dummy_11,
0 dummy_12,
0 dummy_13,
0 dummy_14,
0 dummy_15
FROM (SELECT snap_id,
TRUNC(MAX(read_io_requests),2) read_io_requests_hour,
TRUNC(MAX(write_io_requests),2) write_io_requests_hour
FROM (SELECT cardinality snap_id,
timestamp end_time,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,14)+1,INSTR(partition_stop,',',1,15)-INSTR(partition_stop,',',1,14)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) read_io_requests,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,15)+1,INSTR(partition_stop,',',1,16)-INSTR(partition_stop,',',1,15)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) write_io_requests
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes = 0
AND remarks = 'd1bmu84pdu6gx'
AND 'Y' = 'Y'
GROUP BY cardinality, timestamp)
GROUP BY snap_id) ash,
(SELECT snap_id, begin_interval_time, end_interval_time
FROM (SELECT snap_id, begin_interval_time, end_interval_time,
ROW_NUMBER() OVER (PARTITION BY snap_id ORDER BY instance_number) rn
FROM dba_hist_snapshot)
WHERE rn = 1) b
WHERE ash.snap_id(+) = b.snap_id
AND b.snap_id BETWEEN 3484 AND 4973
ORDER BY 3

16:52:20 col:2of5.

16:52:20 col:2of5 "00052_sqld360_323688_d1bmu84pdu6gx_2d_7_peak_read_and_write_io_requests_for_historical_execs_for_phv_0.html"
16:52:20 col:2of5 "00053_sqld360_323688_d1bmu84pdu6gx_2d_7_peak_read_and_write_io_requests_for_historical_execs_for_phv_0_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:20 col:2of5 "Execution Plans"
16:52:20 Peak Read, Write and Interconnect I/O bytes for recent execs for PHV 0

SELECT 0 snap_id,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI') begin_time,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI') end_time,
read_io_bytes_min,
write_io_bytes_min,
interconnect_io_bytes_min,
0 dummy_04,
0 dummy_05,
0 dummy_06,
0 dummy_07,
0 dummy_08,
0 dummy_09,
0 dummy_10,
0 dummy_11,
0 dummy_12,
0 dummy_13,
0 dummy_14,
0 dummy_15
FROM (SELECT TRUNC(end_time,'mi') end_time,
TRUNC(MAX(read_io_bytes),2) read_io_bytes_min,
TRUNC(MAX(write_io_bytes),2) write_io_bytes_min,
TRUNC(MAX(interconnect_io_bytes),2) interconnect_io_bytes_min
FROM (SELECT timestamp end_time,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,16)+1,INSTR(partition_stop,',',1,17)-INSTR(partition_stop,',',1,16)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) read_io_bytes,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,17)+1,INSTR(partition_stop,',',1,18)-INSTR(partition_stop,',',1,17)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) write_io_bytes,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,18)+1,INSTR(partition_stop,',',1,19)-INSTR(partition_stop,',',1,18)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) interconnect_io_bytes
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_MEM'
AND /*cost*/ bytes =  0
AND remarks = 'd1bmu84pdu6gx'
AND partition_id IS NOT NULL
AND 'Y' = 'Y'
GROUP BY timestamp)
GROUP BY TRUNC(end_time,'mi'))
ORDER BY 3

16:52:20 col:2of5.

16:52:20 col:2of5 "00054_sqld360_323688_d1bmu84pdu6gx_2d_8_peak_read_write_and_interconnect_io_bytes_for_recent_execs_for_phv_0.html"
16:52:20 col:2of5 "00055_sqld360_323688_d1bmu84pdu6gx_2d_8_peak_read_write_and_interconnect_io_bytes_for_recent_execs_for_phv_0_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:20 col:2of5 "Execution Plans"
16:52:20 Peak Read, Write and Interconnect I/O bytes for historical execs for PHV 0

SELECT b.snap_id snap_id,
TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI') begin_time,
TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI') end_time,
NVL(read_io_bytes_hour,0) read_io_requests_hour,
NVL(write_io_bytes_hour,0) write_io_bytes_hour,
NVL(interconnect_io_bytes_hour,0) interconnect_io_bytes_hour,
0 dummy_04,
0 dummy_05,
0 dummy_06,
0 dummy_07,
0 dummy_08,
0 dummy_09,
0 dummy_10,
0 dummy_11,
0 dummy_12,
0 dummy_13,
0 dummy_14,
0 dummy_15
FROM (SELECT snap_id,
TRUNC(MAX(read_io_bytes),2) read_io_bytes_hour,
TRUNC(MAX(write_io_bytes),2) write_io_bytes_hour,
TRUNC(MAX(interconnect_io_bytes),2) interconnect_io_bytes_hour
FROM (SELECT cardinality snap_id,
timestamp end_time,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,16)+1,INSTR(partition_stop,',',1,17)-INSTR(partition_stop,',',1,16)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) read_io_bytes,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,17)+1,INSTR(partition_stop,',',1,18)-INSTR(partition_stop,',',1,17)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) write_io_bytes,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,18)+1,INSTR(partition_stop,',',1,19)-INSTR(partition_stop,',',1,18)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) interconnect_io_bytes
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes = 0
AND remarks = 'd1bmu84pdu6gx'
AND 'Y' = 'Y'
GROUP BY cardinality, timestamp)
GROUP BY snap_id) ash,
(SELECT snap_id, begin_interval_time, end_interval_time
FROM (SELECT snap_id, begin_interval_time, end_interval_time,
ROW_NUMBER() OVER (PARTITION BY snap_id ORDER BY instance_number) rn
FROM dba_hist_snapshot)
WHERE rn = 1) b
WHERE ash.snap_id(+) = b.snap_id
AND b.snap_id BETWEEN 3484 AND 4973
ORDER BY 3

16:52:20 col:2of5.

16:52:20 col:2of5 "00056_sqld360_323688_d1bmu84pdu6gx_2d_9_peak_read_write_and_interconnect_io_bytes_for_historical_execs_for_phv_0.html"
16:52:20 col:2of5 "00057_sqld360_323688_d1bmu84pdu6gx_2d_9_peak_read_write_and_interconnect_io_bytes_for_historical_execs_for_phv_0_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:21 col:2of5 "Execution Plans"
16:52:21 Top Wait events for PHV 0

SELECT cpu_or_event,
num_samples,
CASE wait_class WHEN 'CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' THEN '0252D7' WHEN 'System I/O' THEN '1E96DD'  WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05' WHEN 'Configuration' THEN '594611'   WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'  WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' END style,
cpu_or_event||' - '||num_samples||' Samples ('||TRUNC(100*RATIO_TO_REPORT(num_samples) OVER (),2)||'% of DB Time)' tooltip
FROM (SELECT object_node cpu_or_event, other_tag wait_class,
count(*) num_samples
FROM plan_table
WHERE /*cost*/ bytes =  0
AND remarks = 'd1bmu84pdu6gx'
AND 'Y' = 'Y'
AND statement_id LIKE 'SQLD360_ASH_DATA%'
GROUP BY object_node, other_tag
ORDER BY 3 DESC)
ORDER BY 2 DESC

16:52:21 col:2of5.

16:52:21 col:2of5 "00058_sqld360_323688_d1bmu84pdu6gx_2d_10_top_wait_events_for_phv_0.html"
16:52:21 col:2of5 "00059_sqld360_323688_d1bmu84pdu6gx_2d_10_top_wait_events_for_phv_0_bar_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:21 col:2of5 "Execution Plans"
16:52:21 Top Objects accessed by PHV 0

SELECT data_object,
num_samples,
NULL style,
data_object||' - '||num_samples||' Samples ('||TRUNC(100*RATIO_TO_REPORT(num_samples) OVER (),2)||'% of DB Time)' tooltip
FROM (SELECT data.obj#||
CASE WHEN data.obj# = 0 THEN 'UNDO'
ELSE (SELECT TRIM('.' FROM ' '||o.owner||'.'||o.object_name||'.'||o.subobject_name) FROM dba_objects o WHERE o.object_id = data.obj# AND ROWNUM = 1)
END data_object,
num_samples
FROM (SELECT a.object_instance obj#,
count(*) num_samples
FROM plan_table a
WHERE /*cost*/ a.bytes =  0
AND a.remarks = 'd1bmu84pdu6gx'
AND statement_id LIKE 'SQLD360_ASH_DATA%'
AND 'Y' = 'Y'
AND a.other_tag IN ('Application','Cluster', 'Concurrency', 'User I/O', 'System I/O')
GROUP BY a.object_instance
ORDER BY 2 DESC) data)
ORDER BY 2 DESC

16:52:21 col:2of5.

16:52:21 col:2of5 "00060_sqld360_323688_d1bmu84pdu6gx_2d_11_top_objects_accessed_by_phv_0.html"
16:52:21 col:2of5 "00061_sqld360_323688_d1bmu84pdu6gx_2d_11_top_objects_accessed_by_phv_0_bar_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:21 col:2of5 "Execution Plans"
16:52:21 Top Plan Steps for PHV 0

SELECT operation,
num_samples,
NULL style,
operation||' - '||num_samples||' Samples ('||TRUNC(100*RATIO_TO_REPORT(num_samples) OVER (),2)||'% of DB Time)' tooltip
FROM (SELECT id||' - '||operation||' '||options operation,
count(*) num_samples
FROM plan_table
WHERE /*cost*/ bytes =  0
AND remarks = 'd1bmu84pdu6gx'
AND statement_id LIKE 'SQLD360_ASH_DATA%'
AND 'Y' = 'Y'
GROUP BY id||' - '||operation||' '||options
ORDER BY 2 DESC)
ORDER BY 2 DESC

16:52:21 col:2of5.

16:52:21 col:2of5 "00062_sqld360_323688_d1bmu84pdu6gx_2d_12_top_plan_steps_for_phv_0.html"
16:52:21 col:2of5 "00063_sqld360_323688_d1bmu84pdu6gx_2d_12_top_plan_steps_for_phv_0_bar_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:21 col:2of5 "Execution Plans"
16:52:21 Top Step/Event/Obj for PHV 0

SELECT step_event,
num_samples,
CASE wait_class WHEN 'CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' THEN '0252D7' WHEN 'System I/O' THEN '1E96DD'  WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05' WHEN 'Configuration' THEN '594611'   WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'  WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' END style,
step_event||' - '||num_samples||' Samples ('||TRUNC(100*RATIO_TO_REPORT(num_samples) OVER (),2)||'% of DB Time)' tooltip
FROM (SELECT data.step||' '||CASE WHEN data.obj# = 0 THEN 'UNDO'
ELSE (SELECT TRIM('.' FROM ' '||o.owner||'.'||o.object_name||'.'||o.subobject_name) FROM dba_objects o WHERE o.object_id = data.obj# AND ROWNUM = 1)
END||' / '||data.event  step_event,
data.num_samples, data.wait_class
FROM (SELECT id||' - '||operation||' '||options step, object_instance obj#, object_node event, other_tag wait_class,
count(*) num_samples
FROM plan_table
WHERE /*cost*/ bytes =  0
AND remarks = 'd1bmu84pdu6gx'
AND 'Y' = 'Y'
AND statement_id LIKE 'SQLD360_ASH_DATA%'
GROUP BY id||' - '||operation||' '||options, object_instance, object_node, other_tag
ORDER BY 5 DESC) data)
ORDER BY 2 DESC

16:52:21 col:2of5.

16:52:21 col:2of5 "00064_sqld360_323688_d1bmu84pdu6gx_2d_13_top_stepeventobj_for_phv_0.html"
16:52:21 col:2of5 "00065_sqld360_323688_d1bmu84pdu6gx_2d_13_top_stepeventobj_for_phv_0_bar_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:21 col:2of5 "Execution Plans"
16:52:21 Top 15 Wait events over recent time for PHV 0

SELECT 0 snap_id,
TO_CHAR(sample_time, 'YYYY-MM-DD HH24:MI') begin_time,
TO_CHAR(sample_time, 'YYYY-MM-DD HH24:MI') end_time,
NVL(aas_01,0) "e01" ,
NVL(aas_02,0) "e02" ,
NVL(aas_03,0) "e03" ,
NVL(aas_04,0) "e04" ,
NVL(aas_05,0) "e05" ,
NVL(aas_06,0) "e06" ,
NVL(aas_07,0) "e07" ,
NVL(aas_08,0) "e08" ,
NVL(aas_09,0) "e09" ,
NVL(aas_10,0) "e10" ,
NVL(aas_11,0) "e11" ,
NVL(aas_12,0) "e12" ,
NVL(aas_13,0) "e13" ,
NVL(aas_14,0) "e14" ,
NVL(aas_15,0) "e15"
FROM (SELECT sample_time,
MAX(CASE WHEN cpu_or_event  = '' THEN aas ELSE NULL END) aas_01,
MAX(CASE WHEN cpu_or_event  = '' THEN aas ELSE NULL END) aas_02,
MAX(CASE WHEN cpu_or_event  = '' THEN aas ELSE NULL END) aas_03,
MAX(CASE WHEN cpu_or_event  = '' THEN aas ELSE NULL END) aas_04,
MAX(CASE WHEN cpu_or_event  = '' THEN aas ELSE NULL END) aas_05,
MAX(CASE WHEN cpu_or_event  = '' THEN aas ELSE NULL END) aas_06,
MAX(CASE WHEN cpu_or_event  = '' THEN aas ELSE NULL END) aas_07,
MAX(CASE WHEN cpu_or_event  = '' THEN aas ELSE NULL END) aas_08,
MAX(CASE WHEN cpu_or_event  = '' THEN aas ELSE NULL END) aas_09,
MAX(CASE WHEN cpu_or_event  = '' THEN aas ELSE NULL END) aas_10,
MAX(CASE WHEN cpu_or_event  = '' THEN aas ELSE NULL END) aas_11,
MAX(CASE WHEN cpu_or_event  = '' THEN aas ELSE NULL END) aas_12,
MAX(CASE WHEN cpu_or_event  = '' THEN aas ELSE NULL END) aas_13,
MAX(CASE WHEN cpu_or_event  = '' THEN aas ELSE NULL END) aas_14,
MAX(CASE WHEN cpu_or_event  = '' THEN aas ELSE NULL END) aas_15
FROM (SELECT TRUNC(sample_time, 'mi') sample_time,
cpu_or_event,
ROUND(SUM(num_sess)/60,3) aas
FROM (SELECT timestamp sample_time,
object_node cpu_or_event,
count(*) num_sess
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_MEM'
AND remarks = 'd1bmu84pdu6gx'
AND 'Y' = 'Y'
AND /*cost*/ bytes = 0
AND object_node IN ('','','','','','',
'','','','','','',
'','','')
GROUP BY timestamp, object_node)
GROUP BY TRUNC(sample_time, 'mi'), cpu_or_event)
GROUP BY sample_time)
ORDER BY 3

16:52:21 col:2of5.

16:52:21 col:2of5 "00066_sqld360_323688_d1bmu84pdu6gx_2d_14_top_15_wait_events_over_recent_time_for_phv_0.html"
16:52:21 col:2of5 "00067_sqld360_323688_d1bmu84pdu6gx_2d_14_top_15_wait_events_over_recent_time_for_phv_0_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:21 col:2of5 "Execution Plans"
16:52:21 Top 15 Wait events over historical time for PHV 0

SELECT 0 snap_id,
TO_CHAR(sample_time, 'YYYY-MM-DD HH24:MI') begin_time,
TO_CHAR(sample_time, 'YYYY-MM-DD HH24:MI') end_time,
NVL(aas_01,0) "e01ON CPU" ,
NVL(aas_02,0) "e02cell single block physical " ,
NVL(aas_03,0) "e03gc current grant 2-way" ,
NVL(aas_04,0) "e04gc current block 2-way" ,
NVL(aas_05,0) "e05gc cr multi block request" ,
NVL(aas_06,0) "e06cell list of blocks physica" ,
NVL(aas_07,0) "e07gc cr grant 2-way" ,
NVL(aas_08,0) "e08gcs drm freeze in enter ser" ,
NVL(aas_09,0) "e09cell single block read requ" ,
NVL(aas_10,0) "e10cell multiblock physical re" ,
NVL(aas_11,0) "e11" ,
NVL(aas_12,0) "e12" ,
NVL(aas_13,0) "e13" ,
NVL(aas_14,0) "e14" ,
NVL(aas_15,0) "e15"
FROM (SELECT sample_time,
MAX(CASE WHEN cpu_or_event  = 'ON CPU' THEN aas ELSE NULL END) aas_01,
MAX(CASE WHEN cpu_or_event  = 'cell single block physical read' THEN aas ELSE NULL END) aas_02,
MAX(CASE WHEN cpu_or_event  = 'gc current grant 2-way' THEN aas ELSE NULL END) aas_03,
MAX(CASE WHEN cpu_or_event  = 'gc current block 2-way' THEN aas ELSE NULL END) aas_04,
MAX(CASE WHEN cpu_or_event  = 'gc cr multi block request' THEN aas ELSE NULL END) aas_05,
MAX(CASE WHEN cpu_or_event  = 'cell list of blocks physical read' THEN aas ELSE NULL END) aas_06,
MAX(CASE WHEN cpu_or_event  = 'gc cr grant 2-way' THEN aas ELSE NULL END) aas_07,
MAX(CASE WHEN cpu_or_event  = 'gcs drm freeze in enter server mode' THEN aas ELSE NULL END) aas_08,
MAX(CASE WHEN cpu_or_event  = 'cell single block read request' THEN aas ELSE NULL END) aas_09,
MAX(CASE WHEN cpu_or_event  = 'cell multiblock physical read' THEN aas ELSE NULL END) aas_10,
MAX(CASE WHEN cpu_or_event  = '' THEN aas ELSE NULL END) aas_11,
MAX(CASE WHEN cpu_or_event  = '' THEN aas ELSE NULL END) aas_12,
MAX(CASE WHEN cpu_or_event  = '' THEN aas ELSE NULL END) aas_13,
MAX(CASE WHEN cpu_or_event  = '' THEN aas ELSE NULL END) aas_14,
MAX(CASE WHEN cpu_or_event  = '' THEN aas ELSE NULL END) aas_15
FROM (SELECT TRUNC(sample_time, 'hh24') sample_time,
cpu_or_event,
ROUND(SUM(num_sess)*                  10/3600,3) aas
FROM (SELECT timestamp sample_time,
object_node cpu_or_event,
count(*) num_sess
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND remarks = 'd1bmu84pdu6gx'
AND 'Y' = 'Y'
AND /*cost*/ bytes = 0
AND object_node IN ('ON CPU','cell single block physical read','gc current grant 2-way','gc current block 2-way','gc cr multi block request','cell list of blocks physical read',
'gc cr grant 2-way','gcs drm freeze in enter server mode','cell single block read request','cell multiblock physical read','','',
'','','')
GROUP BY timestamp, object_node)
GROUP BY TRUNC(sample_time, 'hh24'), cpu_or_event)
GROUP BY sample_time)
ORDER BY 3

16:52:21 col:2of5.

16:52:21 col:2of5 "00068_sqld360_323688_d1bmu84pdu6gx_2d_15_top_15_wait_events_over_historical_time_for_phv_0.html"
16:52:21 col:2of5 "00069_sqld360_323688_d1bmu84pdu6gx_2d_15_top_15_wait_events_over_historical_time_for_phv_0_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:21 col:2of5 "Execution Plans"
16:52:21 Plan Tree with subtree for SQL_EXEC_ID 16777216 of PHV 0

WITH ashdata AS (-- count the number of samples in ASH for each step
-- goal is to compute RATIO_TO_REPORT
SELECT NVL(id,0) id,
COUNT(*) num_samples,
ROUND(100*NVL(RATIO_TO_REPORT(COUNT(*)) OVER (),0),2) perc_impact
FROM plan_table
WHERE statement_id LIKE 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 1
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 396
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 29504
AND timestamp BETWEEN TO_DATE('20201017005810', 'YYYYMMDDHH24MISS') AND TO_DATE('20201017021832', 'YYYYMMDDHH24MISS')
AND remarks = 'd1bmu84pdu6gx'
AND NVL(partition_id, 16777216) = 16777216
AND NVL(distribution, TO_DATE('20201017005802', 'YYYYMMDDHH24MISS')) = TO_DATE('20201017005802', 'YYYYMMDDHH24MISS')
GROUP BY NVL(id,0)),
orig_plan AS (-- extract the plan steps "as is", just replace to single quote in the filter predicates
-- precedence is given to plan from memory since it has filters
-- using RANK since there could be more than one entry but with different predicate ordering
SELECT sql_id, plan_hash_value, id, parent_id, operation, options, object_name, access_predicates, filter_predicates, other_xml
FROM (SELECT sql_id, plan_hash_value, id, parent_id, operation, options, object_name,
REPLACE(SUBSTR(access_predicates,1,1500), CHR(39) , CHR(92)||CHR(39)) access_predicates,
REPLACE(SUBSTR(filter_predicates,1,1500), CHR(39) , CHR(92)||CHR(39)) filter_predicates,
other_xml,
RANK() OVER (ORDER BY inst_id, child_number) rnk
FROM gv$sql_plan_statistics_all
WHERE sql_id = 'd1bmu84pdu6gx'
AND plan_hash_value =0)
WHERE rnk = 1
UNION ALL
SELECT sql_id, plan_hash_value, id, parent_id, operation, options, object_name,
REPLACE(access_predicates, CHR(39), CHR(92)||CHR(39)) access_predicates,
REPLACE(filter_predicates, CHR(39), CHR(92)||CHR(39)) filter_predicates,
other_xml
FROM dba_hist_sql_plan
WHERE sql_id = 'd1bmu84pdu6gx'
AND plan_hash_value =0
AND NOT EXISTS (SELECT 1
FROM gv$sql_plan_statistics_all
WHERE plan_hash_value =0
AND sql_id = 'd1bmu84pdu6gx'
AND 'Y' = 'Y')),
skip_steps AS (-- extract the display_map for the plan, to identify why steps are "skipped" because of adaptive
SELECT sql_id, plan_hash_value, EXTRACTVALUE(VALUE(b),'/row/@op') stepid, EXTRACTVALUE(VALUE(b),'/row/@skp') skp, EXTRACTVALUE(VALUE(b),'/row/@dep') dep
FROM orig_plan a,
TABLE(XMLSEQUENCE(EXTRACT(XMLTYPE(a.other_xml),'/*/display_map/row'))) b
WHERE sql_id = 'd1bmu84pdu6gx'
AND other_xml IS NOT NULL),
adapt_plan_no_parent AS (-- generate adaptive_id (aka step_id) once the adaptive steps are excluded
SELECT a.sql_id, a.plan_hash_value, a.id, a.parent_id, b.dep,
(ROW_NUMBER() OVER (ORDER BY a.id))-1 adapt_id, a.operation, a.options, a.object_name, a.access_predicates, a.filter_predicates, b.skp
FROM orig_plan a,
skip_steps b
WHERE a.id = b.stepid(+)
AND (b.skp = 0 OR b.skp IS NULL)),
full_adaptive_plan AS (-- generate the parent adaptive step id
SELECT id, adapt_id, NVL(adapt_parent_id, parent_id) parent_id, operation, options, object_name, access_predicates, filter_predicates
FROM (SELECT dep, adapt_id, id, (SELECT MAX(adapt_id) FROM adapt_plan_no_parent b WHERE a.dep-1 = NVL(b.dep,0) AND b.adapt_id < a.adapt_id ) adapt_parent_id,
parent_id, a.operation operation, a.options, a.object_name, a.access_predicates, a.filter_predicates
FROM adapt_plan_no_parent a)),
plan_with_ash AS (SELECT full_adaptive_plan.*, NVL(ashdata.num_samples,0) num_samples, NVL(ashdata.perc_impact,0) perc_impact
FROM full_adaptive_plan,
ashdata
WHERE ashdata.id(+) = full_adaptive_plan.id),
plan_with_rec_impact AS (-- compute recursive impact (substree impact)
SELECT a.*, (SELECT sum(b.perc_impact)
FROM plan_with_ash b
START WITH b.adapt_id = a.adapt_id
CONNECT BY prior b.adapt_id = b.parent_id) sum_perc_impact
FROM plan_with_ash a)
SELECT '{v: '''||adapt_id||''',f: '''||adapt_id||' - '||operation||' '||options||NVL2(object_name,'<br>',' ')||object_name||'''}' id,
parent_id,
SUBSTR('Step ID: '||adapt_id||' (ASH Step ID: '||id||')\nASH Samples: '||num_samples||' ('||perc_impact||'%)'||
'\nSubstree Impact '||sum_perc_impact||'%'||
NVL2(access_predicates,'\n\nAccess Predicates: '||access_predicates,'')||NVL2(filter_predicates,'\n\nFilter Predicates: '||filter_predicates,''),1,4000) message,
adapt_id id3
FROM plan_with_rec_impact
ORDER BY id3

16:52:21 col:2of5.

16:52:21 col:2of5 "00070_sqld360_323688_d1bmu84pdu6gx_2d_16_plan_tree_with_subtree_for_sqlexecid_16777216_of_phv_0_org_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:22 col:2of5 "Execution Plans"
16:52:22 Plan Step IDs timeline for SQL_EXEC_ID 16777216 of PHV 0

SELECT TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
null,
plan_line_id,
CASE WHEN rtr_category > .5 THEN category ELSE 'Multiple' END,
num_samples
FROM (SELECT end_time, plan_line_id, category, num_samples, rtr_category, ROW_NUMBER() OVER (PARTITION BY end_time, plan_line_id ORDER BY rtr_category DESC) rn_category
FROM (SELECT end_time, plan_line_id, category, SUM(num_samples) OVER (PARTITION BY end_time, plan_line_id) num_samples, RATIO_TO_REPORT(num_samples) OVER (PARTITION BY end_time, plan_line_id) rtr_category
FROM (SELECT timestamp end_time, NVL(id,0) plan_line_id,
CASE WHEN other_tag = 'CPU' THEN 'CPU' WHEN other_tag LIKE '%I/O' THEN 'I/O' WHEN other_tag = 'Concurrency' THEN 'Concurrency' WHEN other_tag = 'Cluster' THEN 'Cluster' ELSE 'Other' END category,
COUNT(*) num_samples
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =  0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 1
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 396
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 29504
AND timestamp BETWEEN TO_DATE('20201017005810', 'YYYYMMDDHH24MISS') AND TO_DATE('20201017021832', 'YYYYMMDDHH24MISS')
AND remarks = 'd1bmu84pdu6gx'
AND NVL(partition_id, 16777216) = 16777216
AND NVL(distribution, TO_DATE('20201017005802', 'YYYYMMDDHH24MISS')) = TO_DATE('20201017005802', 'YYYYMMDDHH24MISS')
AND 'Y' = 'Y'
GROUP BY timestamp, NVL(id,0), CASE WHEN other_tag = 'CPU' THEN 'CPU' WHEN other_tag LIKE '%I/O' THEN 'I/O' WHEN other_tag = 'Concurrency' THEN 'Concurrency' WHEN other_tag = 'Cluster' THEN 'Cluster' ELSE 'Other' END)
)
)
WHERE rn_category = 1
ORDER BY end_time

16:52:22 col:2of5.

16:52:22 col:2of5 "00071_sqld360_323688_d1bmu84pdu6gx_2d_17_plan_step_ids_timeline_for_sqlexecid_16777216_of_phv_0.html"
16:52:22 col:2of5 "00072_sqld360_323688_d1bmu84pdu6gx_2d_17_plan_step_ids_timeline_for_sqlexecid_16777216_of_phv_0_bubble_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:22 col:2of5 "Execution Plans"
16:52:22 Top Step/Event/Obj for SQL_EXEC_ID 16777216 of PHV 0

SELECT step_event,
num_samples,
CASE wait_class WHEN 'CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' THEN '0252D7' WHEN 'System I/O' THEN '1E96DD'  WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05' WHEN 'Configuration' THEN '594611'   WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'  WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' END style,
step_event||' - '||num_samples||' Samples ('||TRUNC(100*RATIO_TO_REPORT(num_samples) OVER (),2)||'% of DB Time)' tooltip
FROM (SELECT data.step||' '||CASE WHEN data.obj# = 0 THEN 'UNDO'
ELSE (SELECT TRIM('.' FROM ' '||o.owner||'.'||o.object_name||'.'||o.subobject_name) FROM dba_objects o WHERE o.object_id = data.obj# AND ROWNUM = 1)
END||' / '||data.event  step_event,
data.num_samples, data.wait_class
FROM (SELECT id||' - '||operation||' '||options step, object_instance obj#, object_node event, other_tag wait_class,
count(*) num_samples
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =  0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 1
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 396
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) =  29504
AND timestamp BETWEEN TO_DATE('20201017005810', 'YYYYMMDDHH24MISS') AND TO_DATE('20201017021832', 'YYYYMMDDHH24MISS')
AND remarks = 'd1bmu84pdu6gx'
AND NVL(partition_id, 16777216) = 16777216
AND NVL(distribution, TO_DATE('20201017005802', 'YYYYMMDDHH24MISS')) = TO_DATE('20201017005802', 'YYYYMMDDHH24MISS')
AND 'Y' = 'Y'
GROUP BY id||' - '||operation||' '||options, object_instance, object_node, other_tag
ORDER BY 5 DESC) data)
ORDER BY 2 DESC

16:52:22 col:2of5.

16:52:22 col:2of5 "00073_sqld360_323688_d1bmu84pdu6gx_2d_18_top_stepeventobj_for_sqlexecid_16777216_of_phv_0.html"
16:52:22 col:2of5 "00074_sqld360_323688_d1bmu84pdu6gx_2d_18_top_stepeventobj_for_sqlexecid_16777216_of_phv_0_bar_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:22 col:2of5 "Execution Plans"
16:52:22 Top 15 Wait events timeline SQL_EXEC_ID 16777216 of PHV 0

SELECT 0 snap_id,
TO_CHAR(sample_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
TO_CHAR(sample_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
NVL(num_sess_01,0) "e01ON CPU" ,
NVL(num_sess_02,0) "e02cell single block physical " ,
NVL(num_sess_03,0) "e03gc current grant 2-way" ,
NVL(num_sess_04,0) "e04gcs drm freeze in enter ser" ,
NVL(num_sess_05,0) "e05" ,
NVL(num_sess_06,0) "e06" ,
NVL(num_sess_07,0) "e07" ,
NVL(num_sess_08,0) "e08" ,
NVL(num_sess_09,0) "e09" ,
NVL(num_sess_10,0) "e10" ,
NVL(num_sess_11,0) "e11" ,
NVL(num_sess_12,0) "e12" ,
NVL(num_sess_13,0) "e13" ,
NVL(num_sess_14,0) "e14" ,
NVL(num_sess_15,0) "e15"
FROM (SELECT sample_time,
MAX(CASE WHEN cpu_or_event  = 'ON CPU' THEN num_sess ELSE NULL END) num_sess_01,
MAX(CASE WHEN cpu_or_event  = 'cell single block physical read' THEN num_sess ELSE NULL END) num_sess_02,
MAX(CASE WHEN cpu_or_event  = 'gc current grant 2-way' THEN num_sess ELSE NULL END) num_sess_03,
MAX(CASE WHEN cpu_or_event  = 'gcs drm freeze in enter server mode' THEN num_sess ELSE NULL END) num_sess_04,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_05,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_06,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_07,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_08,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_09,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_10,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_11,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_12,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_13,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_14,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_15
FROM (SELECT timestamp sample_time,
object_node cpu_or_event,
count(*) num_sess
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND remarks = 'd1bmu84pdu6gx'
AND 'Y' = 'Y'
AND /*cost*/ bytes = 0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 1
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 396
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 29504
AND timestamp BETWEEN TO_DATE('20201017005810', 'YYYYMMDDHH24MISS') AND TO_DATE('20201017021832', 'YYYYMMDDHH24MISS')
AND NVL(partition_id, 16777216) = 16777216
AND NVL(distribution, TO_DATE('20201017005802', 'YYYYMMDDHH24MISS')) = TO_DATE('20201017005802', 'YYYYMMDDHH24MISS')
AND object_node IN ('ON CPU','cell single block physical read','gc current grant 2-way','gcs drm freeze in enter server mode','','',
'','','','','','',
'','','')
GROUP BY timestamp, object_node)
GROUP BY sample_time)
ORDER BY 3

16:52:22 col:2of5.

16:52:22 col:2of5 "00075_sqld360_323688_d1bmu84pdu6gx_2d_19_top_15_wait_events_timeline_sqlexecid_16777216_of_phv_0.html"
16:52:22 col:2of5 "00076_sqld360_323688_d1bmu84pdu6gx_2d_19_top_15_wait_events_timeline_sqlexecid_16777216_of_phv_0_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:22 col:2of5 "Execution Plans"
16:52:22 DB Time by PX process for SQL_EXEC_ID 16777216 of PHV 0

SELECT data.qcpx_process,
data.num_samples,
NULL style,
data.qcpx_process||' - '||data.num_samples||' Samples ('||TRUNC(100*RATIO_TO_REPORT(data.num_samples) OVER (),2)||'%)' tooltip
FROM (SELECT NVL2(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)), 'PX Proc - ', 'QC - ')||position||'.'||cpu_cost||'.'||io_cost  qcpx_process,
count(*) num_samples
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =  0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 1
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 396
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 29504
AND timestamp BETWEEN TO_DATE('20201017005810', 'YYYYMMDDHH24MISS') AND TO_DATE('20201017021832', 'YYYYMMDDHH24MISS')
AND remarks = 'd1bmu84pdu6gx'
AND NVL(partition_id, 16777216) = 16777216
AND NVL(distribution, TO_DATE('20201017005802', 'YYYYMMDDHH24MISS')) = TO_DATE('20201017005802', 'YYYYMMDDHH24MISS')
AND 'Y' = 'Y'
GROUP BY NVL2(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)), 'PX Proc - ', 'QC - ')||position||'.'||cpu_cost||'.'||io_cost
ORDER BY 2 DESC) data
ORDER BY 2 DESC

16:52:22 col:2of5.

16:52:22 col:2of5 "00077_sqld360_323688_d1bmu84pdu6gx_2d_20_db_time_by_px_process_for_sqlexecid_16777216_of_phv_0.html"
16:52:22 col:2of5 "00078_sqld360_323688_d1bmu84pdu6gx_2d_20_db_time_by_px_process_for_sqlexecid_16777216_of_phv_0_bar_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:22 col:2of5 "Execution Plans"
16:52:22 PGA and TEMP usage for SQL_EXEC_ID 16777216 of PHV 0

SELECT 0 snap_id,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
pga_allocated,
temp_space_allocated,
0 dummy_03,
0 dummy_04,
0 dummy_05,
0 dummy_06,
0 dummy_07,
0 dummy_08,
0 dummy_09,
0 dummy_10,
0 dummy_11,
0 dummy_12,
0 dummy_13,
0 dummy_14,
0 dummy_15
FROM (SELECT timestamp end_time,
SUM(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,11)+1,INSTR(partition_stop,',',1,12)-INSTR(partition_stop,',',1,11)-1))) pga_allocated,
SUM(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,12)+1,INSTR(partition_stop,',',1,13)-INSTR(partition_stop,',',1,12)-1))) temp_space_allocated
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =  0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 1
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 396
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 29504
AND timestamp BETWEEN TO_DATE('20201017005810', 'YYYYMMDDHH24MISS') AND TO_DATE('20201017021832', 'YYYYMMDDHH24MISS')
AND remarks = 'd1bmu84pdu6gx'
AND NVL(partition_id, 16777216) = 16777216
AND NVL(distribution, TO_DATE('20201017005802', 'YYYYMMDDHH24MISS')) = TO_DATE('20201017005802', 'YYYYMMDDHH24MISS')
AND 'Y' = 'Y'
GROUP BY timestamp)
ORDER BY 3

16:52:22 col:2of5.

16:52:22 col:2of5 "00079_sqld360_323688_d1bmu84pdu6gx_2d_21_pga_and_temp_usage_for_sqlexecid_16777216_of_phv_0.html"
16:52:22 col:2of5 "00080_sqld360_323688_d1bmu84pdu6gx_2d_21_pga_and_temp_usage_for_sqlexecid_16777216_of_phv_0_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:22 col:2of5 "Execution Plans"
16:52:22 Read and Write I/O requests for SQL_EXEC_ID 16777216 of PHV 0

SELECT 0 snap_id,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
read_io_requests,
write_io_requests,
0 dummy_03,
0 dummy_04,
0 dummy_05,
0 dummy_06,
0 dummy_07,
0 dummy_08,
0 dummy_09,
0 dummy_10,
0 dummy_11,
0 dummy_12,
0 dummy_13,
0 dummy_14,
0 dummy_15
FROM (SELECT timestamp end_time,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,14)+1,INSTR(partition_stop,',',1,15)-INSTR(partition_stop,',',1,14)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) read_io_requests,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,15)+1,INSTR(partition_stop,',',1,16)-INSTR(partition_stop,',',1,15)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) write_io_requests
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =  0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 1
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 396
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 29504
AND timestamp BETWEEN TO_DATE('20201017005810', 'YYYYMMDDHH24MISS') AND TO_DATE('20201017021832', 'YYYYMMDDHH24MISS')
AND remarks = 'd1bmu84pdu6gx'
AND NVL(partition_id, 16777216) = 16777216
AND NVL(distribution, TO_DATE('20201017005802', 'YYYYMMDDHH24MISS')) = TO_DATE('20201017005802', 'YYYYMMDDHH24MISS')
AND 'Y' = 'Y'
GROUP BY timestamp)
ORDER BY 3

16:52:22 col:2of5.

16:52:22 col:2of5 "00081_sqld360_323688_d1bmu84pdu6gx_2d_22_read_and_write_io_requests_for_sqlexecid_16777216_of_phv_0.html"
16:52:22 col:2of5 "00082_sqld360_323688_d1bmu84pdu6gx_2d_22_read_and_write_io_requests_for_sqlexecid_16777216_of_phv_0_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:22 col:2of5 "Execution Plans"
16:52:22 Read, Write and Interconnect I/O bytes for SQL_EXEC_ID 16777216 of PHV 0

SELECT 0 snap_id,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
read_io_bytes,
write_io_bytes,
interconnect_io_bytes,
0 dummy_04,
0 dummy_05,
0 dummy_06,
0 dummy_07,
0 dummy_08,
0 dummy_09,
0 dummy_10,
0 dummy_11,
0 dummy_12,
0 dummy_13,
0 dummy_14,
0 dummy_15
FROM (SELECT timestamp end_time,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,16)+1,INSTR(partition_stop,',',1,17)-INSTR(partition_stop,',',1,16)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) read_io_bytes,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,17)+1,INSTR(partition_stop,',',1,18)-INSTR(partition_stop,',',1,17)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) write_io_bytes,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,18)+1,INSTR(partition_stop,',',1,19)-INSTR(partition_stop,',',1,18)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) interconnect_io_bytes
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =  0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 1
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 396
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 29504
AND timestamp BETWEEN TO_DATE('20201017005810', 'YYYYMMDDHH24MISS') AND TO_DATE('20201017021832', 'YYYYMMDDHH24MISS')
AND remarks = 'd1bmu84pdu6gx'
AND NVL(partition_id, 16777216) = 16777216
AND NVL(distribution, TO_DATE('20201017005802', 'YYYYMMDDHH24MISS')) = TO_DATE('20201017005802', 'YYYYMMDDHH24MISS')
AND 'Y' = 'Y'
GROUP BY timestamp)
ORDER BY 3

16:52:22 col:2of5.

16:52:22 col:2of5 "00083_sqld360_323688_d1bmu84pdu6gx_2d_23_read_write_and_interconnect_io_bytes_for_sqlexecid_16777216_of_phv_0.html"
16:52:22 col:2of5 "00084_sqld360_323688_d1bmu84pdu6gx_2d_23_read_write_and_interconnect_io_bytes_for_sqlexecid_16777216_of_phv_0_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:23 col:2of5 "Execution Plans"
16:52:23 Raw Data for SQL_EXEC_ID 16777216 of PHV 0

SELECT /*+ NO_MERGE */
statement_id     source,
search_columns   dbid,
cardinality      snap_id,
position         instance_number,
parent_id        sample_id,
TO_CHAR(timestamp, 'YYYY-MM-DD/HH24:MI:SS')        sample_time,
partition_id     sql_exec_id,
TO_CHAR(TO_DATE(distribution,'YYYYMMDDHH24MISS'), 'YYYY-MM-DD/HH24:MI:SS')  sql_exec_start,
cpu_cost         session_id,
io_cost          session_serial#,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,13)+1))            user_id,
remarks          sql_id,
cost             plan_hash_value,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,19)+1)) sql_full_plan_hash_value,
id               sql_plan_line_id,
operation        sql_plan_operation,
options          sql_plan_options,
object_node      cpu_or_event,
other_tag        wait_class,
TO_NUMBER(SUBSTR(partition_start,1,INSTR(partition_start,',',1,1)-1)) seq#,
SUBSTR(partition_start,INSTR(partition_start,',',1,1)+1,INSTR(partition_start,',',1,2)-INSTR(partition_start,',',1,1)-1) p1text,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,2)+1,INSTR(partition_start,',',1,3)-INSTR(partition_start,',',1,2)-1)) p1,
SUBSTR(partition_start,INSTR(partition_start,',',1,3)+1,INSTR(partition_start,',',1,4)-INSTR(partition_start,',',1,3)-1) p2text,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,4)+1,INSTR(partition_start,',',1,5)-INSTR(partition_start,',',1,4)-1)) p2,
SUBSTR(partition_start,INSTR(partition_start,',',1,5)+1,INSTR(partition_start,',',1,6)-INSTR(partition_start,',',1,5)-1) p3text,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,6)+1,INSTR(partition_start,',',1,7)-INSTR(partition_start,',',1,6)-1)) p3,
object_instance  current_obj#,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,7)+1,INSTR(partition_start,',',1,8)-INSTR(partition_start,',',1,7)-1)) current_file#,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,8)+1,INSTR(partition_start,',',1,9)-INSTR(partition_start,',',1,8)-1)) current_block#,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,9)+1,INSTR(partition_start,',',1,10)-INSTR(partition_start,',',1,9)-1)) current_row#,
SUBSTR(partition_stop,1,INSTR(partition_stop,',',1,1)-1) in_parse,
SUBSTR(partition_stop,INSTR(partition_stop,',',1,1)+1,INSTR(partition_stop,',',1,2)-INSTR(partition_stop,',',1,1)-1) in_hard_parse,
SUBSTR(partition_stop,INSTR(partition_stop,',',1,2)+1,INSTR(partition_stop,',',1,3)-INSTR(partition_stop,',',1,2)-1) in_sql_execution,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)) qc_instance_id,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)) qc_session_id,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)) qc_session_serial#,
SUBSTR(partition_stop,INSTR(partition_stop,',',1,6)+1,INSTR(partition_stop,',',1,7)-INSTR(partition_stop,',',1,6)-1) blocking_session_status,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,7)+1,INSTR(partition_stop,',',1,8)-INSTR(partition_stop,',',1,7)-1)) blocking_session,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,8)+1,INSTR(partition_stop,',',1,9)-INSTR(partition_stop,',',1,8)-1)) blocking_session_serial#,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,9)+1,INSTR(partition_stop,',',1,10)-INSTR(partition_stop,',',1,9)-1)) blocking_inst_id,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,10)+1,INSTR(partition_stop,',',1,11)-INSTR(partition_stop,',',1,10)-1)) px_flags,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,11)+1,INSTR(partition_stop,',',1,12)-INSTR(partition_stop,',',1,11)-1)) pga_allocated,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,12)+1,INSTR(partition_stop,',',1,13)-INSTR(partition_stop,',',1,12)-1)) temp_space_allocated,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,10)+1,INSTR(partition_start,',',1,11)-INSTR(partition_start,',',1,10)-1)) tm_delta_time,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,11)+1,INSTR(partition_start,',',1,12)-INSTR(partition_start,',',1,11)-1)) tm_delta_cpu_time,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,12)+1,INSTR(partition_start,',',1,13)-INSTR(partition_start,',',1,12)-1)) tm_delta_db_time,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1)) delta_time,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,14)+1,INSTR(partition_stop,',',1,15)-INSTR(partition_stop,',',1,14)-1)) delta_read_io_requests,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,15)+1,INSTR(partition_stop,',',1,16)-INSTR(partition_stop,',',1,15)-1)) delta_write_io_requests,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,16)+1,INSTR(partition_stop,',',1,17)-INSTR(partition_stop,',',1,16)-1)) delta_read_io_bytes,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,17)+1,INSTR(partition_stop,',',1,18)-INSTR(partition_stop,',',1,17)-1)) delta_write_io_bytes,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,18)+1,INSTR(partition_stop,',',1,19)-INSTR(partition_stop,',',1,18)-1)) delta_interconnect_io_bytes
FROM plan_table
WHERE remarks = 'd1bmu84pdu6gx'
AND statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =  0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 1
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 396
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 29504
AND timestamp BETWEEN TO_DATE('20201017005810', 'YYYYMMDDHH24MISS') AND TO_DATE('20201017021832', 'YYYYMMDDHH24MISS')
AND NVL(partition_id, 16777216) = 16777216
AND NVL(distribution, TO_DATE('20201017005802', 'YYYYMMDDHH24MISS')) = TO_DATE('20201017005802', 'YYYYMMDDHH24MISS')
AND 'Y' = 'Y'
ORDER BY sample_time,instance_number

16:52:23 col:2of5.

16:52:23 col:2of5 "00085_sqld360_323688_d1bmu84pdu6gx_2d_24_raw_data_for_sqlexecid_16777216_of_phv_0.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:24 col:2of5 "Execution Plans"
16:52:24 Plan Tree with subtree for SQL_EXEC_ID 16777216 of PHV 0

WITH ashdata AS (-- count the number of samples in ASH for each step
-- goal is to compute RATIO_TO_REPORT
SELECT NVL(id,0) id,
COUNT(*) num_samples,
ROUND(100*NVL(RATIO_TO_REPORT(COUNT(*)) OVER (),0),2) perc_impact
FROM plan_table
WHERE statement_id LIKE 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 1
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 1549
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 36917
AND timestamp BETWEEN TO_DATE('20201012011120', 'YYYYMMDDHH24MISS') AND TO_DATE('20201012023253', 'YYYYMMDDHH24MISS')
AND remarks = 'd1bmu84pdu6gx'
AND NVL(partition_id, 16777216) = 16777216
AND NVL(distribution, TO_DATE('20201012011116', 'YYYYMMDDHH24MISS')) = TO_DATE('20201012011116', 'YYYYMMDDHH24MISS')
GROUP BY NVL(id,0)),
orig_plan AS (-- extract the plan steps "as is", just replace to single quote in the filter predicates
-- precedence is given to plan from memory since it has filters
-- using RANK since there could be more than one entry but with different predicate ordering
SELECT sql_id, plan_hash_value, id, parent_id, operation, options, object_name, access_predicates, filter_predicates, other_xml
FROM (SELECT sql_id, plan_hash_value, id, parent_id, operation, options, object_name,
REPLACE(SUBSTR(access_predicates,1,1500), CHR(39) , CHR(92)||CHR(39)) access_predicates,
REPLACE(SUBSTR(filter_predicates,1,1500), CHR(39) , CHR(92)||CHR(39)) filter_predicates,
other_xml,
RANK() OVER (ORDER BY inst_id, child_number) rnk
FROM gv$sql_plan_statistics_all
WHERE sql_id = 'd1bmu84pdu6gx'
AND plan_hash_value =0)
WHERE rnk = 1
UNION ALL
SELECT sql_id, plan_hash_value, id, parent_id, operation, options, object_name,
REPLACE(access_predicates, CHR(39), CHR(92)||CHR(39)) access_predicates,
REPLACE(filter_predicates, CHR(39), CHR(92)||CHR(39)) filter_predicates,
other_xml
FROM dba_hist_sql_plan
WHERE sql_id = 'd1bmu84pdu6gx'
AND plan_hash_value =0
AND NOT EXISTS (SELECT 1
FROM gv$sql_plan_statistics_all
WHERE plan_hash_value =0
AND sql_id = 'd1bmu84pdu6gx'
AND 'Y' = 'Y')),
skip_steps AS (-- extract the display_map for the plan, to identify why steps are "skipped" because of adaptive
SELECT sql_id, plan_hash_value, EXTRACTVALUE(VALUE(b),'/row/@op') stepid, EXTRACTVALUE(VALUE(b),'/row/@skp') skp, EXTRACTVALUE(VALUE(b),'/row/@dep') dep
FROM orig_plan a,
TABLE(XMLSEQUENCE(EXTRACT(XMLTYPE(a.other_xml),'/*/display_map/row'))) b
WHERE sql_id = 'd1bmu84pdu6gx'
AND other_xml IS NOT NULL),
adapt_plan_no_parent AS (-- generate adaptive_id (aka step_id) once the adaptive steps are excluded
SELECT a.sql_id, a.plan_hash_value, a.id, a.parent_id, b.dep,
(ROW_NUMBER() OVER (ORDER BY a.id))-1 adapt_id, a.operation, a.options, a.object_name, a.access_predicates, a.filter_predicates, b.skp
FROM orig_plan a,
skip_steps b
WHERE a.id = b.stepid(+)
AND (b.skp = 0 OR b.skp IS NULL)),
full_adaptive_plan AS (-- generate the parent adaptive step id
SELECT id, adapt_id, NVL(adapt_parent_id, parent_id) parent_id, operation, options, object_name, access_predicates, filter_predicates
FROM (SELECT dep, adapt_id, id, (SELECT MAX(adapt_id) FROM adapt_plan_no_parent b WHERE a.dep-1 = NVL(b.dep,0) AND b.adapt_id < a.adapt_id ) adapt_parent_id,
parent_id, a.operation operation, a.options, a.object_name, a.access_predicates, a.filter_predicates
FROM adapt_plan_no_parent a)),
plan_with_ash AS (SELECT full_adaptive_plan.*, NVL(ashdata.num_samples,0) num_samples, NVL(ashdata.perc_impact,0) perc_impact
FROM full_adaptive_plan,
ashdata
WHERE ashdata.id(+) = full_adaptive_plan.id),
plan_with_rec_impact AS (-- compute recursive impact (substree impact)
SELECT a.*, (SELECT sum(b.perc_impact)
FROM plan_with_ash b
START WITH b.adapt_id = a.adapt_id
CONNECT BY prior b.adapt_id = b.parent_id) sum_perc_impact
FROM plan_with_ash a)
SELECT '{v: '''||adapt_id||''',f: '''||adapt_id||' - '||operation||' '||options||NVL2(object_name,'<br>',' ')||object_name||'''}' id,
parent_id,
SUBSTR('Step ID: '||adapt_id||' (ASH Step ID: '||id||')\nASH Samples: '||num_samples||' ('||perc_impact||'%)'||
'\nSubstree Impact '||sum_perc_impact||'%'||
NVL2(access_predicates,'\n\nAccess Predicates: '||access_predicates,'')||NVL2(filter_predicates,'\n\nFilter Predicates: '||filter_predicates,''),1,4000) message,
adapt_id id3
FROM plan_with_rec_impact
ORDER BY id3

16:52:24 col:2of5.

16:52:24 col:2of5 "00086_sqld360_323688_d1bmu84pdu6gx_2d_25_plan_tree_with_subtree_for_sqlexecid_16777216_of_phv_0_org_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:24 col:2of5 "Execution Plans"
16:52:24 Plan Step IDs timeline for SQL_EXEC_ID 16777216 of PHV 0

SELECT TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
null,
plan_line_id,
CASE WHEN rtr_category > .5 THEN category ELSE 'Multiple' END,
num_samples
FROM (SELECT end_time, plan_line_id, category, num_samples, rtr_category, ROW_NUMBER() OVER (PARTITION BY end_time, plan_line_id ORDER BY rtr_category DESC) rn_category
FROM (SELECT end_time, plan_line_id, category, SUM(num_samples) OVER (PARTITION BY end_time, plan_line_id) num_samples, RATIO_TO_REPORT(num_samples) OVER (PARTITION BY end_time, plan_line_id) rtr_category
FROM (SELECT timestamp end_time, NVL(id,0) plan_line_id,
CASE WHEN other_tag = 'CPU' THEN 'CPU' WHEN other_tag LIKE '%I/O' THEN 'I/O' WHEN other_tag = 'Concurrency' THEN 'Concurrency' WHEN other_tag = 'Cluster' THEN 'Cluster' ELSE 'Other' END category,
COUNT(*) num_samples
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =  0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 1
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 1549
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 36917
AND timestamp BETWEEN TO_DATE('20201012011120', 'YYYYMMDDHH24MISS') AND TO_DATE('20201012023253', 'YYYYMMDDHH24MISS')
AND remarks = 'd1bmu84pdu6gx'
AND NVL(partition_id, 16777216) = 16777216
AND NVL(distribution, TO_DATE('20201012011116', 'YYYYMMDDHH24MISS')) = TO_DATE('20201012011116', 'YYYYMMDDHH24MISS')
AND 'Y' = 'Y'
GROUP BY timestamp, NVL(id,0), CASE WHEN other_tag = 'CPU' THEN 'CPU' WHEN other_tag LIKE '%I/O' THEN 'I/O' WHEN other_tag = 'Concurrency' THEN 'Concurrency' WHEN other_tag = 'Cluster' THEN 'Cluster' ELSE 'Other' END)
)
)
WHERE rn_category = 1
ORDER BY end_time

16:52:24 col:2of5.

16:52:24 col:2of5 "00087_sqld360_323688_d1bmu84pdu6gx_2d_26_plan_step_ids_timeline_for_sqlexecid_16777216_of_phv_0.html"
16:52:24 col:2of5 "00088_sqld360_323688_d1bmu84pdu6gx_2d_26_plan_step_ids_timeline_for_sqlexecid_16777216_of_phv_0_bubble_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:24 col:2of5 "Execution Plans"
16:52:24 Top Step/Event/Obj for SQL_EXEC_ID 16777216 of PHV 0

SELECT step_event,
num_samples,
CASE wait_class WHEN 'CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' THEN '0252D7' WHEN 'System I/O' THEN '1E96DD'  WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05' WHEN 'Configuration' THEN '594611'   WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'  WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' END style,
step_event||' - '||num_samples||' Samples ('||TRUNC(100*RATIO_TO_REPORT(num_samples) OVER (),2)||'% of DB Time)' tooltip
FROM (SELECT data.step||' '||CASE WHEN data.obj# = 0 THEN 'UNDO'
ELSE (SELECT TRIM('.' FROM ' '||o.owner||'.'||o.object_name||'.'||o.subobject_name) FROM dba_objects o WHERE o.object_id = data.obj# AND ROWNUM = 1)
END||' / '||data.event  step_event,
data.num_samples, data.wait_class
FROM (SELECT id||' - '||operation||' '||options step, object_instance obj#, object_node event, other_tag wait_class,
count(*) num_samples
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =  0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 1
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 1549
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) =  36917
AND timestamp BETWEEN TO_DATE('20201012011120', 'YYYYMMDDHH24MISS') AND TO_DATE('20201012023253', 'YYYYMMDDHH24MISS')
AND remarks = 'd1bmu84pdu6gx'
AND NVL(partition_id, 16777216) = 16777216
AND NVL(distribution, TO_DATE('20201012011116', 'YYYYMMDDHH24MISS')) = TO_DATE('20201012011116', 'YYYYMMDDHH24MISS')
AND 'Y' = 'Y'
GROUP BY id||' - '||operation||' '||options, object_instance, object_node, other_tag
ORDER BY 5 DESC) data)
ORDER BY 2 DESC

16:52:24 col:2of5.

16:52:24 col:2of5 "00089_sqld360_323688_d1bmu84pdu6gx_2d_27_top_stepeventobj_for_sqlexecid_16777216_of_phv_0.html"
16:52:24 col:2of5 "00090_sqld360_323688_d1bmu84pdu6gx_2d_27_top_stepeventobj_for_sqlexecid_16777216_of_phv_0_bar_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:24 col:2of5 "Execution Plans"
16:52:24 Top 15 Wait events timeline SQL_EXEC_ID 16777216 of PHV 0

SELECT 0 snap_id,
TO_CHAR(sample_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
TO_CHAR(sample_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
NVL(num_sess_01,0) "e01ON CPU" ,
NVL(num_sess_02,0) "e02cell single block physical " ,
NVL(num_sess_03,0) "e03gc cr multi block request" ,
NVL(num_sess_04,0) "e04" ,
NVL(num_sess_05,0) "e05" ,
NVL(num_sess_06,0) "e06" ,
NVL(num_sess_07,0) "e07" ,
NVL(num_sess_08,0) "e08" ,
NVL(num_sess_09,0) "e09" ,
NVL(num_sess_10,0) "e10" ,
NVL(num_sess_11,0) "e11" ,
NVL(num_sess_12,0) "e12" ,
NVL(num_sess_13,0) "e13" ,
NVL(num_sess_14,0) "e14" ,
NVL(num_sess_15,0) "e15"
FROM (SELECT sample_time,
MAX(CASE WHEN cpu_or_event  = 'ON CPU' THEN num_sess ELSE NULL END) num_sess_01,
MAX(CASE WHEN cpu_or_event  = 'cell single block physical read' THEN num_sess ELSE NULL END) num_sess_02,
MAX(CASE WHEN cpu_or_event  = 'gc cr multi block request' THEN num_sess ELSE NULL END) num_sess_03,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_04,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_05,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_06,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_07,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_08,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_09,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_10,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_11,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_12,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_13,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_14,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_15
FROM (SELECT timestamp sample_time,
object_node cpu_or_event,
count(*) num_sess
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND remarks = 'd1bmu84pdu6gx'
AND 'Y' = 'Y'
AND /*cost*/ bytes = 0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 1
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 1549
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 36917
AND timestamp BETWEEN TO_DATE('20201012011120', 'YYYYMMDDHH24MISS') AND TO_DATE('20201012023253', 'YYYYMMDDHH24MISS')
AND NVL(partition_id, 16777216) = 16777216
AND NVL(distribution, TO_DATE('20201012011116', 'YYYYMMDDHH24MISS')) = TO_DATE('20201012011116', 'YYYYMMDDHH24MISS')
AND object_node IN ('ON CPU','cell single block physical read','gc cr multi block request','','','',
'','','','','','',
'','','')
GROUP BY timestamp, object_node)
GROUP BY sample_time)
ORDER BY 3

16:52:24 col:2of5.

16:52:24 col:2of5 "00091_sqld360_323688_d1bmu84pdu6gx_2d_28_top_15_wait_events_timeline_sqlexecid_16777216_of_phv_0.html"
16:52:24 col:2of5 "00092_sqld360_323688_d1bmu84pdu6gx_2d_28_top_15_wait_events_timeline_sqlexecid_16777216_of_phv_0_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:24 col:2of5 "Execution Plans"
16:52:24 DB Time by PX process for SQL_EXEC_ID 16777216 of PHV 0

SELECT data.qcpx_process,
data.num_samples,
NULL style,
data.qcpx_process||' - '||data.num_samples||' Samples ('||TRUNC(100*RATIO_TO_REPORT(data.num_samples) OVER (),2)||'%)' tooltip
FROM (SELECT NVL2(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)), 'PX Proc - ', 'QC - ')||position||'.'||cpu_cost||'.'||io_cost  qcpx_process,
count(*) num_samples
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =  0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 1
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 1549
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 36917
AND timestamp BETWEEN TO_DATE('20201012011120', 'YYYYMMDDHH24MISS') AND TO_DATE('20201012023253', 'YYYYMMDDHH24MISS')
AND remarks = 'd1bmu84pdu6gx'
AND NVL(partition_id, 16777216) = 16777216
AND NVL(distribution, TO_DATE('20201012011116', 'YYYYMMDDHH24MISS')) = TO_DATE('20201012011116', 'YYYYMMDDHH24MISS')
AND 'Y' = 'Y'
GROUP BY NVL2(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)), 'PX Proc - ', 'QC - ')||position||'.'||cpu_cost||'.'||io_cost
ORDER BY 2 DESC) data
ORDER BY 2 DESC

16:52:24 col:2of5.

16:52:24 col:2of5 "00093_sqld360_323688_d1bmu84pdu6gx_2d_29_db_time_by_px_process_for_sqlexecid_16777216_of_phv_0.html"
16:52:24 col:2of5 "00094_sqld360_323688_d1bmu84pdu6gx_2d_29_db_time_by_px_process_for_sqlexecid_16777216_of_phv_0_bar_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:24 col:2of5 "Execution Plans"
16:52:24 PGA and TEMP usage for SQL_EXEC_ID 16777216 of PHV 0

SELECT 0 snap_id,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
pga_allocated,
temp_space_allocated,
0 dummy_03,
0 dummy_04,
0 dummy_05,
0 dummy_06,
0 dummy_07,
0 dummy_08,
0 dummy_09,
0 dummy_10,
0 dummy_11,
0 dummy_12,
0 dummy_13,
0 dummy_14,
0 dummy_15
FROM (SELECT timestamp end_time,
SUM(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,11)+1,INSTR(partition_stop,',',1,12)-INSTR(partition_stop,',',1,11)-1))) pga_allocated,
SUM(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,12)+1,INSTR(partition_stop,',',1,13)-INSTR(partition_stop,',',1,12)-1))) temp_space_allocated
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =  0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 1
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 1549
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 36917
AND timestamp BETWEEN TO_DATE('20201012011120', 'YYYYMMDDHH24MISS') AND TO_DATE('20201012023253', 'YYYYMMDDHH24MISS')
AND remarks = 'd1bmu84pdu6gx'
AND NVL(partition_id, 16777216) = 16777216
AND NVL(distribution, TO_DATE('20201012011116', 'YYYYMMDDHH24MISS')) = TO_DATE('20201012011116', 'YYYYMMDDHH24MISS')
AND 'Y' = 'Y'
GROUP BY timestamp)
ORDER BY 3

16:52:24 col:2of5.

16:52:24 col:2of5 "00095_sqld360_323688_d1bmu84pdu6gx_2d_30_pga_and_temp_usage_for_sqlexecid_16777216_of_phv_0.html"
16:52:25 col:2of5 "00096_sqld360_323688_d1bmu84pdu6gx_2d_30_pga_and_temp_usage_for_sqlexecid_16777216_of_phv_0_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:25 col:2of5 "Execution Plans"
16:52:25 Read and Write I/O requests for SQL_EXEC_ID 16777216 of PHV 0

SELECT 0 snap_id,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
read_io_requests,
write_io_requests,
0 dummy_03,
0 dummy_04,
0 dummy_05,
0 dummy_06,
0 dummy_07,
0 dummy_08,
0 dummy_09,
0 dummy_10,
0 dummy_11,
0 dummy_12,
0 dummy_13,
0 dummy_14,
0 dummy_15
FROM (SELECT timestamp end_time,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,14)+1,INSTR(partition_stop,',',1,15)-INSTR(partition_stop,',',1,14)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) read_io_requests,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,15)+1,INSTR(partition_stop,',',1,16)-INSTR(partition_stop,',',1,15)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) write_io_requests
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =  0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 1
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 1549
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 36917
AND timestamp BETWEEN TO_DATE('20201012011120', 'YYYYMMDDHH24MISS') AND TO_DATE('20201012023253', 'YYYYMMDDHH24MISS')
AND remarks = 'd1bmu84pdu6gx'
AND NVL(partition_id, 16777216) = 16777216
AND NVL(distribution, TO_DATE('20201012011116', 'YYYYMMDDHH24MISS')) = TO_DATE('20201012011116', 'YYYYMMDDHH24MISS')
AND 'Y' = 'Y'
GROUP BY timestamp)
ORDER BY 3

16:52:25 col:2of5.

16:52:25 col:2of5 "00097_sqld360_323688_d1bmu84pdu6gx_2d_31_read_and_write_io_requests_for_sqlexecid_16777216_of_phv_0.html"
16:52:25 col:2of5 "00098_sqld360_323688_d1bmu84pdu6gx_2d_31_read_and_write_io_requests_for_sqlexecid_16777216_of_phv_0_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:25 col:2of5 "Execution Plans"
16:52:25 Read, Write and Interconnect I/O bytes for SQL_EXEC_ID 16777216 of PHV 0

SELECT 0 snap_id,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
read_io_bytes,
write_io_bytes,
interconnect_io_bytes,
0 dummy_04,
0 dummy_05,
0 dummy_06,
0 dummy_07,
0 dummy_08,
0 dummy_09,
0 dummy_10,
0 dummy_11,
0 dummy_12,
0 dummy_13,
0 dummy_14,
0 dummy_15
FROM (SELECT timestamp end_time,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,16)+1,INSTR(partition_stop,',',1,17)-INSTR(partition_stop,',',1,16)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) read_io_bytes,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,17)+1,INSTR(partition_stop,',',1,18)-INSTR(partition_stop,',',1,17)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) write_io_bytes,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,18)+1,INSTR(partition_stop,',',1,19)-INSTR(partition_stop,',',1,18)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) interconnect_io_bytes
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =  0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 1
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 1549
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 36917
AND timestamp BETWEEN TO_DATE('20201012011120', 'YYYYMMDDHH24MISS') AND TO_DATE('20201012023253', 'YYYYMMDDHH24MISS')
AND remarks = 'd1bmu84pdu6gx'
AND NVL(partition_id, 16777216) = 16777216
AND NVL(distribution, TO_DATE('20201012011116', 'YYYYMMDDHH24MISS')) = TO_DATE('20201012011116', 'YYYYMMDDHH24MISS')
AND 'Y' = 'Y'
GROUP BY timestamp)
ORDER BY 3

16:52:25 col:2of5.

16:52:25 col:2of5 "00099_sqld360_323688_d1bmu84pdu6gx_2d_32_read_write_and_interconnect_io_bytes_for_sqlexecid_16777216_of_phv_0.html"
16:52:25 col:2of5 "00100_sqld360_323688_d1bmu84pdu6gx_2d_32_read_write_and_interconnect_io_bytes_for_sqlexecid_16777216_of_phv_0_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:25 col:2of5 "Execution Plans"
16:52:25 Raw Data for SQL_EXEC_ID 16777216 of PHV 0

SELECT /*+ NO_MERGE */
statement_id     source,
search_columns   dbid,
cardinality      snap_id,
position         instance_number,
parent_id        sample_id,
TO_CHAR(timestamp, 'YYYY-MM-DD/HH24:MI:SS')        sample_time,
partition_id     sql_exec_id,
TO_CHAR(TO_DATE(distribution,'YYYYMMDDHH24MISS'), 'YYYY-MM-DD/HH24:MI:SS')  sql_exec_start,
cpu_cost         session_id,
io_cost          session_serial#,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,13)+1))            user_id,
remarks          sql_id,
cost             plan_hash_value,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,19)+1)) sql_full_plan_hash_value,
id               sql_plan_line_id,
operation        sql_plan_operation,
options          sql_plan_options,
object_node      cpu_or_event,
other_tag        wait_class,
TO_NUMBER(SUBSTR(partition_start,1,INSTR(partition_start,',',1,1)-1)) seq#,
SUBSTR(partition_start,INSTR(partition_start,',',1,1)+1,INSTR(partition_start,',',1,2)-INSTR(partition_start,',',1,1)-1) p1text,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,2)+1,INSTR(partition_start,',',1,3)-INSTR(partition_start,',',1,2)-1)) p1,
SUBSTR(partition_start,INSTR(partition_start,',',1,3)+1,INSTR(partition_start,',',1,4)-INSTR(partition_start,',',1,3)-1) p2text,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,4)+1,INSTR(partition_start,',',1,5)-INSTR(partition_start,',',1,4)-1)) p2,
SUBSTR(partition_start,INSTR(partition_start,',',1,5)+1,INSTR(partition_start,',',1,6)-INSTR(partition_start,',',1,5)-1) p3text,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,6)+1,INSTR(partition_start,',',1,7)-INSTR(partition_start,',',1,6)-1)) p3,
object_instance  current_obj#,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,7)+1,INSTR(partition_start,',',1,8)-INSTR(partition_start,',',1,7)-1)) current_file#,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,8)+1,INSTR(partition_start,',',1,9)-INSTR(partition_start,',',1,8)-1)) current_block#,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,9)+1,INSTR(partition_start,',',1,10)-INSTR(partition_start,',',1,9)-1)) current_row#,
SUBSTR(partition_stop,1,INSTR(partition_stop,',',1,1)-1) in_parse,
SUBSTR(partition_stop,INSTR(partition_stop,',',1,1)+1,INSTR(partition_stop,',',1,2)-INSTR(partition_stop,',',1,1)-1) in_hard_parse,
SUBSTR(partition_stop,INSTR(partition_stop,',',1,2)+1,INSTR(partition_stop,',',1,3)-INSTR(partition_stop,',',1,2)-1) in_sql_execution,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)) qc_instance_id,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)) qc_session_id,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)) qc_session_serial#,
SUBSTR(partition_stop,INSTR(partition_stop,',',1,6)+1,INSTR(partition_stop,',',1,7)-INSTR(partition_stop,',',1,6)-1) blocking_session_status,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,7)+1,INSTR(partition_stop,',',1,8)-INSTR(partition_stop,',',1,7)-1)) blocking_session,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,8)+1,INSTR(partition_stop,',',1,9)-INSTR(partition_stop,',',1,8)-1)) blocking_session_serial#,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,9)+1,INSTR(partition_stop,',',1,10)-INSTR(partition_stop,',',1,9)-1)) blocking_inst_id,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,10)+1,INSTR(partition_stop,',',1,11)-INSTR(partition_stop,',',1,10)-1)) px_flags,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,11)+1,INSTR(partition_stop,',',1,12)-INSTR(partition_stop,',',1,11)-1)) pga_allocated,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,12)+1,INSTR(partition_stop,',',1,13)-INSTR(partition_stop,',',1,12)-1)) temp_space_allocated,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,10)+1,INSTR(partition_start,',',1,11)-INSTR(partition_start,',',1,10)-1)) tm_delta_time,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,11)+1,INSTR(partition_start,',',1,12)-INSTR(partition_start,',',1,11)-1)) tm_delta_cpu_time,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,12)+1,INSTR(partition_start,',',1,13)-INSTR(partition_start,',',1,12)-1)) tm_delta_db_time,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1)) delta_time,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,14)+1,INSTR(partition_stop,',',1,15)-INSTR(partition_stop,',',1,14)-1)) delta_read_io_requests,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,15)+1,INSTR(partition_stop,',',1,16)-INSTR(partition_stop,',',1,15)-1)) delta_write_io_requests,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,16)+1,INSTR(partition_stop,',',1,17)-INSTR(partition_stop,',',1,16)-1)) delta_read_io_bytes,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,17)+1,INSTR(partition_stop,',',1,18)-INSTR(partition_stop,',',1,17)-1)) delta_write_io_bytes,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,18)+1,INSTR(partition_stop,',',1,19)-INSTR(partition_stop,',',1,18)-1)) delta_interconnect_io_bytes
FROM plan_table
WHERE remarks = 'd1bmu84pdu6gx'
AND statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =  0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 1
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 1549
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 36917
AND timestamp BETWEEN TO_DATE('20201012011120', 'YYYYMMDDHH24MISS') AND TO_DATE('20201012023253', 'YYYYMMDDHH24MISS')
AND NVL(partition_id, 16777216) = 16777216
AND NVL(distribution, TO_DATE('20201012011116', 'YYYYMMDDHH24MISS')) = TO_DATE('20201012011116', 'YYYYMMDDHH24MISS')
AND 'Y' = 'Y'
ORDER BY sample_time,instance_number

16:52:25 col:2of5.

16:52:25 col:2of5 "00101_sqld360_323688_d1bmu84pdu6gx_2d_33_raw_data_for_sqlexecid_16777216_of_phv_0.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:26 col:2of5 "Execution Plans"
16:52:26 Plan Tree with subtree for SQL_EXEC_ID 33554432 of PHV 0

WITH ashdata AS (-- count the number of samples in ASH for each step
-- goal is to compute RATIO_TO_REPORT
SELECT NVL(id,0) id,
COUNT(*) num_samples,
ROUND(100*NVL(RATIO_TO_REPORT(COUNT(*)) OVER (),0),2) perc_impact
FROM plan_table
WHERE statement_id LIKE 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 2
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 2706
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 53319
AND timestamp BETWEEN TO_DATE('20201013011359', 'YYYYMMDDHH24MISS') AND TO_DATE('20201013023420', 'YYYYMMDDHH24MISS')
AND remarks = 'd1bmu84pdu6gx'
AND NVL(partition_id, 33554432) = 33554432
AND NVL(distribution, TO_DATE('20201013011328', 'YYYYMMDDHH24MISS')) = TO_DATE('20201013011328', 'YYYYMMDDHH24MISS')
GROUP BY NVL(id,0)),
orig_plan AS (-- extract the plan steps "as is", just replace to single quote in the filter predicates
-- precedence is given to plan from memory since it has filters
-- using RANK since there could be more than one entry but with different predicate ordering
SELECT sql_id, plan_hash_value, id, parent_id, operation, options, object_name, access_predicates, filter_predicates, other_xml
FROM (SELECT sql_id, plan_hash_value, id, parent_id, operation, options, object_name,
REPLACE(SUBSTR(access_predicates,1,1500), CHR(39) , CHR(92)||CHR(39)) access_predicates,
REPLACE(SUBSTR(filter_predicates,1,1500), CHR(39) , CHR(92)||CHR(39)) filter_predicates,
other_xml,
RANK() OVER (ORDER BY inst_id, child_number) rnk
FROM gv$sql_plan_statistics_all
WHERE sql_id = 'd1bmu84pdu6gx'
AND plan_hash_value =0)
WHERE rnk = 1
UNION ALL
SELECT sql_id, plan_hash_value, id, parent_id, operation, options, object_name,
REPLACE(access_predicates, CHR(39), CHR(92)||CHR(39)) access_predicates,
REPLACE(filter_predicates, CHR(39), CHR(92)||CHR(39)) filter_predicates,
other_xml
FROM dba_hist_sql_plan
WHERE sql_id = 'd1bmu84pdu6gx'
AND plan_hash_value =0
AND NOT EXISTS (SELECT 1
FROM gv$sql_plan_statistics_all
WHERE plan_hash_value =0
AND sql_id = 'd1bmu84pdu6gx'
AND 'Y' = 'Y')),
skip_steps AS (-- extract the display_map for the plan, to identify why steps are "skipped" because of adaptive
SELECT sql_id, plan_hash_value, EXTRACTVALUE(VALUE(b),'/row/@op') stepid, EXTRACTVALUE(VALUE(b),'/row/@skp') skp, EXTRACTVALUE(VALUE(b),'/row/@dep') dep
FROM orig_plan a,
TABLE(XMLSEQUENCE(EXTRACT(XMLTYPE(a.other_xml),'/*/display_map/row'))) b
WHERE sql_id = 'd1bmu84pdu6gx'
AND other_xml IS NOT NULL),
adapt_plan_no_parent AS (-- generate adaptive_id (aka step_id) once the adaptive steps are excluded
SELECT a.sql_id, a.plan_hash_value, a.id, a.parent_id, b.dep,
(ROW_NUMBER() OVER (ORDER BY a.id))-1 adapt_id, a.operation, a.options, a.object_name, a.access_predicates, a.filter_predicates, b.skp
FROM orig_plan a,
skip_steps b
WHERE a.id = b.stepid(+)
AND (b.skp = 0 OR b.skp IS NULL)),
full_adaptive_plan AS (-- generate the parent adaptive step id
SELECT id, adapt_id, NVL(adapt_parent_id, parent_id) parent_id, operation, options, object_name, access_predicates, filter_predicates
FROM (SELECT dep, adapt_id, id, (SELECT MAX(adapt_id) FROM adapt_plan_no_parent b WHERE a.dep-1 = NVL(b.dep,0) AND b.adapt_id < a.adapt_id ) adapt_parent_id,
parent_id, a.operation operation, a.options, a.object_name, a.access_predicates, a.filter_predicates
FROM adapt_plan_no_parent a)),
plan_with_ash AS (SELECT full_adaptive_plan.*, NVL(ashdata.num_samples,0) num_samples, NVL(ashdata.perc_impact,0) perc_impact
FROM full_adaptive_plan,
ashdata
WHERE ashdata.id(+) = full_adaptive_plan.id),
plan_with_rec_impact AS (-- compute recursive impact (substree impact)
SELECT a.*, (SELECT sum(b.perc_impact)
FROM plan_with_ash b
START WITH b.adapt_id = a.adapt_id
CONNECT BY prior b.adapt_id = b.parent_id) sum_perc_impact
FROM plan_with_ash a)
SELECT '{v: '''||adapt_id||''',f: '''||adapt_id||' - '||operation||' '||options||NVL2(object_name,'<br>',' ')||object_name||'''}' id,
parent_id,
SUBSTR('Step ID: '||adapt_id||' (ASH Step ID: '||id||')\nASH Samples: '||num_samples||' ('||perc_impact||'%)'||
'\nSubstree Impact '||sum_perc_impact||'%'||
NVL2(access_predicates,'\n\nAccess Predicates: '||access_predicates,'')||NVL2(filter_predicates,'\n\nFilter Predicates: '||filter_predicates,''),1,4000) message,
adapt_id id3
FROM plan_with_rec_impact
ORDER BY id3

16:52:26 col:2of5.

16:52:26 col:2of5 "00102_sqld360_323688_d1bmu84pdu6gx_2d_34_plan_tree_with_subtree_for_sqlexecid_33554432_of_phv_0_org_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:26 col:2of5 "Execution Plans"
16:52:26 Plan Step IDs timeline for SQL_EXEC_ID 33554432 of PHV 0

SELECT TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
null,
plan_line_id,
CASE WHEN rtr_category > .5 THEN category ELSE 'Multiple' END,
num_samples
FROM (SELECT end_time, plan_line_id, category, num_samples, rtr_category, ROW_NUMBER() OVER (PARTITION BY end_time, plan_line_id ORDER BY rtr_category DESC) rn_category
FROM (SELECT end_time, plan_line_id, category, SUM(num_samples) OVER (PARTITION BY end_time, plan_line_id) num_samples, RATIO_TO_REPORT(num_samples) OVER (PARTITION BY end_time, plan_line_id) rtr_category
FROM (SELECT timestamp end_time, NVL(id,0) plan_line_id,
CASE WHEN other_tag = 'CPU' THEN 'CPU' WHEN other_tag LIKE '%I/O' THEN 'I/O' WHEN other_tag = 'Concurrency' THEN 'Concurrency' WHEN other_tag = 'Cluster' THEN 'Cluster' ELSE 'Other' END category,
COUNT(*) num_samples
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =  0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 2
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 2706
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 53319
AND timestamp BETWEEN TO_DATE('20201013011359', 'YYYYMMDDHH24MISS') AND TO_DATE('20201013023420', 'YYYYMMDDHH24MISS')
AND remarks = 'd1bmu84pdu6gx'
AND NVL(partition_id, 33554432) = 33554432
AND NVL(distribution, TO_DATE('20201013011328', 'YYYYMMDDHH24MISS')) = TO_DATE('20201013011328', 'YYYYMMDDHH24MISS')
AND 'Y' = 'Y'
GROUP BY timestamp, NVL(id,0), CASE WHEN other_tag = 'CPU' THEN 'CPU' WHEN other_tag LIKE '%I/O' THEN 'I/O' WHEN other_tag = 'Concurrency' THEN 'Concurrency' WHEN other_tag = 'Cluster' THEN 'Cluster' ELSE 'Other' END)
)
)
WHERE rn_category = 1
ORDER BY end_time

16:52:26 col:2of5.

16:52:26 col:2of5 "00103_sqld360_323688_d1bmu84pdu6gx_2d_35_plan_step_ids_timeline_for_sqlexecid_33554432_of_phv_0.html"
16:52:26 col:2of5 "00104_sqld360_323688_d1bmu84pdu6gx_2d_35_plan_step_ids_timeline_for_sqlexecid_33554432_of_phv_0_bubble_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:26 col:2of5 "Execution Plans"
16:52:26 Top Step/Event/Obj for SQL_EXEC_ID 33554432 of PHV 0

SELECT step_event,
num_samples,
CASE wait_class WHEN 'CPU' THEN '34CF27' WHEN 'Scheduler' THEN '9FFA9D' WHEN 'User I/O' THEN '0252D7' WHEN 'System I/O' THEN '1E96DD'  WHEN 'Concurrency' THEN '871C12' WHEN 'Application' THEN 'C42A05' WHEN 'Commit' THEN 'EA6A05' WHEN 'Configuration' THEN '594611'   WHEN 'Administrative' THEN '75763E'  WHEN 'Network' THEN '989779' WHEN 'Other' THEN 'F571A0'  WHEN 'Cluster' THEN 'CEC3B5' WHEN 'Queueing' THEN 'C6BAA5' END style,
step_event||' - '||num_samples||' Samples ('||TRUNC(100*RATIO_TO_REPORT(num_samples) OVER (),2)||'% of DB Time)' tooltip
FROM (SELECT data.step||' '||CASE WHEN data.obj# = 0 THEN 'UNDO'
ELSE (SELECT TRIM('.' FROM ' '||o.owner||'.'||o.object_name||'.'||o.subobject_name) FROM dba_objects o WHERE o.object_id = data.obj# AND ROWNUM = 1)
END||' / '||data.event  step_event,
data.num_samples, data.wait_class
FROM (SELECT id||' - '||operation||' '||options step, object_instance obj#, object_node event, other_tag wait_class,
count(*) num_samples
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =  0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 2
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 2706
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) =  53319
AND timestamp BETWEEN TO_DATE('20201013011359', 'YYYYMMDDHH24MISS') AND TO_DATE('20201013023420', 'YYYYMMDDHH24MISS')
AND remarks = 'd1bmu84pdu6gx'
AND NVL(partition_id, 33554432) = 33554432
AND NVL(distribution, TO_DATE('20201013011328', 'YYYYMMDDHH24MISS')) = TO_DATE('20201013011328', 'YYYYMMDDHH24MISS')
AND 'Y' = 'Y'
GROUP BY id||' - '||operation||' '||options, object_instance, object_node, other_tag
ORDER BY 5 DESC) data)
ORDER BY 2 DESC

16:52:26 col:2of5.

16:52:26 col:2of5 "00105_sqld360_323688_d1bmu84pdu6gx_2d_36_top_stepeventobj_for_sqlexecid_33554432_of_phv_0.html"
16:52:26 col:2of5 "00106_sqld360_323688_d1bmu84pdu6gx_2d_36_top_stepeventobj_for_sqlexecid_33554432_of_phv_0_bar_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:27 col:2of5 "Execution Plans"
16:52:27 Top 15 Wait events timeline SQL_EXEC_ID 33554432 of PHV 0

SELECT 0 snap_id,
TO_CHAR(sample_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
TO_CHAR(sample_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
NVL(num_sess_01,0) "e01ON CPU" ,
NVL(num_sess_02,0) "e02cell single block physical " ,
NVL(num_sess_03,0) "e03cell list of blocks physica" ,
NVL(num_sess_04,0) "e04gc current grant 2-way" ,
NVL(num_sess_05,0) "e05" ,
NVL(num_sess_06,0) "e06" ,
NVL(num_sess_07,0) "e07" ,
NVL(num_sess_08,0) "e08" ,
NVL(num_sess_09,0) "e09" ,
NVL(num_sess_10,0) "e10" ,
NVL(num_sess_11,0) "e11" ,
NVL(num_sess_12,0) "e12" ,
NVL(num_sess_13,0) "e13" ,
NVL(num_sess_14,0) "e14" ,
NVL(num_sess_15,0) "e15"
FROM (SELECT sample_time,
MAX(CASE WHEN cpu_or_event  = 'ON CPU' THEN num_sess ELSE NULL END) num_sess_01,
MAX(CASE WHEN cpu_or_event  = 'cell single block physical read' THEN num_sess ELSE NULL END) num_sess_02,
MAX(CASE WHEN cpu_or_event  = 'cell list of blocks physical read' THEN num_sess ELSE NULL END) num_sess_03,
MAX(CASE WHEN cpu_or_event  = 'gc current grant 2-way' THEN num_sess ELSE NULL END) num_sess_04,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_05,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_06,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_07,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_08,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_09,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_10,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_11,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_12,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_13,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_14,
MAX(CASE WHEN cpu_or_event  = '' THEN num_sess ELSE NULL END) num_sess_15
FROM (SELECT timestamp sample_time,
object_node cpu_or_event,
count(*) num_sess
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND remarks = 'd1bmu84pdu6gx'
AND 'Y' = 'Y'
AND /*cost*/ bytes = 0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 2
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 2706
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 53319
AND timestamp BETWEEN TO_DATE('20201013011359', 'YYYYMMDDHH24MISS') AND TO_DATE('20201013023420', 'YYYYMMDDHH24MISS')
AND NVL(partition_id, 33554432) = 33554432
AND NVL(distribution, TO_DATE('20201013011328', 'YYYYMMDDHH24MISS')) = TO_DATE('20201013011328', 'YYYYMMDDHH24MISS')
AND object_node IN ('ON CPU','cell single block physical read','cell list of blocks physical read','gc current grant 2-way','','',
'','','','','','',
'','','')
GROUP BY timestamp, object_node)
GROUP BY sample_time)
ORDER BY 3

16:52:27 col:2of5.

16:52:27 col:2of5 "00107_sqld360_323688_d1bmu84pdu6gx_2d_37_top_15_wait_events_timeline_sqlexecid_33554432_of_phv_0.html"
16:52:27 col:2of5 "00108_sqld360_323688_d1bmu84pdu6gx_2d_37_top_15_wait_events_timeline_sqlexecid_33554432_of_phv_0_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:27 col:2of5 "Execution Plans"
16:52:27 DB Time by PX process for SQL_EXEC_ID 33554432 of PHV 0

SELECT data.qcpx_process,
data.num_samples,
NULL style,
data.qcpx_process||' - '||data.num_samples||' Samples ('||TRUNC(100*RATIO_TO_REPORT(data.num_samples) OVER (),2)||'%)' tooltip
FROM (SELECT NVL2(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)), 'PX Proc - ', 'QC - ')||position||'.'||cpu_cost||'.'||io_cost  qcpx_process,
count(*) num_samples
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =  0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 2
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 2706
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 53319
AND timestamp BETWEEN TO_DATE('20201013011359', 'YYYYMMDDHH24MISS') AND TO_DATE('20201013023420', 'YYYYMMDDHH24MISS')
AND remarks = 'd1bmu84pdu6gx'
AND NVL(partition_id, 33554432) = 33554432
AND NVL(distribution, TO_DATE('20201013011328', 'YYYYMMDDHH24MISS')) = TO_DATE('20201013011328', 'YYYYMMDDHH24MISS')
AND 'Y' = 'Y'
GROUP BY NVL2(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)), 'PX Proc - ', 'QC - ')||position||'.'||cpu_cost||'.'||io_cost
ORDER BY 2 DESC) data
ORDER BY 2 DESC

16:52:27 col:2of5.

16:52:27 col:2of5 "00109_sqld360_323688_d1bmu84pdu6gx_2d_38_db_time_by_px_process_for_sqlexecid_33554432_of_phv_0.html"
16:52:27 col:2of5 "00110_sqld360_323688_d1bmu84pdu6gx_2d_38_db_time_by_px_process_for_sqlexecid_33554432_of_phv_0_bar_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:27 col:2of5 "Execution Plans"
16:52:27 PGA and TEMP usage for SQL_EXEC_ID 33554432 of PHV 0

SELECT 0 snap_id,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
pga_allocated,
temp_space_allocated,
0 dummy_03,
0 dummy_04,
0 dummy_05,
0 dummy_06,
0 dummy_07,
0 dummy_08,
0 dummy_09,
0 dummy_10,
0 dummy_11,
0 dummy_12,
0 dummy_13,
0 dummy_14,
0 dummy_15
FROM (SELECT timestamp end_time,
SUM(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,11)+1,INSTR(partition_stop,',',1,12)-INSTR(partition_stop,',',1,11)-1))) pga_allocated,
SUM(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,12)+1,INSTR(partition_stop,',',1,13)-INSTR(partition_stop,',',1,12)-1))) temp_space_allocated
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =  0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 2
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 2706
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 53319
AND timestamp BETWEEN TO_DATE('20201013011359', 'YYYYMMDDHH24MISS') AND TO_DATE('20201013023420', 'YYYYMMDDHH24MISS')
AND remarks = 'd1bmu84pdu6gx'
AND NVL(partition_id, 33554432) = 33554432
AND NVL(distribution, TO_DATE('20201013011328', 'YYYYMMDDHH24MISS')) = TO_DATE('20201013011328', 'YYYYMMDDHH24MISS')
AND 'Y' = 'Y'
GROUP BY timestamp)
ORDER BY 3

16:52:27 col:2of5.

16:52:27 col:2of5 "00111_sqld360_323688_d1bmu84pdu6gx_2d_39_pga_and_temp_usage_for_sqlexecid_33554432_of_phv_0.html"
16:52:27 col:2of5 "00112_sqld360_323688_d1bmu84pdu6gx_2d_39_pga_and_temp_usage_for_sqlexecid_33554432_of_phv_0_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:27 col:2of5 "Execution Plans"
16:52:27 Read and Write I/O requests for SQL_EXEC_ID 33554432 of PHV 0

SELECT 0 snap_id,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
read_io_requests,
write_io_requests,
0 dummy_03,
0 dummy_04,
0 dummy_05,
0 dummy_06,
0 dummy_07,
0 dummy_08,
0 dummy_09,
0 dummy_10,
0 dummy_11,
0 dummy_12,
0 dummy_13,
0 dummy_14,
0 dummy_15
FROM (SELECT timestamp end_time,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,14)+1,INSTR(partition_stop,',',1,15)-INSTR(partition_stop,',',1,14)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) read_io_requests,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,15)+1,INSTR(partition_stop,',',1,16)-INSTR(partition_stop,',',1,15)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) write_io_requests
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =  0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 2
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 2706
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 53319
AND timestamp BETWEEN TO_DATE('20201013011359', 'YYYYMMDDHH24MISS') AND TO_DATE('20201013023420', 'YYYYMMDDHH24MISS')
AND remarks = 'd1bmu84pdu6gx'
AND NVL(partition_id, 33554432) = 33554432
AND NVL(distribution, TO_DATE('20201013011328', 'YYYYMMDDHH24MISS')) = TO_DATE('20201013011328', 'YYYYMMDDHH24MISS')
AND 'Y' = 'Y'
GROUP BY timestamp)
ORDER BY 3

16:52:27 col:2of5.

16:52:27 col:2of5 "00113_sqld360_323688_d1bmu84pdu6gx_2d_40_read_and_write_io_requests_for_sqlexecid_33554432_of_phv_0.html"
16:52:27 col:2of5 "00114_sqld360_323688_d1bmu84pdu6gx_2d_40_read_and_write_io_requests_for_sqlexecid_33554432_of_phv_0_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:27 col:2of5 "Execution Plans"
16:52:27 Read, Write and Interconnect I/O bytes for SQL_EXEC_ID 33554432 of PHV 0

SELECT 0 snap_id,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI:SS') begin_time,
TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI:SS') end_time,
read_io_bytes,
write_io_bytes,
interconnect_io_bytes,
0 dummy_04,
0 dummy_05,
0 dummy_06,
0 dummy_07,
0 dummy_08,
0 dummy_09,
0 dummy_10,
0 dummy_11,
0 dummy_12,
0 dummy_13,
0 dummy_14,
0 dummy_15
FROM (SELECT timestamp end_time,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,16)+1,INSTR(partition_stop,',',1,17)-INSTR(partition_stop,',',1,16)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) read_io_bytes,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,17)+1,INSTR(partition_stop,',',1,18)-INSTR(partition_stop,',',1,17)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) write_io_bytes,
SUM(NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,18)+1,INSTR(partition_stop,',',1,19)-INSTR(partition_stop,',',1,18)-1)),0)/
ROUND(GREATEST(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1))/1e6,1))) interconnect_io_bytes
FROM plan_table
WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =  0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 2
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 2706
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 53319
AND timestamp BETWEEN TO_DATE('20201013011359', 'YYYYMMDDHH24MISS') AND TO_DATE('20201013023420', 'YYYYMMDDHH24MISS')
AND remarks = 'd1bmu84pdu6gx'
AND NVL(partition_id, 33554432) = 33554432
AND NVL(distribution, TO_DATE('20201013011328', 'YYYYMMDDHH24MISS')) = TO_DATE('20201013011328', 'YYYYMMDDHH24MISS')
AND 'Y' = 'Y'
GROUP BY timestamp)
ORDER BY 3

16:52:27 col:2of5.

16:52:27 col:2of5 "00115_sqld360_323688_d1bmu84pdu6gx_2d_41_read_write_and_interconnect_io_bytes_for_sqlexecid_33554432_of_phv_0.html"
16:52:27 col:2of5 "00116_sqld360_323688_d1bmu84pdu6gx_2d_41_read_write_and_interconnect_io_bytes_for_sqlexecid_33554432_of_phv_0_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:27 col:2of5 "Execution Plans"
16:52:27 Raw Data for SQL_EXEC_ID 33554432 of PHV 0

SELECT /*+ NO_MERGE */
statement_id     source,
search_columns   dbid,
cardinality      snap_id,
position         instance_number,
parent_id        sample_id,
TO_CHAR(timestamp, 'YYYY-MM-DD/HH24:MI:SS')        sample_time,
partition_id     sql_exec_id,
TO_CHAR(TO_DATE(distribution,'YYYYMMDDHH24MISS'), 'YYYY-MM-DD/HH24:MI:SS')  sql_exec_start,
cpu_cost         session_id,
io_cost          session_serial#,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,13)+1))            user_id,
remarks          sql_id,
cost             plan_hash_value,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,19)+1)) sql_full_plan_hash_value,
id               sql_plan_line_id,
operation        sql_plan_operation,
options          sql_plan_options,
object_node      cpu_or_event,
other_tag        wait_class,
TO_NUMBER(SUBSTR(partition_start,1,INSTR(partition_start,',',1,1)-1)) seq#,
SUBSTR(partition_start,INSTR(partition_start,',',1,1)+1,INSTR(partition_start,',',1,2)-INSTR(partition_start,',',1,1)-1) p1text,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,2)+1,INSTR(partition_start,',',1,3)-INSTR(partition_start,',',1,2)-1)) p1,
SUBSTR(partition_start,INSTR(partition_start,',',1,3)+1,INSTR(partition_start,',',1,4)-INSTR(partition_start,',',1,3)-1) p2text,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,4)+1,INSTR(partition_start,',',1,5)-INSTR(partition_start,',',1,4)-1)) p2,
SUBSTR(partition_start,INSTR(partition_start,',',1,5)+1,INSTR(partition_start,',',1,6)-INSTR(partition_start,',',1,5)-1) p3text,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,6)+1,INSTR(partition_start,',',1,7)-INSTR(partition_start,',',1,6)-1)) p3,
object_instance  current_obj#,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,7)+1,INSTR(partition_start,',',1,8)-INSTR(partition_start,',',1,7)-1)) current_file#,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,8)+1,INSTR(partition_start,',',1,9)-INSTR(partition_start,',',1,8)-1)) current_block#,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,9)+1,INSTR(partition_start,',',1,10)-INSTR(partition_start,',',1,9)-1)) current_row#,
SUBSTR(partition_stop,1,INSTR(partition_stop,',',1,1)-1) in_parse,
SUBSTR(partition_stop,INSTR(partition_stop,',',1,1)+1,INSTR(partition_stop,',',1,2)-INSTR(partition_stop,',',1,1)-1) in_hard_parse,
SUBSTR(partition_stop,INSTR(partition_stop,',',1,2)+1,INSTR(partition_stop,',',1,3)-INSTR(partition_stop,',',1,2)-1) in_sql_execution,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)) qc_instance_id,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)) qc_session_id,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)) qc_session_serial#,
SUBSTR(partition_stop,INSTR(partition_stop,',',1,6)+1,INSTR(partition_stop,',',1,7)-INSTR(partition_stop,',',1,6)-1) blocking_session_status,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,7)+1,INSTR(partition_stop,',',1,8)-INSTR(partition_stop,',',1,7)-1)) blocking_session,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,8)+1,INSTR(partition_stop,',',1,9)-INSTR(partition_stop,',',1,8)-1)) blocking_session_serial#,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,9)+1,INSTR(partition_stop,',',1,10)-INSTR(partition_stop,',',1,9)-1)) blocking_inst_id,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,10)+1,INSTR(partition_stop,',',1,11)-INSTR(partition_stop,',',1,10)-1)) px_flags,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,11)+1,INSTR(partition_stop,',',1,12)-INSTR(partition_stop,',',1,11)-1)) pga_allocated,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,12)+1,INSTR(partition_stop,',',1,13)-INSTR(partition_stop,',',1,12)-1)) temp_space_allocated,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,10)+1,INSTR(partition_start,',',1,11)-INSTR(partition_start,',',1,10)-1)) tm_delta_time,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,11)+1,INSTR(partition_start,',',1,12)-INSTR(partition_start,',',1,11)-1)) tm_delta_cpu_time,
TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,12)+1,INSTR(partition_start,',',1,13)-INSTR(partition_start,',',1,12)-1)) tm_delta_db_time,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,13)+1,INSTR(partition_stop,',',1,14)-INSTR(partition_stop,',',1,13)-1)) delta_time,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,14)+1,INSTR(partition_stop,',',1,15)-INSTR(partition_stop,',',1,14)-1)) delta_read_io_requests,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,15)+1,INSTR(partition_stop,',',1,16)-INSTR(partition_stop,',',1,15)-1)) delta_write_io_requests,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,16)+1,INSTR(partition_stop,',',1,17)-INSTR(partition_stop,',',1,16)-1)) delta_read_io_bytes,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,17)+1,INSTR(partition_stop,',',1,18)-INSTR(partition_stop,',',1,17)-1)) delta_write_io_bytes,
TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,18)+1,INSTR(partition_stop,',',1,19)-INSTR(partition_stop,',',1,18)-1)) delta_interconnect_io_bytes
FROM plan_table
WHERE remarks = 'd1bmu84pdu6gx'
AND statement_id = 'SQLD360_ASH_DATA_HIST'
AND /*cost*/ bytes =  0
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) = 2
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) = 2706
AND NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) = 53319
AND timestamp BETWEEN TO_DATE('20201013011359', 'YYYYMMDDHH24MISS') AND TO_DATE('20201013023420', 'YYYYMMDDHH24MISS')
AND NVL(partition_id, 33554432) = 33554432
AND NVL(distribution, TO_DATE('20201013011328', 'YYYYMMDDHH24MISS')) = TO_DATE('20201013011328', 'YYYYMMDDHH24MISS')
AND 'Y' = 'Y'
ORDER BY sample_time,instance_number

16:52:27 col:2of5.

16:52:27 col:2of5 "00117_sqld360_323688_d1bmu84pdu6gx_2d_42_raw_data_for_sqlexecid_33554432_of_phv_0.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:28 col:2of5 "Execution Plans"
16:52:28 Plans from Memory
Completed: 16:52:28


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:28 col:2of5 "Execution Plans"
16:52:28 Plans from History
Completed: 16:52:28


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:28 col:2of5 "Execution Plans"
16:52:28 Plan from Plan Table
Completed: 16:52:28


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:28 col:2of5 "Execution Plans"
16:52:28 Plans from Baseline
Completed: 16:52:28


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:28 col:2of5 "Execution Plans"
16:52:28 Plans from SQL Tuning Sets
Completed: 16:52:29


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:29 col:2of5 "Plan Control"
16:52:29 SQL Profiles


16:52:29 col:2of5.

16:52:29 col:2of5 "00123_sqld360_323688_d1bmu84pdu6gx_2e_40_sql_profiles.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:29 col:2of5 "Plan Control"
16:52:29 SQL Profile Data

SELECT /*+ NO_MERGE */
       *
  FROM dbmshsxp_sql_profile_attr
 WHERE profile_name IN (SELECT name
                          FROM dba_sql_profiles
                         WHERE signature IN (  4260985471724335612 ,                    0 ))
   AND 'Y' = 'Y'
 ORDER BY profile_name

16:52:29 col:2of5.

16:52:29 col:2of5 "00124_sqld360_323688_d1bmu84pdu6gx_2e_41_sql_profile_data.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:29 col:2of5 "Plan Control"
16:52:29 SQL Plan Baselines


16:52:29 col:2of5.

16:52:29 col:2of5 "00125_sqld360_323688_d1bmu84pdu6gx_2e_42_sql_plan_baselines.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:29 col:2of5 "Plan Control"
16:52:29 SQL Patches


16:52:29 col:2of5.

16:52:29 col:2of5 "00126_sqld360_323688_d1bmu84pdu6gx_2e_43_sql_patches.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:29 col:2of5 "Plan Control"
16:52:29 SQL Plan Directives

SELECT /*+ NO_MERGE */
       *
  FROM (SELECT d.dir_id directive_id,
               d.type,
               d.enabled,
               (CASE WHEN d.internal_state = 'HAS_STATS' OR d.redundant = 'YES' THEN 'SUPERSEDED'
                     WHEN d.internal_state IN ('NEW', 'MISSING_STATS', 'PERMANENT') THEN 'USABLE'
                     ELSE 'UNKNOWN'
                 END) state,
               d.auto_drop,
               f.reason,
               d.created,
               d.last_modified,
               d.last_used,
               d.internal_state,
               d.redundant
          FROM sys."_BASE_OPT_DIRECTIVE" d,
               sys."_BASE_OPT_FINDING" f
          WHERE d.f_id = f.f_id)
 WHERE directive_id IN (SELECT directive_id
                          FROM dba_sql_plan_dir_objects
                         WHERE (owner, object_name) IN (SELECT object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx'))
 ORDER BY directive_id

16:52:29 col:2of5.

16:52:29 col:2of5 "00127_sqld360_323688_d1bmu84pdu6gx_2e_44_sql_plan_directives.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:29 col:2of5 "Plan Control"
16:52:29 SQL Plan Directives Objects

WITH dir_id AS (SELECT directive_id
                  FROM dba_sql_plan_dir_objects
                 WHERE (owner, object_name) IN (SELECT object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx'))
SELECT /*+ NO_MERGE */ *
  FROM dba_sql_plan_dir_objects
 WHERE directive_id IN (SELECT directive_id FROM dir_id)
 ORDER BY owner, object_name, directive_id

16:52:29 col:2of5.

16:52:29 col:2of5 "00128_sqld360_323688_d1bmu84pdu6gx_2e_45_sql_plan_directives_objects.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:29 col:2of5 "Plan Control"
16:52:29 SQL ReOptimization Hints

SELECT /*+ NO_MERGE */
       *
  FROM gv$sql_reoptimization_hints
 WHERE sql_id = 'd1bmu84pdu6gx'
 ORDER BY inst_id, child_number, hint_id

16:52:29 col:2of5.

16:52:29 col:2of5 "00129_sqld360_323688_d1bmu84pdu6gx_2e_46_sql_reoptimization_hints.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:29 col:2of5 "Plan Control"
16:52:29 Mapped SQL

SELECT /*+ NO_MERGE */
       *
  FROM gv$mapped_sql
 WHERE mapped_sql_id = 'd1bmu84pdu6gx' OR sql_id = 'd1bmu84pdu6gx'
 ORDER BY inst_id

16:52:29 col:2of5.

16:52:29 col:2of5 "00130_sqld360_323688_d1bmu84pdu6gx_2e_47_mapped_sql.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:29 col:2of5 "SQL Monitor"
16:52:29 SQL Monitor


16:52:29 col:2of5.

16:52:29 col:2of5 "00131_sqld360_323688_d1bmu84pdu6gx_2f_48_sql_monitor.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:29 col:2of5 "SQL Monitor"
16:52:29 SQL Plan Monitor

SELECT /*+ NO_MERGE */
       *
  FROM gv$sql_plan_monitor
 WHERE sql_id = 'd1bmu84pdu6gx'
 ORDER BY inst_id, sid, sql_exec_id desc, sql_exec_start desc, plan_line_id

16:52:29 col:2of5.

16:52:29 col:2of5 "00132_sqld360_323688_d1bmu84pdu6gx_2f_49_sql_plan_monitor.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:30 col:2of5 "Binds"
16:52:30 Binds Summary from Memory

SELECT /*+ NO_MERGE */
       inst_id, child_number, name, position, datatype_string, MIN(value_string) min_value, MAX(value_string) max_value, COUNT(DISTINCT value_string) distinct_combinations
  FROM gv$sql_bind_capture
 WHERE sql_id = 'd1bmu84pdu6gx'
 GROUP BY inst_id, child_number, name, position, datatype_string
 ORDER BY inst_id, child_number, name, position, datatype_string

16:52:30 col:2of5.

16:52:30 col:2of5 "00133_sqld360_323688_d1bmu84pdu6gx_2g_50_binds_summary_from_memory.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:30 col:2of5 "Binds"
16:52:30 Binds List from Memory

SELECT /*+ NO_MERGE */
       sbc.*,
       s.plan_hash_value
  FROM gv$sql_bind_capture sbc,
       gv$sql s
 WHERE sbc.sql_id = 'd1bmu84pdu6gx'
   AND sbc.inst_id = s.inst_id
   AND sbc.child_number = s.child_number
   AND sbc.sql_id = s.sql_id
 ORDER BY sbc.inst_id, sbc.child_number, sbc.position

16:52:30 col:2of5.

16:52:30 col:2of5 "00134_sqld360_323688_d1bmu84pdu6gx_2g_51_binds_list_from_memory.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:30 col:2of5 "Binds"
16:52:30 Binds Summary from History

SELECT /*+ NO_MERGE */
       instance_number, name, position, datatype_string, MIN(value_string) min_value, MAX(value_string) max_value, COUNT(DISTINCT value_string) distinct_combinations
  FROM dba_hist_sqlbind
 WHERE sql_id = 'd1bmu84pdu6gx'
   AND snap_id BETWEEN 3484 AND 4973
   AND 'Y' = 'Y'
 GROUP BY instance_number, name, position, datatype_string
 ORDER BY instance_number, name, position, datatype_string

16:52:30 col:2of5.

16:52:30 col:2of5 "00135_sqld360_323688_d1bmu84pdu6gx_2g_52_binds_summary_from_history.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:30 col:2of5 "Binds"
16:52:30 Binds List from History

SELECT /*+ NO_MERGE */
       *
  FROM dba_hist_sqlbind
 WHERE sql_id = 'd1bmu84pdu6gx'
   AND snap_id BETWEEN 3484 AND 4973
   AND 'Y' = 'Y'
 ORDER BY snap_id desc, instance_number, position

16:52:30 col:2of5.

16:52:30 col:2of5 "00136_sqld360_323688_d1bmu84pdu6gx_2g_53_binds_list_from_history.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:30 col:2of5 "Binds"
16:52:30 Captured Binds Details

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:30 col:2of5 "Binds"
16:52:30 Binds with unstable datatype

SELECT name, position, COUNT(DISTINCT datatype_string) DISTINCT_DATATYPE, MIN(datatype_string) MIN_DATATYPE, MAX(datatype_string) MAX_DATATYPE
  FROM (SELECT name, position, datatype_string
          FROM gv$sql_bind_capture
         WHERE sql_id = 'd1bmu84pdu6gx'
         UNION
         SELECT name, position, datatype_string
           FROM dba_hist_sqlbind
          WHERE sql_id = 'd1bmu84pdu6gx'
            AND snap_id BETWEEN 3484 AND 4973
            AND 'Y' = 'Y' )
 GROUP BY name, position
 HAVING COUNT(*) > 1

16:52:30 col:2of5.

16:52:30 col:2of5 "00138_sqld360_323688_d1bmu84pdu6gx_2g_54_binds_with_unstable_datatype.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:30 col:2of5 "Cursor Sharing"
16:52:30 Non-sharing reasons summary
SELECT COUNT(*) cursors, inst_id, reason_not_shared FROM gv$sql_shared_cursor UNPIVOT (value FOR reason_not_shared IN
( PURGED_CURSOR
, HASH_MATCH_FAILED
, LOAD_RUNTIME_HEAP_FAILED
, REMOTE_MAPPING_MISMATCH
, LOCK_USER_SCHEMA_FAILED
, FLASHBACK_ARCHIVE_MISMATCH
, ACL_MISMATCH
, LOAD_OPTIMIZER_STATS
, PLSQL_DEBUG
, LITREP_COMP_MISMATCH
, FLASHBACK_TABLE_MISMATCH
, MV_STALEOBJ_MISMATCH
, PX_MISMATCH
, OPTIMIZER_MODE_MISMATCH
, ROLL_INVALID_MISMATCH
, MV_REWRITE_MISMATCH
, BIND_PEEKED_PQ_MISMATCH
, MULTI_PX_MISMATCH
, TOP_LEVEL_DDL_MISMATCH
, PQ_SLAVE_MISMATCH
, CROSSEDITION_TRIGGER_MISMATCH
, STB_OBJECT_MISMATCH
, CURSOR_PARTS_MISMATCH
, PLSQL_CMP_SWITCHS_DIFF
, BIND_UACS_DIFF
, DIFF_CALL_DURN
, LOGICAL_STANDBY_APPLY
, DIFFERENT_LONG_LENGTH
, TOP_LEVEL_RPI_CURSOR
, PDDL_ENV_MISMATCH
, ANYDATA_TRANSFORMATION
, FLASHBACK_CURSOR
, NO_TRIGGER_MISMATCH
, TYPCHK_DEP_MISMATCH
, USER_BIND_PEEK_MISMATCH
, MV_QUERY_GEN_MISMATCH
, EDITION_MISMATCH
, OVERLAP_TIME_MISMATCH
, INCOMP_LTRL_MISMATCH
, LOGMINER_SESSION_MISMATCH
, REMOTE_TRANS_MISMATCH
, INSUFF_PRIVS_REM
, INSUFF_PRIVS
, BIND_EQUIV_FAILURE
, TRANSLATION_MISMATCH
, LANGUAGE_MISMATCH
, DESCRIBE_MISMATCH
, BIND_MISMATCH
, AUTH_CHECK_MISMATCH
, TYPECHECK_MISMATCH
, SLAVE_QC_MISMATCH
, INST_DRTLD_MISMATCH
, PDML_ENV_MISMATCH
, BUFFERED_DML_MISMATCH
, EXPLAIN_PLAN_CURSOR
, FORCE_HARD_PARSE
, LITERAL_MISMATCH
, STATS_ROW_MISMATCH
, OUTLINE_MISMATCH
, OPTIMIZER_MISMATCH
, SQL_TYPE_MISMATCH
, UNBOUND_CURSOR
, USE_FEEDBACK_STATS
, BIND_LENGTH_UPGRADEABLE )) WHERE value = 'Y' AND sql_id = 'd1bmu84pdu6gx' GROUP BY inst_id,reason_not_shared ORDER BY inst_id, cursors DESC, reason_not_shared

16:52:30 col:2of5.

16:52:30 col:2of5 "00139_sqld360_323688_d1bmu84pdu6gx_2h_56_nonsharing_reasons_summary.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:31 col:2of5 "Cursor Sharing"
16:52:31 Non-sharing reasons details

SELECT /*+ NO_MERGE */
       *
  FROM gv$sql_shared_cursor
 WHERE sql_id = 'd1bmu84pdu6gx'
 ORDER BY inst_id, child_number

16:52:31 col:2of5.

16:52:31 col:2of5 "00140_sqld360_323688_d1bmu84pdu6gx_2h_57_nonsharing_reasons_details.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:31 col:2of5 "Cursor Sharing"
16:52:31 ACS Histogram

SELECT /*+ NO_MERGE */
       *
  FROM gv$sql_cs_histogram
 WHERE sql_id = 'd1bmu84pdu6gx'
 ORDER BY inst_id, child_number, bucket_id

16:52:31 col:2of5.

16:52:31 col:2of5 "00141_sqld360_323688_d1bmu84pdu6gx_2h_58_acs_histogram.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:31 col:2of5 "Cursor Sharing"
16:52:31 ACS Statistics

SELECT /*+ NO_MERGE */
       *
  FROM gv$sql_cs_statistics
 WHERE sql_id = 'd1bmu84pdu6gx'
 ORDER BY inst_id, child_number

16:52:31 col:2of5.

16:52:31 col:2of5 "00142_sqld360_323688_d1bmu84pdu6gx_2h_59_acs_statistics.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:31 col:2of5 "Cursor Sharing"
16:52:31 ACS Selectivity

SELECT /*+ NO_MERGE */
       *
  FROM gv$sql_cs_selectivity
 WHERE sql_id = 'd1bmu84pdu6gx'
 ORDER BY inst_id, child_number, range_id, predicate

16:52:31 col:2of5.

16:52:31 col:2of5 "00143_sqld360_323688_d1bmu84pdu6gx_2h_60_acs_selectivity.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:31 col:3of5 "Objects"
16:52:31 Tables

SELECT /*+ NO_MERGE */
       *
  FROM dba_tables
 WHERE (owner, table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
 ORDER BY owner, table_name

16:52:31 col:3of5.

16:52:31 col:3of5 "00144_sqld360_323688_d1bmu84pdu6gx_3a_61_tables.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:32 col:3of5 "Objects"
16:52:32 Indexes

SELECT /*+ NO_MERGE */
       *
  FROM dba_indexes
 WHERE (table_owner, table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
 ORDER BY table_owner, table_name, index_name

16:52:32 col:3of5.

16:52:32 col:3of5 "00145_sqld360_323688_d1bmu84pdu6gx_3a_62_indexes.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:32 col:3of5 "Objects"
16:52:32 Index Columns

SELECT /*+ NO_MERGE */
       *
  FROM dba_ind_columns
 WHERE (table_owner, table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
 ORDER BY table_owner, table_name, index_name, column_position

16:52:32 col:3of5.

16:52:32 col:3of5 "00146_sqld360_323688_d1bmu84pdu6gx_3a_63_index_columns.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:32 col:3of5 "Objects"
16:52:32 Columns

SELECT /*+ NO_MERGE */
       a.*
      ,CASE WHEN data_type = 'NUMBER' THEN TO_CHAR(utl_raw.cast_TO_NUMBER(low_value))
        WHEN data_type IN ('VARCHAR2', 'CHAR') THEN SUBSTR(to_char(utl_raw.cast_to_varchar2(low_value)),1,32)
        WHEN data_type IN ('NVARCHAR2','NCHAR') THEN SUBSTR(to_char(utl_raw.cast_to_nvarchar2(low_value)),1,32)
        WHEN data_type = 'BINARY_DOUBLE' THEN TO_CHAR(utl_raw.cast_to_binary_double(low_value))
        WHEN data_type = 'BINARY_FLOAT' THEN TO_CHAR(utl_raw.cast_to_binary_float(low_value))
        WHEN data_type = 'DATE' THEN rtrim(
                    LTRIM(TO_CHAR(100*(TO_NUMBER(SUBSTR(low_value,1,2) ,'XX')-100) + (TO_NUMBER(SUBSTR(low_value,3,2) ,'XX')-100),'0000'))||'-'||
                    LTRIM(TO_CHAR(     TO_NUMBER(SUBSTR(low_value,5,2) ,'XX')  ,'00'))||'-'||
                    LTRIM(TO_CHAR(     TO_NUMBER(SUBSTR(low_value,7,2) ,'XX')  ,'00'))||'/'||
                    LTRIM(TO_CHAR(     TO_NUMBER(SUBSTR(low_value,9,2) ,'XX')-1,'00'))||':'||
                    LTRIM(TO_CHAR(     TO_NUMBER(SUBSTR(low_value,11,2),'XX')-1,'00'))||':'||
                    LTRIM(TO_CHAR(     TO_NUMBER(SUBSTR(low_value,13,2),'XX')-1,'00')))
        WHEN data_type LIKE 'TIMESTAMP%' THEN rtrim(
                    LTRIM(TO_CHAR(100*(TO_NUMBER(SUBSTR(low_value,1,2) ,'XX')-100) + (TO_NUMBER(SUBSTR(low_value,3,2) ,'XX')-100),'0000'))||'-'||
                    LTRIM(TO_CHAR(     TO_NUMBER(SUBSTR(low_value,5,2) ,'XX')  ,'00'))||'-'||
                    LTRIM(TO_CHAR(     TO_NUMBER(SUBSTR(low_value,7,2) ,'XX')  ,'00'))||'/'||
                    LTRIM(TO_CHAR(     TO_NUMBER(SUBSTR(low_value,9,2) ,'XX')-1,'00'))||':'||
                    LTRIM(TO_CHAR(     TO_NUMBER(SUBSTR(low_value,11,2),'XX')-1,'00'))||':'||
                    LTRIM(TO_CHAR(     TO_NUMBER(SUBSTR(low_value,13,2),'XX')-1,'00'))||'.'||
                    TO_NUMBER(SUBSTR(low_value,15,8),'XXXXXXXX'))
       END low_value_translated,
       CASE WHEN data_type = 'NUMBER' THEN TO_CHAR(utl_raw.cast_TO_NUMBER(high_value))
        WHEN data_type IN ('VARCHAR2', 'CHAR') THEN SUBSTR(to_char(utl_raw.cast_to_varchar2(high_value)),1,32)
        WHEN data_type IN ('NVARCHAR2','NCHAR') THEN SUBSTR(to_char(utl_raw.cast_to_nvarchar2(high_value)),1,32)
        WHEN data_type = 'BINARY_DOUBLE' THEN TO_CHAR(utl_raw.cast_to_binary_double(high_value))
        WHEN data_type = 'BINARY_FLOAT' THEN TO_CHAR(utl_raw.cast_to_binary_float(high_value))
        WHEN data_type = 'DATE' THEN rtrim(
                    LTRIM(TO_CHAR(100*(TO_NUMBER(SUBSTR(high_value,1,2) ,'XX')-100) + (TO_NUMBER(SUBSTR(high_value,3,2) ,'XX')-100),'0000'))||'-'||
                    LTRIM(TO_CHAR(     TO_NUMBER(SUBSTR(high_value,5,2) ,'XX')  ,'00'))||'-'||
                    LTRIM(TO_CHAR(     TO_NUMBER(SUBSTR(high_value,7,2) ,'XX')  ,'00'))||'/'||
                    LTRIM(TO_CHAR(     TO_NUMBER(SUBSTR(high_value,9,2) ,'XX')-1,'00'))||':'||
                    LTRIM(TO_CHAR(     TO_NUMBER(SUBSTR(high_value,11,2),'XX')-1,'00'))||':'||
                    LTRIM(TO_CHAR(     TO_NUMBER(SUBSTR(high_value,13,2),'XX')-1,'00')))
        WHEN data_type LIKE 'TIMESTAMP%' THEN rtrim(
                    LTRIM(TO_CHAR(100*(TO_NUMBER(SUBSTR(high_value,1,2) ,'XX')-100) + (TO_NUMBER(SUBSTR(high_value,3,2) ,'XX')-100),'0000'))||'-'||
                    LTRIM(TO_CHAR(     TO_NUMBER(SUBSTR(high_value,5,2) ,'XX')  ,'00'))||'-'||
                    LTRIM(TO_CHAR(     TO_NUMBER(SUBSTR(high_value,7,2) ,'XX')  ,'00'))||'/'||
                    LTRIM(TO_CHAR(     TO_NUMBER(SUBSTR(high_value,9,2) ,'XX')-1,'00'))||':'||
                    LTRIM(TO_CHAR(     TO_NUMBER(SUBSTR(high_value,11,2),'XX')-1,'00'))||':'||
                    LTRIM(TO_CHAR(     TO_NUMBER(SUBSTR(high_value,13,2),'XX')-1,'00'))||'.'||
                    TO_NUMBER(SUBSTR(high_value,15,8),'XXXXXXXX'))
        END high_value_translated
  FROM dba_tab_cols a,
       dba_tables c  -- this is to filter out views
 WHERE (a.owner, a.table_name) IN (SELECT object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
   AND a.owner = c.owner
   AND a.table_name = c.table_name
 ORDER BY a.owner, a.table_name, a.column_id

16:52:32 col:3of5.

16:52:32 col:3of5 "00147_sqld360_323688_d1bmu84pdu6gx_3a_64_columns.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:33 col:3of5 "Objects"
16:52:33 Columns Usage

SELECT o.object_name, c.column_name, cu.*
  FROM sys.col_usage$ cu,
       dba_objects o,
       dba_tab_cols c
 WHERE cu.obj# = o.object_id
   AND o.owner = c.owner
   AND o.object_name = c.table_name
   AND cu.intcol# = c.column_id
   AND o.object_type = 'TABLE'
   AND (o.owner, o.object_name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
 ORDER BY o.object_name, cu.intcol#

16:52:33 col:3of5.

16:52:33 col:3of5 "00148_sqld360_323688_d1bmu84pdu6gx_3a_65_columns_usage.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:34 col:3of5 "Objects"
16:52:34 Column Stats Extensions

SELECT *
  FROM dba_stat_extensions
 WHERE (owner, table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
 ORDER BY owner, table_name

16:52:34 col:3of5.

16:52:34 col:3of5 "00149_sqld360_323688_d1bmu84pdu6gx_3a_66_column_stats_extensions.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:34 col:3of5 "Objects"
16:52:34 Histograms

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:35 col:3of5 "Objects"
16:52:35 Histograms on long strings

SELECT /*+ NO_MERGE */
       owner, table_name, column_name, data_type, data_length, num_buckets, avg_col_len, char_length
  FROM dba_tab_cols
 WHERE (owner, table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
   AND num_buckets <= 253
   AND histogram <> 'NONE'
   --AND char_length > 32
   --AND data_length > 32
   AND char_length > 64
   AND data_length > 64
   AND avg_col_len > 6
 ORDER BY owner, table_name, column_id

16:52:35 col:3of5.

16:52:35 col:3of5 "00151_sqld360_323688_d1bmu84pdu6gx_3a_67_histograms_on_long_strings.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:35 col:3of5 "Objects"
16:52:35 Constraints

SELECT /*+ NO_MERGE */
       *
  FROM dba_constraints
 WHERE (owner, table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
 ORDER BY owner, table_name, constraint_type

16:52:35 col:3of5.

16:52:35 col:3of5 "00152_sqld360_323688_d1bmu84pdu6gx_3a_69_constraints.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:38 col:3of5 "Objects"
16:52:38 Views

SELECT /*+ NO_MERGE */
       *
  FROM dba_views
 WHERE (owner, view_name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
 ORDER BY owner, view_name

16:52:38 col:3of5.

16:52:38 col:3of5 "00153_sqld360_323688_d1bmu84pdu6gx_3a_70_views.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:41 col:3of5 "Objects"
16:52:41 LOBs

SELECT /*+ NO_MERGE */
       *
  FROM dba_lobs
 WHERE (owner, table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
 ORDER BY owner, table_name

16:52:41 col:3of5.

16:52:41 col:3of5 "00154_sqld360_323688_d1bmu84pdu6gx_3a_71_lobs.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:41 col:3of5 "Objects"
16:52:41 Materialized Views

SELECT /*+ NO_MERGE */
       *
  FROM dba_mviews
 WHERE (owner, mview_name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
 ORDER BY owner, mview_name

16:52:41 col:3of5.

16:52:41 col:3of5 "00155_sqld360_323688_d1bmu84pdu6gx_3a_72_materialized_views.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:41 col:3of5 "Objects"
16:52:41 Clusters

SELECT /*+ NO_MERGE */
       *
  FROM dba_clusters
 WHERE cluster_name IN (select cluster_name
                          from dba_tables
                         where (owner, table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
                           and cluster_name is not null)
 ORDER BY owner, cluster_name

16:52:41 col:3of5.

16:52:41 col:3of5 "00156_sqld360_323688_d1bmu84pdu6gx_3a_73_clusters.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:41 col:3of5 "Objects"
16:52:41 Partition Key Columns

SELECT /*+ NO_MERGE */
       *
  FROM dba_part_key_columns
 WHERE (owner, name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
 ORDER BY owner, name, column_position

16:52:41 col:3of5.

16:52:41 col:3of5 "00157_sqld360_323688_d1bmu84pdu6gx_3a_74_partition_key_columns.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:42 col:3of5 "Objects"
16:52:42 Unindexed Partition Key Columns

with k as (
select 	k.*, 'Partition' part_level
from 	dba_part_key_columns k
union all
select 	k.*, 'Subpartition'
from 	dba_subpart_key_columns k
)
SELECT  /*+ NO_MERGE */
	i.table_owner, i.table_name
, 	i.owner index_owner
, 	i.index_name
, 	i.index_type
,	'Partition' part_level
,	p.locality
,	p.partitioning_type
,	p.partition_count
, 	k.column_position part_column_position
,	k.column_name part_column_name
,	(	SELECT  LISTAGG(NVL(ie.extension,ic.column_name),',') WITHIN GROUP (ORDER BY ic.column_position)
		FROM	dba_ind_columns ic
			LEFT OUTER JOIN dba_stat_extensions ie
			ON ie.owner = ic.table_owner
			AND ie.table_name = ic.table_name
			AND ie.extension_name = ic.column_name
		where	i.owner = ic.index_owner
		and 	i.index_name = ic.index_name
		and	i.table_owner = ic.table_owner
		and	i.table_name = ic.table_name
	) column_list
from	dba_indexes i
,	dba_part_indexes p
,	k
where	i.index_type NOT IN('LOB')
AND     k.owner = i.owner
and	k.name = i.index_name
and 	k.object_type = 'INDEX'
and	i.partitioned = 'YES'
and	p.owner = i.owner
and	p.index_name = i.index_name
and	p.table_name = i.table_name
and     (i.table_owner, i.table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
and not exists (
	select 'x'
	from 	dba_ind_columns ic
	where	i.owner = ic.index_owner
	and 	i.index_name = ic.index_name
	and	i.table_owner = ic.table_owner
	and	i.table_name = ic.table_name
	and	ic.column_name = k.column_name)
order by 1,2,3,4,5,6

16:52:42 col:3of5.

16:52:42 col:3of5 "00158_sqld360_323688_d1bmu84pdu6gx_3a_75_unindexed_partition_key_columns.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:42 col:3of5 "Objects"
16:52:42 Table Partition Info

SELECT /*+ NO_MERGE */
       *
  FROM dba_part_tables
 WHERE (owner, table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
 ORDER BY owner, table_name

16:52:42 col:3of5.

16:52:42 col:3of5 "00159_sqld360_323688_d1bmu84pdu6gx_3a_76_table_partition_info.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:42 col:3of5 "Objects"
16:52:42 Table Partitions

SELECT /*+ NO_MERGE */
       *
  FROM dba_tab_partitions
 WHERE (table_owner, table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
 ORDER BY table_owner, table_name, partition_position

16:52:42 col:3of5.

16:52:42 col:3of5 "00160_sqld360_323688_d1bmu84pdu6gx_3a_77_table_partitions.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:42 col:3of5 "Objects"
16:52:42 Index Partition Info

SELECT /*+ NO_MERGE */
       *
  FROM dba_part_indexes
 WHERE (owner, table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
 ORDER BY owner, index_name

16:52:42 col:3of5.

16:52:42 col:3of5 "00161_sqld360_323688_d1bmu84pdu6gx_3a_78_index_partition_info.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:42 col:3of5 "Objects"
16:52:42 Index Partitions

SELECT /*+ NO_MERGE */
       a.*
  FROM dba_ind_partitions a,
       dba_indexes b
 WHERE (b.table_owner, b.table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
   AND a.index_owner = b.owner
   AND a.index_name = b.index_name
 ORDER BY a.index_owner, a.index_name, a.partition_position

16:52:42 col:3of5.

16:52:42 col:3of5 "00162_sqld360_323688_d1bmu84pdu6gx_3a_79_index_partitions.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:43 col:3of5 "Objects"
16:52:43 LOB Partition Info

SELECT /*+ NO_MERGE */
       *
  FROM dba_part_lobs
 WHERE (table_owner, table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
 ORDER BY table_owner, table_name, column_name

16:52:43 col:3of5.

16:52:43 col:3of5 "00163_sqld360_323688_d1bmu84pdu6gx_3a_80_lob_partition_info.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:43 col:3of5 "Objects"
16:52:43 LOB Partitions

SELECT /*+ NO_MERGE */
       *
  FROM dba_lob_partitions
 WHERE (table_owner, table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
 ORDER BY table_owner, table_name, partition_position

16:52:43 col:3of5.

16:52:43 col:3of5 "00164_sqld360_323688_d1bmu84pdu6gx_3a_81_lob_partitions.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:43 col:3of5 "Objects"
16:52:43 Partitions Columns

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:43 col:3of5 "Objects"
16:52:43 Table Subpartitions

SELECT /*+ NO_MERGE */
       *
  FROM dba_tab_subpartitions
 WHERE (table_owner, table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
 ORDER BY table_owner, table_name, subpartition_position

16:52:43 col:3of5.

16:52:43 col:3of5 "00166_sqld360_323688_d1bmu84pdu6gx_3a_82_table_subpartitions.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:44 col:3of5 "Objects"
16:52:44 Index Subpartitions

SELECT /*+ NO_MERGE */
       a.*
  FROM dba_ind_subpartitions a,
       dba_indexes b
 WHERE (b.table_owner, b.table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
   AND a.index_owner = b.owner
   AND a.index_name = b.index_name
 ORDER BY a.index_owner, a.index_name, a.subpartition_position

16:52:44 col:3of5.

16:52:44 col:3of5 "00167_sqld360_323688_d1bmu84pdu6gx_3a_84_index_subpartitions.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:44 col:3of5 "Objects"
16:52:44 LOB Subpartitions

SELECT /*+ NO_MERGE */
       *
  FROM dba_lob_subpartitions
 WHERE (table_owner, table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
 ORDER BY table_owner, table_name, subpartition_position

16:52:44 col:3of5.

16:52:44 col:3of5 "00168_sqld360_323688_d1bmu84pdu6gx_3a_85_lob_subpartitions.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:44 col:3of5 "Objects"
16:52:44 Table Modifications

SELECT /*+ NO_MERGE */
       *
  FROM dba_tab_modifications
 WHERE (table_owner, table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
 ORDER BY table_owner, table_name, partition_name, subpartition_name

16:52:44 col:3of5.

16:52:44 col:3of5 "00169_sqld360_323688_d1bmu84pdu6gx_3a_86_table_modifications.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:44 col:3of5 "Objects"
16:52:44 Table Stats Preferences

SELECT /*+ NO_MERGE */
       o.owner, o.object_name, pref.*
  FROM sys.optstat_user_prefs$ pref,
       dba_objects o
 WHERE pref.obj# = o.object_id
   AND o.object_type = 'TABLE'
   AND (o.owner, o.object_name) IN (SELECT /*+ UNNEST */ object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
 ORDER BY o.owner, o.object_name, pref.pname

16:52:44 col:3of5.

16:52:44 col:3of5 "00170_sqld360_323688_d1bmu84pdu6gx_3a_87_table_stats_preferences.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:44 col:3of5 "Objects"
16:52:44 Triggers

SELECT /*+ NO_MERGE */
       *
  FROM dba_triggers
 WHERE (table_owner, table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name
                                       FROM plan_table
                                      WHERE statement_id = 'LIST_OF_TABLES'
                                        AND remarks = 'd1bmu84pdu6gx')
 ORDER BY table_owner, table_name, trigger_name

16:52:44 col:3of5.

16:52:44 col:3of5 "00171_sqld360_323688_d1bmu84pdu6gx_3a_88_triggers.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:44 col:3of5 "Objects"
16:52:44 Policies

SELECT /*+ NO_MERGE */
       *
  FROM dba_policies
 WHERE (object_owner, object_name) IN (SELECT /*+ UNNEST */ object_owner, object_name
                                         FROM plan_table
                                        WHERE statement_id = 'LIST_OF_TABLES'
                                          AND remarks = 'd1bmu84pdu6gx')
 ORDER BY object_owner, object_name, policy_group, policy_name

16:52:44 col:3of5.

16:52:44 col:3of5 "00172_sqld360_323688_d1bmu84pdu6gx_3a_89_policies.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:45 col:3of5 "Objects"
16:52:45 Audit Policies

SELECT /*+ NO_MERGE */
       *
  FROM dba_audit_policies
 WHERE (object_schema, object_name) IN (SELECT /*+ UNNEST */ object_owner, object_name
                                          FROM plan_table
                                         WHERE statement_id = 'LIST_OF_TABLES'
                                           AND remarks = 'd1bmu84pdu6gx')
 ORDER BY object_schema, object_name, policy_owner, policy_name

16:52:45 col:3of5.

16:52:45 col:3of5 "00173_sqld360_323688_d1bmu84pdu6gx_3a_90_audit_policies.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:45 col:3of5 "Objects"
16:52:45 Segments

SELECT /*+ NO_MERGE */ *
  FROM dba_segments
 WHERE (owner, segment_name) IN (SELECT /*+ UNNEST */ object_owner, object_name
                                   FROM plan_table
                                  WHERE statement_id = 'LIST_OF_TABLES'
                                    AND remarks = 'd1bmu84pdu6gx'
                                  UNION ALL
                                 SELECT owner, index_name
                                   FROM dba_indexes
                                  WHERE (table_owner, table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name
                                                                        FROM plan_table
                                                                       WHERE statement_id = 'LIST_OF_TABLES'
                                                                         AND remarks = 'd1bmu84pdu6gx')
                                  UNION ALL
                                 SELECT owner, segment_name
                                   FROM dba_lobs
                                  WHERE (owner, table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name
                                                                  FROM plan_table
                                                                 WHERE statement_id = 'LIST_OF_TABLES'
                                                                   AND remarks = 'd1bmu84pdu6gx')
                                 )
 ORDER BY owner, segment_name, segment_type DESC

16:52:45 col:3of5.

16:52:45 col:3of5 "00174_sqld360_323688_d1bmu84pdu6gx_3a_91_segments.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:45 col:3of5 "Objects"
16:52:45 Objects

SELECT /*+ NO_MERGE */ *
  FROM dba_objects
 WHERE (owner, object_name) IN (SELECT /*+ UNNEST */ object_owner, object_name
                                   FROM plan_table
                                  WHERE statement_id = 'LIST_OF_TABLES'
                                    AND remarks = 'd1bmu84pdu6gx'
                                  UNION ALL
                                 SELECT owner, index_name
                                   FROM dba_indexes
                                  WHERE (table_owner, table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name
                                                                        FROM plan_table
                                                                       WHERE statement_id = 'LIST_OF_TABLES'
                                                                         AND remarks = 'd1bmu84pdu6gx')
                                  UNION ALL
                                 SELECT owner, segment_name
                                   FROM dba_lobs
                                  WHERE (owner, table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name
                                                                  FROM plan_table
                                                                 WHERE statement_id = 'LIST_OF_TABLES'
                                                                   AND remarks = 'd1bmu84pdu6gx')
                                 )
 ORDER BY owner, object_name, object_type DESC

16:52:45 col:3of5.

16:52:45 col:3of5 "00175_sqld360_323688_d1bmu84pdu6gx_3a_92_objects.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:46 col:3of5 "Objects"
16:52:46 Tablespaces

SELECT /*+ NO_MERGE */ *
  FROM dba_tablespaces
 WHERE tablespace_name IN (SELECT /*+ UNNEST */ tablespace_name
                             FROM dba_segments
                            WHERE (owner, segment_name) IN (SELECT /*+ UNNEST */ object_owner, object_name
                                                              FROM plan_table
                                                             WHERE statement_id = 'LIST_OF_TABLES'
                                                               AND remarks = 'd1bmu84pdu6gx'
                                                             UNION ALL
                                                            SELECT owner, index_name
                                                              FROM dba_indexes
                                                             WHERE (table_owner, table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name
                                                                                                   FROM plan_table
                                                                                                  WHERE statement_id = 'LIST_OF_TABLES'
                                                                                                    AND remarks = 'd1bmu84pdu6gx')
                                                             UNION ALL
                                                            SELECT owner, segment_name
                                                              FROM dba_lobs
                                                             WHERE (owner, table_name) IN (SELECT /*+ UNNEST */ object_owner, object_name
                                                                                             FROM plan_table
                                                                                            WHERE statement_id = 'LIST_OF_TABLES'
                                                                                              AND remarks = 'd1bmu84pdu6gx')
                                                            )
                           )
 ORDER BY tablespace_name

16:52:46 col:3of5.

16:52:46 col:3of5 "00176_sqld360_323688_d1bmu84pdu6gx_3a_93_tablespaces.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:47 col:3of5 "Statistics History"
16:52:47 System Statistics History

SELECT /*+ NO_MERGE */
       h.*
  FROM sys.wri$_optstat_aux_history h
 ORDER BY h.savtime desc, sname

16:52:47 col:3of5.

16:52:47 col:3of5 "00177_sqld360_323688_d1bmu84pdu6gx_3c_94_system_statistics_history.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:47 col:3of5 "Statistics History"
16:52:47 Tables Statistics History

SELECT /*+ NO_MERGE */
       o.owner owner,
       o.object_name table_name,
       TRUNC((h.rowcnt - LAG(h.rowcnt,1,NULL) OVER (PARTITION BY h.obj# ORDER BY h.savtime)) / NULLIF(LAG(h.rowcnt,1,NULL) OVER (PARTITION BY h.obj# ORDER BY h.savtime),0),2)*100 rowcnt_change_perc,
       TRUNC((h.blkcnt - LAG(h.blkcnt,1,NULL) OVER (PARTITION BY h.obj# ORDER BY h.savtime)) / NULLIF(LAG(h.blkcnt,1,NULL) OVER (PARTITION BY h.obj# ORDER BY h.savtime),0),2)*100 blkcnt_change_perc,
       h.*
  FROM sys.wri$_optstat_tab_history h,
       dba_objects o
 WHERE (o.owner, o.object_name) IN (SELECT object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
   AND o.object_type = 'TABLE'
   AND o.object_id = h.obj#
   AND 'Y' = 'Y'
 ORDER BY o.owner, o.object_name, h.savtime desc

16:52:47 col:3of5.

16:52:47 col:3of5 "00178_sqld360_323688_d1bmu84pdu6gx_3c_95_tables_statistics_history.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:47 col:3of5 "Statistics History"
16:52:47 Indexes Statistics History

SELECT /*+ NO_MERGE */
       i.owner,
       i.table_name,
       i.index_name,
       TRUNC((h.blevel - LAG(h.blevel,1,NULL) OVER (PARTITION BY h.obj# ORDER BY h.savtime)) / NULLIF(LAG(h.blevel,1,NULL) OVER (PARTITION BY h.obj# ORDER BY h.savtime),0),2)*100 blevel_change_perc,
       TRUNC((h.leafcnt - LAG(h.leafcnt,1,NULL) OVER (PARTITION BY h.obj# ORDER BY h.savtime)) / NULLIF(LAG(h.leafcnt,1,NULL) OVER (PARTITION BY h.obj# ORDER BY h.savtime),0),2)*100 leafcnt_change_perc,
       TRUNC((h.clufac - LAG(h.clufac,1,NULL) OVER (PARTITION BY h.obj# ORDER BY h.savtime)) / NULLIF(LAG(h.clufac,1,NULL) OVER (PARTITION BY h.obj# ORDER BY h.savtime),0),2)*100 clufac_change_perc,
       h.*
  FROM sys.wri$_optstat_ind_history h,
       dba_objects o,
       dba_indexes i
 WHERE (i.table_owner, i.table_name) IN (SELECT object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
   AND i.index_name = o.object_name
   AND i.owner = o.owner
   AND o.object_type = 'INDEX'
   AND o.object_id = h.obj#
   AND 'Y' = 'Y'
 ORDER BY i.table_owner, i.table_name, i.index_name, h.savtime desc

16:52:47 col:3of5.

16:52:47 col:3of5 "00179_sqld360_323688_d1bmu84pdu6gx_3c_96_indexes_statistics_history.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:48 col:3of5 "Statistics History"
16:52:48 Columns Statistics History

SELECT /*+ NO_MERGE */
       c.owner,
       c.table_name,
       c.column_name,
       TRUNC((h.null_cnt - LAG(h.null_cnt,1,NULL) OVER (PARTITION BY h.obj#, c.column_name ORDER BY h.savtime)) / NULLIF(LAG(h.null_cnt,1,NULL) OVER (PARTITION BY h.obj#, c.column_name  ORDER BY h.savtime),0),2)*100 nullcnt_change_perc,
       TRUNC((h.distcnt - LAG(h.distcnt,1,NULL) OVER (PARTITION BY h.obj#, c.column_name ORDER BY h.savtime)) / NULLIF(LAG(h.distcnt,1,NULL) OVER (PARTITION BY h.obj#, c.column_name  ORDER BY h.savtime),0),2)*100 distcnt_change_perc,
       CASE WHEN h.flags > 64 THEN 'YES' ELSE 'NO' END had_histogram,
       h.*
  FROM sys.wri$_optstat_histhead_history h,
       dba_objects o,
       dba_tab_cols c
 WHERE (c.owner, c.table_name) IN (SELECT object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
   AND c.table_name = o.object_name
   AND c.owner = o.owner
   AND o.object_type = 'TABLE'
   AND o.object_id = h.obj#
   AND c.column_id = h.intcol#
   AND 'Y' = 'Y'
 ORDER BY c.owner, c.table_name, c.column_id, h.savtime desc

16:52:48 col:3of5.

16:52:48 col:3of5 "00180_sqld360_323688_d1bmu84pdu6gx_3c_97_columns_statistics_history.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:50 col:3of5 "Statistics History"
16:52:50 Partitions Statistics History

SELECT /*+ NO_MERGE */
        p.table_owner,
        p.table_name,
        p.partition_name,
        p.partition_position,
        TRUNC((h.rowcnt - LAG(h.rowcnt,1,NULL) OVER (PARTITION BY h.obj# ORDER BY h.savtime)) / NULLIF(LAG(h.rowcnt,1,NULL) OVER (PARTITION BY h.obj# ORDER BY h.savtime),0),2)*100 rowcnt_change_perc,
        TRUNC((h.blkcnt - LAG(h.blkcnt,1,NULL) OVER (PARTITION BY h.obj# ORDER BY h.savtime)) / NULLIF(LAG(h.blkcnt,1,NULL) OVER (PARTITION BY h.obj# ORDER BY h.savtime),0),2)*100 blkcnt_change_perc,
        h.*
  FROM (SELECT table_owner, table_name, partition_name, partition_position,
               ROW_NUMBER() OVER (ORDER BY partition_position) rn, COUNT(*) OVER () num_part
          FROM dba_tab_partitions
         WHERE (table_owner, table_name) IN (SELECT object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
       ) p,
       dba_objects o,
       sys.wri$_optstat_tab_history h
 WHERE (p.rn <= 10 OR p.rn >= num_part-10)
   AND o.object_type = 'TABLE PARTITION'
   AND p.table_owner = o.owner
   AND p.table_name = o.object_name
   AND p.partition_name = o.subobject_name
   AND o.object_id = h.obj#
   AND 'Y' = 'Y'
 ORDER BY p.table_owner, p.table_name, p.partition_name, p.partition_position DESC, h.savtime desc

16:52:50 col:3of5.

16:52:50 col:3of5 "00181_sqld360_323688_d1bmu84pdu6gx_3c_98_partitions_statistics_history.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:51 col:3of5 "In-Memory"
16:52:51 In-Memory Area

SELECT /*+ NO_MERGE */
       *
  FROM gv$inmemory_area
 ORDER BY inst_id, pool

16:52:51 col:3of5.

16:52:51 col:3of5 "00182_sqld360_323688_d1bmu84pdu6gx_3d_99_inmemory_area.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:51 col:3of5 "In-Memory"
16:52:51 In-Memory Segments

SELECT /*+ NO_MERGE */
       *
  FROM gv$im_segments
 WHERE (owner, segment_name) IN (SELECT object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
 ORDER BY inst_id, owner, segment_name, partition_name, segment_type

16:52:51 col:3of5.

16:52:51 col:3of5 "00183_sqld360_323688_d1bmu84pdu6gx_3d_100_inmemory_segments.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:51 col:3of5 "In-Memory"
16:52:51 In-Memory Header

SELECT /*+ NO_MERGE */
       *
  FROM gv$im_header
 WHERE objd IN (SELECT object_id
                 FROM dba_objects
                WHERE (owner, object_name) IN (SELECT object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx'))
 ORDER BY objd, inst_id

16:52:51 col:3of5.

16:52:51 col:3of5 "00184_sqld360_323688_d1bmu84pdu6gx_3d_101_inmemory_header.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:51 col:3of5 "In-Memory"
16:52:51 In-Memory Column Level

SELECT /*+ NO_MERGE */
       *
  FROM gv$im_column_level
 WHERE (owner, table_name) IN (SELECT object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
 ORDER BY inst_id, owner, table_name, segment_column_id

16:52:51 col:3of5.

16:52:51 col:3of5 "00185_sqld360_323688_d1bmu84pdu6gx_3d_102_inmemory_column_level.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:51 col:3of5 "Big Table Caching"
16:52:51 BT Scan Cache

SELECT /*+ NO_MERGE */
       *
  FROM gv$bt_scan_cache
 ORDER BY inst_id

16:52:51 col:3of5.

16:52:51 col:3of5 "00186_sqld360_323688_d1bmu84pdu6gx_3e_103_bt_scan_cache.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:51 col:3of5 "Big Table Caching"
16:52:51 BT Scan Objects Temps

SELECT /*+ NO_MERGE */
       o.owner, o.object_name, o.subobject_name,
       bsc.*
  FROM gv$bt_scan_obj_temps bsc,
       dba_objects o
 WHERE bsc.dataobj# = o.data_object_id
   AND (o.owner, o.object_name) IN (SELECT object_owner, object_name FROM plan_table WHERE statement_id = 'LIST_OF_TABLES' AND remarks = 'd1bmu84pdu6gx')
 ORDER BY bsc.inst_id, o.owner, o.object_name, o.subobject_name

16:52:51 col:3of5.

16:52:51 col:3of5 "00187_sqld360_323688_d1bmu84pdu6gx_3e_104_bt_scan_objects_temps.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:51 col:3of5 "Metadata"
16:52:51 Metadata script
Completed: 16:52:52

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:52 col:4of5 "System Impact"
16:52:52 SQL Execute Time for Cluster

SELECT MIN(a.snap_id) snap_id,
       TO_CHAR(c.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(c.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       SUM(NVL(b.sql_val,0))/1000000 sql_elapsed,
       SUM(a.system_val)/1000000 system_elapsed,
       TRUNC((SUM(NVL(b.sql_val,0))/SUM(a.system_val))*100,3) sql_impact_percentage,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id, instance_number, value-LAG(value,1) OVER (PARTITION BY instance_number ORDER BY snap_id ) system_val
          FROM dba_hist_sys_time_model
         WHERE stat_name LIKE 'sql execute%') a,
       (SELECT snap_id, instance_number, SUM(elapsed_time_delta) sql_val
          FROM dba_hist_sqlstat
         WHERE sql_id = 'd1bmu84pdu6gx'
         GROUP BY snap_id, instance_number) b,
       (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
          FROM dba_hist_snapshot
         WHERE snap_id BETWEEN 3484 AND 4973) c
 WHERE c.snap_id = b.snap_id(+)
   AND c.instance_number = b.instance_number(+)
   AND a.instance_number = a.instance_number
   AND a.snap_id(+) = c.snap_id
   AND 'Y' = 'Y'
   AND a.instance_number(+) = c.instance_number
   AND a.system_val(+) > 0 -- skip the first snapshot where we can''t compute DELTA
                        -- and those where the value would be negative (restart in between)
 GROUP BY
       TO_CHAR(c.begin_interval_time, 'YYYY-MM-DD HH24:MI'),
       TO_CHAR(c.end_interval_time, 'YYYY-MM-DD HH24:MI')
 ORDER BY
       TO_CHAR(c.end_interval_time, 'YYYY-MM-DD HH24:MI')

16:52:52 col:4of5.

16:52:52 col:4of5 "00189_sqld360_323688_d1bmu84pdu6gx_4a_106_sql_execute_time_for_cluster.html"
16:52:52 col:4of5 "00190_sqld360_323688_d1bmu84pdu6gx_4a_106_sql_execute_time_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:52 col:4of5 "System Impact"
16:52:52 SQL Execute Time for Instance 1

SELECT MIN(a.snap_id) snap_id,
       TO_CHAR(c.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(c.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       SUM(NVL(b.sql_val,0))/1000000 sql_elapsed,
       SUM(a.system_val)/1000000 system_elapsed,
       TRUNC((SUM(NVL(b.sql_val,0))/SUM(a.system_val))*100,3) sql_impact_percentage,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id, instance_number, value-LAG(value,1) OVER (PARTITION BY instance_number ORDER BY snap_id ) system_val
          FROM dba_hist_sys_time_model
         WHERE stat_name LIKE 'sql execute%') a,
       (SELECT snap_id, instance_number, SUM(elapsed_time_delta) sql_val
          FROM dba_hist_sqlstat
         WHERE sql_id = 'd1bmu84pdu6gx'
         GROUP BY snap_id, instance_number) b,
       (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
          FROM dba_hist_snapshot
         WHERE snap_id BETWEEN 3484 AND 4973) c
 WHERE c.snap_id = b.snap_id(+)
   AND c.instance_number = b.instance_number(+)
   AND a.instance_number = 1
   AND a.snap_id(+) = c.snap_id
   AND 'Y' = 'Y'
   AND a.instance_number(+) = c.instance_number
   AND a.system_val(+) > 0 -- skip the first snapshot where we can''t compute DELTA
                        -- and those where the value would be negative (restart in between)
 GROUP BY
       TO_CHAR(c.begin_interval_time, 'YYYY-MM-DD HH24:MI'),
       TO_CHAR(c.end_interval_time, 'YYYY-MM-DD HH24:MI')
 ORDER BY
       TO_CHAR(c.end_interval_time, 'YYYY-MM-DD HH24:MI')

16:52:52 col:4of5.

16:52:52 col:4of5 "00191_sqld360_323688_d1bmu84pdu6gx_4a_107_sql_execute_time_for_instance_1.html"
16:52:52 col:4of5 "00192_sqld360_323688_d1bmu84pdu6gx_4a_107_sql_execute_time_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:53 col:4of5 "System Impact"
16:52:53 SQL Execute Time for Instance 2

SELECT MIN(a.snap_id) snap_id,
       TO_CHAR(c.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(c.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       SUM(NVL(b.sql_val,0))/1000000 sql_elapsed,
       SUM(a.system_val)/1000000 system_elapsed,
       TRUNC((SUM(NVL(b.sql_val,0))/SUM(a.system_val))*100,3) sql_impact_percentage,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id, instance_number, value-LAG(value,1) OVER (PARTITION BY instance_number ORDER BY snap_id ) system_val
          FROM dba_hist_sys_time_model
         WHERE stat_name LIKE 'sql execute%') a,
       (SELECT snap_id, instance_number, SUM(elapsed_time_delta) sql_val
          FROM dba_hist_sqlstat
         WHERE sql_id = 'd1bmu84pdu6gx'
         GROUP BY snap_id, instance_number) b,
       (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
          FROM dba_hist_snapshot
         WHERE snap_id BETWEEN 3484 AND 4973) c
 WHERE c.snap_id = b.snap_id(+)
   AND c.instance_number = b.instance_number(+)
   AND a.instance_number = 2
   AND a.snap_id(+) = c.snap_id
   AND 'Y' = 'Y'
   AND a.instance_number(+) = c.instance_number
   AND a.system_val(+) > 0 -- skip the first snapshot where we can''t compute DELTA
                        -- and those where the value would be negative (restart in between)
 GROUP BY
       TO_CHAR(c.begin_interval_time, 'YYYY-MM-DD HH24:MI'),
       TO_CHAR(c.end_interval_time, 'YYYY-MM-DD HH24:MI')
 ORDER BY
       TO_CHAR(c.end_interval_time, 'YYYY-MM-DD HH24:MI')

16:52:53 col:4of5.

16:52:53 col:4of5 "00193_sqld360_323688_d1bmu84pdu6gx_4a_108_sql_execute_time_for_instance_2.html"
16:52:53 col:4of5 "00194_sqld360_323688_d1bmu84pdu6gx_4a_108_sql_execute_time_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:53 col:4of5 "System Impact"
16:52:53 Peak Demand for recent executions for Cluster

SELECT 0 snap_id,
       TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI') begin_time,
       TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI') end_time,
       num_sessions_min,
       num_sessions_oncpu_min,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT TRUNC(end_time,'mi') end_time,
               MAX(num_sessions) num_sessions_min,
               MAX(num_sessions_oncpu) num_sessions_oncpu_min
          FROM (SELECT timestamp end_time,
                       COUNT(position||'-'||cpu_cost||'-'||io_cost) num_sessions,
                       COUNT(CASE WHEN object_node = 'ON CPU' THEN position||'-'||cpu_cost||'-'||io_cost ELSE NULL END) num_sessions_oncpu
                  FROM plan_table
                 WHERE statement_id = 'SQLD360_ASH_DATA_MEM'
                   AND position =  position
                   AND remarks = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                 GROUP BY timestamp)
         GROUP BY TRUNC(end_time,'mi'))
 ORDER BY 3

16:52:53 col:4of5.

16:52:53 col:4of5 "00195_sqld360_323688_d1bmu84pdu6gx_4a_109_peak_demand_for_recent_executions_for_cluster.html"
16:52:53 col:4of5 "00196_sqld360_323688_d1bmu84pdu6gx_4a_109_peak_demand_for_recent_executions_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:53 col:4of5 "System Impact"
16:52:53 Peak Demand for recent executions for Instance 1

SELECT 0 snap_id,
       TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI') begin_time,
       TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI') end_time,
       num_sessions_min,
       num_sessions_oncpu_min,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT TRUNC(end_time,'mi') end_time,
               MAX(num_sessions) num_sessions_min,
               MAX(num_sessions_oncpu) num_sessions_oncpu_min
          FROM (SELECT timestamp end_time,
                       COUNT(position||'-'||cpu_cost||'-'||io_cost) num_sessions,
                       COUNT(CASE WHEN object_node = 'ON CPU' THEN position||'-'||cpu_cost||'-'||io_cost ELSE NULL END) num_sessions_oncpu
                  FROM plan_table
                 WHERE statement_id = 'SQLD360_ASH_DATA_MEM'
                   AND position =  1
                   AND remarks = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                 GROUP BY timestamp)
         GROUP BY TRUNC(end_time,'mi'))
 ORDER BY 3

16:52:53 col:4of5.

16:52:53 col:4of5 "00197_sqld360_323688_d1bmu84pdu6gx_4a_110_peak_demand_for_recent_executions_for_instance_1.html"
16:52:53 col:4of5 "00198_sqld360_323688_d1bmu84pdu6gx_4a_110_peak_demand_for_recent_executions_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:53 col:4of5 "System Impact"
16:52:53 Peak Demand for recent executions for Instance 2

SELECT 0 snap_id,
       TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI') begin_time,
       TO_CHAR(end_time, 'YYYY-MM-DD HH24:MI') end_time,
       num_sessions_min,
       num_sessions_oncpu_min,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT TRUNC(end_time,'mi') end_time,
               MAX(num_sessions) num_sessions_min,
               MAX(num_sessions_oncpu) num_sessions_oncpu_min
          FROM (SELECT timestamp end_time,
                       COUNT(position||'-'||cpu_cost||'-'||io_cost) num_sessions,
                       COUNT(CASE WHEN object_node = 'ON CPU' THEN position||'-'||cpu_cost||'-'||io_cost ELSE NULL END) num_sessions_oncpu
                  FROM plan_table
                 WHERE statement_id = 'SQLD360_ASH_DATA_MEM'
                   AND position =  2
                   AND remarks = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                 GROUP BY timestamp)
         GROUP BY TRUNC(end_time,'mi'))
 ORDER BY 3

16:52:53 col:4of5.

16:52:53 col:4of5 "00199_sqld360_323688_d1bmu84pdu6gx_4a_111_peak_demand_for_recent_executions_for_instance_2.html"
16:52:53 col:4of5 "00200_sqld360_323688_d1bmu84pdu6gx_4a_111_peak_demand_for_recent_executions_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:53 col:4of5 "System Impact"
16:52:53 Peak Demand for historical executions for Cluster

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(num_sessions_hour,0) num_sessions_hour,
       NVL(num_sessions_oncpu_hour,0) num_sessions_oncpu_hour,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id,
               MAX(num_sessions) num_sessions_hour,
               MAX(num_sessions_oncpu) num_sessions_oncpu_hour
          FROM (SELECT cardinality snap_id,
                       timestamp end_time,
                       COUNT(position||'-'||cpu_cost||'-'||io_cost) num_sessions,
                       COUNT(CASE WHEN object_node = 'ON CPU' THEN position||'-'||cpu_cost||'-'||io_cost ELSE NULL END) num_sessions_oncpu
                  FROM plan_table
                 WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
                   AND position =  position
                   AND remarks = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                 GROUP BY cardinality, timestamp)
         GROUP BY snap_id) ash,
       dba_hist_snapshot b
 WHERE ash.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:52:53 col:4of5.

16:52:53 col:4of5 "00201_sqld360_323688_d1bmu84pdu6gx_4a_112_peak_demand_for_historical_executions_for_cluster.html"
16:52:53 col:4of5 "00202_sqld360_323688_d1bmu84pdu6gx_4a_112_peak_demand_for_historical_executions_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:54 col:4of5 "System Impact"
16:52:54 Peak Demand for historical executions for Instance 1

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(num_sessions_hour,0) num_sessions_hour,
       NVL(num_sessions_oncpu_hour,0) num_sessions_oncpu_hour,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id,
               MAX(num_sessions) num_sessions_hour,
               MAX(num_sessions_oncpu) num_sessions_oncpu_hour
          FROM (SELECT cardinality snap_id,
                       timestamp end_time,
                       COUNT(position||'-'||cpu_cost||'-'||io_cost) num_sessions,
                       COUNT(CASE WHEN object_node = 'ON CPU' THEN position||'-'||cpu_cost||'-'||io_cost ELSE NULL END) num_sessions_oncpu
                  FROM plan_table
                 WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
                   AND position =  1
                   AND remarks = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                 GROUP BY cardinality, timestamp)
         GROUP BY snap_id) ash,
       dba_hist_snapshot b
 WHERE ash.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:52:54 col:4of5.

16:52:54 col:4of5 "00203_sqld360_323688_d1bmu84pdu6gx_4a_113_peak_demand_for_historical_executions_for_instance_1.html"
16:52:54 col:4of5 "00204_sqld360_323688_d1bmu84pdu6gx_4a_113_peak_demand_for_historical_executions_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:54 col:4of5 "System Impact"
16:52:54 Peak Demand for historical executions for Instance 2

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(num_sessions_hour,0) num_sessions_hour,
       NVL(num_sessions_oncpu_hour,0) num_sessions_oncpu_hour,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id,
               MAX(num_sessions) num_sessions_hour,
               MAX(num_sessions_oncpu) num_sessions_oncpu_hour
          FROM (SELECT cardinality snap_id,
                       timestamp end_time,
                       COUNT(position||'-'||cpu_cost||'-'||io_cost) num_sessions,
                       COUNT(CASE WHEN object_node = 'ON CPU' THEN position||'-'||cpu_cost||'-'||io_cost ELSE NULL END) num_sessions_oncpu
                  FROM plan_table
                 WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
                   AND position =  2
                   AND remarks = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                 GROUP BY cardinality, timestamp)
         GROUP BY snap_id) ash,
       dba_hist_snapshot b
 WHERE ash.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:52:54 col:4of5.

16:52:54 col:4of5 "00205_sqld360_323688_d1bmu84pdu6gx_4a_114_peak_demand_for_historical_executions_for_instance_2.html"
16:52:54 col:4of5 "00206_sqld360_323688_d1bmu84pdu6gx_4a_114_peak_demand_for_historical_executions_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:54 col:4of5 "System Impact"
16:52:54 Distinct number of sessions executing for Cluster

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(unique_sessions,0) unique_sessions,
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT cardinality snap_id,
               COUNT(DISTINCT position||'-'||cpu_cost||'-'||io_cost) unique_sessions
          FROM plan_table
         WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
           AND position =  position
           AND remarks = 'd1bmu84pdu6gx'
           AND 'Y' = 'Y'
         GROUP BY cardinality) ash,
       dba_hist_snapshot b
 WHERE ash.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:52:54 col:4of5.

16:52:54 col:4of5 "00207_sqld360_323688_d1bmu84pdu6gx_4a_115_distinct_number_of_sessions_executing_for_cluster.html"
16:52:54 col:4of5 "00208_sqld360_323688_d1bmu84pdu6gx_4a_115_distinct_number_of_sessions_executing_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:55 col:4of5 "System Impact"
16:52:55 Distinct number of sessions executing for Instance 1

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(unique_sessions,0) unique_sessions,
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT cardinality snap_id,
               COUNT(DISTINCT position||'-'||cpu_cost||'-'||io_cost) unique_sessions
          FROM plan_table
         WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
           AND position =  1
           AND remarks = 'd1bmu84pdu6gx'
           AND 'Y' = 'Y'
         GROUP BY cardinality) ash,
       dba_hist_snapshot b
 WHERE ash.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:52:55 col:4of5.

16:52:55 col:4of5 "00209_sqld360_323688_d1bmu84pdu6gx_4a_116_distinct_number_of_sessions_executing_for_instance_1.html"
16:52:55 col:4of5 "00210_sqld360_323688_d1bmu84pdu6gx_4a_116_distinct_number_of_sessions_executing_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:55 col:4of5 "System Impact"
16:52:55 Distinct number of sessions executing for Instance 2

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(unique_sessions,0) unique_sessions,
       0 dummy_02,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT cardinality snap_id,
               COUNT(DISTINCT position||'-'||cpu_cost||'-'||io_cost) unique_sessions
          FROM plan_table
         WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
           AND position =  2
           AND remarks = 'd1bmu84pdu6gx'
           AND 'Y' = 'Y'
         GROUP BY cardinality) ash,
       dba_hist_snapshot b
 WHERE ash.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:52:55 col:4of5.

16:52:55 col:4of5 "00211_sqld360_323688_d1bmu84pdu6gx_4a_117_distinct_number_of_sessions_executing_for_instance_2.html"
16:52:55 col:4of5 "00212_sqld360_323688_d1bmu84pdu6gx_4a_117_distinct_number_of_sessions_executing_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:55 col:4of5 "System Impact"
16:52:55 Total Buffer Gets for Cluster

SELECT MIN(a.snap_id) snap_id,
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(SUM(b.buffer_gets_delta),0) buffer_gets,
       NVL(SUM(b.disk_reads_delta),0) physical_reads,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id, instance_number, buffer_gets_delta, disk_reads_delta
          FROM dba_hist_sqlstat
         WHERE sql_id = 'd1bmu84pdu6gx') b,
       (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
          FROM dba_hist_snapshot
         WHERE snap_id BETWEEN 3484 AND 4973) a
 WHERE a.snap_id = b.snap_id(+)
   AND a.instance_number = b.instance_number(+)
   AND 'Y' = 'Y'
   AND a.instance_number = a.instance_number
 GROUP BY
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI'),
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')
 ORDER BY
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')

16:52:55 col:4of5.

16:52:55 col:4of5 "00213_sqld360_323688_d1bmu84pdu6gx_4a_118_total_buffer_gets_for_cluster.html"
16:52:55 col:4of5 "00214_sqld360_323688_d1bmu84pdu6gx_4a_118_total_buffer_gets_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:56 col:4of5 "System Impact"
16:52:56 Total Buffer Gets for Instance 1

SELECT MIN(a.snap_id) snap_id,
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(SUM(b.buffer_gets_delta),0) buffer_gets,
       NVL(SUM(b.disk_reads_delta),0) physical_reads,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id, instance_number, buffer_gets_delta, disk_reads_delta
          FROM dba_hist_sqlstat
         WHERE sql_id = 'd1bmu84pdu6gx') b,
       (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
          FROM dba_hist_snapshot
         WHERE snap_id BETWEEN 3484 AND 4973) a
 WHERE a.snap_id = b.snap_id(+)
   AND a.instance_number = b.instance_number(+)
   AND 'Y' = 'Y'
   AND a.instance_number = 1
 GROUP BY
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI'),
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')
 ORDER BY
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')

16:52:56 col:4of5.

16:52:56 col:4of5 "00215_sqld360_323688_d1bmu84pdu6gx_4a_119_total_buffer_gets_for_instance_1.html"
16:52:56 col:4of5 "00216_sqld360_323688_d1bmu84pdu6gx_4a_119_total_buffer_gets_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:56 col:4of5 "System Impact"
16:52:56 Total Buffer Gets for Instance 2

SELECT MIN(a.snap_id) snap_id,
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(SUM(b.buffer_gets_delta),0) buffer_gets,
       NVL(SUM(b.disk_reads_delta),0) physical_reads,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id, instance_number, buffer_gets_delta, disk_reads_delta
          FROM dba_hist_sqlstat
         WHERE sql_id = 'd1bmu84pdu6gx') b,
       (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
          FROM dba_hist_snapshot
         WHERE snap_id BETWEEN 3484 AND 4973) a
 WHERE a.snap_id = b.snap_id(+)
   AND a.instance_number = b.instance_number(+)
   AND 'Y' = 'Y'
   AND a.instance_number = 2
 GROUP BY
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI'),
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')
 ORDER BY
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')

16:52:56 col:4of5.

16:52:56 col:4of5 "00217_sqld360_323688_d1bmu84pdu6gx_4a_120_total_buffer_gets_for_instance_2.html"
16:52:56 col:4of5 "00218_sqld360_323688_d1bmu84pdu6gx_4a_120_total_buffer_gets_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:56 col:4of5 "System Impact"
16:52:56 Total Rows Processed per for Cluster

SELECT MIN(a.snap_id) snap_id,
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(SUM(b.rows_processed_delta),0) rows_processed,
       NVL(SUM(b.fetches_delta),0) fetch_calls,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id, instance_number, rows_processed_delta, fetches_delta
          FROM dba_hist_sqlstat
         WHERE sql_id = 'd1bmu84pdu6gx') b,
       (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
          FROM dba_hist_snapshot
         WHERE snap_id BETWEEN 3484 AND 4973) a
 WHERE a.snap_id = b.snap_id(+)
   AND a.instance_number = b.instance_number(+)
   AND 'Y' = 'Y'
   AND a.instance_number = a.instance_number
 GROUP BY
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI'),
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')
 ORDER BY
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')

16:52:56 col:4of5.

16:52:56 col:4of5 "00219_sqld360_323688_d1bmu84pdu6gx_4a_121_total_rows_processed_per_for_cluster.html"
16:52:56 col:4of5 "00220_sqld360_323688_d1bmu84pdu6gx_4a_121_total_rows_processed_per_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:56 col:4of5 "System Impact"
16:52:56 Total Rows Processed per for Instance 1

SELECT MIN(a.snap_id) snap_id,
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(SUM(b.rows_processed_delta),0) rows_processed,
       NVL(SUM(b.fetches_delta),0) fetch_calls,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id, instance_number, rows_processed_delta, fetches_delta
          FROM dba_hist_sqlstat
         WHERE sql_id = 'd1bmu84pdu6gx') b,
       (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
          FROM dba_hist_snapshot
         WHERE snap_id BETWEEN 3484 AND 4973) a
 WHERE a.snap_id = b.snap_id(+)
   AND a.instance_number = b.instance_number(+)
   AND 'Y' = 'Y'
   AND a.instance_number = 1
 GROUP BY
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI'),
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')
 ORDER BY
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')

16:52:56 col:4of5.

16:52:56 col:4of5 "00221_sqld360_323688_d1bmu84pdu6gx_4a_122_total_rows_processed_per_for_instance_1.html"
16:52:56 col:4of5 "00222_sqld360_323688_d1bmu84pdu6gx_4a_122_total_rows_processed_per_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:56 col:4of5 "System Impact"
16:52:56 Total Rows Processed per for Instance 2

SELECT MIN(a.snap_id) snap_id,
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(SUM(b.rows_processed_delta),0) rows_processed,
       NVL(SUM(b.fetches_delta),0) fetch_calls,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id, instance_number, rows_processed_delta, fetches_delta
          FROM dba_hist_sqlstat
         WHERE sql_id = 'd1bmu84pdu6gx') b,
       (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
          FROM dba_hist_snapshot
         WHERE snap_id BETWEEN 3484 AND 4973) a
 WHERE a.snap_id = b.snap_id(+)
   AND a.instance_number = b.instance_number(+)
   AND 'Y' = 'Y'
   AND a.instance_number = 2
 GROUP BY
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI'),
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')
 ORDER BY
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')

16:52:56 col:4of5.

16:52:56 col:4of5 "00223_sqld360_323688_d1bmu84pdu6gx_4a_123_total_rows_processed_per_for_instance_2.html"
16:52:57 col:4of5 "00224_sqld360_323688_d1bmu84pdu6gx_4a_123_total_rows_processed_per_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:57 col:4of5 "System Impact"
16:52:57 Total number of Executions for Cluster

SELECT MIN(a.snap_id) snap_id,
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(SUM(b.executions_delta),0) executions_delta,
       NVL(SUM(b.parse_calls_delta),0) parse_calls,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id, instance_number, executions_delta, parse_calls_delta
          FROM dba_hist_sqlstat
         WHERE sql_id = 'd1bmu84pdu6gx') b,
       (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
          FROM dba_hist_snapshot
         WHERE snap_id BETWEEN 3484 AND 4973) a
 WHERE a.snap_id = b.snap_id(+)
   AND a.instance_number = b.instance_number(+)
   AND 'Y' = 'Y'
   AND a.instance_number = a.instance_number
 GROUP BY
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI'),
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')
 ORDER BY
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')

16:52:57 col:4of5.

16:52:57 col:4of5 "00225_sqld360_323688_d1bmu84pdu6gx_4a_124_total_number_of_executions_for_cluster.html"
16:52:57 col:4of5 "00226_sqld360_323688_d1bmu84pdu6gx_4a_124_total_number_of_executions_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:57 col:4of5 "System Impact"
16:52:57 Total number of Executions for Instance 1

SELECT MIN(a.snap_id) snap_id,
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(SUM(b.executions_delta),0) executions_delta,
       NVL(SUM(b.parse_calls_delta),0) parse_calls,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id, instance_number, executions_delta, parse_calls_delta
          FROM dba_hist_sqlstat
         WHERE sql_id = 'd1bmu84pdu6gx') b,
       (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
          FROM dba_hist_snapshot
         WHERE snap_id BETWEEN 3484 AND 4973) a
 WHERE a.snap_id = b.snap_id(+)
   AND a.instance_number = b.instance_number(+)
   AND 'Y' = 'Y'
   AND a.instance_number = 1
 GROUP BY
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI'),
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')
 ORDER BY
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')

16:52:57 col:4of5.

16:52:57 col:4of5 "00227_sqld360_323688_d1bmu84pdu6gx_4a_125_total_number_of_executions_for_instance_1.html"
16:52:57 col:4of5 "00228_sqld360_323688_d1bmu84pdu6gx_4a_125_total_number_of_executions_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:57 col:4of5 "System Impact"
16:52:57 Total number of Executions for Instance 2

SELECT MIN(a.snap_id) snap_id,
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(SUM(b.executions_delta),0) executions_delta,
       NVL(SUM(b.parse_calls_delta),0) parse_calls,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id, instance_number, executions_delta, parse_calls_delta
          FROM dba_hist_sqlstat
         WHERE sql_id = 'd1bmu84pdu6gx') b,
       (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
          FROM dba_hist_snapshot
         WHERE snap_id BETWEEN 3484 AND 4973) a
 WHERE a.snap_id = b.snap_id(+)
   AND a.instance_number = b.instance_number(+)
   AND 'Y' = 'Y'
   AND a.instance_number = 2
 GROUP BY
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI'),
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')
 ORDER BY
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')

16:52:57 col:4of5.

16:52:57 col:4of5 "00229_sqld360_323688_d1bmu84pdu6gx_4a_126_total_number_of_executions_for_instance_2.html"
16:52:57 col:4of5 "00230_sqld360_323688_d1bmu84pdu6gx_4a_126_total_number_of_executions_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:57 col:4of5 "System Impact"
16:52:57 Version Count and Sharable Memory for Cluster

SELECT MIN(a.snap_id) snap_id,
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       SUM(NVL(b.version_count,0)) version_count,
       SUM(NVL(b.sharable_mem,0)) sharable_mem,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id, instance_number, version_count, sharable_mem
          FROM dba_hist_sqlstat
         WHERE sql_id = 'd1bmu84pdu6gx') b,
       (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
          FROM dba_hist_snapshot
         WHERE snap_id BETWEEN 3484 AND 4973) a
 WHERE a.snap_id = b.snap_id(+)
   AND a.instance_number = b.instance_number(+)
   AND 'Y' = 'Y'
   AND a.instance_number = a.instance_number
 GROUP BY
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI'),
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')
 ORDER BY
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')

16:52:57 col:4of5.

16:52:57 col:4of5 "00231_sqld360_323688_d1bmu84pdu6gx_4a_127_version_count_and_sharable_memory_for_cluster.html"
16:52:57 col:4of5 "00232_sqld360_323688_d1bmu84pdu6gx_4a_127_version_count_and_sharable_memory_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:58 col:4of5 "System Impact"
16:52:58 Version Count and Sharable Memory for Instance 1

SELECT MIN(a.snap_id) snap_id,
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       SUM(NVL(b.version_count,0)) version_count,
       SUM(NVL(b.sharable_mem,0)) sharable_mem,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id, instance_number, version_count, sharable_mem
          FROM dba_hist_sqlstat
         WHERE sql_id = 'd1bmu84pdu6gx') b,
       (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
          FROM dba_hist_snapshot
         WHERE snap_id BETWEEN 3484 AND 4973) a
 WHERE a.snap_id = b.snap_id(+)
   AND a.instance_number = b.instance_number(+)
   AND 'Y' = 'Y'
   AND a.instance_number = 1
 GROUP BY
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI'),
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')
 ORDER BY
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')

16:52:58 col:4of5.

16:52:58 col:4of5 "00233_sqld360_323688_d1bmu84pdu6gx_4a_128_version_count_and_sharable_memory_for_instance_1.html"
16:52:58 col:4of5 "00234_sqld360_323688_d1bmu84pdu6gx_4a_128_version_count_and_sharable_memory_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:58 col:4of5 "System Impact"
16:52:58 Version Count and Sharable Memory for Instance 2

SELECT MIN(a.snap_id) snap_id,
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       SUM(NVL(b.version_count,0)) version_count,
       SUM(NVL(b.sharable_mem,0)) sharable_mem,
       0 dummy_03,
       0 dummy_04,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id, instance_number, version_count, sharable_mem
          FROM dba_hist_sqlstat
         WHERE sql_id = 'd1bmu84pdu6gx') b,
       (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
          FROM dba_hist_snapshot
         WHERE snap_id BETWEEN 3484 AND 4973) a
 WHERE a.snap_id = b.snap_id(+)
   AND a.instance_number = b.instance_number(+)
   AND 'Y' = 'Y'
   AND a.instance_number = 2
 GROUP BY
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI'),
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')
 ORDER BY
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')

16:52:58 col:4of5.

16:52:58 col:4of5 "00235_sqld360_323688_d1bmu84pdu6gx_4a_129_version_count_and_sharable_memory_for_instance_2.html"
16:52:58 col:4of5 "00236_sqld360_323688_d1bmu84pdu6gx_4a_129_version_count_and_sharable_memory_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:58 col:4of5 "Execution metrics"
16:52:58 SQL Execute Time by Wait Class for Cluster

SELECT MIN(a.snap_id) snap_id,
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       ROUND(SUM(NVL(b.elapsed_time_delta,0))/1e6,6) elapsed_time,
       ROUND(SUM(NVL(b.cpu_time_delta,0))/1e6,6) cpu_time,
       ROUND(SUM(NVL(b.iowait_delta,0))/1e6,6) io_time,
       ROUND(SUM(NVL(b.clwait_delta,0))/1e6,6) cluster_time,
       ROUND(SUM(NVL(b.apwait_delta,0))/1e6,6) application_time,
       ROUND(SUM(NVL(b.ccwait_delta,0))/1e6,6) concurrency_time,
       ROUND((SUM(NVL(b.elapsed_time_delta,0)) -
         (SUM(NVL(b.cpu_time_delta,0)) +
          SUM(NVL(b.iowait_delta,0))   +
          SUM(NVL(b.clwait_delta,0))   +
          SUM(NVL(b.apwait_delta,0))   +
          SUM(NVL(b.ccwait_delta,0)))
       ) / 1e6,6) unaccounted_time,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id, instance_number,
               elapsed_time_delta, cpu_time_delta, iowait_delta, clwait_delta, apwait_delta, ccwait_delta
          FROM dba_hist_sqlstat
         WHERE sql_id = 'd1bmu84pdu6gx') b,
       (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
          FROM dba_hist_snapshot
         WHERE snap_id BETWEEN 3484 AND 4973) a
 WHERE a.snap_id = b.snap_id(+)
   AND a.instance_number = b.instance_number(+)
   AND 'Y' = 'Y'
   AND a.instance_number = a.instance_number
 GROUP BY
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI'),
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')
 ORDER BY
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')

16:52:58 col:4of5.

16:52:58 col:4of5 "00237_sqld360_323688_d1bmu84pdu6gx_4b_130_sql_execute_time_by_wait_class_for_cluster.html"
16:52:58 col:4of5 "00238_sqld360_323688_d1bmu84pdu6gx_4b_130_sql_execute_time_by_wait_class_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:58 col:4of5 "Execution metrics"
16:52:58 SQL Execute Time by Wait Class for Instance 1

SELECT MIN(a.snap_id) snap_id,
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       ROUND(SUM(NVL(b.elapsed_time_delta,0))/1e6,6) elapsed_time,
       ROUND(SUM(NVL(b.cpu_time_delta,0))/1e6,6) cpu_time,
       ROUND(SUM(NVL(b.iowait_delta,0))/1e6,6) io_time,
       ROUND(SUM(NVL(b.clwait_delta,0))/1e6,6) cluster_time,
       ROUND(SUM(NVL(b.apwait_delta,0))/1e6,6) application_time,
       ROUND(SUM(NVL(b.ccwait_delta,0))/1e6,6) concurrency_time,
       ROUND((SUM(NVL(b.elapsed_time_delta,0)) -
         (SUM(NVL(b.cpu_time_delta,0)) +
          SUM(NVL(b.iowait_delta,0))   +
          SUM(NVL(b.clwait_delta,0))   +
          SUM(NVL(b.apwait_delta,0))   +
          SUM(NVL(b.ccwait_delta,0)))
       ) / 1e6,6) unaccounted_time,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id, instance_number,
               elapsed_time_delta, cpu_time_delta, iowait_delta, clwait_delta, apwait_delta, ccwait_delta
          FROM dba_hist_sqlstat
         WHERE sql_id = 'd1bmu84pdu6gx') b,
       (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
          FROM dba_hist_snapshot
         WHERE snap_id BETWEEN 3484 AND 4973) a
 WHERE a.snap_id = b.snap_id(+)
   AND a.instance_number = b.instance_number(+)
   AND 'Y' = 'Y'
   AND a.instance_number = 1
 GROUP BY
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI'),
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')
 ORDER BY
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')

16:52:58 col:4of5.

16:52:58 col:4of5 "00239_sqld360_323688_d1bmu84pdu6gx_4b_131_sql_execute_time_by_wait_class_for_instance_1.html"
16:52:58 col:4of5 "00240_sqld360_323688_d1bmu84pdu6gx_4b_131_sql_execute_time_by_wait_class_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:58 col:4of5 "Execution metrics"
16:52:58 SQL Execute Time by Wait Class for Instance 2

SELECT MIN(a.snap_id) snap_id,
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       ROUND(SUM(NVL(b.elapsed_time_delta,0))/1e6,6) elapsed_time,
       ROUND(SUM(NVL(b.cpu_time_delta,0))/1e6,6) cpu_time,
       ROUND(SUM(NVL(b.iowait_delta,0))/1e6,6) io_time,
       ROUND(SUM(NVL(b.clwait_delta,0))/1e6,6) cluster_time,
       ROUND(SUM(NVL(b.apwait_delta,0))/1e6,6) application_time,
       ROUND(SUM(NVL(b.ccwait_delta,0))/1e6,6) concurrency_time,
       ROUND((SUM(NVL(b.elapsed_time_delta,0)) -
         (SUM(NVL(b.cpu_time_delta,0)) +
          SUM(NVL(b.iowait_delta,0))   +
          SUM(NVL(b.clwait_delta,0))   +
          SUM(NVL(b.apwait_delta,0))   +
          SUM(NVL(b.ccwait_delta,0)))
       ) / 1e6,6) unaccounted_time,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id, instance_number,
               elapsed_time_delta, cpu_time_delta, iowait_delta, clwait_delta, apwait_delta, ccwait_delta
          FROM dba_hist_sqlstat
         WHERE sql_id = 'd1bmu84pdu6gx') b,
       (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
          FROM dba_hist_snapshot
         WHERE snap_id BETWEEN 3484 AND 4973) a
 WHERE a.snap_id = b.snap_id(+)
   AND a.instance_number = b.instance_number(+)
   AND 'Y' = 'Y'
   AND a.instance_number = 2
 GROUP BY
       TO_CHAR(a.begin_interval_time, 'YYYY-MM-DD HH24:MI'),
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')
 ORDER BY
       TO_CHAR(a.end_interval_time, 'YYYY-MM-DD HH24:MI')

16:52:58 col:4of5.

16:52:59 col:4of5 "00241_sqld360_323688_d1bmu84pdu6gx_4b_132_sql_execute_time_by_wait_class_for_instance_2.html"
16:52:59 col:4of5 "00242_sqld360_323688_d1bmu84pdu6gx_4b_132_sql_execute_time_by_wait_class_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:59 col:4of5 "Execution metrics"
16:52:59 Elapsed Time per recent executions for Cluster

SELECT NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) instance_id,
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) session_id,
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) session_serial#,
       TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,13)+1)) user_id,
       partition_id sql_exec_id,
       TO_CHAR(TO_DATE(distribution, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS') sql_exec_start,
       TO_CHAR(MIN(timestamp), 'YYYY-MM-DD HH24:MI:SS')  start_time,
       TO_CHAR(MAX(timestamp), 'YYYY-MM-DD HH24:MI:SS')  end_time,
       bytes plan_hash_value,
       --LEAST(1+86400*(MAX(timestamp)-MIN(timestamp)),COUNT(*)) elapsed_time,
                          1+86400*(MAX(timestamp)-MIN(timestamp)) elapsed_time,
       SUM(CASE WHEN object_node = 'ON CPU' THEN                    1 ELSE 0 END) cpu_time,
       SUM(                   1) db_time,
       COUNT(DISTINCT position||'-'||cpu_cost||'-'||io_cost) num_processes_ash,
       MAX(TRUNC(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,10)+1,INSTR(partition_stop,',',1,11)-INSTR(partition_stop,',',1,10)-1)) / 2097152)) max_px_degree_ash,
       MAX(px_servers_requested) px_servers_requested_sqlmon,
       MAX(px_servers_allocated) px_servers_allocated_sqlmon
  FROM plan_table a,
       (SELECT inst_id,
               sid,
               session_serial#,
               sql_exec_id,
               sql_exec_start,
               px_servers_requested,
               px_servers_allocated
          FROM gv$sql_monitor
         WHERE sql_id = 'd1bmu84pdu6gx'
           AND 'Y' = 'Y'
           AND px_qcsid IS NULL) b
 WHERE statement_id = 'SQLD360_ASH_DATA_MEM'
   AND position =  position
   AND remarks = 'd1bmu84pdu6gx'
   AND 'Y' = 'Y'
   AND b.sql_exec_id(+) = a.partition_id
   AND b.inst_id(+) = NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)
   AND b.sid(+) = NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)
   AND b.session_serial#(+) = NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)
   AND b.sql_exec_start(+) = TO_DATE(distribution, 'YYYYMMDDHH24MISS')
 GROUP BY partition_id,
       bytes,
       TO_CHAR(TO_DATE(distribution, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS'),
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position),
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost),
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost),
       TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,13)+1))
 ORDER BY
       TO_CHAR(MIN(timestamp), 'YYYY-MM-DD HH24:MI:SS'),
       partition_id

16:52:59 col:4of5.

16:52:59 col:4of5 "00243_sqld360_323688_d1bmu84pdu6gx_4b_133_elapsed_time_per_recent_executions_for_cluster.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:59 col:4of5 "Execution metrics"
16:52:59 Elapsed Time per recent executions for Instance 1

SELECT NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) instance_id,
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) session_id,
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) session_serial#,
       TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,13)+1)) user_id,
       partition_id sql_exec_id,
       TO_CHAR(TO_DATE(distribution, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS') sql_exec_start,
       TO_CHAR(MIN(timestamp), 'YYYY-MM-DD HH24:MI:SS')  start_time,
       TO_CHAR(MAX(timestamp), 'YYYY-MM-DD HH24:MI:SS')  end_time,
       bytes plan_hash_value,
       --LEAST(1+86400*(MAX(timestamp)-MIN(timestamp)),COUNT(*)) elapsed_time,
                          1+86400*(MAX(timestamp)-MIN(timestamp)) elapsed_time,
       SUM(CASE WHEN object_node = 'ON CPU' THEN                    1 ELSE 0 END) cpu_time,
       SUM(                   1) db_time,
       COUNT(DISTINCT position||'-'||cpu_cost||'-'||io_cost) num_processes_ash,
       MAX(TRUNC(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,10)+1,INSTR(partition_stop,',',1,11)-INSTR(partition_stop,',',1,10)-1)) / 2097152)) max_px_degree_ash,
       MAX(px_servers_requested) px_servers_requested_sqlmon,
       MAX(px_servers_allocated) px_servers_allocated_sqlmon
  FROM plan_table a,
       (SELECT inst_id,
               sid,
               session_serial#,
               sql_exec_id,
               sql_exec_start,
               px_servers_requested,
               px_servers_allocated
          FROM gv$sql_monitor
         WHERE sql_id = 'd1bmu84pdu6gx'
           AND 'Y' = 'Y'
           AND px_qcsid IS NULL) b
 WHERE statement_id = 'SQLD360_ASH_DATA_MEM'
   AND position =  1
   AND remarks = 'd1bmu84pdu6gx'
   AND 'Y' = 'Y'
   AND b.sql_exec_id(+) = a.partition_id
   AND b.inst_id(+) = NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)
   AND b.sid(+) = NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)
   AND b.session_serial#(+) = NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)
   AND b.sql_exec_start(+) = TO_DATE(distribution, 'YYYYMMDDHH24MISS')
 GROUP BY partition_id,
       bytes,
       TO_CHAR(TO_DATE(distribution, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS'),
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position),
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost),
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost),
       TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,13)+1))
 ORDER BY
       TO_CHAR(MIN(timestamp), 'YYYY-MM-DD HH24:MI:SS'),
       partition_id

16:52:59 col:4of5.

16:52:59 col:4of5 "00244_sqld360_323688_d1bmu84pdu6gx_4b_134_elapsed_time_per_recent_executions_for_instance_1.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:59 col:4of5 "Execution metrics"
16:52:59 Elapsed Time per recent executions for Instance 2

SELECT NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) instance_id,
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) session_id,
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) session_serial#,
       TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,13)+1)) user_id,
       partition_id sql_exec_id,
       TO_CHAR(TO_DATE(distribution, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS') sql_exec_start,
       TO_CHAR(MIN(timestamp), 'YYYY-MM-DD HH24:MI:SS')  start_time,
       TO_CHAR(MAX(timestamp), 'YYYY-MM-DD HH24:MI:SS')  end_time,
       bytes plan_hash_value,
       --LEAST(1+86400*(MAX(timestamp)-MIN(timestamp)),COUNT(*)) elapsed_time,
                          1+86400*(MAX(timestamp)-MIN(timestamp)) elapsed_time,
       SUM(CASE WHEN object_node = 'ON CPU' THEN                    1 ELSE 0 END) cpu_time,
       SUM(                   1) db_time,
       COUNT(DISTINCT position||'-'||cpu_cost||'-'||io_cost) num_processes_ash,
       MAX(TRUNC(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,10)+1,INSTR(partition_stop,',',1,11)-INSTR(partition_stop,',',1,10)-1)) / 2097152)) max_px_degree_ash,
       MAX(px_servers_requested) px_servers_requested_sqlmon,
       MAX(px_servers_allocated) px_servers_allocated_sqlmon
  FROM plan_table a,
       (SELECT inst_id,
               sid,
               session_serial#,
               sql_exec_id,
               sql_exec_start,
               px_servers_requested,
               px_servers_allocated
          FROM gv$sql_monitor
         WHERE sql_id = 'd1bmu84pdu6gx'
           AND 'Y' = 'Y'
           AND px_qcsid IS NULL) b
 WHERE statement_id = 'SQLD360_ASH_DATA_MEM'
   AND position =  2
   AND remarks = 'd1bmu84pdu6gx'
   AND 'Y' = 'Y'
   AND b.sql_exec_id(+) = a.partition_id
   AND b.inst_id(+) = NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)
   AND b.sid(+) = NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)
   AND b.session_serial#(+) = NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)
   AND b.sql_exec_start(+) = TO_DATE(distribution, 'YYYYMMDDHH24MISS')
 GROUP BY partition_id,
       bytes,
       TO_CHAR(TO_DATE(distribution, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS'),
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position),
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost),
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost),
       TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,13)+1))
 ORDER BY
       TO_CHAR(MIN(timestamp), 'YYYY-MM-DD HH24:MI:SS'),
       partition_id

16:52:59 col:4of5.

16:52:59 col:4of5 "00245_sqld360_323688_d1bmu84pdu6gx_4b_135_elapsed_time_per_recent_executions_for_instance_2.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:59 col:4of5 "Execution metrics"
16:52:59 Elapsed Time per historical executions for Cluster

SELECT NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) instance_id,
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) session_id,
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) session_serial#,
       TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,13)+1)) user_id,
       partition_id sql_exec_id,
       TO_CHAR(TO_DATE(distribution, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS') sql_exec_start,
       TO_CHAR(MIN(timestamp), 'YYYY-MM-DD HH24:MI:SS')  start_time,
       TO_CHAR(MAX(timestamp), 'YYYY-MM-DD HH24:MI:SS')  end_time,
       bytes plan_hash_value,
       --LEAST(10+86400*(MAX(timestamp)-MIN(timestamp)),SUM(10)) elapsed_time,
                         10+86400*(MAX(timestamp)-MIN(timestamp)) elapsed_time,
       SUM(CASE WHEN object_node = 'ON CPU' THEN                   10 ELSE 0 END) cpu_time,
       SUM(                  10) db_time,
       COUNT(DISTINCT position||'-'||cpu_cost||'-'||io_cost) num_processes_ash,
       MAX(TRUNC(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,10)+1,INSTR(partition_stop,',',1,11)-INSTR(partition_stop,',',1,10)-1)) / 2097152)) max_px_degree_ash,
       MAX(px_servers_requested) px_servers_requested_sqlmon,
       MAX(px_servers_allocated) px_servers_allocated_sqlmon
  FROM plan_table a,
       (SELECT inst_id,
               sid,
               session_serial#,
               sql_exec_id,
               sql_exec_start,
               px_servers_requested,
               px_servers_allocated
          FROM gv$sql_monitor
         WHERE sql_id = 'd1bmu84pdu6gx'
           AND 'Y' = 'Y'
           AND px_qcsid IS NULL) b
 WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
   AND position =  position
   AND remarks = 'd1bmu84pdu6gx'
   AND 'Y' = 'Y'
   AND b.sql_exec_id(+) = a.partition_id
   AND b.inst_id(+) = NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)
   AND b.sid(+) = NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)
   AND b.session_serial#(+) = NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)
   AND b.sql_exec_start(+) = TO_DATE(distribution, 'YYYYMMDDHH24MISS')
 GROUP BY partition_id,
       bytes,
       TO_CHAR(TO_DATE(distribution, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS'),
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position),
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost),
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost),
       TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,13)+1))
 ORDER BY
       TO_CHAR(MIN(timestamp), 'YYYY-MM-DD HH24:MI:SS'),
       partition_id

16:52:59 col:4of5.

16:52:59 col:4of5 "00246_sqld360_323688_d1bmu84pdu6gx_4b_136_elapsed_time_per_historical_executions_for_cluster.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:59 col:4of5 "Execution metrics"
16:52:59 Elapsed Time per historical executions for Instance 1

SELECT NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) instance_id,
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) session_id,
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) session_serial#,
       TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,13)+1)) user_id,
       partition_id sql_exec_id,
       TO_CHAR(TO_DATE(distribution, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS') sql_exec_start,
       TO_CHAR(MIN(timestamp), 'YYYY-MM-DD HH24:MI:SS')  start_time,
       TO_CHAR(MAX(timestamp), 'YYYY-MM-DD HH24:MI:SS')  end_time,
       bytes plan_hash_value,
       --LEAST(10+86400*(MAX(timestamp)-MIN(timestamp)),SUM(10)) elapsed_time,
                         10+86400*(MAX(timestamp)-MIN(timestamp)) elapsed_time,
       SUM(CASE WHEN object_node = 'ON CPU' THEN                   10 ELSE 0 END) cpu_time,
       SUM(                  10) db_time,
       COUNT(DISTINCT position||'-'||cpu_cost||'-'||io_cost) num_processes_ash,
       MAX(TRUNC(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,10)+1,INSTR(partition_stop,',',1,11)-INSTR(partition_stop,',',1,10)-1)) / 2097152)) max_px_degree_ash,
       MAX(px_servers_requested) px_servers_requested_sqlmon,
       MAX(px_servers_allocated) px_servers_allocated_sqlmon
  FROM plan_table a,
       (SELECT inst_id,
               sid,
               session_serial#,
               sql_exec_id,
               sql_exec_start,
               px_servers_requested,
               px_servers_allocated
          FROM gv$sql_monitor
         WHERE sql_id = 'd1bmu84pdu6gx'
           AND 'Y' = 'Y'
           AND px_qcsid IS NULL) b
 WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
   AND position =  1
   AND remarks = 'd1bmu84pdu6gx'
   AND 'Y' = 'Y'
   AND b.sql_exec_id(+) = a.partition_id
   AND b.inst_id(+) = NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)
   AND b.sid(+) = NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)
   AND b.session_serial#(+) = NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)
   AND b.sql_exec_start(+) = TO_DATE(distribution, 'YYYYMMDDHH24MISS')
 GROUP BY partition_id,
       bytes,
       TO_CHAR(TO_DATE(distribution, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS'),
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position),
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost),
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost),
       TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,13)+1))
 ORDER BY
       TO_CHAR(MIN(timestamp), 'YYYY-MM-DD HH24:MI:SS'),
       partition_id

16:52:59 col:4of5.

16:52:59 col:4of5 "00247_sqld360_323688_d1bmu84pdu6gx_4b_137_elapsed_time_per_historical_executions_for_instance_1.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:52:59 col:4of5 "Execution metrics"
16:52:59 Elapsed Time per historical executions for Instance 2

SELECT NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position) instance_id,
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost) session_id,
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost) session_serial#,
       TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,13)+1)) user_id,
       partition_id sql_exec_id,
       TO_CHAR(TO_DATE(distribution, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS') sql_exec_start,
       TO_CHAR(MIN(timestamp), 'YYYY-MM-DD HH24:MI:SS')  start_time,
       TO_CHAR(MAX(timestamp), 'YYYY-MM-DD HH24:MI:SS')  end_time,
       bytes plan_hash_value,
       --LEAST(10+86400*(MAX(timestamp)-MIN(timestamp)),SUM(10)) elapsed_time,
                         10+86400*(MAX(timestamp)-MIN(timestamp)) elapsed_time,
       SUM(CASE WHEN object_node = 'ON CPU' THEN                   10 ELSE 0 END) cpu_time,
       SUM(                  10) db_time,
       COUNT(DISTINCT position||'-'||cpu_cost||'-'||io_cost) num_processes_ash,
       MAX(TRUNC(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,10)+1,INSTR(partition_stop,',',1,11)-INSTR(partition_stop,',',1,10)-1)) / 2097152)) max_px_degree_ash,
       MAX(px_servers_requested) px_servers_requested_sqlmon,
       MAX(px_servers_allocated) px_servers_allocated_sqlmon
  FROM plan_table a,
       (SELECT inst_id,
               sid,
               session_serial#,
               sql_exec_id,
               sql_exec_start,
               px_servers_requested,
               px_servers_allocated
          FROM gv$sql_monitor
         WHERE sql_id = 'd1bmu84pdu6gx'
           AND 'Y' = 'Y'
           AND px_qcsid IS NULL) b
 WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
   AND position =  2
   AND remarks = 'd1bmu84pdu6gx'
   AND 'Y' = 'Y'
   AND b.sql_exec_id(+) = a.partition_id
   AND b.inst_id(+) = NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)
   AND b.sid(+) = NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)
   AND b.session_serial#(+) = NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)
   AND b.sql_exec_start(+) = TO_DATE(distribution, 'YYYYMMDDHH24MISS')
 GROUP BY partition_id,
       bytes,
       TO_CHAR(TO_DATE(distribution, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI:SS'),
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position),
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost),
       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost),
       TO_NUMBER(SUBSTR(partition_start,INSTR(partition_start,',',1,13)+1))
 ORDER BY
       TO_CHAR(MIN(timestamp), 'YYYY-MM-DD HH24:MI:SS'),
       partition_id

16:52:59 col:4of5.

16:52:59 col:4of5 "00248_sqld360_323688_d1bmu84pdu6gx_4b_138_elapsed_time_per_historical_executions_for_instance_2.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:00 col:4of5 "Execution metrics"
16:53:00 Avg Buffer Gets/Execution for Cluster

SELECT snap_id snap_id,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(buffer_gets_tot, 0) buffer_gets_tot,
       NVL(AVG(buffer_gets_tot) OVER (ORDER BY snap_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW), 0) buffer_gets_trend_tot,
       NVL(buffer_gets_del, 0) buffer_gets_del,
       NVL(AVG(buffer_gets_del) OVER (ORDER BY snap_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW), 0) buffer_gets_trend_del,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT a.snap_id,
               MIN(begin_interval_time) begin_interval_time,
               MIN(end_interval_time) end_interval_time,
               TRUNC(SUM(b.buffer_gets_total)/SUM(NVL(NULLIF(executions_total,0),1)),3) buffer_gets_tot,
               TRUNC(SUM(b.buffer_gets_delta)/SUM(NVL(NULLIF(executions_delta,0),1)),3) buffer_gets_del
          FROM (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
                  FROM dba_hist_snapshot
                 WHERE snap_id BETWEEN 3484 AND 4973) a,
               (SELECT snap_id, instance_number, buffer_gets_total, executions_total, buffer_gets_delta, executions_delta
                  FROM dba_hist_sqlstat
                 WHERE sql_id = 'd1bmu84pdu6gx') b
          WHERE a.snap_id = b.snap_id(+)
            AND a.instance_number = b.instance_number(+)
            AND 'Y' = 'Y'
            AND a.instance_number = a.instance_number
          GROUP BY a.snap_id)
 ORDER BY
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')

16:53:00 col:4of5.

16:53:00 col:4of5 "00249_sqld360_323688_d1bmu84pdu6gx_4b_139_avg_buffer_getsexecution_for_cluster.html"
16:53:00 col:4of5 "00250_sqld360_323688_d1bmu84pdu6gx_4b_139_avg_buffer_getsexecution_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:00 col:4of5 "Execution metrics"
16:53:00 Avg Buffer Gets/Execution for Instance 1

SELECT snap_id snap_id,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(buffer_gets_tot, 0) buffer_gets_tot,
       NVL(AVG(buffer_gets_tot) OVER (ORDER BY snap_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW), 0) buffer_gets_trend_tot,
       NVL(buffer_gets_del, 0) buffer_gets_del,
       NVL(AVG(buffer_gets_del) OVER (ORDER BY snap_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW), 0) buffer_gets_trend_del,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT a.snap_id,
               MIN(begin_interval_time) begin_interval_time,
               MIN(end_interval_time) end_interval_time,
               TRUNC(SUM(b.buffer_gets_total)/SUM(NVL(NULLIF(executions_total,0),1)),3) buffer_gets_tot,
               TRUNC(SUM(b.buffer_gets_delta)/SUM(NVL(NULLIF(executions_delta,0),1)),3) buffer_gets_del
          FROM (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
                  FROM dba_hist_snapshot
                 WHERE snap_id BETWEEN 3484 AND 4973) a,
               (SELECT snap_id, instance_number, buffer_gets_total, executions_total, buffer_gets_delta, executions_delta
                  FROM dba_hist_sqlstat
                 WHERE sql_id = 'd1bmu84pdu6gx') b
          WHERE a.snap_id = b.snap_id(+)
            AND a.instance_number = b.instance_number(+)
            AND 'Y' = 'Y'
            AND a.instance_number = 1
          GROUP BY a.snap_id)
 ORDER BY
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')

16:53:00 col:4of5.

16:53:00 col:4of5 "00251_sqld360_323688_d1bmu84pdu6gx_4b_140_avg_buffer_getsexecution_for_instance_1.html"
16:53:00 col:4of5 "00252_sqld360_323688_d1bmu84pdu6gx_4b_140_avg_buffer_getsexecution_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:00 col:4of5 "Execution metrics"
16:53:00 Avg Buffer Gets/Execution for Instance 2

SELECT snap_id snap_id,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(buffer_gets_tot, 0) buffer_gets_tot,
       NVL(AVG(buffer_gets_tot) OVER (ORDER BY snap_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW), 0) buffer_gets_trend_tot,
       NVL(buffer_gets_del, 0) buffer_gets_del,
       NVL(AVG(buffer_gets_del) OVER (ORDER BY snap_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW), 0) buffer_gets_trend_del,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT a.snap_id,
               MIN(begin_interval_time) begin_interval_time,
               MIN(end_interval_time) end_interval_time,
               TRUNC(SUM(b.buffer_gets_total)/SUM(NVL(NULLIF(executions_total,0),1)),3) buffer_gets_tot,
               TRUNC(SUM(b.buffer_gets_delta)/SUM(NVL(NULLIF(executions_delta,0),1)),3) buffer_gets_del
          FROM (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
                  FROM dba_hist_snapshot
                 WHERE snap_id BETWEEN 3484 AND 4973) a,
               (SELECT snap_id, instance_number, buffer_gets_total, executions_total, buffer_gets_delta, executions_delta
                  FROM dba_hist_sqlstat
                 WHERE sql_id = 'd1bmu84pdu6gx') b
          WHERE a.snap_id = b.snap_id(+)
            AND a.instance_number = b.instance_number(+)
            AND 'Y' = 'Y'
            AND a.instance_number = 2
          GROUP BY a.snap_id)
 ORDER BY
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')

16:53:00 col:4of5.

16:53:00 col:4of5 "00253_sqld360_323688_d1bmu84pdu6gx_4b_141_avg_buffer_getsexecution_for_instance_2.html"
16:53:00 col:4of5 "00254_sqld360_323688_d1bmu84pdu6gx_4b_141_avg_buffer_getsexecution_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:00 col:4of5 "Execution metrics"
16:53:00 Avg Rows Processed/Execution for Cluster

SELECT snap_id snap_id,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(rows_processed_tot,0) rows_processed_tot,
       NVL(AVG(rows_processed_tot) OVER (ORDER BY snap_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW), 0) rows_processed_trend_tot,
       NVL(rows_processed_del,0) rows_processed_del,
       NVL(AVG(rows_processed_del) OVER (ORDER BY snap_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW), 0) rows_processed_trend_del,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT a.snap_id,
               MIN(begin_interval_time) begin_interval_time,
               MIN(end_interval_time) end_interval_time,
               TRUNC(SUM(b.rows_processed_total)/SUM(NVL(NULLIF(executions_total,0),1)),3) rows_processed_tot,
               TRUNC(SUM(b.rows_processed_delta)/SUM(NVL(NULLIF(executions_delta,0),1)),3) rows_processed_del
          FROM (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
                  FROM dba_hist_snapshot
                 WHERE snap_id BETWEEN 3484 AND 4973) a,
               (SELECT snap_id, instance_number, rows_processed_total, executions_total, rows_processed_delta, executions_delta
                  FROM dba_hist_sqlstat
                 WHERE sql_id = 'd1bmu84pdu6gx') b
         WHERE a.snap_id = b.snap_id(+)
           AND a.instance_number = b.instance_number(+)
           AND 'Y' = 'Y'
           AND a.instance_number = a.instance_number
         GROUP BY a.snap_id)
 ORDER BY
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')

16:53:00 col:4of5.

16:53:00 col:4of5 "00255_sqld360_323688_d1bmu84pdu6gx_4b_142_avg_rows_processedexecution_for_cluster.html"
16:53:00 col:4of5 "00256_sqld360_323688_d1bmu84pdu6gx_4b_142_avg_rows_processedexecution_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:01 col:4of5 "Execution metrics"
16:53:01 Avg Rows Processed/Execution for Instance 1

SELECT snap_id snap_id,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(rows_processed_tot,0) rows_processed_tot,
       NVL(AVG(rows_processed_tot) OVER (ORDER BY snap_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW), 0) rows_processed_trend_tot,
       NVL(rows_processed_del,0) rows_processed_del,
       NVL(AVG(rows_processed_del) OVER (ORDER BY snap_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW), 0) rows_processed_trend_del,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT a.snap_id,
               MIN(begin_interval_time) begin_interval_time,
               MIN(end_interval_time) end_interval_time,
               TRUNC(SUM(b.rows_processed_total)/SUM(NVL(NULLIF(executions_total,0),1)),3) rows_processed_tot,
               TRUNC(SUM(b.rows_processed_delta)/SUM(NVL(NULLIF(executions_delta,0),1)),3) rows_processed_del
          FROM (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
                  FROM dba_hist_snapshot
                 WHERE snap_id BETWEEN 3484 AND 4973) a,
               (SELECT snap_id, instance_number, rows_processed_total, executions_total, rows_processed_delta, executions_delta
                  FROM dba_hist_sqlstat
                 WHERE sql_id = 'd1bmu84pdu6gx') b
         WHERE a.snap_id = b.snap_id(+)
           AND a.instance_number = b.instance_number(+)
           AND 'Y' = 'Y'
           AND a.instance_number = 1
         GROUP BY a.snap_id)
 ORDER BY
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')

16:53:01 col:4of5.

16:53:01 col:4of5 "00257_sqld360_323688_d1bmu84pdu6gx_4b_143_avg_rows_processedexecution_for_instance_1.html"
16:53:01 col:4of5 "00258_sqld360_323688_d1bmu84pdu6gx_4b_143_avg_rows_processedexecution_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:01 col:4of5 "Execution metrics"
16:53:01 Avg Rows Processed/Execution for Instance 2

SELECT snap_id snap_id,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(rows_processed_tot,0) rows_processed_tot,
       NVL(AVG(rows_processed_tot) OVER (ORDER BY snap_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW), 0) rows_processed_trend_tot,
       NVL(rows_processed_del,0) rows_processed_del,
       NVL(AVG(rows_processed_del) OVER (ORDER BY snap_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW), 0) rows_processed_trend_del,
       0 dummy_05,
       0 dummy_06,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT a.snap_id,
               MIN(begin_interval_time) begin_interval_time,
               MIN(end_interval_time) end_interval_time,
               TRUNC(SUM(b.rows_processed_total)/SUM(NVL(NULLIF(executions_total,0),1)),3) rows_processed_tot,
               TRUNC(SUM(b.rows_processed_delta)/SUM(NVL(NULLIF(executions_delta,0),1)),3) rows_processed_del
          FROM (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
                  FROM dba_hist_snapshot
                 WHERE snap_id BETWEEN 3484 AND 4973) a,
               (SELECT snap_id, instance_number, rows_processed_total, executions_total, rows_processed_delta, executions_delta
                  FROM dba_hist_sqlstat
                 WHERE sql_id = 'd1bmu84pdu6gx') b
         WHERE a.snap_id = b.snap_id(+)
           AND a.instance_number = b.instance_number(+)
           AND 'Y' = 'Y'
           AND a.instance_number = 2
         GROUP BY a.snap_id)
 ORDER BY
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')

16:53:01 col:4of5.

16:53:01 col:4of5 "00259_sqld360_323688_d1bmu84pdu6gx_4b_144_avg_rows_processedexecution_for_instance_2.html"
16:53:01 col:4of5 "00260_sqld360_323688_d1bmu84pdu6gx_4b_144_avg_rows_processedexecution_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:01 col:4of5 "Execution metrics"
16:53:01 Avg Elapsed Time/Execution (total) for Cluster

SELECT snap_id snap_id,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(elapsed_time,0) elapsed_time,
       NVL(cpu_time,0) cpu_time,
       NVL(iowait,0) iowait,
       NVL(clwait,0) clwait,
       NVL(apwait,0) apwait,
       NVL(ccwait,0) ccwait,
       NVL(AVG(elapsed_time) OVER (ORDER BY snap_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),0) elapsed_time_trend,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT a.snap_id,
               MIN(begin_interval_time) begin_interval_time,
               MIN(end_interval_time) end_interval_time,
               ROUND(SUM(elapsed_time_total)/SUM(NVL(NULLIF(executions_total,0),1))/1e3,6) elapsed_time,
               ROUND(SUM(cpu_time_total)    /SUM(NVL(NULLIF(executions_total,0),1))/1e3,6) cpu_time,
               ROUND(SUM(iowait_total)      /SUM(NVL(NULLIF(executions_total,0),1))/1e3,6) iowait,
               ROUND(SUM(clwait_total)      /SUM(NVL(NULLIF(executions_total,0),1))/1e3,6) clwait,
               ROUND(SUM(apwait_total)      /SUM(NVL(NULLIF(executions_total,0),1))/1e3,6) apwait,
               ROUND(SUM(ccwait_total)      /SUM(NVL(NULLIF(executions_total,0),1))/1e3,6) ccwait
          FROM (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
                  FROM dba_hist_snapshot
                 WHERE snap_id BETWEEN 3484 AND 4973) a,
               (SELECT snap_id, instance_number,  elapsed_time_total, cpu_time_total,
                       iowait_total, clwait_total, apwait_total, ccwait_total, executions_total
                  FROM dba_hist_sqlstat
                 WHERE sql_id = 'd1bmu84pdu6gx') b
         WHERE a.snap_id = b.snap_id(+)
           AND a.instance_number = b.instance_number(+)
           AND 'Y' = 'Y'
           AND a.instance_number = a.instance_number
         GROUP BY a.snap_id)
 ORDER BY
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')

16:53:01 col:4of5.

16:53:01 col:4of5 "00261_sqld360_323688_d1bmu84pdu6gx_4b_145_avg_elapsed_timeexecution_total_for_cluster.html"
16:53:01 col:4of5 "00262_sqld360_323688_d1bmu84pdu6gx_4b_145_avg_elapsed_timeexecution_total_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:01 col:4of5 "Execution metrics"
16:53:01 Avg Elapsed Time/Execution (total) for Instance 1

SELECT snap_id snap_id,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(elapsed_time,0) elapsed_time,
       NVL(cpu_time,0) cpu_time,
       NVL(iowait,0) iowait,
       NVL(clwait,0) clwait,
       NVL(apwait,0) apwait,
       NVL(ccwait,0) ccwait,
       NVL(AVG(elapsed_time) OVER (ORDER BY snap_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),0) elapsed_time_trend,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT a.snap_id,
               MIN(begin_interval_time) begin_interval_time,
               MIN(end_interval_time) end_interval_time,
               ROUND(SUM(elapsed_time_total)/SUM(NVL(NULLIF(executions_total,0),1))/1e3,6) elapsed_time,
               ROUND(SUM(cpu_time_total)    /SUM(NVL(NULLIF(executions_total,0),1))/1e3,6) cpu_time,
               ROUND(SUM(iowait_total)      /SUM(NVL(NULLIF(executions_total,0),1))/1e3,6) iowait,
               ROUND(SUM(clwait_total)      /SUM(NVL(NULLIF(executions_total,0),1))/1e3,6) clwait,
               ROUND(SUM(apwait_total)      /SUM(NVL(NULLIF(executions_total,0),1))/1e3,6) apwait,
               ROUND(SUM(ccwait_total)      /SUM(NVL(NULLIF(executions_total,0),1))/1e3,6) ccwait
          FROM (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
                  FROM dba_hist_snapshot
                 WHERE snap_id BETWEEN 3484 AND 4973) a,
               (SELECT snap_id, instance_number,  elapsed_time_total, cpu_time_total,
                       iowait_total, clwait_total, apwait_total, ccwait_total, executions_total
                  FROM dba_hist_sqlstat
                 WHERE sql_id = 'd1bmu84pdu6gx') b
         WHERE a.snap_id = b.snap_id(+)
           AND a.instance_number = b.instance_number(+)
           AND 'Y' = 'Y'
           AND a.instance_number = 1
         GROUP BY a.snap_id)
 ORDER BY
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')

16:53:01 col:4of5.

16:53:01 col:4of5 "00263_sqld360_323688_d1bmu84pdu6gx_4b_146_avg_elapsed_timeexecution_total_for_instance_1.html"
16:53:01 col:4of5 "00264_sqld360_323688_d1bmu84pdu6gx_4b_146_avg_elapsed_timeexecution_total_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:02 col:4of5 "Execution metrics"
16:53:02 Avg Elapsed Time/Execution (total) for Instance 2

SELECT snap_id snap_id,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(elapsed_time,0) elapsed_time,
       NVL(cpu_time,0) cpu_time,
       NVL(iowait,0) iowait,
       NVL(clwait,0) clwait,
       NVL(apwait,0) apwait,
       NVL(ccwait,0) ccwait,
       NVL(AVG(elapsed_time) OVER (ORDER BY snap_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),0) elapsed_time_trend,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT a.snap_id,
               MIN(begin_interval_time) begin_interval_time,
               MIN(end_interval_time) end_interval_time,
               ROUND(SUM(elapsed_time_total)/SUM(NVL(NULLIF(executions_total,0),1))/1e3,6) elapsed_time,
               ROUND(SUM(cpu_time_total)    /SUM(NVL(NULLIF(executions_total,0),1))/1e3,6) cpu_time,
               ROUND(SUM(iowait_total)      /SUM(NVL(NULLIF(executions_total,0),1))/1e3,6) iowait,
               ROUND(SUM(clwait_total)      /SUM(NVL(NULLIF(executions_total,0),1))/1e3,6) clwait,
               ROUND(SUM(apwait_total)      /SUM(NVL(NULLIF(executions_total,0),1))/1e3,6) apwait,
               ROUND(SUM(ccwait_total)      /SUM(NVL(NULLIF(executions_total,0),1))/1e3,6) ccwait
          FROM (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
                  FROM dba_hist_snapshot
                 WHERE snap_id BETWEEN 3484 AND 4973) a,
               (SELECT snap_id, instance_number,  elapsed_time_total, cpu_time_total,
                       iowait_total, clwait_total, apwait_total, ccwait_total, executions_total
                  FROM dba_hist_sqlstat
                 WHERE sql_id = 'd1bmu84pdu6gx') b
         WHERE a.snap_id = b.snap_id(+)
           AND a.instance_number = b.instance_number(+)
           AND 'Y' = 'Y'
           AND a.instance_number = 2
         GROUP BY a.snap_id)
 ORDER BY
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')

16:53:02 col:4of5.

16:53:02 col:4of5 "00265_sqld360_323688_d1bmu84pdu6gx_4b_147_avg_elapsed_timeexecution_total_for_instance_2.html"
16:53:02 col:4of5 "00266_sqld360_323688_d1bmu84pdu6gx_4b_147_avg_elapsed_timeexecution_total_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:02 col:4of5 "Execution metrics"
16:53:02 Avg Elapsed Time/Execution (delta) for Cluster

SELECT snap_id snap_id,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(elapsed_time,0) elapsed_time,
       NVL(cpu_time,0) cpu_time,
       NVL(iowait,0) iowait,
       NVL(clwait,0) clwait,
       NVL(apwait,0) apwait,
       NVL(ccwait,0) ccwait,
       NVL(AVG(elapsed_time) OVER (ORDER BY snap_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),0) elapsed_time_trend,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT a.snap_id,
               MIN(begin_interval_time) begin_interval_time,
               MIN(end_interval_time) end_interval_time,
               ROUND(SUM(elapsed_time_delta)/SUM(NVL(NULLIF(executions_delta,0),1))/1e3,6) elapsed_time,
               ROUND(SUM(cpu_time_delta)    /SUM(NVL(NULLIF(executions_delta,0),1))/1e3,6) cpu_time,
               ROUND(SUM(iowait_delta)      /SUM(NVL(NULLIF(executions_delta,0),1))/1e3,6) iowait,
               ROUND(SUM(clwait_delta)      /SUM(NVL(NULLIF(executions_delta,0),1))/1e3,6) clwait,
               ROUND(SUM(apwait_delta)      /SUM(NVL(NULLIF(executions_delta,0),1))/1e3,6) apwait,
               ROUND(SUM(ccwait_delta)      /SUM(NVL(NULLIF(executions_delta,0),1))/1e3,6) ccwait
          FROM (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
                  FROM dba_hist_snapshot
                 WHERE snap_id BETWEEN 3484 AND 4973) a,
               (SELECT snap_id, instance_number,  elapsed_time_delta, cpu_time_delta,
                       iowait_delta, clwait_delta, apwait_delta, ccwait_delta, executions_delta
                  FROM dba_hist_sqlstat
                 WHERE sql_id = 'd1bmu84pdu6gx') b
         WHERE a.snap_id = b.snap_id(+)
           AND a.instance_number = b.instance_number(+)
           AND 'Y' = 'Y'
           AND a.instance_number = a.instance_number
         GROUP BY a.snap_id)
 ORDER BY
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')

16:53:02 col:4of5.

16:53:02 col:4of5 "00267_sqld360_323688_d1bmu84pdu6gx_4b_148_avg_elapsed_timeexecution_delta_for_cluster.html"
16:53:02 col:4of5 "00268_sqld360_323688_d1bmu84pdu6gx_4b_148_avg_elapsed_timeexecution_delta_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:02 col:4of5 "Execution metrics"
16:53:02 Avg Elapsed Time/Execution (delta) for Instance 1

SELECT snap_id snap_id,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(elapsed_time,0) elapsed_time,
       NVL(cpu_time,0) cpu_time,
       NVL(iowait,0) iowait,
       NVL(clwait,0) clwait,
       NVL(apwait,0) apwait,
       NVL(ccwait,0) ccwait,
       NVL(AVG(elapsed_time) OVER (ORDER BY snap_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),0) elapsed_time_trend,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT a.snap_id,
               MIN(begin_interval_time) begin_interval_time,
               MIN(end_interval_time) end_interval_time,
               ROUND(SUM(elapsed_time_delta)/SUM(NVL(NULLIF(executions_delta,0),1))/1e3,6) elapsed_time,
               ROUND(SUM(cpu_time_delta)    /SUM(NVL(NULLIF(executions_delta,0),1))/1e3,6) cpu_time,
               ROUND(SUM(iowait_delta)      /SUM(NVL(NULLIF(executions_delta,0),1))/1e3,6) iowait,
               ROUND(SUM(clwait_delta)      /SUM(NVL(NULLIF(executions_delta,0),1))/1e3,6) clwait,
               ROUND(SUM(apwait_delta)      /SUM(NVL(NULLIF(executions_delta,0),1))/1e3,6) apwait,
               ROUND(SUM(ccwait_delta)      /SUM(NVL(NULLIF(executions_delta,0),1))/1e3,6) ccwait
          FROM (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
                  FROM dba_hist_snapshot
                 WHERE snap_id BETWEEN 3484 AND 4973) a,
               (SELECT snap_id, instance_number,  elapsed_time_delta, cpu_time_delta,
                       iowait_delta, clwait_delta, apwait_delta, ccwait_delta, executions_delta
                  FROM dba_hist_sqlstat
                 WHERE sql_id = 'd1bmu84pdu6gx') b
         WHERE a.snap_id = b.snap_id(+)
           AND a.instance_number = b.instance_number(+)
           AND 'Y' = 'Y'
           AND a.instance_number = 1
         GROUP BY a.snap_id)
 ORDER BY
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')

16:53:02 col:4of5.

16:53:02 col:4of5 "00269_sqld360_323688_d1bmu84pdu6gx_4b_149_avg_elapsed_timeexecution_delta_for_instance_1.html"
16:53:02 col:4of5 "00270_sqld360_323688_d1bmu84pdu6gx_4b_149_avg_elapsed_timeexecution_delta_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:02 col:4of5 "Execution metrics"
16:53:02 Avg Elapsed Time/Execution (delta) for Instance 2

SELECT snap_id snap_id,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(elapsed_time,0) elapsed_time,
       NVL(cpu_time,0) cpu_time,
       NVL(iowait,0) iowait,
       NVL(clwait,0) clwait,
       NVL(apwait,0) apwait,
       NVL(ccwait,0) ccwait,
       NVL(AVG(elapsed_time) OVER (ORDER BY snap_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),0) elapsed_time_trend,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT a.snap_id,
               MIN(begin_interval_time) begin_interval_time,
               MIN(end_interval_time) end_interval_time,
               ROUND(SUM(elapsed_time_delta)/SUM(NVL(NULLIF(executions_delta,0),1))/1e3,6) elapsed_time,
               ROUND(SUM(cpu_time_delta)    /SUM(NVL(NULLIF(executions_delta,0),1))/1e3,6) cpu_time,
               ROUND(SUM(iowait_delta)      /SUM(NVL(NULLIF(executions_delta,0),1))/1e3,6) iowait,
               ROUND(SUM(clwait_delta)      /SUM(NVL(NULLIF(executions_delta,0),1))/1e3,6) clwait,
               ROUND(SUM(apwait_delta)      /SUM(NVL(NULLIF(executions_delta,0),1))/1e3,6) apwait,
               ROUND(SUM(ccwait_delta)      /SUM(NVL(NULLIF(executions_delta,0),1))/1e3,6) ccwait
          FROM (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
                  FROM dba_hist_snapshot
                 WHERE snap_id BETWEEN 3484 AND 4973) a,
               (SELECT snap_id, instance_number,  elapsed_time_delta, cpu_time_delta,
                       iowait_delta, clwait_delta, apwait_delta, ccwait_delta, executions_delta
                  FROM dba_hist_sqlstat
                 WHERE sql_id = 'd1bmu84pdu6gx') b
         WHERE a.snap_id = b.snap_id(+)
           AND a.instance_number = b.instance_number(+)
           AND 'Y' = 'Y'
           AND a.instance_number = 2
         GROUP BY a.snap_id)
 ORDER BY
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')

16:53:02 col:4of5.

16:53:02 col:4of5 "00271_sqld360_323688_d1bmu84pdu6gx_4b_150_avg_elapsed_timeexecution_delta_for_instance_2.html"
16:53:02 col:4of5 "00272_sqld360_323688_d1bmu84pdu6gx_4b_150_avg_elapsed_timeexecution_delta_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:03 col:4of5 "Execution metrics"
16:53:03 Avg Elapsed Time/Execution (moving 1d) for Cluster

SELECT snap_id snap_id,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(ROUND(SUM(elapsed_time_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
            /NVL(NULLIF(SUM(execs_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) elapsed_time,
       NVL(ROUND(SUM(cpu_time_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
            /NVL(NULLIF(SUM(execs_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) cpu_time,
       NVL(ROUND(SUM(iowait_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
            /NVL(NULLIF(SUM(execs_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) iowait,
       NVL(ROUND(SUM(clwait_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
            /NVL(NULLIF(SUM(execs_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) clwait,
       NVL(ROUND(SUM(apwait_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
            /NVL(NULLIF(SUM(execs_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) apwait,
       NVL(ROUND(SUM(ccwait_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
            /NVL(NULLIF(SUM(execs_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) ccwait,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT a.snap_id,
               MIN(begin_interval_time) begin_interval_time,
               MIN(end_interval_time) end_interval_time,
               SUM(elapsed_time_delta) elapsed_time_per_snap,
               SUM(cpu_time_delta) cpu_time_per_snap,
               SUM(iowait_delta) iowait_per_snap,
               SUM(clwait_delta) clwait_per_snap,
               SUM(apwait_delta) apwait_per_snap,
               SUM(ccwait_delta) ccwait_per_snap,
               SUM(executions_delta) execs_per_snap
          FROM (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
                  FROM dba_hist_snapshot
                 WHERE snap_id BETWEEN 3484 AND 4973) a,
               (SELECT snap_id, instance_number,  elapsed_time_delta, cpu_time_delta,
                       iowait_delta, clwait_delta, apwait_delta, ccwait_delta, executions_delta
                  FROM dba_hist_sqlstat
                 WHERE sql_id = 'd1bmu84pdu6gx') b
         WHERE a.snap_id = b.snap_id(+)
           AND a.instance_number = b.instance_number(+)
           AND 'Y' = 'Y'
           AND a.instance_number = a.instance_number
         GROUP BY a.snap_id)
 ORDER BY
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')

16:53:03 col:4of5.

16:53:03 col:4of5 "00273_sqld360_323688_d1bmu84pdu6gx_4b_151_avg_elapsed_timeexecution_moving_1d_for_cluster.html"
16:53:03 col:4of5 "00274_sqld360_323688_d1bmu84pdu6gx_4b_151_avg_elapsed_timeexecution_moving_1d_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:03 col:4of5 "Execution metrics"
16:53:03 Avg Elapsed Time/Execution (moving 1d) for Instance 1

SELECT snap_id snap_id,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(ROUND(SUM(elapsed_time_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
            /NVL(NULLIF(SUM(execs_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) elapsed_time,
       NVL(ROUND(SUM(cpu_time_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
            /NVL(NULLIF(SUM(execs_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) cpu_time,
       NVL(ROUND(SUM(iowait_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
            /NVL(NULLIF(SUM(execs_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) iowait,
       NVL(ROUND(SUM(clwait_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
            /NVL(NULLIF(SUM(execs_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) clwait,
       NVL(ROUND(SUM(apwait_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
            /NVL(NULLIF(SUM(execs_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) apwait,
       NVL(ROUND(SUM(ccwait_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
            /NVL(NULLIF(SUM(execs_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) ccwait,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT a.snap_id,
               MIN(begin_interval_time) begin_interval_time,
               MIN(end_interval_time) end_interval_time,
               SUM(elapsed_time_delta) elapsed_time_per_snap,
               SUM(cpu_time_delta) cpu_time_per_snap,
               SUM(iowait_delta) iowait_per_snap,
               SUM(clwait_delta) clwait_per_snap,
               SUM(apwait_delta) apwait_per_snap,
               SUM(ccwait_delta) ccwait_per_snap,
               SUM(executions_delta) execs_per_snap
          FROM (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
                  FROM dba_hist_snapshot
                 WHERE snap_id BETWEEN 3484 AND 4973) a,
               (SELECT snap_id, instance_number,  elapsed_time_delta, cpu_time_delta,
                       iowait_delta, clwait_delta, apwait_delta, ccwait_delta, executions_delta
                  FROM dba_hist_sqlstat
                 WHERE sql_id = 'd1bmu84pdu6gx') b
         WHERE a.snap_id = b.snap_id(+)
           AND a.instance_number = b.instance_number(+)
           AND 'Y' = 'Y'
           AND a.instance_number = 1
         GROUP BY a.snap_id)
 ORDER BY
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')

16:53:03 col:4of5.

16:53:03 col:4of5 "00275_sqld360_323688_d1bmu84pdu6gx_4b_152_avg_elapsed_timeexecution_moving_1d_for_instance_1.html"
16:53:03 col:4of5 "00276_sqld360_323688_d1bmu84pdu6gx_4b_152_avg_elapsed_timeexecution_moving_1d_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:03 col:4of5 "Execution metrics"
16:53:03 Avg Elapsed Time/Execution (moving 1d) for Instance 2

SELECT snap_id snap_id,
       TO_CHAR(begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(ROUND(SUM(elapsed_time_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
            /NVL(NULLIF(SUM(execs_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) elapsed_time,
       NVL(ROUND(SUM(cpu_time_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
            /NVL(NULLIF(SUM(execs_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) cpu_time,
       NVL(ROUND(SUM(iowait_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
            /NVL(NULLIF(SUM(execs_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) iowait,
       NVL(ROUND(SUM(clwait_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
            /NVL(NULLIF(SUM(execs_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) clwait,
       NVL(ROUND(SUM(apwait_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
            /NVL(NULLIF(SUM(execs_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) apwait,
       NVL(ROUND(SUM(ccwait_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
            /NVL(NULLIF(SUM(execs_per_snap) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) ccwait,
       0 dummy_07,
       0 dummy_08,
       0 dummy_09,
       0 dummy_10,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT a.snap_id,
               MIN(begin_interval_time) begin_interval_time,
               MIN(end_interval_time) end_interval_time,
               SUM(elapsed_time_delta) elapsed_time_per_snap,
               SUM(cpu_time_delta) cpu_time_per_snap,
               SUM(iowait_delta) iowait_per_snap,
               SUM(clwait_delta) clwait_per_snap,
               SUM(apwait_delta) apwait_per_snap,
               SUM(ccwait_delta) ccwait_per_snap,
               SUM(executions_delta) execs_per_snap
          FROM (SELECT snap_id, instance_number, begin_interval_time, end_interval_time
                  FROM dba_hist_snapshot
                 WHERE snap_id BETWEEN 3484 AND 4973) a,
               (SELECT snap_id, instance_number,  elapsed_time_delta, cpu_time_delta,
                       iowait_delta, clwait_delta, apwait_delta, ccwait_delta, executions_delta
                  FROM dba_hist_sqlstat
                 WHERE sql_id = 'd1bmu84pdu6gx') b
         WHERE a.snap_id = b.snap_id(+)
           AND a.instance_number = b.instance_number(+)
           AND 'Y' = 'Y'
           AND a.instance_number = 2
         GROUP BY a.snap_id)
 ORDER BY
       TO_CHAR(end_interval_time, 'YYYY-MM-DD HH24:MI')

16:53:03 col:4of5.

16:53:03 col:4of5 "00277_sqld360_323688_d1bmu84pdu6gx_4b_153_avg_elapsed_timeexecution_moving_1d_for_instance_2.html"
16:53:03 col:4of5 "00278_sqld360_323688_d1bmu84pdu6gx_4b_153_avg_elapsed_timeexecution_moving_1d_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:03 col:4of5 "Execution metrics"
16:53:03 Avg and Median Elapsed Time/Execution for recent executions for Cluster

SELECT 0 snap_id,
       TO_CHAR(start_time, 'YYYY-MM-DD HH24:MI') begin_time,
       TO_CHAR(start_time, 'YYYY-MM-DD HH24:MI') end_time,
       avg_et,
       med_et,
       percth_et,
       avg_cpu_time,
       med_cpu_time,
       percth_cpu_time,
       avg_db_time,
       med_db_time,
       percth_db_time,
       NVL(AVG(avg_et) OVER (ORDER BY start_time ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),0) avg_et_trend,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT start_time,
               TRUNC(AVG(et),3) avg_et,
               TRUNC(MEDIAN(et),3) med_et,
               TRUNC(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY et),3) percth_et,
               TRUNC(AVG(cpu_time),3) avg_cpu_time,
               TRUNC(MEDIAN(cpu_time),3) med_cpu_time,
               TRUNC(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY cpu_time),3) percth_cpu_time,
               TRUNC(AVG(db_time),3) avg_db_time,
               TRUNC(MEDIAN(db_time),3) med_db_time,
               TRUNC(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY db_time),3) percth_db_time
          FROM (SELECT TO_DATE(SUBSTR(distribution,1,12),'YYYYMMDDHH24MI') start_time,
                       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                        NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                        NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                        NVL(partition_id,0)||'-'||NVL(distribution,'x') uniq_exec,
                                          1+86400*(MAX(timestamp)-MIN(timestamp)) et,
                       SUM(CASE WHEN object_node = 'ON CPU' THEN                    1 ELSE 0 END) cpu_time,
                       SUM(                   1) db_time
                  FROM plan_table
                 WHERE statement_id = 'SQLD360_ASH_DATA_MEM'
                   AND position =  position
                   AND remarks = 'd1bmu84pdu6gx'
                   AND partition_id IS NOT NULL
                   AND 'Y' = 'Y'
                 GROUP BY TO_DATE(SUBSTR(distribution,1,12),'YYYYMMDDHH24MI'),
                          NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                           NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                           NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                           NVL(partition_id,0)||'-'||NVL(distribution,'x'))
          GROUP BY start_time)
 ORDER BY 3

16:53:03 col:4of5.

16:53:03 col:4of5 "00279_sqld360_323688_d1bmu84pdu6gx_4b_154_avg_and_median_elapsed_timeexecution_for_recent_executions_for_cluster.html"
16:53:03 col:4of5 "00280_sqld360_323688_d1bmu84pdu6gx_4b_154_avg_and_median_elapsed_timeexecution_for_recent_executions_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:03 col:4of5 "Execution metrics"
16:53:03 Avg and Median Elapsed Time/Execution for recent executions for Instance 1

SELECT 0 snap_id,
       TO_CHAR(start_time, 'YYYY-MM-DD HH24:MI') begin_time,
       TO_CHAR(start_time, 'YYYY-MM-DD HH24:MI') end_time,
       avg_et,
       med_et,
       percth_et,
       avg_cpu_time,
       med_cpu_time,
       percth_cpu_time,
       avg_db_time,
       med_db_time,
       percth_db_time,
       NVL(AVG(avg_et) OVER (ORDER BY start_time ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),0) avg_et_trend,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT start_time,
               TRUNC(AVG(et),3) avg_et,
               TRUNC(MEDIAN(et),3) med_et,
               TRUNC(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY et),3) percth_et,
               TRUNC(AVG(cpu_time),3) avg_cpu_time,
               TRUNC(MEDIAN(cpu_time),3) med_cpu_time,
               TRUNC(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY cpu_time),3) percth_cpu_time,
               TRUNC(AVG(db_time),3) avg_db_time,
               TRUNC(MEDIAN(db_time),3) med_db_time,
               TRUNC(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY db_time),3) percth_db_time
          FROM (SELECT TO_DATE(SUBSTR(distribution,1,12),'YYYYMMDDHH24MI') start_time,
                       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                        NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                        NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                        NVL(partition_id,0)||'-'||NVL(distribution,'x') uniq_exec,
                                          1+86400*(MAX(timestamp)-MIN(timestamp)) et,
                       SUM(CASE WHEN object_node = 'ON CPU' THEN                    1 ELSE 0 END) cpu_time,
                       SUM(                   1) db_time
                  FROM plan_table
                 WHERE statement_id = 'SQLD360_ASH_DATA_MEM'
                   AND position =  1
                   AND remarks = 'd1bmu84pdu6gx'
                   AND partition_id IS NOT NULL
                   AND 'Y' = 'Y'
                 GROUP BY TO_DATE(SUBSTR(distribution,1,12),'YYYYMMDDHH24MI'),
                          NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                           NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                           NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                           NVL(partition_id,0)||'-'||NVL(distribution,'x'))
          GROUP BY start_time)
 ORDER BY 3

16:53:03 col:4of5.

16:53:04 col:4of5 "00281_sqld360_323688_d1bmu84pdu6gx_4b_155_avg_and_median_elapsed_timeexecution_for_recent_executions_for_instance_1.html"
16:53:04 col:4of5 "00282_sqld360_323688_d1bmu84pdu6gx_4b_155_avg_and_median_elapsed_timeexecution_for_recent_executions_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:04 col:4of5 "Execution metrics"
16:53:04 Avg and Median Elapsed Time/Execution for recent executions for Instance 2

SELECT 0 snap_id,
       TO_CHAR(start_time, 'YYYY-MM-DD HH24:MI') begin_time,
       TO_CHAR(start_time, 'YYYY-MM-DD HH24:MI') end_time,
       avg_et,
       med_et,
       percth_et,
       avg_cpu_time,
       med_cpu_time,
       percth_cpu_time,
       avg_db_time,
       med_db_time,
       percth_db_time,
       NVL(AVG(avg_et) OVER (ORDER BY start_time ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),0) avg_et_trend,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT start_time,
               TRUNC(AVG(et),3) avg_et,
               TRUNC(MEDIAN(et),3) med_et,
               TRUNC(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY et),3) percth_et,
               TRUNC(AVG(cpu_time),3) avg_cpu_time,
               TRUNC(MEDIAN(cpu_time),3) med_cpu_time,
               TRUNC(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY cpu_time),3) percth_cpu_time,
               TRUNC(AVG(db_time),3) avg_db_time,
               TRUNC(MEDIAN(db_time),3) med_db_time,
               TRUNC(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY db_time),3) percth_db_time
          FROM (SELECT TO_DATE(SUBSTR(distribution,1,12),'YYYYMMDDHH24MI') start_time,
                       NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                        NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                        NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                        NVL(partition_id,0)||'-'||NVL(distribution,'x') uniq_exec,
                                          1+86400*(MAX(timestamp)-MIN(timestamp)) et,
                       SUM(CASE WHEN object_node = 'ON CPU' THEN                    1 ELSE 0 END) cpu_time,
                       SUM(                   1) db_time
                  FROM plan_table
                 WHERE statement_id = 'SQLD360_ASH_DATA_MEM'
                   AND position =  2
                   AND remarks = 'd1bmu84pdu6gx'
                   AND partition_id IS NOT NULL
                   AND 'Y' = 'Y'
                 GROUP BY TO_DATE(SUBSTR(distribution,1,12),'YYYYMMDDHH24MI'),
                          NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                           NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                           NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                           NVL(partition_id,0)||'-'||NVL(distribution,'x'))
          GROUP BY start_time)
 ORDER BY 3

16:53:04 col:4of5.

16:53:04 col:4of5 "00283_sqld360_323688_d1bmu84pdu6gx_4b_156_avg_and_median_elapsed_timeexecution_for_recent_executions_for_instance_2.html"
16:53:04 col:4of5 "00284_sqld360_323688_d1bmu84pdu6gx_4b_156_avg_and_median_elapsed_timeexecution_for_recent_executions_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:04 col:4of5 "Execution metrics"
16:53:04 Avg and Median Elapsed Time/Execution for historical executions for Cluster

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(avg_et,0) avg_et,
       NVL(med_et,0) med_et,
       NVL(percth_et,0) percth_et,
       NVL(avg_cpu_time,0) avg_cpu_time,
       NVL(med_cpu_time,0) med_cpu_time,
       NVL(percth_cpu_time,0) percth_cpu_time,
       NVL(avg_db_time,0) avg_db_time,
       NVL(med_db_time,0) med_db_time,
       NVL(percth_db_time,0) percth_db_time,
       NVL(AVG(avg_et) OVER (ORDER BY b.snap_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),0) avg_et_trend,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id,
               MAX(avg_et) avg_et,
               MAX(med_et) med_et,
               MAX(percth_et) percth_et,
               MAX(avg_cpu_time) avg_cpu_time,
               MAX(med_cpu_time) med_cpu_time,
               MAX(percth_cpu_time) percth_cpu_time,
               MAX(avg_db_time) avg_db_time,
               MAX(med_db_time) med_db_time,
               MAX(percth_db_time) percth_db_time
          FROM (SELECT start_time,
                       MIN(start_snap_id) snap_id,
                       TRUNC(AVG(et),3) avg_et,
                       TRUNC(MEDIAN(et),3) med_et,
                       TRUNC(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY et),3) percth_et,
                       TRUNC(AVG(cpu_time),3) avg_cpu_time,
                       TRUNC(MEDIAN(cpu_time),3) med_cpu_time,
                       TRUNC(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY cpu_time),3) percth_cpu_time,
                       TRUNC(AVG(db_time),3) avg_db_time,
                       TRUNC(MEDIAN(db_time),3) med_db_time,
                       TRUNC(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY db_time),3) percth_db_time
                  FROM (SELECT TO_DATE(SUBSTR(distribution,1,12),'YYYYMMDDHH24MI') start_time,
                               NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                                NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                                NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                                NVL(partition_id,0)||'-'||NVL(distribution,'x') uniq_exec,
                               MIN(cardinality) start_snap_id,
                                                 10+86400*(MAX(timestamp)-MIN(timestamp)) et,
                               SUM(CASE WHEN object_node = 'ON CPU' THEN                   10 ELSE 0 END) cpu_time,
                               SUM(                  10) db_time
                          FROM plan_table
                         WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
                           AND partition_id IS NOT NULL
                           AND position =  position
                           AND remarks = 'd1bmu84pdu6gx'
                           AND 'Y' = 'Y'
                         GROUP BY TO_DATE(SUBSTR(distribution,1,12),'YYYYMMDDHH24MI'),
                                  NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                                   NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                                   NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                                   NVL(partition_id,0)||'-'||NVL(distribution,'x'))
                 GROUP BY start_time)
         GROUP BY snap_id) ash,
      dba_hist_snapshot b
 WHERE ash.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:04 col:4of5.

16:53:04 col:4of5 "00285_sqld360_323688_d1bmu84pdu6gx_4b_157_avg_and_median_elapsed_timeexecution_for_historical_executions_for_cluster.html"
16:53:04 col:4of5 "00286_sqld360_323688_d1bmu84pdu6gx_4b_157_avg_and_median_elapsed_timeexecution_for_historical_executions_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:04 col:4of5 "Execution metrics"
16:53:04 Avg and Median Elapsed Time/Execution for historical executions for Instance 1

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(avg_et,0) avg_et,
       NVL(med_et,0) med_et,
       NVL(percth_et,0) percth_et,
       NVL(avg_cpu_time,0) avg_cpu_time,
       NVL(med_cpu_time,0) med_cpu_time,
       NVL(percth_cpu_time,0) percth_cpu_time,
       NVL(avg_db_time,0) avg_db_time,
       NVL(med_db_time,0) med_db_time,
       NVL(percth_db_time,0) percth_db_time,
       NVL(AVG(avg_et) OVER (ORDER BY b.snap_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),0) avg_et_trend,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id,
               MAX(avg_et) avg_et,
               MAX(med_et) med_et,
               MAX(percth_et) percth_et,
               MAX(avg_cpu_time) avg_cpu_time,
               MAX(med_cpu_time) med_cpu_time,
               MAX(percth_cpu_time) percth_cpu_time,
               MAX(avg_db_time) avg_db_time,
               MAX(med_db_time) med_db_time,
               MAX(percth_db_time) percth_db_time
          FROM (SELECT start_time,
                       MIN(start_snap_id) snap_id,
                       TRUNC(AVG(et),3) avg_et,
                       TRUNC(MEDIAN(et),3) med_et,
                       TRUNC(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY et),3) percth_et,
                       TRUNC(AVG(cpu_time),3) avg_cpu_time,
                       TRUNC(MEDIAN(cpu_time),3) med_cpu_time,
                       TRUNC(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY cpu_time),3) percth_cpu_time,
                       TRUNC(AVG(db_time),3) avg_db_time,
                       TRUNC(MEDIAN(db_time),3) med_db_time,
                       TRUNC(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY db_time),3) percth_db_time
                  FROM (SELECT TO_DATE(SUBSTR(distribution,1,12),'YYYYMMDDHH24MI') start_time,
                               NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                                NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                                NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                                NVL(partition_id,0)||'-'||NVL(distribution,'x') uniq_exec,
                               MIN(cardinality) start_snap_id,
                                                 10+86400*(MAX(timestamp)-MIN(timestamp)) et,
                               SUM(CASE WHEN object_node = 'ON CPU' THEN                   10 ELSE 0 END) cpu_time,
                               SUM(                  10) db_time
                          FROM plan_table
                         WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
                           AND partition_id IS NOT NULL
                           AND position =  1
                           AND remarks = 'd1bmu84pdu6gx'
                           AND 'Y' = 'Y'
                         GROUP BY TO_DATE(SUBSTR(distribution,1,12),'YYYYMMDDHH24MI'),
                                  NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                                   NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                                   NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                                   NVL(partition_id,0)||'-'||NVL(distribution,'x'))
                 GROUP BY start_time)
         GROUP BY snap_id) ash,
      dba_hist_snapshot b
 WHERE ash.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:04 col:4of5.

16:53:04 col:4of5 "00287_sqld360_323688_d1bmu84pdu6gx_4b_158_avg_and_median_elapsed_timeexecution_for_historical_executions_for_instance_1.html"
16:53:04 col:4of5 "00288_sqld360_323688_d1bmu84pdu6gx_4b_158_avg_and_median_elapsed_timeexecution_for_historical_executions_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:05 col:4of5 "Execution metrics"
16:53:05 Avg and Median Elapsed Time/Execution for historical executions for Instance 2

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(avg_et,0) avg_et,
       NVL(med_et,0) med_et,
       NVL(percth_et,0) percth_et,
       NVL(avg_cpu_time,0) avg_cpu_time,
       NVL(med_cpu_time,0) med_cpu_time,
       NVL(percth_cpu_time,0) percth_cpu_time,
       NVL(avg_db_time,0) avg_db_time,
       NVL(med_db_time,0) med_db_time,
       NVL(percth_db_time,0) percth_db_time,
       NVL(AVG(avg_et) OVER (ORDER BY b.snap_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW),0) avg_et_trend,
       0 dummy_11,
       0 dummy_12,
       0 dummy_13,
       0 dummy_14,
       0 dummy_15
  FROM (SELECT snap_id,
               MAX(avg_et) avg_et,
               MAX(med_et) med_et,
               MAX(percth_et) percth_et,
               MAX(avg_cpu_time) avg_cpu_time,
               MAX(med_cpu_time) med_cpu_time,
               MAX(percth_cpu_time) percth_cpu_time,
               MAX(avg_db_time) avg_db_time,
               MAX(med_db_time) med_db_time,
               MAX(percth_db_time) percth_db_time
          FROM (SELECT start_time,
                       MIN(start_snap_id) snap_id,
                       TRUNC(AVG(et),3) avg_et,
                       TRUNC(MEDIAN(et),3) med_et,
                       TRUNC(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY et),3) percth_et,
                       TRUNC(AVG(cpu_time),3) avg_cpu_time,
                       TRUNC(MEDIAN(cpu_time),3) med_cpu_time,
                       TRUNC(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY cpu_time),3) percth_cpu_time,
                       TRUNC(AVG(db_time),3) avg_db_time,
                       TRUNC(MEDIAN(db_time),3) med_db_time,
                       TRUNC(PERCENTILE_DISC(0.90) WITHIN GROUP (ORDER BY db_time),3) percth_db_time
                  FROM (SELECT TO_DATE(SUBSTR(distribution,1,12),'YYYYMMDDHH24MI') start_time,
                               NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                                NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                                NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                                NVL(partition_id,0)||'-'||NVL(distribution,'x') uniq_exec,
                               MIN(cardinality) start_snap_id,
                                                 10+86400*(MAX(timestamp)-MIN(timestamp)) et,
                               SUM(CASE WHEN object_node = 'ON CPU' THEN                   10 ELSE 0 END) cpu_time,
                               SUM(                  10) db_time
                          FROM plan_table
                         WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
                           AND partition_id IS NOT NULL
                           AND position =  2
                           AND remarks = 'd1bmu84pdu6gx'
                           AND 'Y' = 'Y'
                         GROUP BY TO_DATE(SUBSTR(distribution,1,12),'YYYYMMDDHH24MI'),
                                  NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                                   NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                                   NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                                   NVL(partition_id,0)||'-'||NVL(distribution,'x'))
                 GROUP BY start_time)
         GROUP BY snap_id) ash,
      dba_hist_snapshot b
 WHERE ash.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:05 col:4of5.

16:53:05 col:4of5 "00289_sqld360_323688_d1bmu84pdu6gx_4b_159_avg_and_median_elapsed_timeexecution_for_historical_executions_for_instance_2.html"
16:53:05 col:4of5 "00290_sqld360_323688_d1bmu84pdu6gx_4b_159_avg_and_median_elapsed_timeexecution_for_historical_executions_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:05 col:4of5 "Execution metrics"
16:53:05 Streak of non-executing SQL for recent executions for Cluster

SELECT inst_id, session_id, session_serial#, COUNT(DISTINCT event) num_events, MIN(event) min_event, MAX(event) max_event, MIN(sample_time) streak_start, MAX(sample_time) streak_end, COUNT(*) streak_num_samples
  FROM (SELECT inst_id, session_id, session_serial#, sample_time, event, nvl(start_of_streak,
               MAX(start_of_streak) OVER (PARTITION BY inst_id, session_id, session_serial# ORDER BY sample_time ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING)) start_of_streak
          FROM (SELECT inst_id, session_id, session_serial#, sample_time, event,
                       CASE WHEN diff_in_sample IS NULL OR diff_in_sample > 1 THEN sample_time ELSE NULL END start_of_streak
                  FROM (SELECT position inst_id, cpu_cost session_id, io_cost session_serial#, timestamp sample_time, object_node event,
                               TRUNC((timestamp-LAG(timestamp) OVER (PARTITION BY position, cpu_cost, io_cost ORDER BY timestamp))*86400) diff_in_sample
                          FROM plan_table
                         WHERE remarks = 'd1bmu84pdu6gx'
                           AND statement_id = 'SQLD360_ASH_DATA_MEM'
                           AND 'Y' = 'Y'
                           AND position =  position
                           AND partition_id IS NULL)))
 GROUP BY inst_id, session_id, session_serial#, start_of_streak
 HAVING COUNT(*) > 1
 ORDER BY start_of_streak, inst_id, session_id, session_serial#

16:53:05 col:4of5.

16:53:05 col:4of5 "00291_sqld360_323688_d1bmu84pdu6gx_4b_160_streak_of_nonexecuting_sql_for_recent_executions_for_cluster.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:05 col:4of5 "Execution metrics"
16:53:05 Streak of non-executing SQL for recent executions for Instance 1

SELECT inst_id, session_id, session_serial#, COUNT(DISTINCT event) num_events, MIN(event) min_event, MAX(event) max_event, MIN(sample_time) streak_start, MAX(sample_time) streak_end, COUNT(*) streak_num_samples
  FROM (SELECT inst_id, session_id, session_serial#, sample_time, event, nvl(start_of_streak,
               MAX(start_of_streak) OVER (PARTITION BY inst_id, session_id, session_serial# ORDER BY sample_time ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING)) start_of_streak
          FROM (SELECT inst_id, session_id, session_serial#, sample_time, event,
                       CASE WHEN diff_in_sample IS NULL OR diff_in_sample > 1 THEN sample_time ELSE NULL END start_of_streak
                  FROM (SELECT position inst_id, cpu_cost session_id, io_cost session_serial#, timestamp sample_time, object_node event,
                               TRUNC((timestamp-LAG(timestamp) OVER (PARTITION BY position, cpu_cost, io_cost ORDER BY timestamp))*86400) diff_in_sample
                          FROM plan_table
                         WHERE remarks = 'd1bmu84pdu6gx'
                           AND statement_id = 'SQLD360_ASH_DATA_MEM'
                           AND 'Y' = 'Y'
                           AND position =  1
                           AND partition_id IS NULL)))
 GROUP BY inst_id, session_id, session_serial#, start_of_streak
 HAVING COUNT(*) > 1
 ORDER BY start_of_streak, inst_id, session_id, session_serial#

16:53:05 col:4of5.

16:53:05 col:4of5 "00292_sqld360_323688_d1bmu84pdu6gx_4b_161_streak_of_nonexecuting_sql_for_recent_executions_for_instance_1.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:05 col:4of5 "Execution metrics"
16:53:05 Streak of non-executing SQL for recent executions for Instance 2

SELECT inst_id, session_id, session_serial#, COUNT(DISTINCT event) num_events, MIN(event) min_event, MAX(event) max_event, MIN(sample_time) streak_start, MAX(sample_time) streak_end, COUNT(*) streak_num_samples
  FROM (SELECT inst_id, session_id, session_serial#, sample_time, event, nvl(start_of_streak,
               MAX(start_of_streak) OVER (PARTITION BY inst_id, session_id, session_serial# ORDER BY sample_time ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING)) start_of_streak
          FROM (SELECT inst_id, session_id, session_serial#, sample_time, event,
                       CASE WHEN diff_in_sample IS NULL OR diff_in_sample > 1 THEN sample_time ELSE NULL END start_of_streak
                  FROM (SELECT position inst_id, cpu_cost session_id, io_cost session_serial#, timestamp sample_time, object_node event,
                               TRUNC((timestamp-LAG(timestamp) OVER (PARTITION BY position, cpu_cost, io_cost ORDER BY timestamp))*86400) diff_in_sample
                          FROM plan_table
                         WHERE remarks = 'd1bmu84pdu6gx'
                           AND statement_id = 'SQLD360_ASH_DATA_MEM'
                           AND 'Y' = 'Y'
                           AND position =  2
                           AND partition_id IS NULL)))
 GROUP BY inst_id, session_id, session_serial#, start_of_streak
 HAVING COUNT(*) > 1
 ORDER BY start_of_streak, inst_id, session_id, session_serial#

16:53:05 col:4of5.

16:53:05 col:4of5 "00293_sqld360_323688_d1bmu84pdu6gx_4b_162_streak_of_nonexecuting_sql_for_recent_executions_for_instance_2.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:05 col:4of5 "Execution metrics"
16:53:05 Streak of non-executing SQL for historical executions for Cluster

SELECT inst_id, session_id, session_serial#, COUNT(DISTINCT event) num_events, MIN(event) min_event, MAX(event) max_event, MIN(sample_time) streak_start, MAX(sample_time) streak_end, COUNT(*) streak_num_samples
  FROM (SELECT inst_id, session_id, session_serial#, sample_time, event, nvl(start_of_streak,
               MAX(start_of_streak) OVER (PARTITION BY inst_id, session_id, session_serial# ORDER BY sample_time ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING)) start_of_streak
          FROM (SELECT inst_id, session_id, session_serial#, sample_time, event,
                       CASE WHEN diff_in_sample IS NULL OR diff_in_sample >                   10 THEN sample_time ELSE NULL END start_of_streak
                  FROM (SELECT position inst_id, cpu_cost session_id, io_cost session_serial#, timestamp sample_time, object_node event,
                               TRUNC((timestamp-LAG(timestamp) OVER (PARTITION BY position, cpu_cost, io_cost ORDER BY timestamp))*86400) diff_in_sample
                          FROM plan_table
                         WHERE remarks = 'd1bmu84pdu6gx'
                           AND statement_id = 'SQLD360_ASH_DATA_HIST'
                           AND 'Y' = 'Y'
                           AND position =  position
                           AND partition_id IS NULL)))
 GROUP BY inst_id, session_id, session_serial#, start_of_streak
 HAVING COUNT(*) > 1
 ORDER BY start_of_streak, inst_id, session_id, session_serial#

16:53:05 col:4of5.

16:53:05 col:4of5 "00294_sqld360_323688_d1bmu84pdu6gx_4b_163_streak_of_nonexecuting_sql_for_historical_executions_for_cluster.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:05 col:4of5 "Execution metrics"
16:53:05 Streak of non-executing SQL for historical executions for Instance 1

SELECT inst_id, session_id, session_serial#, COUNT(DISTINCT event) num_events, MIN(event) min_event, MAX(event) max_event, MIN(sample_time) streak_start, MAX(sample_time) streak_end, COUNT(*) streak_num_samples
  FROM (SELECT inst_id, session_id, session_serial#, sample_time, event, nvl(start_of_streak,
               MAX(start_of_streak) OVER (PARTITION BY inst_id, session_id, session_serial# ORDER BY sample_time ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING)) start_of_streak
          FROM (SELECT inst_id, session_id, session_serial#, sample_time, event,
                       CASE WHEN diff_in_sample IS NULL OR diff_in_sample >                   10 THEN sample_time ELSE NULL END start_of_streak
                  FROM (SELECT position inst_id, cpu_cost session_id, io_cost session_serial#, timestamp sample_time, object_node event,
                               TRUNC((timestamp-LAG(timestamp) OVER (PARTITION BY position, cpu_cost, io_cost ORDER BY timestamp))*86400) diff_in_sample
                          FROM plan_table
                         WHERE remarks = 'd1bmu84pdu6gx'
                           AND statement_id = 'SQLD360_ASH_DATA_HIST'
                           AND 'Y' = 'Y'
                           AND position =  1
                           AND partition_id IS NULL)))
 GROUP BY inst_id, session_id, session_serial#, start_of_streak
 HAVING COUNT(*) > 1
 ORDER BY start_of_streak, inst_id, session_id, session_serial#

16:53:05 col:4of5.

16:53:05 col:4of5 "00295_sqld360_323688_d1bmu84pdu6gx_4b_164_streak_of_nonexecuting_sql_for_historical_executions_for_instance_1.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:05 col:4of5 "Execution metrics"
16:53:05 Streak of non-executing SQL for historical executions for Instance 2

SELECT inst_id, session_id, session_serial#, COUNT(DISTINCT event) num_events, MIN(event) min_event, MAX(event) max_event, MIN(sample_time) streak_start, MAX(sample_time) streak_end, COUNT(*) streak_num_samples
  FROM (SELECT inst_id, session_id, session_serial#, sample_time, event, nvl(start_of_streak,
               MAX(start_of_streak) OVER (PARTITION BY inst_id, session_id, session_serial# ORDER BY sample_time ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING)) start_of_streak
          FROM (SELECT inst_id, session_id, session_serial#, sample_time, event,
                       CASE WHEN diff_in_sample IS NULL OR diff_in_sample >                   10 THEN sample_time ELSE NULL END start_of_streak
                  FROM (SELECT position inst_id, cpu_cost session_id, io_cost session_serial#, timestamp sample_time, object_node event,
                               TRUNC((timestamp-LAG(timestamp) OVER (PARTITION BY position, cpu_cost, io_cost ORDER BY timestamp))*86400) diff_in_sample
                          FROM plan_table
                         WHERE remarks = 'd1bmu84pdu6gx'
                           AND statement_id = 'SQLD360_ASH_DATA_HIST'
                           AND 'Y' = 'Y'
                           AND position =  2
                           AND partition_id IS NULL)))
 GROUP BY inst_id, session_id, session_serial#, start_of_streak
 HAVING COUNT(*) > 1
 ORDER BY start_of_streak, inst_id, session_id, session_serial#

16:53:05 col:4of5.

16:53:05 col:4of5 "00296_sqld360_323688_d1bmu84pdu6gx_4b_165_streak_of_nonexecuting_sql_for_historical_executions_for_instance_2.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:06 col:4of5 "Execution metrics per PHV"
16:53:06 Total number of Executions per PHV for Cluster

SELECT phv,
       num_execs,
       NULL style,
       phv||' - Number of execs: '||num_execs||' ('||TRUNC(100*RATIO_TO_REPORT(num_execs) OVER (),2)||'%)' tooltip
  FROM (SELECT bytes phv,
               COUNT(DISTINCT NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                              NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                              NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                              NVL(partition_id,0)||'-'||NVL(distribution,'x')
                    ) num_execs
          FROM plan_table
         WHERE remarks = 'd1bmu84pdu6gx'
           AND statement_id LIKE 'SQLD360_ASH_DATA%'
           AND position =  position
           AND 'Y' = 'Y'
         GROUP BY bytes)
 ORDER BY num_execs DESC

16:53:06 col:4of5.

16:53:06 col:4of5 "00297_sqld360_323688_d1bmu84pdu6gx_4c_166_total_number_of_executions_per_phv_for_cluster.html"
16:53:06 col:4of5 "00298_sqld360_323688_d1bmu84pdu6gx_4c_166_total_number_of_executions_per_phv_for_cluster_bar_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:06 col:4of5 "Execution metrics per PHV"
16:53:06 Total number of Executions per PHV for Instance 1

SELECT phv,
       num_execs,
       NULL style,
       phv||' - Number of execs: '||num_execs||' ('||TRUNC(100*RATIO_TO_REPORT(num_execs) OVER (),2)||'%)' tooltip
  FROM (SELECT bytes phv,
               COUNT(DISTINCT NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                              NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                              NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                              NVL(partition_id,0)||'-'||NVL(distribution,'x')
                    ) num_execs
          FROM plan_table
         WHERE remarks = 'd1bmu84pdu6gx'
           AND statement_id LIKE 'SQLD360_ASH_DATA%'
           AND position =  1
           AND 'Y' = 'Y'
         GROUP BY bytes)
 ORDER BY num_execs DESC

16:53:06 col:4of5.

16:53:06 col:4of5 "00299_sqld360_323688_d1bmu84pdu6gx_4c_167_total_number_of_executions_per_phv_for_instance_1.html"
16:53:06 col:4of5 "00300_sqld360_323688_d1bmu84pdu6gx_4c_167_total_number_of_executions_per_phv_for_instance_1_bar_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:06 col:4of5 "Execution metrics per PHV"
16:53:06 Total number of Executions per PHV for Instance 2

SELECT phv,
       num_execs,
       NULL style,
       phv||' - Number of execs: '||num_execs||' ('||TRUNC(100*RATIO_TO_REPORT(num_execs) OVER (),2)||'%)' tooltip
  FROM (SELECT bytes phv,
               COUNT(DISTINCT NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                              NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                              NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                              NVL(partition_id,0)||'-'||NVL(distribution,'x')
                    ) num_execs
          FROM plan_table
         WHERE remarks = 'd1bmu84pdu6gx'
           AND statement_id LIKE 'SQLD360_ASH_DATA%'
           AND position =  2
           AND 'Y' = 'Y'
         GROUP BY bytes)
 ORDER BY num_execs DESC

16:53:06 col:4of5.

16:53:06 col:4of5 "00301_sqld360_323688_d1bmu84pdu6gx_4c_168_total_number_of_executions_per_phv_for_instance_2.html"
16:53:06 col:4of5 "00302_sqld360_323688_d1bmu84pdu6gx_4c_168_total_number_of_executions_per_phv_for_instance_2_bar_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:06 col:4of5 "Execution metrics per PHV"
16:53:06 Number of execution per PHV from AWR for Cluster

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(phv1 ,0) phv1_0  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT snap_id,
               MAX(CASE WHEN phv =                    0 THEN execs ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv15
          FROM (SELECT snap_id,
                       plan_hash_value phv,
                       SUM(executions_delta) execs
                  FROM dba_hist_sqlstat
                 WHERE snap_id BETWEEN 3484 AND 4973
                   AND sql_id = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                   AND instance_number = instance_number
                   AND plan_hash_value IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1)
                 GROUP BY snap_id, plan_hash_value)
          GROUP BY snap_id) awr,
         dba_hist_snapshot b
 WHERE awr.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:06 col:4of5.

16:53:06 col:4of5 "00303_sqld360_323688_d1bmu84pdu6gx_4c_169_number_of_execution_per_phv_from_awr_for_cluster.html"
16:53:06 col:4of5 "00304_sqld360_323688_d1bmu84pdu6gx_4c_169_number_of_execution_per_phv_from_awr_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:06 col:4of5 "Execution metrics per PHV"
16:53:06 Number of execution per PHV from AWR for Instance 1

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(phv1 ,0) phv1_0  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT snap_id,
               MAX(CASE WHEN phv =                    0 THEN execs ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv15
          FROM (SELECT snap_id,
                       plan_hash_value phv,
                       SUM(executions_delta) execs
                  FROM dba_hist_sqlstat
                 WHERE snap_id BETWEEN 3484 AND 4973
                   AND sql_id = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                   AND instance_number = 1
                   AND plan_hash_value IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1)
                 GROUP BY snap_id, plan_hash_value)
          GROUP BY snap_id) awr,
         dba_hist_snapshot b
 WHERE awr.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:06 col:4of5.

16:53:06 col:4of5 "00305_sqld360_323688_d1bmu84pdu6gx_4c_170_number_of_execution_per_phv_from_awr_for_instance_1.html"
16:53:07 col:4of5 "00306_sqld360_323688_d1bmu84pdu6gx_4c_170_number_of_execution_per_phv_from_awr_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:07 col:4of5 "Execution metrics per PHV"
16:53:07 Number of execution per PHV from AWR for Instance 2

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(phv1 ,0) phv1_0  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT snap_id,
               MAX(CASE WHEN phv =                    0 THEN execs ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN execs ELSE NULL END) phv15
          FROM (SELECT snap_id,
                       plan_hash_value phv,
                       SUM(executions_delta) execs
                  FROM dba_hist_sqlstat
                 WHERE snap_id BETWEEN 3484 AND 4973
                   AND sql_id = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                   AND instance_number = 2
                   AND plan_hash_value IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1)
                 GROUP BY snap_id, plan_hash_value)
          GROUP BY snap_id) awr,
         dba_hist_snapshot b
 WHERE awr.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:07 col:4of5.

16:53:07 col:4of5 "00307_sqld360_323688_d1bmu84pdu6gx_4c_171_number_of_execution_per_phv_from_awr_for_instance_2.html"
16:53:07 col:4of5 "00308_sqld360_323688_d1bmu84pdu6gx_4c_171_number_of_execution_per_phv_from_awr_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:07 col:4of5 "Execution metrics per PHV"
16:53:07 Total Elapsed Time for recent executions per PHV for Cluster

SELECT phv,
       num_samples,
       NULL style,
       --TRUNC(100*RATIO_TO_REPORT(num_samples) OVER (),2) percent,
       phv||' - 1s-samples: '||num_samples||' ('||TRUNC(100*RATIO_TO_REPORT(num_samples) OVER (),2)||'% of DB Time)' tooltip
  FROM (SELECT bytes phv,
               COUNT(*) num_samples
          FROM plan_table
         WHERE remarks = 'd1bmu84pdu6gx'
           AND statement_id = 'SQLD360_ASH_DATA_MEM'
           AND position =  position
           AND 'Y' = 'Y'
         GROUP BY bytes)
 ORDER BY num_samples DESC

16:53:07 col:4of5.

16:53:07 col:4of5 "00309_sqld360_323688_d1bmu84pdu6gx_4c_172_total_elapsed_time_for_recent_executions_per_phv_for_cluster.html"
16:53:07 col:4of5 "00310_sqld360_323688_d1bmu84pdu6gx_4c_172_total_elapsed_time_for_recent_executions_per_phv_for_cluster_bar_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:07 col:4of5 "Execution metrics per PHV"
16:53:07 Total Elapsed Time for recent executions per PHV for Instance 1

SELECT phv,
       num_samples,
       NULL style,
       --TRUNC(100*RATIO_TO_REPORT(num_samples) OVER (),2) percent,
       phv||' - 1s-samples: '||num_samples||' ('||TRUNC(100*RATIO_TO_REPORT(num_samples) OVER (),2)||'% of DB Time)' tooltip
  FROM (SELECT bytes phv,
               COUNT(*) num_samples
          FROM plan_table
         WHERE remarks = 'd1bmu84pdu6gx'
           AND statement_id = 'SQLD360_ASH_DATA_MEM'
           AND position =  1
           AND 'Y' = 'Y'
         GROUP BY bytes)
 ORDER BY num_samples DESC

16:53:07 col:4of5.

16:53:07 col:4of5 "00311_sqld360_323688_d1bmu84pdu6gx_4c_173_total_elapsed_time_for_recent_executions_per_phv_for_instance_1.html"
16:53:07 col:4of5 "00312_sqld360_323688_d1bmu84pdu6gx_4c_173_total_elapsed_time_for_recent_executions_per_phv_for_instance_1_bar_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:07 col:4of5 "Execution metrics per PHV"
16:53:07 Total Elapsed Time for recent executions per PHV for Instance 2

SELECT phv,
       num_samples,
       NULL style,
       --TRUNC(100*RATIO_TO_REPORT(num_samples) OVER (),2) percent,
       phv||' - 1s-samples: '||num_samples||' ('||TRUNC(100*RATIO_TO_REPORT(num_samples) OVER (),2)||'% of DB Time)' tooltip
  FROM (SELECT bytes phv,
               COUNT(*) num_samples
          FROM plan_table
         WHERE remarks = 'd1bmu84pdu6gx'
           AND statement_id = 'SQLD360_ASH_DATA_MEM'
           AND position =  2
           AND 'Y' = 'Y'
         GROUP BY bytes)
 ORDER BY num_samples DESC

16:53:07 col:4of5.

16:53:07 col:4of5 "00313_sqld360_323688_d1bmu84pdu6gx_4c_174_total_elapsed_time_for_recent_executions_per_phv_for_instance_2.html"
16:53:07 col:4of5 "00314_sqld360_323688_d1bmu84pdu6gx_4c_174_total_elapsed_time_for_recent_executions_per_phv_for_instance_2_bar_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:07 col:4of5 "Execution metrics per PHV"
16:53:07 Total Elapsed Time for historical executions per PHV for Cluster

SELECT phv,
       num_samples,
       NULL style,
       phv||' - 10s-samples: '||num_samples||' ('||TRUNC(100*RATIO_TO_REPORT(num_samples) OVER (),2)||'% of DB Time)' tooltip
       --TRUNC(100*RATIO_TO_REPORT(num_samples) OVER (),2) percent,
  FROM (SELECT bytes phv,
               SUM(                  10) num_samples
          FROM plan_table
         WHERE remarks = 'd1bmu84pdu6gx'
           AND statement_id = 'SQLD360_ASH_DATA_HIST'
           AND position =  position
           AND 'Y' = 'Y'
         GROUP BY bytes)
 ORDER BY num_samples DESC

16:53:07 col:4of5.

16:53:07 col:4of5 "00315_sqld360_323688_d1bmu84pdu6gx_4c_175_total_elapsed_time_for_historical_executions_per_phv_for_cluster.html"
16:53:07 col:4of5 "00316_sqld360_323688_d1bmu84pdu6gx_4c_175_total_elapsed_time_for_historical_executions_per_phv_for_cluster_bar_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:08 col:4of5 "Execution metrics per PHV"
16:53:08 Total Elapsed Time for historical executions per PHV for Instance 1

SELECT phv,
       num_samples,
       NULL style,
       phv||' - 10s-samples: '||num_samples||' ('||TRUNC(100*RATIO_TO_REPORT(num_samples) OVER (),2)||'% of DB Time)' tooltip
       --TRUNC(100*RATIO_TO_REPORT(num_samples) OVER (),2) percent,
  FROM (SELECT bytes phv,
               SUM(                  10) num_samples
          FROM plan_table
         WHERE remarks = 'd1bmu84pdu6gx'
           AND statement_id = 'SQLD360_ASH_DATA_HIST'
           AND position =  1
           AND 'Y' = 'Y'
         GROUP BY bytes)
 ORDER BY num_samples DESC

16:53:08 col:4of5.

16:53:08 col:4of5 "00317_sqld360_323688_d1bmu84pdu6gx_4c_176_total_elapsed_time_for_historical_executions_per_phv_for_instance_1.html"
16:53:08 col:4of5 "00318_sqld360_323688_d1bmu84pdu6gx_4c_176_total_elapsed_time_for_historical_executions_per_phv_for_instance_1_bar_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:08 col:4of5 "Execution metrics per PHV"
16:53:08 Total Elapsed Time for historical executions per PHV for Instance 2

SELECT phv,
       num_samples,
       NULL style,
       phv||' - 10s-samples: '||num_samples||' ('||TRUNC(100*RATIO_TO_REPORT(num_samples) OVER (),2)||'% of DB Time)' tooltip
       --TRUNC(100*RATIO_TO_REPORT(num_samples) OVER (),2) percent,
  FROM (SELECT bytes phv,
               SUM(                  10) num_samples
          FROM plan_table
         WHERE remarks = 'd1bmu84pdu6gx'
           AND statement_id = 'SQLD360_ASH_DATA_HIST'
           AND position =  2
           AND 'Y' = 'Y'
         GROUP BY bytes)
 ORDER BY num_samples DESC

16:53:08 col:4of5.

16:53:08 col:4of5 "00319_sqld360_323688_d1bmu84pdu6gx_4c_177_total_elapsed_time_for_historical_executions_per_phv_for_instance_2.html"
16:53:08 col:4of5 "00320_sqld360_323688_d1bmu84pdu6gx_4c_177_total_elapsed_time_for_historical_executions_per_phv_for_instance_2_bar_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:08 col:4of5 "Execution metrics per PHV"
16:53:08 Total Elapsed Time per PHV from AWR for Cluster

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(phv1 ,0) phv1_0  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT snap_id,
               MAX(CASE WHEN phv =                    0 THEN elapsed_time ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv15
          FROM (SELECT snap_id,
                       plan_hash_value phv,
                       ROUND(SUM(elapsed_time_delta)/1e6,6) elapsed_time
                  FROM dba_hist_sqlstat
                 WHERE snap_id BETWEEN 3484 AND 4973
                   AND sql_id = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                   AND instance_number = instance_number
                   AND plan_hash_value IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1)
                 GROUP BY snap_id, plan_hash_value)
          GROUP BY snap_id) awr,
         dba_hist_snapshot b
 WHERE awr.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:08 col:4of5.

16:53:08 col:4of5 "00321_sqld360_323688_d1bmu84pdu6gx_4c_178_total_elapsed_time_per_phv_from_awr_for_cluster.html"
16:53:08 col:4of5 "00322_sqld360_323688_d1bmu84pdu6gx_4c_178_total_elapsed_time_per_phv_from_awr_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:08 col:4of5 "Execution metrics per PHV"
16:53:08 Total Elapsed Time per PHV from AWR for Instance 1

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(phv1 ,0) phv1_0  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT snap_id,
               MAX(CASE WHEN phv =                    0 THEN elapsed_time ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv15
          FROM (SELECT snap_id,
                       plan_hash_value phv,
                       ROUND(SUM(elapsed_time_delta)/1e6,6) elapsed_time
                  FROM dba_hist_sqlstat
                 WHERE snap_id BETWEEN 3484 AND 4973
                   AND sql_id = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                   AND instance_number = 1
                   AND plan_hash_value IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1)
                 GROUP BY snap_id, plan_hash_value)
          GROUP BY snap_id) awr,
         dba_hist_snapshot b
 WHERE awr.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:08 col:4of5.

16:53:08 col:4of5 "00323_sqld360_323688_d1bmu84pdu6gx_4c_179_total_elapsed_time_per_phv_from_awr_for_instance_1.html"
16:53:08 col:4of5 "00324_sqld360_323688_d1bmu84pdu6gx_4c_179_total_elapsed_time_per_phv_from_awr_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:09 col:4of5 "Execution metrics per PHV"
16:53:09 Total Elapsed Time per PHV from AWR for Instance 2

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(phv1 ,0) phv1_0  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT snap_id,
               MAX(CASE WHEN phv =                    0 THEN elapsed_time ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time ELSE NULL END) phv15
          FROM (SELECT snap_id,
                       plan_hash_value phv,
                       ROUND(SUM(elapsed_time_delta)/1e6,6) elapsed_time
                  FROM dba_hist_sqlstat
                 WHERE snap_id BETWEEN 3484 AND 4973
                   AND sql_id = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                   AND instance_number = 2
                   AND plan_hash_value IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1)
                 GROUP BY snap_id, plan_hash_value)
          GROUP BY snap_id) awr,
         dba_hist_snapshot b
 WHERE awr.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:09 col:4of5.

16:53:09 col:4of5 "00325_sqld360_323688_d1bmu84pdu6gx_4c_180_total_elapsed_time_per_phv_from_awr_for_instance_2.html"
16:53:09 col:4of5 "00326_sqld360_323688_d1bmu84pdu6gx_4c_180_total_elapsed_time_per_phv_from_awr_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:09 col:4of5 "Execution metrics per PHV"
16:53:09 Avg Elapsed Time/Execution per PHV for recent executions for Cluster

SELECT 0 snap_id,
       TO_CHAR(start_time, 'YYYY-MM-DD HH24:MI') begin_time,
       TO_CHAR(start_time, 'YYYY-MM-DD HH24:MI') end_time,
       NVL(phv1 ,0) phv1_  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT TO_DATE(start_time,'YYYYMMDDHH24MI') start_time,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv15
          FROM (SELECT start_time,
                       phv,
                       AVG(et) avg_et_per_exec
                  FROM (SELECT SUBSTR(distribution,1,12) start_time,
                               bytes phv,
                                                  1+86400*(MAX(timestamp)-MIN(timestamp)) et,
                               NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                                NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                                NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                                NVL(partition_id,0)||'-'||NVL(distribution,'x') uniq_exec
                          FROM plan_table
                         WHERE statement_id = 'SQLD360_ASH_DATA_MEM'
                           AND position =  position
                           AND remarks = 'd1bmu84pdu6gx'
                           AND 'Y' = 'Y'
                           AND partition_id IS NOT NULL
                           AND distribution IS NOT NULL
                           AND bytes IN (                  -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                          -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                          -1,                  -1,                  -1)
                         GROUP BY SUBSTR(distribution,1,12), bytes,
                                  NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                                   NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                                   NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                                   NVL(partition_id,0)||'-'||NVL(distribution,'x'))
                 GROUP BY start_time, phv)
         GROUP BY TO_DATE(start_time,'YYYYMMDDHH24MI'))
 ORDER BY 3

16:53:09 col:4of5.

16:53:09 col:4of5 "00327_sqld360_323688_d1bmu84pdu6gx_4c_181_avg_elapsed_timeexecution_per_phv_for_recent_executions_for_cluster.html"
16:53:09 col:4of5 "00328_sqld360_323688_d1bmu84pdu6gx_4c_181_avg_elapsed_timeexecution_per_phv_for_recent_executions_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:09 col:4of5 "Execution metrics per PHV"
16:53:09 Avg Elapsed Time/Execution per PHV for recent executions for Instance 1

SELECT 0 snap_id,
       TO_CHAR(start_time, 'YYYY-MM-DD HH24:MI') begin_time,
       TO_CHAR(start_time, 'YYYY-MM-DD HH24:MI') end_time,
       NVL(phv1 ,0) phv1_  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT TO_DATE(start_time,'YYYYMMDDHH24MI') start_time,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv15
          FROM (SELECT start_time,
                       phv,
                       AVG(et) avg_et_per_exec
                  FROM (SELECT SUBSTR(distribution,1,12) start_time,
                               bytes phv,
                                                  1+86400*(MAX(timestamp)-MIN(timestamp)) et,
                               NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                                NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                                NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                                NVL(partition_id,0)||'-'||NVL(distribution,'x') uniq_exec
                          FROM plan_table
                         WHERE statement_id = 'SQLD360_ASH_DATA_MEM'
                           AND position =  1
                           AND remarks = 'd1bmu84pdu6gx'
                           AND 'Y' = 'Y'
                           AND partition_id IS NOT NULL
                           AND distribution IS NOT NULL
                           AND bytes IN (                  -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                          -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                          -1,                  -1,                  -1)
                         GROUP BY SUBSTR(distribution,1,12), bytes,
                                  NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                                   NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                                   NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                                   NVL(partition_id,0)||'-'||NVL(distribution,'x'))
                 GROUP BY start_time, phv)
         GROUP BY TO_DATE(start_time,'YYYYMMDDHH24MI'))
 ORDER BY 3

16:53:09 col:4of5.

16:53:09 col:4of5 "00329_sqld360_323688_d1bmu84pdu6gx_4c_182_avg_elapsed_timeexecution_per_phv_for_recent_executions_for_instance_1.html"
16:53:09 col:4of5 "00330_sqld360_323688_d1bmu84pdu6gx_4c_182_avg_elapsed_timeexecution_per_phv_for_recent_executions_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:09 col:4of5 "Execution metrics per PHV"
16:53:09 Avg Elapsed Time/Execution per PHV for recent executions for Instance 2

SELECT 0 snap_id,
       TO_CHAR(start_time, 'YYYY-MM-DD HH24:MI') begin_time,
       TO_CHAR(start_time, 'YYYY-MM-DD HH24:MI') end_time,
       NVL(phv1 ,0) phv1_  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT TO_DATE(start_time,'YYYYMMDDHH24MI') start_time,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv15
          FROM (SELECT start_time,
                       phv,
                       AVG(et) avg_et_per_exec
                  FROM (SELECT SUBSTR(distribution,1,12) start_time,
                               bytes phv,
                                                  1+86400*(MAX(timestamp)-MIN(timestamp)) et,
                               NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                                NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                                NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                                NVL(partition_id,0)||'-'||NVL(distribution,'x') uniq_exec
                          FROM plan_table
                         WHERE statement_id = 'SQLD360_ASH_DATA_MEM'
                           AND position =  2
                           AND remarks = 'd1bmu84pdu6gx'
                           AND 'Y' = 'Y'
                           AND partition_id IS NOT NULL
                           AND distribution IS NOT NULL
                           AND bytes IN (                  -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                          -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                          -1,                  -1,                  -1)
                         GROUP BY SUBSTR(distribution,1,12), bytes,
                                  NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                                   NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                                   NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                                   NVL(partition_id,0)||'-'||NVL(distribution,'x'))
                 GROUP BY start_time, phv)
         GROUP BY TO_DATE(start_time,'YYYYMMDDHH24MI'))
 ORDER BY 3

16:53:09 col:4of5.

16:53:09 col:4of5 "00331_sqld360_323688_d1bmu84pdu6gx_4c_183_avg_elapsed_timeexecution_per_phv_for_recent_executions_for_instance_2.html"
16:53:09 col:4of5 "00332_sqld360_323688_d1bmu84pdu6gx_4c_183_avg_elapsed_timeexecution_per_phv_for_recent_executions_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:09 col:4of5 "Execution metrics per PHV"
16:53:09 Avg Elapsed Time/Execution per PHV for historical executions for Cluster

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(phv1 ,0) phv1_0  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT TO_DATE(start_time,'YYYYMMDDHH24') start_time,
               MIN(starting_snap_id) snap_id,
               MAX(CASE WHEN phv =                    0 THEN avg_et_per_exec ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv15
          FROM (SELECT start_time,
                       phv,
                       starting_snap_id,
                       AVG(et) avg_et_per_exec
                  FROM (SELECT SUBSTR(distribution,1,10) start_time,
                               /*cost*/ bytes phv,
                               MIN(cardinality) starting_snap_id,
                                                 10+86400*(MAX(timestamp)-MIN(timestamp)) et,
                               NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                                NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                                NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                                NVL(partition_id,0)||'-'||NVL(distribution,'x') uniq_exec
                          FROM plan_table
                         WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
                           AND position =  position
                           AND remarks = 'd1bmu84pdu6gx'
                           AND 'Y' = 'Y'
                           AND partition_id IS NOT NULL
                           AND distribution IS NOT NULL
                           AND /*cost*/ bytes IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                          -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                          -1,                  -1,                  -1)
                         GROUP BY SUBSTR(distribution,1,10), /*cost*/ bytes,
                                  NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                                   NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                                   NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                                   NVL(partition_id,0)||'-'||NVL(distribution,'x'))
                 GROUP BY start_time, phv, starting_snap_id)
         GROUP BY TO_DATE(start_time,'YYYYMMDDHH24')) ash,
       dba_hist_snapshot b
 WHERE ash.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:09 col:4of5.

16:53:09 col:4of5 "00333_sqld360_323688_d1bmu84pdu6gx_4c_184_avg_elapsed_timeexecution_per_phv_for_historical_executions_for_cluster.html"
16:53:10 col:4of5 "00334_sqld360_323688_d1bmu84pdu6gx_4c_184_avg_elapsed_timeexecution_per_phv_for_historical_executions_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:10 col:4of5 "Execution metrics per PHV"
16:53:10 Avg Elapsed Time/Execution per PHV for historical executions for Instance 1

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(phv1 ,0) phv1_0  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT TO_DATE(start_time,'YYYYMMDDHH24') start_time,
               MIN(starting_snap_id) snap_id,
               MAX(CASE WHEN phv =                    0 THEN avg_et_per_exec ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv15
          FROM (SELECT start_time,
                       phv,
                       starting_snap_id,
                       AVG(et) avg_et_per_exec
                  FROM (SELECT SUBSTR(distribution,1,10) start_time,
                               /*cost*/ bytes phv,
                               MIN(cardinality) starting_snap_id,
                                                 10+86400*(MAX(timestamp)-MIN(timestamp)) et,
                               NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                                NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                                NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                                NVL(partition_id,0)||'-'||NVL(distribution,'x') uniq_exec
                          FROM plan_table
                         WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
                           AND position =  1
                           AND remarks = 'd1bmu84pdu6gx'
                           AND 'Y' = 'Y'
                           AND partition_id IS NOT NULL
                           AND distribution IS NOT NULL
                           AND /*cost*/ bytes IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                          -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                          -1,                  -1,                  -1)
                         GROUP BY SUBSTR(distribution,1,10), /*cost*/ bytes,
                                  NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                                   NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                                   NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                                   NVL(partition_id,0)||'-'||NVL(distribution,'x'))
                 GROUP BY start_time, phv, starting_snap_id)
         GROUP BY TO_DATE(start_time,'YYYYMMDDHH24')) ash,
       dba_hist_snapshot b
 WHERE ash.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:10 col:4of5.

16:53:10 col:4of5 "00335_sqld360_323688_d1bmu84pdu6gx_4c_185_avg_elapsed_timeexecution_per_phv_for_historical_executions_for_instance_1.html"
16:53:10 col:4of5 "00336_sqld360_323688_d1bmu84pdu6gx_4c_185_avg_elapsed_timeexecution_per_phv_for_historical_executions_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:10 col:4of5 "Execution metrics per PHV"
16:53:10 Avg Elapsed Time/Execution per PHV for historical executions for Instance 2

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(phv1 ,0) phv1_0  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT TO_DATE(start_time,'YYYYMMDDHH24') start_time,
               MIN(starting_snap_id) snap_id,
               MAX(CASE WHEN phv =                    0 THEN avg_et_per_exec ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv15
          FROM (SELECT start_time,
                       phv,
                       starting_snap_id,
                       AVG(et) avg_et_per_exec
                  FROM (SELECT SUBSTR(distribution,1,10) start_time,
                               /*cost*/ bytes phv,
                               MIN(cardinality) starting_snap_id,
                                                 10+86400*(MAX(timestamp)-MIN(timestamp)) et,
                               NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                                NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                                NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                                NVL(partition_id,0)||'-'||NVL(distribution,'x') uniq_exec
                          FROM plan_table
                         WHERE statement_id = 'SQLD360_ASH_DATA_HIST'
                           AND position =  2
                           AND remarks = 'd1bmu84pdu6gx'
                           AND 'Y' = 'Y'
                           AND partition_id IS NOT NULL
                           AND distribution IS NOT NULL
                           AND /*cost*/ bytes IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                          -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                          -1,                  -1,                  -1)
                         GROUP BY SUBSTR(distribution,1,10), /*cost*/ bytes,
                                  NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,3)+1,INSTR(partition_stop,',',1,4)-INSTR(partition_stop,',',1,3)-1)),position)||'-'||
                                   NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,4)+1,INSTR(partition_stop,',',1,5)-INSTR(partition_stop,',',1,4)-1)),cpu_cost)||'-'||
                                   NVL(TO_NUMBER(SUBSTR(partition_stop,INSTR(partition_stop,',',1,5)+1,INSTR(partition_stop,',',1,6)-INSTR(partition_stop,',',1,5)-1)),io_cost)||'-'||
                                   NVL(partition_id,0)||'-'||NVL(distribution,'x'))
                 GROUP BY start_time, phv, starting_snap_id)
         GROUP BY TO_DATE(start_time,'YYYYMMDDHH24')) ash,
       dba_hist_snapshot b
 WHERE ash.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:10 col:4of5.

16:53:10 col:4of5 "00337_sqld360_323688_d1bmu84pdu6gx_4c_186_avg_elapsed_timeexecution_per_phv_for_historical_executions_for_instance_2.html"
16:53:10 col:4of5 "00338_sqld360_323688_d1bmu84pdu6gx_4c_186_avg_elapsed_timeexecution_per_phv_for_historical_executions_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:11 col:4of5 "Execution metrics per PHV"
16:53:11 Avg Elapsed Time/Execution per PHV (total) from AWR for Cluster

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(phv1 ,0) phv1_0  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT snap_id,
               MAX(CASE WHEN phv =                    0 THEN avg_et_per_exec ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv15
          FROM (SELECT snap_id,
                       plan_hash_value phv,
                       ROUND(SUM(elapsed_time_total)/SUM(NVL(NULLIF(executions_total,0),1))/1e3,6) avg_et_per_exec
                  FROM dba_hist_sqlstat
                 WHERE snap_id BETWEEN 3484 AND 4973
                   AND sql_id = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                   AND instance_number = instance_number
                   AND plan_hash_value IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1)
                 GROUP BY snap_id, plan_hash_value)
          GROUP BY snap_id) awr,
         dba_hist_snapshot b
 WHERE awr.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:11 col:4of5.

16:53:11 col:4of5 "00339_sqld360_323688_d1bmu84pdu6gx_4c_187_avg_elapsed_timeexecution_per_phv_total_from_awr_for_cluster.html"
16:53:11 col:4of5 "00340_sqld360_323688_d1bmu84pdu6gx_4c_187_avg_elapsed_timeexecution_per_phv_total_from_awr_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:11 col:4of5 "Execution metrics per PHV"
16:53:11 Avg Elapsed Time/Execution per PHV (total) from AWR for Instance 1

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(phv1 ,0) phv1_0  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT snap_id,
               MAX(CASE WHEN phv =                    0 THEN avg_et_per_exec ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv15
          FROM (SELECT snap_id,
                       plan_hash_value phv,
                       ROUND(SUM(elapsed_time_total)/SUM(NVL(NULLIF(executions_total,0),1))/1e3,6) avg_et_per_exec
                  FROM dba_hist_sqlstat
                 WHERE snap_id BETWEEN 3484 AND 4973
                   AND sql_id = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                   AND instance_number = 1
                   AND plan_hash_value IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1)
                 GROUP BY snap_id, plan_hash_value)
          GROUP BY snap_id) awr,
         dba_hist_snapshot b
 WHERE awr.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:11 col:4of5.

16:53:11 col:4of5 "00341_sqld360_323688_d1bmu84pdu6gx_4c_188_avg_elapsed_timeexecution_per_phv_total_from_awr_for_instance_1.html"
16:53:11 col:4of5 "00342_sqld360_323688_d1bmu84pdu6gx_4c_188_avg_elapsed_timeexecution_per_phv_total_from_awr_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:11 col:4of5 "Execution metrics per PHV"
16:53:11 Avg Elapsed Time/Execution per PHV (total) from AWR for Instance 2

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(phv1 ,0) phv1_0  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT snap_id,
               MAX(CASE WHEN phv =                    0 THEN avg_et_per_exec ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv15
          FROM (SELECT snap_id,
                       plan_hash_value phv,
                       ROUND(SUM(elapsed_time_total)/SUM(NVL(NULLIF(executions_total,0),1))/1e3,6) avg_et_per_exec
                  FROM dba_hist_sqlstat
                 WHERE snap_id BETWEEN 3484 AND 4973
                   AND sql_id = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                   AND instance_number = 2
                   AND plan_hash_value IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1)
                 GROUP BY snap_id, plan_hash_value)
          GROUP BY snap_id) awr,
         dba_hist_snapshot b
 WHERE awr.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:11 col:4of5.

16:53:11 col:4of5 "00343_sqld360_323688_d1bmu84pdu6gx_4c_189_avg_elapsed_timeexecution_per_phv_total_from_awr_for_instance_2.html"
16:53:11 col:4of5 "00344_sqld360_323688_d1bmu84pdu6gx_4c_189_avg_elapsed_timeexecution_per_phv_total_from_awr_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:12 col:4of5 "Execution metrics per PHV"
16:53:12 Avg Elapsed Time/Execution per PHV (delta) from AWR for Cluster

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(phv1 ,0) phv1_0  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT snap_id,
               MAX(CASE WHEN phv =                    0 THEN avg_et_per_exec ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv15
          FROM (SELECT snap_id,
                       plan_hash_value phv,
                       ROUND(SUM(elapsed_time_delta)/SUM(NVL(NULLIF(executions_delta,0),1))/1e3,6) avg_et_per_exec
                  FROM dba_hist_sqlstat
                 WHERE snap_id BETWEEN 3484 AND 4973
                   AND sql_id = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                   AND instance_number = instance_number
                   AND plan_hash_value IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1)
                 GROUP BY snap_id, plan_hash_value)
          GROUP BY snap_id) awr,
         dba_hist_snapshot b
 WHERE awr.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:12 col:4of5.

16:53:12 col:4of5 "00345_sqld360_323688_d1bmu84pdu6gx_4c_190_avg_elapsed_timeexecution_per_phv_delta_from_awr_for_cluster.html"
16:53:12 col:4of5 "00346_sqld360_323688_d1bmu84pdu6gx_4c_190_avg_elapsed_timeexecution_per_phv_delta_from_awr_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:12 col:4of5 "Execution metrics per PHV"
16:53:12 Avg Elapsed Time/Execution per PHV (delta) from AWR for Instance 1

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(phv1 ,0) phv1_0  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT snap_id,
               MAX(CASE WHEN phv =                    0 THEN avg_et_per_exec ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv15
          FROM (SELECT snap_id,
                       plan_hash_value phv,
                       ROUND(SUM(elapsed_time_delta)/SUM(NVL(NULLIF(executions_delta,0),1))/1e3,6) avg_et_per_exec
                  FROM dba_hist_sqlstat
                 WHERE snap_id BETWEEN 3484 AND 4973
                   AND sql_id = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                   AND instance_number = 1
                   AND plan_hash_value IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1)
                 GROUP BY snap_id, plan_hash_value)
          GROUP BY snap_id) awr,
         dba_hist_snapshot b
 WHERE awr.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:12 col:4of5.

16:53:12 col:4of5 "00347_sqld360_323688_d1bmu84pdu6gx_4c_191_avg_elapsed_timeexecution_per_phv_delta_from_awr_for_instance_1.html"
16:53:12 col:4of5 "00348_sqld360_323688_d1bmu84pdu6gx_4c_191_avg_elapsed_timeexecution_per_phv_delta_from_awr_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:12 col:4of5 "Execution metrics per PHV"
16:53:12 Avg Elapsed Time/Execution per PHV (delta) from AWR for Instance 2

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(phv1 ,0) phv1_0  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT snap_id,
               MAX(CASE WHEN phv =                    0 THEN avg_et_per_exec ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN avg_et_per_exec ELSE NULL END) phv15
          FROM (SELECT snap_id,
                       plan_hash_value phv,
                       ROUND(SUM(elapsed_time_delta)/SUM(NVL(NULLIF(executions_delta,0),1))/1e3,6) avg_et_per_exec
                  FROM dba_hist_sqlstat
                 WHERE snap_id BETWEEN 3484 AND 4973
                   AND sql_id = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                   AND instance_number = 2
                   AND plan_hash_value IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1)
                 GROUP BY snap_id, plan_hash_value)
          GROUP BY snap_id) awr,
         dba_hist_snapshot b
 WHERE awr.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:12 col:4of5.

16:53:12 col:4of5 "00349_sqld360_323688_d1bmu84pdu6gx_4c_192_avg_elapsed_timeexecution_per_phv_delta_from_awr_for_instance_2.html"
16:53:13 col:4of5 "00350_sqld360_323688_d1bmu84pdu6gx_4c_192_avg_elapsed_timeexecution_per_phv_delta_from_awr_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:13 col:4of5 "Execution metrics per PHV"
16:53:13 Avg Elapsed Time/Execution per PHV (moving 1d) from AWR for Cluster

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(ROUND(SUM(etps1 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps1 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv1_0  ,
       NVL(ROUND(SUM(etps2 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps2 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv2_  ,
       NVL(ROUND(SUM(etps3 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps3 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv3_  ,
       NVL(ROUND(SUM(etps4 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps4 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv4_  ,
       NVL(ROUND(SUM(etps5 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps5 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv5_  ,
       NVL(ROUND(SUM(etps6 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps6 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv6_  ,
       NVL(ROUND(SUM(etps7 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps7 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv7_  ,
       NVL(ROUND(SUM(etps8 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps8 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv8_  ,
       NVL(ROUND(SUM(etps9 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps9 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv9_  ,
       NVL(ROUND(SUM(etps10) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps10) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv10_ ,
       NVL(ROUND(SUM(etps11) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps11) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv11_ ,
       NVL(ROUND(SUM(etps12) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps12) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv12_ ,
       NVL(ROUND(SUM(etps13) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps13) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv13_ ,
       NVL(ROUND(SUM(etps14) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps14) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv14_ ,
       NVL(ROUND(SUM(etps15) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps15) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv15_
  FROM (SELECT snap_id,
               MAX(CASE WHEN phv =                    0 THEN elapsed_time_per_snap ELSE NULL END) etps1,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps2,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps3,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps4,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps5,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps6,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps7,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps8,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps9,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps10,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps11,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps12,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps13,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps14,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps15,
               MAX(CASE WHEN phv =                    0 THEN execs_per_snap ELSE NULL END) eps1,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps2,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps3,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps4,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps5,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps6,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps7,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps8,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps9,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps10,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps11,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps12,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps13,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps14,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps15
          FROM (SELECT snap_id,
                       plan_hash_value phv,
                       SUM(elapsed_time_delta) elapsed_time_per_snap,
                       SUM(executions_delta) execs_per_snap
                  FROM dba_hist_sqlstat
                 WHERE snap_id BETWEEN 3484 AND 4973
                   AND sql_id = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                   AND instance_number = instance_number
                   AND plan_hash_value IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1)
                 GROUP BY snap_id, plan_hash_value)
          GROUP BY snap_id) awr,
         dba_hist_snapshot b
 WHERE awr.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:13 col:4of5.

16:53:13 col:4of5 "00351_sqld360_323688_d1bmu84pdu6gx_4c_193_avg_elapsed_timeexecution_per_phv_moving_1d_from_awr_for_cluster.html"
16:53:13 col:4of5 "00352_sqld360_323688_d1bmu84pdu6gx_4c_193_avg_elapsed_timeexecution_per_phv_moving_1d_from_awr_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:13 col:4of5 "Execution metrics per PHV"
16:53:13 Avg Elapsed Time/Execution per PHV (moving 1d) from AWR for Instance 1

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(ROUND(SUM(etps1 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps1 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv1_0  ,
       NVL(ROUND(SUM(etps2 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps2 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv2_  ,
       NVL(ROUND(SUM(etps3 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps3 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv3_  ,
       NVL(ROUND(SUM(etps4 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps4 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv4_  ,
       NVL(ROUND(SUM(etps5 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps5 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv5_  ,
       NVL(ROUND(SUM(etps6 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps6 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv6_  ,
       NVL(ROUND(SUM(etps7 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps7 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv7_  ,
       NVL(ROUND(SUM(etps8 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps8 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv8_  ,
       NVL(ROUND(SUM(etps9 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps9 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv9_  ,
       NVL(ROUND(SUM(etps10) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps10) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv10_ ,
       NVL(ROUND(SUM(etps11) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps11) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv11_ ,
       NVL(ROUND(SUM(etps12) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps12) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv12_ ,
       NVL(ROUND(SUM(etps13) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps13) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv13_ ,
       NVL(ROUND(SUM(etps14) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps14) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv14_ ,
       NVL(ROUND(SUM(etps15) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps15) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv15_
  FROM (SELECT snap_id,
               MAX(CASE WHEN phv =                    0 THEN elapsed_time_per_snap ELSE NULL END) etps1,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps2,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps3,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps4,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps5,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps6,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps7,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps8,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps9,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps10,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps11,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps12,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps13,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps14,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps15,
               MAX(CASE WHEN phv =                    0 THEN execs_per_snap ELSE NULL END) eps1,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps2,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps3,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps4,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps5,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps6,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps7,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps8,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps9,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps10,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps11,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps12,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps13,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps14,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps15
          FROM (SELECT snap_id,
                       plan_hash_value phv,
                       SUM(elapsed_time_delta) elapsed_time_per_snap,
                       SUM(executions_delta) execs_per_snap
                  FROM dba_hist_sqlstat
                 WHERE snap_id BETWEEN 3484 AND 4973
                   AND sql_id = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                   AND instance_number = 1
                   AND plan_hash_value IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1)
                 GROUP BY snap_id, plan_hash_value)
          GROUP BY snap_id) awr,
         dba_hist_snapshot b
 WHERE awr.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:13 col:4of5.

16:53:13 col:4of5 "00353_sqld360_323688_d1bmu84pdu6gx_4c_194_avg_elapsed_timeexecution_per_phv_moving_1d_from_awr_for_instance_1.html"
16:53:13 col:4of5 "00354_sqld360_323688_d1bmu84pdu6gx_4c_194_avg_elapsed_timeexecution_per_phv_moving_1d_from_awr_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:14 col:4of5 "Execution metrics per PHV"
16:53:14 Avg Elapsed Time/Execution per PHV (moving 1d) from AWR for Instance 2

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(ROUND(SUM(etps1 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps1 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv1_0  ,
       NVL(ROUND(SUM(etps2 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps2 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv2_  ,
       NVL(ROUND(SUM(etps3 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps3 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv3_  ,
       NVL(ROUND(SUM(etps4 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps4 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv4_  ,
       NVL(ROUND(SUM(etps5 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps5 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv5_  ,
       NVL(ROUND(SUM(etps6 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps6 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv6_  ,
       NVL(ROUND(SUM(etps7 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps7 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv7_  ,
       NVL(ROUND(SUM(etps8 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps8 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv8_  ,
       NVL(ROUND(SUM(etps9 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps9 ) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv9_  ,
       NVL(ROUND(SUM(etps10) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps10) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv10_ ,
       NVL(ROUND(SUM(etps11) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps11) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv11_ ,
       NVL(ROUND(SUM(etps12) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps12) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv12_ ,
       NVL(ROUND(SUM(etps13) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps13) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv13_ ,
       NVL(ROUND(SUM(etps14) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps14) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv14_ ,
       NVL(ROUND(SUM(etps15) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW)
         /NVL(NULLIF(SUM(eps15) OVER (ORDER BY end_interval_time RANGE BETWEEN NUMTODSINTERVAL(1,'DAY') PRECEDING AND CURRENT ROW),0),1)/1e3,6),0) phv15_
  FROM (SELECT snap_id,
               MAX(CASE WHEN phv =                    0 THEN elapsed_time_per_snap ELSE NULL END) etps1,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps2,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps3,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps4,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps5,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps6,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps7,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps8,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps9,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps10,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps11,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps12,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps13,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps14,
               MAX(CASE WHEN phv =                   -1 THEN elapsed_time_per_snap ELSE NULL END) etps15,
               MAX(CASE WHEN phv =                    0 THEN execs_per_snap ELSE NULL END) eps1,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps2,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps3,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps4,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps5,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps6,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps7,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps8,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps9,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps10,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps11,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps12,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps13,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps14,
               MAX(CASE WHEN phv =                   -1 THEN execs_per_snap ELSE NULL END) eps15
          FROM (SELECT snap_id,
                       plan_hash_value phv,
                       SUM(elapsed_time_delta) elapsed_time_per_snap,
                       SUM(executions_delta) execs_per_snap
                  FROM dba_hist_sqlstat
                 WHERE snap_id BETWEEN 3484 AND 4973
                   AND sql_id = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                   AND instance_number = 2
                   AND plan_hash_value IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1)
                 GROUP BY snap_id, plan_hash_value)
          GROUP BY snap_id) awr,
         dba_hist_snapshot b
 WHERE awr.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:14 col:4of5.

16:53:14 col:4of5 "00355_sqld360_323688_d1bmu84pdu6gx_4c_195_avg_elapsed_timeexecution_per_phv_moving_1d_from_awr_for_instance_2.html"
16:53:14 col:4of5 "00356_sqld360_323688_d1bmu84pdu6gx_4c_195_avg_elapsed_timeexecution_per_phv_moving_1d_from_awr_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:14 col:4of5 "Execution metrics per PHV"
16:53:14 Avg Buffer Gets/Row/Execution per PHV from AWR for Cluster

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(phv1 ,0) phv1_0  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT snap_id,
               MAX(CASE WHEN phv =                    0 THEN avg_gets_per_row_per_exec ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv15
          FROM (SELECT snap_id,
                       plan_hash_value phv,
                       --TRUNC(SUM(buffer_gets_total)/SUM(NVL(NULLIF(rows_processed_total,0),1))/SUM(NVL(NULLIF(executions_total,0),1)),3) avg_gets_per_row_per_exec
                       TRUNC(SUM(buffer_gets_total) / SUM(NVL(NULLIF(executions_total,0),1)) / (SUM(NVL(NULLIF(rows_processed_total,0),1))/SUM(NVL(NULLIF(executions_total,0),1))),3) avg_gets_per_row_per_exec
                  FROM dba_hist_sqlstat
                 WHERE snap_id BETWEEN 3484 AND 4973
                   AND sql_id = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                   AND instance_number = instance_number
                   AND plan_hash_value IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1)
                 GROUP BY snap_id, plan_hash_value)
          GROUP BY snap_id) awr,
         dba_hist_snapshot b
 WHERE awr.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:14 col:4of5.

16:53:14 col:4of5 "00357_sqld360_323688_d1bmu84pdu6gx_4c_196_avg_buffer_getsrowexecution_per_phv_from_awr_for_cluster.html"
16:53:14 col:4of5 "00358_sqld360_323688_d1bmu84pdu6gx_4c_196_avg_buffer_getsrowexecution_per_phv_from_awr_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:14 col:4of5 "Execution metrics per PHV"
16:53:14 Avg Buffer Gets/Row/Execution per PHV from AWR for Instance 1

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(phv1 ,0) phv1_0  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT snap_id,
               MAX(CASE WHEN phv =                    0 THEN avg_gets_per_row_per_exec ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv15
          FROM (SELECT snap_id,
                       plan_hash_value phv,
                       --TRUNC(SUM(buffer_gets_total)/SUM(NVL(NULLIF(rows_processed_total,0),1))/SUM(NVL(NULLIF(executions_total,0),1)),3) avg_gets_per_row_per_exec
                       TRUNC(SUM(buffer_gets_total) / SUM(NVL(NULLIF(executions_total,0),1)) / (SUM(NVL(NULLIF(rows_processed_total,0),1))/SUM(NVL(NULLIF(executions_total,0),1))),3) avg_gets_per_row_per_exec
                  FROM dba_hist_sqlstat
                 WHERE snap_id BETWEEN 3484 AND 4973
                   AND sql_id = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                   AND instance_number = 1
                   AND plan_hash_value IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1)
                 GROUP BY snap_id, plan_hash_value)
          GROUP BY snap_id) awr,
         dba_hist_snapshot b
 WHERE awr.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:14 col:4of5.

16:53:14 col:4of5 "00359_sqld360_323688_d1bmu84pdu6gx_4c_197_avg_buffer_getsrowexecution_per_phv_from_awr_for_instance_1.html"
16:53:15 col:4of5 "00360_sqld360_323688_d1bmu84pdu6gx_4c_197_avg_buffer_getsrowexecution_per_phv_from_awr_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:15 col:4of5 "Execution metrics per PHV"
16:53:15 Avg Buffer Gets/Row/Execution per PHV from AWR for Instance 2

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(phv1 ,0) phv1_0  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT snap_id,
               MAX(CASE WHEN phv =                    0 THEN avg_gets_per_row_per_exec ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN avg_gets_per_row_per_exec ELSE NULL END) phv15
          FROM (SELECT snap_id,
                       plan_hash_value phv,
                       --TRUNC(SUM(buffer_gets_total)/SUM(NVL(NULLIF(rows_processed_total,0),1))/SUM(NVL(NULLIF(executions_total,0),1)),3) avg_gets_per_row_per_exec
                       TRUNC(SUM(buffer_gets_total) / SUM(NVL(NULLIF(executions_total,0),1)) / (SUM(NVL(NULLIF(rows_processed_total,0),1))/SUM(NVL(NULLIF(executions_total,0),1))),3) avg_gets_per_row_per_exec
                  FROM dba_hist_sqlstat
                 WHERE snap_id BETWEEN 3484 AND 4973
                   AND sql_id = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                   AND instance_number = 2
                   AND plan_hash_value IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1)
                 GROUP BY snap_id, plan_hash_value)
          GROUP BY snap_id) awr,
         dba_hist_snapshot b
 WHERE awr.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:15 col:4of5.

16:53:15 col:4of5 "00361_sqld360_323688_d1bmu84pdu6gx_4c_198_avg_buffer_getsrowexecution_per_phv_from_awr_for_instance_2.html"
16:53:15 col:4of5 "00362_sqld360_323688_d1bmu84pdu6gx_4c_198_avg_buffer_getsrowexecution_per_phv_from_awr_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:15 col:4of5 "Execution metrics per PHV"
16:53:15 Execution Plan Cost per PHV from AWR for Cluster

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(phv1 ,0) phv1_0  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT snap_id,
               MAX(CASE WHEN phv =                    0 THEN optimizer_cost ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv15
          FROM (SELECT snap_id,
                       plan_hash_value phv,
                       MEDIAN(optimizer_cost) optimizer_cost
                  FROM dba_hist_sqlstat
                 WHERE snap_id BETWEEN 3484 AND 4973
                   AND sql_id = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                   AND instance_number = instance_number
                   AND plan_hash_value IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1)
                 GROUP BY snap_id, plan_hash_value)
          GROUP BY snap_id) awr,
         dba_hist_snapshot b
 WHERE awr.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:15 col:4of5.

16:53:15 col:4of5 "00363_sqld360_323688_d1bmu84pdu6gx_4c_199_execution_plan_cost_per_phv_from_awr_for_cluster.html"
16:53:15 col:4of5 "00364_sqld360_323688_d1bmu84pdu6gx_4c_199_execution_plan_cost_per_phv_from_awr_for_cluster_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:15 col:4of5 "Execution metrics per PHV"
16:53:15 Execution Plan Cost per PHV from AWR for Instance 1

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(phv1 ,0) phv1_0  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT snap_id,
               MAX(CASE WHEN phv =                    0 THEN optimizer_cost ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv15
          FROM (SELECT snap_id,
                       plan_hash_value phv,
                       MEDIAN(optimizer_cost) optimizer_cost
                  FROM dba_hist_sqlstat
                 WHERE snap_id BETWEEN 3484 AND 4973
                   AND sql_id = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                   AND instance_number = 1
                   AND plan_hash_value IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1)
                 GROUP BY snap_id, plan_hash_value)
          GROUP BY snap_id) awr,
         dba_hist_snapshot b
 WHERE awr.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:15 col:4of5.

16:53:16 col:4of5 "00365_sqld360_323688_d1bmu84pdu6gx_4c_200_execution_plan_cost_per_phv_from_awr_for_instance_1.html"
16:53:16 col:4of5 "00366_sqld360_323688_d1bmu84pdu6gx_4c_200_execution_plan_cost_per_phv_from_awr_for_instance_1_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:16 col:4of5 "Execution metrics per PHV"
16:53:16 Execution Plan Cost per PHV from AWR for Instance 2

SELECT b.snap_id snap_id,
       TO_CHAR(b.begin_interval_time, 'YYYY-MM-DD HH24:MI')  begin_time,
       TO_CHAR(b.end_interval_time, 'YYYY-MM-DD HH24:MI')  end_time,
       NVL(phv1 ,0) phv1_0  ,
       NVL(phv2 ,0) phv2_  ,
       NVL(phv3 ,0) phv3_  ,
       NVL(phv4 ,0) phv4_  ,
       NVL(phv5 ,0) phv5_  ,
       NVL(phv6 ,0) phv6_  ,
       NVL(phv7 ,0) phv7_  ,
       NVL(phv8 ,0) phv8_  ,
       NVL(phv9 ,0) phv9_  ,
       NVL(phv10,0) phv10_ ,
       NVL(phv11,0) phv11_ ,
       NVL(phv12,0) phv12_ ,
       NVL(phv13,0) phv13_ ,
       NVL(phv14,0) phv14_ ,
       NVL(phv15,0) phv15_
  FROM (SELECT snap_id,
               MAX(CASE WHEN phv =                    0 THEN optimizer_cost ELSE NULL END) phv1,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv2,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv3,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv4,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv5,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv6,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv7,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv8,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv9,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv10,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv11,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv12,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv13,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv14,
               MAX(CASE WHEN phv =                   -1 THEN optimizer_cost ELSE NULL END) phv15
          FROM (SELECT snap_id,
                       plan_hash_value phv,
                       MEDIAN(optimizer_cost) optimizer_cost
                  FROM dba_hist_sqlstat
                 WHERE snap_id BETWEEN 3484 AND 4973
                   AND sql_id = 'd1bmu84pdu6gx'
                   AND 'Y' = 'Y'
                   AND instance_number = 2
                   AND plan_hash_value IN (                   0,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1,                  -1,                  -1,                  -1,
                                                             -1,                  -1,                  -1)
                 GROUP BY snap_id, plan_hash_value)
          GROUP BY snap_id) awr,
         dba_hist_snapshot b
 WHERE awr.snap_id(+) = b.snap_id
   AND b.snap_id BETWEEN 3484 AND 4973
 ORDER BY 3

16:53:16 col:4of5.

16:53:16 col:4of5 "00367_sqld360_323688_d1bmu84pdu6gx_4c_201_execution_plan_cost_per_phv_from_awr_for_instance_2.html"
16:53:16 col:4of5 "00368_sqld360_323688_d1bmu84pdu6gx_4c_201_execution_plan_cost_per_phv_from_awr_for_instance_2_line_chart.html"

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:16 col:5of5 "10053 Trace"
16:53:16 10053 Trace
BEGIN
*
ERROR at line 1:
ORA-20002: statement with sql_id=d1bmu84pdu6gx child_number=0 not found.
ORA-06512: at "SYS.DBMS_SQLDIAG", line 1429
ORA-06512: at line 2




SP2-0310: unable to open file "sql/--sqld360_5g_remote_10053.sql"
203
Completed: 16:53:16

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:16 col:5of5 "SQL Monitor Reports"
16:53:16 SQL Monitor Reports
Completed: 16:53:18


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:18 col:5of5 "DDL"
16:53:18 Clean DDL

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:18 col:5of5 "Stats"
16:53:18 Set Stats

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

16:53:18 col:5of5 "SQL Tuning Advisor"
16:53:18 STA report
Completed: 16:53:18

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

DEFINE _DATE           = "2020-11-06/16:53:18" (CHAR)
DEFINE _CONNECT_IDENTIFIER = "PRD1" (CHAR)
DEFINE _USER           = "SYS" (CHAR)
DEFINE _PRIVILEGE      = "AS SYSDBA" (CHAR)
DEFINE _SQLPLUS_RELEASE = "1201000200" (CHAR)
DEFINE _EDITOR         = "ed" (CHAR)
DEFINE _O_VERSION      = "Oracle Database 12c EE Extreme Perf Release 12.1.0.2.0 - 64bit Production
With the Partitioning, Real Application Clusters, Automatic Storage Management, Oracle Label Security,
OLAP, Advanced Analytics and Real Application Testing options" (CHAR)
DEFINE _O_RELEASE      = "1201000200" (CHAR)
DEFINE ASH_VALIDATION  = "" (CHAR)
DEFINE V_DOLLAR        = "V$" (CHAR)
DEFINE MY_SID          = "5432" (CHAR)
DEFINE LICENSE_PACK    = "T" (CHAR)
DEFINE DIAGNOSTICS_PACK = "Y" (CHAR)
DEFINE SKIP_DIAGNOSTICS = "" (CHAR)
DEFINE TUNING_PACK     = "Y" (CHAR)
DEFINE SKIP_TUNING     = "" (CHAR)
DEFINE CUSTOM_CONFIG_FILENAME = "null" (CHAR)
DEFINE EDB360_ESTIMATED_HRS = "1" (CHAR)
DEFINE ASH_DATE_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS" (CHAR)
DEFINE MY_SPOOL_FILENAME = "awr_ash_pre_check_PRD.txt" (CHAR)
DEFINE ASH_EDB360_DAYS = "31" (CHAR)
DEFINE ASH_FTS_ON_EDB360 = "250" (CHAR)
DEFINE ASH_DATABASE_BLOCK_SIZE = "8192" (CHAR)
DEFINE NUMBER_OF_INSTANCES =                    2 (NUMBER)
DEFINE THIS_DBID       =           2109323688 (NUMBER)
DEFINE ASH_MIN_SNAP_ID = "0" (CHAR)
DEFINE ASH_MAX_SNAP_ID = "0" (CHAR)
DEFINE LAST_PURGE_TIME = "2020-09-18T00:28:18" (CHAR)
DEFINE DAYS_SINCE_PURGE = "49.5" (CHAR)
DEFINE ASH_LAST_ANALYZED = "2020-09-19T06:58:17" (CHAR)
DEFINE ASH_CBO_STATS_AGE_DAYS = "48.2" (CHAR)
DEFINE PERCENT_OF_INSERTS = "" (CHAR)
DEFINE ASH_SIZE_GB     = "2.6 GBs" (CHAR)
DEFINE LAST_DDL_TIME   = "2020-09-18T21:40:39" (CHAR)
DEFINE SEG_LAST_DDL_TIME = "2020-09-18T21:40:39" (CHAR)
DEFINE LAST_DDL_AGE_DAYS = "48.6" (CHAR)
DEFINE ASH_FTS_SECONDS = "122" (CHAR)
DEFINE ASH_DAYS_OF_HISTORY = "92.8" (CHAR)
DEFINE ASH_MED_SAMPLE_DATE = "2020-07-08T03:20:17" (CHAR)
DEFINE ASH_MEDIAN_AGE_DAYS = "121.3" (CHAR)
DEFINE IGNORE_THIS     =                    0 (NUMBER)
DEFINE EDB360_FTS_SECONDS = "1" (CHAR)
DEFINE _RC             = "10" (CHAR)
DEFINE EDB360_SECTIONS = "" (CHAR)
DEFINE SQL_TRACE_LEVEL = "1" (CHAR)
DEFINE EDB360_CONF_DAYS = "31" (CHAR)
DEFINE EDB360_CONF_DATE_FROM = "YYYY-MM-DD" (CHAR)
DEFINE EDB360_CONF_DATE_TO = "YYYY-MM-DD" (CHAR)
DEFINE EDB360_CONF_WORK_TIME_FROM = "0730" (CHAR)
DEFINE EDB360_CONF_WORK_TIME_TO = "1930" (CHAR)
DEFINE EDB360_CONF_WORK_DAY_FROM = "2" (CHAR)
DEFINE EDB360_CONF_WORK_DAY_TO = "6" (CHAR)
DEFINE EDB360_CONF_MAX_HOURS = "24" (CHAR)
DEFINE EDB360_CHART_WIDTH = "809px" (CHAR)
DEFINE EDB360_CONF_INCL_DBNAME_INDEX = "N" (CHAR)
DEFINE EDB360_CONF_INCL_DBNAME_FILE = "N" (CHAR)
DEFINE EDB360_CONF_INCL_ASH_MEM = "N" (CHAR)
DEFINE EDB360_CONF_INCL_SQL_MON = "N" (CHAR)
DEFINE EDB360_CONF_INCL_STAT_MEM = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_PX_MEM = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_SEGMENTS = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_SOURCE = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_METADATA = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_EADAM = "Y" (CHAR)
DEFINE EDB360_EADAM_ROW_LIMIT = "10000000" (CHAR)
DEFINE TOOL_REPO_USER  = "" (CHAR)
DEFINE EDB360_OUTPUT_DIRECTORY = "" (CHAR)
DEFINE EDB360_MOVE_DIRECTORY = "" (CHAR)
DEFINE SKIP_ESP_AND_ESCP = "" (CHAR)
DEFINE EDB360_CONFIG_DBID = "" (CHAR)
DEFINE EDB360_HOST_NAME_SEPARATOR = "" (CHAR)
DEFINE EDB360_HOST_NAME_POSITION = "" (CHAR)
DEFINE EDB360_HOST_NAME_OCCURRENCE = "" (CHAR)
DEFINE EDB360_CONF_INCL_HTML = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_XML = "N" (CHAR)
DEFINE EDB360_CONF_INCL_TEXT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_CSV = "N" (CHAR)
DEFINE EDB360_CONF_INCL_LINE = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_PIE = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_BAR = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_PERFHUB = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_AWR_RPT = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_AWR_DIFF_RPT = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_AWR_RANGE_RPT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_ADDM_RPT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_ASH_RPT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_ASH_ANALY_RPT = "N" (CHAR)
DEFINE EDB360_CONF_INCL_TKPROF = "Y" (CHAR)
DEFINE EDB360_CONF_INCL_PLOT_AWR = "N" (CHAR)
DEFINE EDB360_CONF_SERIES_SELECTION = "N" (CHAR)
DEFINE EDB360_MAX_WORK_DAYS_PEAKS = "3" (CHAR)
DEFINE EDB360_MIN_WORK_DAYS_PEAKS = "1" (CHAR)
DEFINE EDB360_MAX_HISTORY_PEAKS = "3" (CHAR)
DEFINE EDB360_MED_HISTORY = "1" (CHAR)
DEFINE EDB360_MAX_5WD_PEAKS = "3" (CHAR)
DEFINE EDB360_MIN_5WD_PEAKS = "1" (CHAR)
DEFINE EDB360_MAX_7D_PEAKS = "3" (CHAR)
DEFINE EDB360_MED_7D   = "1" (CHAR)
DEFINE EDB360_CONF_TOP_SQL = "16" (CHAR)
DEFINE EDB360_CONF_TOP_CUR = "2" (CHAR)
DEFINE EDB360_CONF_TOP_SIG = "2" (CHAR)
DEFINE EDB360_CONF_PLANX_TOP = "16" (CHAR)
DEFINE EDB360_CONF_SQLMON_TOP = "0" (CHAR)
DEFINE EDB360_CONF_SQLASH_TOP = "0" (CHAR)
DEFINE EDB360_CONF_SQLHC_TOP = "0" (CHAR)
DEFINE EDB360_CONF_SQLD360_TOP = "8" (CHAR)
DEFINE EDB360_CONF_SQLD360_TOP_TC = "0" (CHAR)
DEFINE TOOL_PREFIX_1   = "dba_hist#" (CHAR)
DEFINE TOOL_PREFIX_2   = "dba#" (CHAR)
DEFINE TOOL_PREFIX_3   = "gv#" (CHAR)
DEFINE TOOL_PREFIX_4   = "v#" (CHAR)
DEFINE EDB360_CONF_TOOL_PAGE = "<a href="http://carlos-sierra.net/edb360-an-oracle-database-360-degree-view/" target="_blank">" (CHAR)
DEFINE EDB360_CONF_ALL_PAGES_ICON = "<a href="http://carlos-sierra.net/edb360-an-oracle-database-360-degree-view/" target="_blank"><img src="database.jpg" alt="eDB360" height="33" width="52" /></a>" (CHAR)
DEFINE EDB360_CONF_ALL_PAGES_LOGO = "" (CHAR)
DEFINE EDB360_CONF_GOOGLE_CHARTS = "<script type="text/javascript" src="https://www.google.com/jsapi"></script>" (CHAR)
DEFINE EDB360_VYYNN    = "v192" (CHAR)
DEFINE EDB360_VRSN     = "v192 (2019-03-23)" (CHAR)
DEFINE EDB360_COPYRIGHT = " (c) 2019" (CHAR)
DEFINE EDB360_BYPASS   = "" (CHAR)
DEFINE AWR_HIST_PREFIX = "DBA_HIST_" (CHAR)
DEFINE AWR_OBJECT_PREFIX = "dba_hist_" (CHAR)
DEFINE DVA_VIEW_PREFIX = "DBA_" (CHAR)
DEFINE DVA_OBJECT_PREFIX = "dba_" (CHAR)
DEFINE GV_VIEW_PREFIX  = "GV$" (CHAR)
DEFINE GV_OBJECT_PREFIX = "gv$" (CHAR)
DEFINE V_VIEW_PREFIX   = "V$" (CHAR)
DEFINE V_OBJECT_PREFIX = "v$" (CHAR)
DEFINE EDB360_DBID     = "2109323688" (CHAR)
DEFINE HISTORY_DAYS    = "31" (CHAR)
DEFINE EDB360_DATE_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS" (CHAR)
DEFINE EDB360_TIMESTAMP_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS.FF" (CHAR)
DEFINE EDB360_TIMESTAMP_TZ_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS.FFTZH:TZM" (CHAR)
DEFINE EDB360_DATE_FROM = "2020-10-06T11:22:16" (CHAR)
DEFINE EDB360_DATE_TO  = "2020-11-06T11:22:16" (CHAR)
DEFINE HIST_WORK_DAYS  = "23" (CHAR)
DEFINE SKIP_EXTRAS     = "" (CHAR)
DEFINE EDB360_0G       = "edb360_0g_" (CHAR)
DEFINE EDB360_1A       = "edb360_1a_" (CHAR)
DEFINE EDB360_1B       = "edb360_1b_" (CHAR)
DEFINE EDB360_1C       = "edb360_1c_" (CHAR)
DEFINE EDB360_1D       = "edb360_1d_" (CHAR)
DEFINE EDB360_1E       = "edb360_1e_" (CHAR)
DEFINE EDB360_1F       = "edb360_1f_" (CHAR)
DEFINE EDB360_1G       = "edb360_1g_" (CHAR)
DEFINE EDB360_2A       = "edb360_2a_" (CHAR)
DEFINE EDB360_2B       = "edb360_2b_" (CHAR)
DEFINE EDB360_2C       = "edb360_2c_" (CHAR)
DEFINE EDB360_2D       = "edb360_2d_" (CHAR)
DEFINE EDB360_2E       = "edb360_2e_" (CHAR)
DEFINE EDB360_3A       = "edb360_3a_" (CHAR)
DEFINE EDB360_3B       = "edb360_3b_" (CHAR)
DEFINE EDB360_3C       = "edb360_3c_" (CHAR)
DEFINE EDB360_3D       = "edb360_3d_" (CHAR)
DEFINE EDB360_3E       = "edb360_3e_" (CHAR)
DEFINE EDB360_3F       = "edb360_3f_" (CHAR)
DEFINE EDB360_3G       = "edb360_3g_" (CHAR)
DEFINE EDB360_3H       = "edb360_3h_" (CHAR)
DEFINE EDB360_3I       = "edb360_3i_" (CHAR)
DEFINE EDB360_3J       = "edb360_3j_" (CHAR)
DEFINE EDB360_4A       = "edb360_4a_" (CHAR)
DEFINE EDB360_4B       = "edb360_4b_" (CHAR)
DEFINE EDB360_4C       = "edb360_4c_" (CHAR)
DEFINE EDB360_4D       = "edb360_4d_" (CHAR)
DEFINE EDB360_4E       = "edb360_4e_" (CHAR)
DEFINE EDB360_4F       = "edb360_4f_" (CHAR)
DEFINE EDB360_4G       = "edb360_4g_" (CHAR)
DEFINE EDB360_4H       = "edb360_4h_" (CHAR)
DEFINE EDB360_4I       = "edb360_4i_" (CHAR)
DEFINE EDB360_4J       = "edb360_4j_" (CHAR)
DEFINE EDB360_4K       = "edb360_4k_" (CHAR)
DEFINE EDB360_4L       = "edb360_4l_" (CHAR)
DEFINE EDB360_5A       = "edb360_5a_" (CHAR)
DEFINE EDB360_5B       = "edb360_5b_" (CHAR)
DEFINE EDB360_5C       = "edb360_5c_" (CHAR)
DEFINE EDB360_5D       = "edb360_5d_" (CHAR)
DEFINE EDB360_5E       = "edb360_5e_" (CHAR)
DEFINE EDB360_5F       = "edb360_5f_" (CHAR)
DEFINE EDB360_5G       = "edb360_5g_" (CHAR)
DEFINE EDB360_6A       = "edb360_6a_" (CHAR)
DEFINE EDB360_6B       = "edb360_6b_" (CHAR)
DEFINE EDB360_6C       = "edb360_6c_" (CHAR)
DEFINE EDB360_6D       = "edb360_6d_" (CHAR)
DEFINE EDB360_6E       = "edb360_6e_" (CHAR)
DEFINE EDB360_6F       = "edb360_6f_" (CHAR)
DEFINE EDB360_6G       = "edb360_6g_" (CHAR)
DEFINE EDB360_6H       = "edb360_6h_" (CHAR)
DEFINE EDB360_6I       = "edb360_6i_" (CHAR)
DEFINE EDB360_6J       = "edb360_6j_" (CHAR)
DEFINE EDB360_6K       = "edb360_6k_" (CHAR)
DEFINE EDB360_6L       = "edb360_6l_" (CHAR)
DEFINE EDB360_6M       = "edb360_6m_" (CHAR)
DEFINE EDB360_6N       = "edb360_6n_" (CHAR)
DEFINE EDB360_7A       = "edb360_7a_" (CHAR)
DEFINE EDB360_7B       = "edb360_7b_" (CHAR)
DEFINE EDB360_7C       = "edb360_7c_" (CHAR)
DEFINE EDB360_PREFIX   = "edb360" (CHAR)
DEFINE ECR_COLLECTION_KEY = "PRD1219183590" (CHAR)
DEFINE SKIP_SCRIPT     = "sql/edb360_0f_skip_script.sql " (CHAR)
DEFINE EDB360_CON_ID   = "4" (CHAR)
DEFINE EDB360_PDB_NAME = "FRSTPROD" (CHAR)
DEFINE EDB360_DBMOD    = "323688" (CHAR)
DEFINE CONNECT_INSTANCE_NUMBER = "1" (CHAR)
DEFINE DATABASE_NAME_SHORT = "prd" (CHAR)
DEFINE HOST_NAME_SHORT = "aupp-hroradb-f9exx1" (CHAR)
DEFINE HOST_NAME_SUFFIX = "" (CHAR)
DEFINE ESP_HOST_NAME_SHORT = "aupp-hroradb-f9exx1" (CHAR)
DEFINE HOST_HASH       = "742967" (CHAR)
DEFINE ESP_COLLECTION_YYYYMMDD = "20201106" (CHAR)
DEFINE MAIN_TABLE      = "DBA_ADVISOR_TASK" (CHAR)
DEFINE TITLE           = "STA report" (CHAR)
DEFINE TITLE_NO_SPACES = "sta_report" (CHAR)
DEFINE TITLE_SUFFIX    = "" (CHAR)
DEFINE EDB360_FILE_TIME = "20201106_1122" (CHAR)
DEFINE COMMON_EDB360_PREFIX = "edb360_323688" (CHAR)
DEFINE EDB360_MAIN_REPORT = "00001_edb360_323688_index" (CHAR)
DEFINE EDB360_LOG      = "00002_edb360_323688_log" (CHAR)
DEFINE EDB360_LOG2     = "00003_edb360_323688_log2" (CHAR)
DEFINE EDB360_LOG3     = "00004_edb360_323688_log3" (CHAR)
DEFINE EDB360_TKPROF   = "00005_edb360_323688_tkprof" (CHAR)
DEFINE EDB360_MAIN_FILENAME = "edb360_323688_742967" (CHAR)
DEFINE EDB360_ZIP_FILENAME = "edb360_323688_742967_20201106_1122" (CHAR)
DEFINE EDB360_TRACEFILE_IDENTIFIER = "edb360_323688" (CHAR)
DEFINE EDB360_TAR_FILENAME = "00008_edb360_323688_742967_20201106_1122" (CHAR)
DEFINE EDB360_MV_HOST_COMMAND = "" (CHAR)
DEFINE DB_VERS_OFE     = "12.1.0.2" (CHAR)
DEFINE SKIP_AWR        = "" (CHAR)
DEFINE SKIP_STATSPACK  = "--skip--" (CHAR)
DEFINE ESP_DBNAME_SHORT = "prd" (CHAR)
DEFINE ESCP_MAX_DAYS   = "365" (CHAR)
DEFINE ESCP_DATE_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS" (CHAR)
DEFINE ESCP_HOST_NAME_SHORT = "aupp-hroradb-f9exx1" (CHAR)
DEFINE ESCP_DBNAME_SHORT = "prd" (CHAR)
DEFINE ESCP_COLLECTION_YYYYMMDD_HHMI = "20201106_1122" (CHAR)
DEFINE ESCP_COLLECTION_DAYS = "8" (CHAR)
DEFINE ESCP_THIS_DBID  = "2109323688" (CHAR)
DEFINE ESCP_THIS_INST_NUM = "1" (CHAR)
DEFINE ESCP_MIN_SNAP_ID = "4578" (CHAR)
DEFINE MAX_DAYS        = "365" (CHAR)
DEFINE INCLUDE_IC      = "Y" (CHAR)
DEFINE INCLUDE_NETW    = "Y" (CHAR)
DEFINE ESP_COLLECTION_YYYYMMDD_HHMI = "20201106_1128" (CHAR)
DEFINE COLLECTION_DAYS = "8" (CHAR)
DEFINE SKIP_ON_10G     = "" (CHAR)
DEFINE ECR_SQ_FACT_HINTS = "MATERIALIZE NO_MERGE" (CHAR)
DEFINE ECR_DATE_FORMAT = "YYYY-MM-DD/HH24:MI:SS" (CHAR)
DEFINE ECR_DBID        = "2109323688" (CHAR)
DEFINE ECR_INSTANCE_NUMBER = "1" (CHAR)
DEFINE ECR_MIN_SNAP_ID = "4578" (CHAR)
DEFINE ECR_COLLECTION_HOST = "aupp-hroradb-f9exx1" (CHAR)
DEFINE USE_ON_10G      = "--" (CHAR)
DEFINE DB_VERSION      = "12.1.0.2.0" (CHAR)
DEFINE SKIP_10G_COLUMN = "" (CHAR)
DEFINE SKIP_10G_SCRIPT = "" (CHAR)
DEFINE SKIP_11G_COLUMN = "" (CHAR)
DEFINE SKIP_11G_SCRIPT = "" (CHAR)
DEFINE SKIP_11R1_COLUMN = "" (CHAR)
DEFINE SKIP_11R1_SCRIPT = "" (CHAR)
DEFINE SKIP_NON_REPO_COLUMN = "" (CHAR)
DEFINE SKIP_NON_REPO_SCRIPT = "" (CHAR)
DEFINE SKIP_12C_COLUMN = " -- skip 12c " (CHAR)
DEFINE SKIP_12C_SCRIPT = " echo skip 12c " (CHAR)
DEFINE SKIP_12R2_COLUMN = "" (CHAR)
DEFINE SKIP_12R2_SCRIPT = "" (CHAR)
DEFINE SKIP_18C_COLUMN = "" (CHAR)
DEFINE SKIP_18C_SCRIPT = "" (CHAR)
DEFINE SKIP_19C_COLUMN = "" (CHAR)
DEFINE SKIP_19C_SCRIPT = "" (CHAR)
DEFINE AVG_CPU_COUNT   =                   16 (NUMBER)
DEFINE SUM_CPU_COUNT   =                   32 (NUMBER)
DEFINE AVG_CORE_COUNT  = "16" (CHAR)
DEFINE AVG_THREAD_COUNT = "16" (CHAR)
DEFINE CPU_LOAD_THRESHOLD =                   32 (NUMBER)
DEFINE HOSTS_COUNT     = "2" (CHAR)
DEFINE CORES_THREADS_HOSTS = "cores:16(avg) threads:16(avg) hosts:2(avg)" (CHAR)
DEFINE DATABASE_BLOCK_SIZE = "8192" (CHAR)
DEFINE TOOL_SYSDATE    = "20201106165209" (CHAR)
DEFINE BETWEEN_DATES   = ", between 2020-10-06T16:52:09 and 2020-11-06T16:52:09" (CHAR)
DEFINE MINIMUM_SNAP_ID = "3484" (CHAR)
DEFINE MAXIMUM_SNAP_ID = "4973" (CHAR)
DEFINE INST1_PRESENT   = "1" (CHAR)
DEFINE INST2_PRESENT   = "2" (CHAR)
DEFINE INST3_PRESENT   = "" (CHAR)
DEFINE INST4_PRESENT   = "" (CHAR)
DEFINE INST5_PRESENT   = "" (CHAR)
DEFINE INST6_PRESENT   = "" (CHAR)
DEFINE INST7_PRESENT   = "" (CHAR)
DEFINE INST8_PRESENT   = "" (CHAR)
DEFINE IS_SINGLE_INSTANCE = "" (CHAR)
DEFINE SKIP_INST1      = "" (CHAR)
DEFINE SKIP_INST2      = "" (CHAR)
DEFINE SKIP_INST3      = "-- skip inst3" (CHAR)
DEFINE SKIP_INST4      = "-- skip inst4" (CHAR)
DEFINE SKIP_INST5      = "-- skip inst5" (CHAR)
DEFINE SKIP_INST6      = "-- skip inst6" (CHAR)
DEFINE SKIP_INST7      = "-- skip inst7" (CHAR)
DEFINE SKIP_INST8      = "-- skip inst8" (CHAR)
DEFINE CHART_SETUP_DRIVER = "99800_edb360_323688_chart_setup_driver1.sql" (CHAR)
DEFINE EDB360_EADAM_SNAPS = "-666, 4925, 4869, 4821, 4887, 4839, 4791, 3948, 3900, 3852, 3996, 3804, 3756" (CHAR)
DEFINE EBS_RELEASE     = "" (CHAR)
DEFINE EBS_SYSTEM_NAME = "" (CHAR)
DEFINE SIEBEL_SCHEMA   = "" (CHAR)
DEFINE SIEBEL_APP_VER  = "" (CHAR)
DEFINE PSFT_SCHEMA     = "" (CHAR)
DEFINE PSFT_TOOLS_REL  = "" (CHAR)
DEFINE EDB360_SKIP_HTML = "" (CHAR)
DEFINE EDB360_SKIP_XML = " echo skip xml " (CHAR)
DEFINE EDB360_SKIP_TEXT = " echo skip text " (CHAR)
DEFINE EDB360_SKIP_CSV = " echo skip csv " (CHAR)
DEFINE EDB360_SKIP_LINE = "" (CHAR)
DEFINE EDB360_SKIP_PIE = "" (CHAR)
DEFINE EDB360_SKIP_BAR = "" (CHAR)
DEFINE EDB360_SKIP_METADATA = "" (CHAR)
DEFINE EDB360_SKIP_ASH_MEM = " echo skip ash mem " (CHAR)
DEFINE EDB360_SKIP_SQL_MON = " echo skip sql mon " (CHAR)
DEFINE EDB360_SKIP_STAT_MEM = "" (CHAR)
DEFINE EDB360_SKIP_PX_MEM = "" (CHAR)
DEFINE TOP_LEVEL_HINTS = "NO_MERGE" (CHAR)
DEFINE SQ_FACT_HINTS   = "MATERIALIZE NO_MERGE" (CHAR)
DEFINE DS_HINT         = "DYNAMIC_SAMPLING(4)" (CHAR)
DEFINE ASH_HINTS1      = " FULL(h.ash) FULL(h.evt) FULL(h.sn) USE_HASH(h.sn h.ash h.evt) " (CHAR)
DEFINE ASH_HINTS2      = " FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.ash) FULL(h.INT$DBA_HIST_ACT_SESS_HISTORY.evt) " (CHAR)
DEFINE ASH_HINTS3      = " USE_HASH(h.INT$DBA_HIST_ACT_SESS_HISTORY.sn h.INT$DBA_HIST_ACT_SESS_HISTORY.ash h.INT$DBA_HIST_ACT_SESS_HISTORY.evt) " (CHAR)
DEFINE DEF_MAX_ROWS    = "50000" (CHAR)
DEFINE MAX_ROWS        = "50000" (CHAR)
DEFINE EXCLUSION_LIST  = "('ANONYMOUS','APEX_030200','APEX_040000','APEX_040200','APEX_SSO','APPQOSSYS','CTXSYS','DBSNMP','DIP','EXFSYS','FLOWS_FILES','MDSYS','OLAPSYS','ORACLE_OCM','ORDDATA','ORDPLUGINS','ORDSYS','OUTLN','OWBSYS')" (CHAR)
DEFINE EXCLUSION_LIST2 = "('SI_INFORMTN_SCHEMA','SQLTXADMIN','SQLTXPLAIN','SYS','SYSMAN','SYSTEM','TRCANLZR','WMSYS','XDB','XS$NULL','PERFSTAT','STDBYPERF','MGDSYS','OJVMSYS')" (CHAR)
DEFINE SKIP_HTML       = "" (CHAR)
DEFINE SKIP_TEXT       = "" (CHAR)
DEFINE SKIP_CSV        = "" (CHAR)
DEFINE SKIP_LCH        = "Y" (CHAR)
DEFINE SKIP_LCH2       = "--skip--" (CHAR)
DEFINE SKIP_PCH        = "Y" (CHAR)
DEFINE SKIP_BCH        = "Y" (CHAR)
DEFINE SKIP_ALL        = "" (CHAR)
DEFINE ABSTRACT        = "" (CHAR)
DEFINE ABSTRACT2       = "" (CHAR)
DEFINE FOOT            = "" (CHAR)
DEFINE ABSTRACT_UOM    = "Memory is accounted as power of two (binary) while storage and network traffic as power of ten (decimal). <br />" (CHAR)
DEFINE CHARTYPE        = "LineChart" (CHAR)
DEFINE STACKED         = "" (CHAR)
DEFINE HAXIS           = "d1bmu84pdu6gx 12.1.0.2.0 cores:16(avg) threads:16(avg) hosts:2(avg)" (CHAR)
DEFINE VAXIS           = "Optimizer cost" (CHAR)
DEFINE VBASELINE       = "" (CHAR)
DEFINE BAR_HEIGHT      = "45%" (CHAR)
DEFINE TIT_01          = "0" (CHAR)
DEFINE TIT_02          = "" (CHAR)
DEFINE TIT_03          = "" (CHAR)
DEFINE TIT_04          = "" (CHAR)
DEFINE TIT_05          = "" (CHAR)
DEFINE TIT_06          = "" (CHAR)
DEFINE TIT_07          = "" (CHAR)
DEFINE TIT_08          = "" (CHAR)
DEFINE TIT_09          = "" (CHAR)
DEFINE TIT_10          = "" (CHAR)
DEFINE TIT_11          = "" (CHAR)
DEFINE TIT_12          = "" (CHAR)
DEFINE TIT_13          = "" (CHAR)
DEFINE TIT_14          = "" (CHAR)
DEFINE TIT_15          = "" (CHAR)
DEFINE CONT_01         = "-1" (CHAR)
DEFINE CONT_02         =                   -1 (NUMBER)
DEFINE CONT_03         =                   -1 (NUMBER)
DEFINE CONT_04         =                   -1 (NUMBER)
DEFINE CONT_05         =                   -1 (NUMBER)
DEFINE CONT_06         =                   -1 (NUMBER)
DEFINE CONT_07         =                   -1 (NUMBER)
DEFINE CONT_08         =                   -1 (NUMBER)
DEFINE CONT_09         =                   -1 (NUMBER)
DEFINE CONT_10         =                   -1 (NUMBER)
DEFINE CONT_11         =                   -1 (NUMBER)
DEFINE CONT_12         =                   -1 (NUMBER)
DEFINE CONT_13         =                   -1 (NUMBER)
DEFINE CONT_14         =                   -1 (NUMBER)
DEFINE CONT_15         =                   -1 (NUMBER)
DEFINE WAIT_CLASS_01   = "Application" (CHAR)
DEFINE EVENT_NAME_01   = "enq: TM - contention" (CHAR)
DEFINE WAIT_CLASS_02   = "User I/O" (CHAR)
DEFINE EVENT_NAME_02   = "cell single block physical read" (CHAR)
DEFINE WAIT_CLASS_03   = "Network" (CHAR)
DEFINE EVENT_NAME_03   = "SQL*Net more data to client" (CHAR)
DEFINE WAIT_CLASS_04   = "Administrative" (CHAR)
DEFINE EVENT_NAME_04   = "Backup: MML write backup piece" (CHAR)
DEFINE WAIT_CLASS_05   = "Cluster" (CHAR)
DEFINE EVENT_NAME_05   = "gc cr disk read" (CHAR)
DEFINE WAIT_CLASS_06   = "Concurrency" (CHAR)
DEFINE EVENT_NAME_06   = "cursor: pin S wait on X" (CHAR)
DEFINE WAIT_CLASS_07   = "User I/O" (CHAR)
DEFINE EVENT_NAME_07   = "direct path read" (CHAR)
DEFINE WAIT_CLASS_08   = "Other" (CHAR)
DEFINE EVENT_NAME_08   = "rdbms ipc reply" (CHAR)
DEFINE WAIT_CLASS_09   = "Application" (CHAR)
DEFINE EVENT_NAME_09   = "enq: TX - row lock contention" (CHAR)
DEFINE WAIT_CLASS_10   = "User I/O" (CHAR)
DEFINE EVENT_NAME_10   = "cell multiblock read request" (CHAR)
DEFINE WAIT_CLASS_11   = "User I/O" (CHAR)
DEFINE EVENT_NAME_11   = "cell multiblock physical read" (CHAR)
DEFINE WAIT_CLASS_12   = "Cluster" (CHAR)
DEFINE EVENT_NAME_12   = "gc current block 2-way" (CHAR)
DEFINE EXADATA         = "" (CHAR)
DEFINE MAX_COL_NUMBER  = "5" (CHAR)
DEFINE COLUMN_NUMBER   = "5" (CHAR)
DEFINE RECOVERY        = "& recovery" (CHAR)
DEFINE TOTAL_HOURS     = "" (CHAR)
DEFINE EDB360_TIME_STAMP = "2020-11-06T13:52:14" (CHAR)
DEFINE REPORT_SEQUENCE = "205" (CHAR)
DEFINE CURRENT_TIME    = "16:53:18" (CHAR)
DEFINE EXACT_MATCHING_SIGNATURE =  4260985471724335612 (NUMBER)
DEFINE FORCE_MATCHING_SIGNATURE =                    0 (NUMBER)
DEFINE WAIT_CLASS_COLORS = "CASE wait_class WHEN ''CPU'' THEN ''34CF27'' WHEN ''Scheduler'' THEN ''9FFA9D'' WHEN ''User I/O'' THEN ''0252D7'' WHEN ''System I/O'' THEN ''1E96DD'' " (CHAR)
DEFINE WAIT_CLASS_COLORS2 = " WHEN ''Concurrency'' THEN ''871C12'' WHEN ''Application'' THEN ''C42A05'' WHEN ''Commit'' THEN ''EA6A05'' WHEN ''Configuration'' THEN ''594611''  " (CHAR)
DEFINE WAIT_CLASS_COLORS3 = " WHEN ''Administrative'' THEN ''75763E''  WHEN ''Network'' THEN ''989779'' WHEN ''Other'' THEN ''F571A0'' " (CHAR)
DEFINE WAIT_CLASS_COLORS4 = " WHEN ''Cluster'' THEN ''CEC3B5'' WHEN ''Queueing'' THEN ''C6BAA5'' END" (CHAR)
DEFINE SERIES_01       = "" (CHAR)
DEFINE SERIES_02       = "" (CHAR)
DEFINE SERIES_03       = "" (CHAR)
DEFINE SERIES_04       = "" (CHAR)
DEFINE SERIES_05       = "" (CHAR)
DEFINE SERIES_06       = "" (CHAR)
DEFINE SERIES_07       = "" (CHAR)
DEFINE SERIES_08       = "" (CHAR)
DEFINE SERIES_09       = "" (CHAR)
DEFINE SERIES_10       = "" (CHAR)
DEFINE SERIES_11       = "" (CHAR)
DEFINE SERIES_12       = "" (CHAR)
DEFINE SERIES_13       = "" (CHAR)
DEFINE SERIES_14       = "" (CHAR)
DEFINE SERIES_15       = "" (CHAR)
DEFINE SKIP_LCHP       = "--skip--" (CHAR)
DEFINE EDB360_UDUMP_PATH = "/u02/app/oracle/diag/rdbms/prd_iad3vt/PRD1/trace/" (CHAR)
DEFINE EDB360_SPID     = "274417" (CHAR)
DEFINE REPORT_DBNAME   = "" (CHAR)
DEFINE SECTION_ID      = "5h" (CHAR)
DEFINE SECTION_NAME    = "SQL Tuning Advisor" (CHAR)
DEFINE PROCESSOR_MODEL = "Intel(R) Xeon(R) Platinum 8270CL CPU @ 2.70GHz" (CHAR)
DEFINE HH_MM_SS        = "16:53:18" (CHAR)
DEFINE SPOOL_FILENAME  = "sqld360_323688_d1bmu84pdu6gx_5h_204_sta_report" (CHAR)
DEFINE ROW_NUM         = "2980" (CHAR)
DEFINE EDB360_PREV_SQL_ID = "7uwhxftumj625" (CHAR)
DEFINE EDB360_PREV_CHILD_NUMBER = "0" (CHAR)
DEFINE ONE_SPOOL_FILENAME = "00373_sqld360_323688_d1bmu84pdu6gx_5h_204_sta_report" (CHAR)
DEFINE EDB360_TUNING_PACK_FOR_SQLMON = "N" (CHAR)
DEFINE SKIP_SQLMON_EXEC = " echo skip sqlmon" (CHAR)
DEFINE EDB360_SQL_TEXT_100 = "SELECT TO_CHAR(ROWNUM) row_num, v0.* FROM /* 4b.455 */ ( WITH pgastat_denorm_1 AS ( SELECT /*+  MATE" (CHAR)
DEFINE STATSPACK_USER  = "perfstat" (CHAR)
DEFINE SP_MINIMUM_SNAP_ID = "-1" (CHAR)
DEFINE SP_MAXIMUM_SNAP_ID = "-1" (CHAR)
DEFINE SKIP_IF_MISSING = " echo skip " (CHAR)
DEFINE TOTAL_BUFFER_GETS =          20276118710 (NUMBER)
DEFINE TOTAL_DISK_READS =            123439198 (NUMBER)
DEFINE REPORT_DATE     = "2020-11-06T11:45:41" (CHAR)
DEFINE DAYS_OF_HISTORY_ACCESSED = "31" (CHAR)
DEFINE CAPTURED_AT_LEAST_X_TIMES = "10" (CHAR)
DEFINE CAPTURED_AT_LEAST_X_DAYS_APART = "5" (CHAR)
DEFINE MED_ELAP_MICROSECS_THRESHOLD = "1e4" (CHAR)
DEFINE MIN_SLOPE_THRESHOLD = "0.1" (CHAR)
DEFINE MAX_NUM_ROWS_X  = "20" (CHAR)
DEFINE SKIP_INST       = "" (CHAR)
DEFINE CORES_OVER_THREADS = "" (CHAR)
DEFINE SUBPOOL_01      = "SQLA" (CHAR)
DEFINE SUBPOOL_02      = "Result Cache" (CHAR)
DEFINE SUBPOOL_03      = "KGLH0" (CHAR)
DEFINE SUBPOOL_04      = "gcs resources" (CHAR)
DEFINE SUBPOOL_05      = "gcs shadows" (CHAR)
DEFINE SUBPOOL_06      = "" (CHAR)
DEFINE SUBPOOL_07      = "" (CHAR)
DEFINE SUBPOOL_08      = "" (CHAR)
DEFINE SUBPOOL_09      = "" (CHAR)
DEFINE SUBPOOL_10      = "" (CHAR)
DEFINE TEXT            = "Y" (CHAR)
DEFINE ACTIVE          = "Y" (CHAR)
DEFINE MAX_REPORTS     = "12" (CHAR)
DEFINE INPUT_LICENSE   = "Y" (CHAR)
DEFINE SQL_ID          = "1wjt2ut7cah6k" (CHAR)
DEFINE DATE_MASK       = "YYYY-MM-DD/HH24:MI:SS" (CHAR)
DEFINE WAIT_CLASS_13   = "Concurrency" (CHAR)
DEFINE EVENT_NAME_13   = "row cache lock" (CHAR)
DEFINE WAIT_CLASS_14   = "Cluster" (CHAR)
DEFINE EVENT_NAME_14   = "gc cr multi block request" (CHAR)
DEFINE WAIT_CLASS_15   = "Cluster" (CHAR)
DEFINE EVENT_NAME_15   = "gc cr grant 2-way" (CHAR)
DEFINE WAIT_CLASS_16   = "Cluster" (CHAR)
DEFINE EVENT_NAME_16   = "gc current grant 2-way" (CHAR)
DEFINE WAIT_CLASS_17   = "Concurrency" (CHAR)
DEFINE EVENT_NAME_17   = "library cache lock" (CHAR)
DEFINE WAIT_CLASS_18   = "Other" (CHAR)
DEFINE EVENT_NAME_18   = "DFS lock handle" (CHAR)
DEFINE WAIT_CLASS_19   = "User I/O" (CHAR)
DEFINE EVENT_NAME_19   = "cell smart table scan" (CHAR)
DEFINE WAIT_CLASS_20   = "User I/O" (CHAR)
DEFINE EVENT_NAME_20   = "direct path read temp" (CHAR)
DEFINE WAIT_CLASS_21   = "Scheduler" (CHAR)
DEFINE EVENT_NAME_21   = "resmgr:cpu quantum" (CHAR)
DEFINE WAIT_CLASS_22   = "User I/O" (CHAR)
DEFINE EVENT_NAME_22   = "cell single block read request" (CHAR)
DEFINE WAIT_CLASS_23   = "Cluster" (CHAR)
DEFINE EVENT_NAME_23   = "gc cr block busy" (CHAR)
DEFINE WAIT_CLASS_24   = "Other" (CHAR)
DEFINE EVENT_NAME_24   = "gcs drm freeze in enter server mode" (CHAR)
DEFINE ONE_MS_COMP     = "<=" (CHAR)
DEFINE TWO_MS_COMP     = ">" (CHAR)
DEFINE VAXIS1          = "Waits Count" (CHAR)
DEFINE VAXIS2          = "" (CHAR)
DEFINE 7               = "edb360_9a_pre_one.sql" (CHAR)
DEFINE BETWEEN_TIMES   = ", between 2020-10-06T11:22:16 and 2020-11-06T11:22:16" (CHAR)
DEFINE FILTER_PREDICATE = "instance_number = 8" (CHAR)
DEFINE CALL_SQLD360_BITMASK = "110031" (CHAR)
DEFINE CALL_SQLD360_BITMASK_TC = "111031" (CHAR)
DEFINE FILES_PREFIX    = "" (CHAR)
DEFINE SQ_FACT_SQL_SAMPLE_HINTS = " MATERIALIZE NO_MERGE " (CHAR)
DEFINE IS_10G          = "" (CHAR)
DEFINE IS_11R1         = "" (CHAR)
DEFINE IS_11R2         = "" (CHAR)
DEFINE X_MINIMUM_SNAP_ID = "3483" (CHAR)
DEFINE X_MAXIMUM_SNAP_ID = "4973" (CHAR)
DEFINE X_MINIMUM_DATE  = "2020-10-06T16:30:07" (CHAR)
DEFINE X_MAXIMUM_DATE  = "2020-11-06T16:30:43" (CHAR)
DEFINE SIGNATURE       = "9380065298533696050" (CHAR)
DEFINE SIGNATUREF      = "9380065298533696050" (CHAR)
DEFINE X_HOST_NAME     = "aupp-hroradb-f9exx1" (CHAR)
DEFINE X_DB_NAME       = "PRD" (CHAR)
DEFINE X_CONTAINER     = "FRSTPROD" (CHAR)
DEFINE SQL_HANDLE      = "" (CHAR)
DEFINE X_SLICES        = "20" (CHAR)
DEFINE X_DAYS          = "31" (CHAR)
DEFINE TABLES_LIST     = "(('THH_C4C','A_APBL'),('THH_C4C','A_APBLSRVC'),('THH_C4C','A_MEMBDGISBASE'),('THH_C4C','A_USR'),('THH_C4C','MV_PATID_CLINIC_COND_SRVCD'),('THH_C4C','T_DRUGCLM'),('THH_C4C','T_MDCLCLM'),('THH_C4C','T_MDCT'),('THH_C4C','T_SRVC'),('THH_C4C','T_USR'))" (CHAR)
DEFINE TIMESTAMP_MASK  = "YYYY-MM-DD/HH24:MI:SS.FF6" (CHAR)
DEFINE FIELDS_DELIMITER = "<,>" (CHAR)
DEFINE EADAM_CURRENT_TIME = "20201106163916" (CHAR)
DEFINE EDB360_SECS2GO  = "67310" (CHAR)
DEFINE DRIVER_TIME     = "164026" (CHAR)
DEFINE FROM_EDB360     = "--" (CHAR)
DEFINE SKIP_TCB        = "--" (CHAR)
DEFINE SQLD360_FROMEDB360_DAYS = "31" (CHAR)
DEFINE SECS2GO_STARTTIME = "20201106165209" (CHAR)
DEFINE SKIP_SQLD360    = "" (CHAR)
DEFINE SQLD360_CONTAINER = "FRSTPROD" (CHAR)
DEFINE SQLD360_CONF_DAYS = "61" (CHAR)
DEFINE SQLD360_CONF_DATE_FROM = "YYYY-MM-DD" (CHAR)
DEFINE SQLD360_CONF_DATE_TO = "YYYY-MM-DD" (CHAR)
DEFINE SQLD360_CONF_INCL_HTML = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_TEXT = "N" (CHAR)
DEFINE SQLD360_CONF_INCL_CSV = "N" (CHAR)
DEFINE SQLD360_CONF_INCL_XML = "N" (CHAR)
DEFINE SQLD360_CONF_INCL_LINE = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_PIE = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_BAR = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_TREE = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_BUBBLE = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_SCATT = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_SQLMON = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_ASH_HIST = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_AWRRPT = "N" (CHAR)
DEFINE SQLD360_CONF_INCL_ASHRPT = "N" (CHAR)
DEFINE SQLD360_CONF_INCL_EADAM = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_RAWASH = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_STATS_H = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_FMATCH = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_METADATA = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_STATS = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_TCB = "N" (CHAR)
DEFINE SQLD360_CONF_INCL_STA = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_CBOENV = "N" (CHAR)
DEFINE SQLD360_CONF_TCB_SAMPLE = "0" (CHAR)
DEFINE SQLD360_CONF_TRANSLATE_LOWHIGH = "Y" (CHAR)
DEFINE SQLD360_CONF_FIRST_PART = "10" (CHAR)
DEFINE SQLD360_CONF_LAST_PART = "10" (CHAR)
DEFINE SQLD360_NUM_PLAN_DETAILS = "20" (CHAR)
DEFINE SQLD360_CONF_NUM_TOP_EXECS = "3" (CHAR)
DEFINE SQLD360_CONF_NUM_AWRRPT = "3" (CHAR)
DEFINE SQLD360_CONF_NUM_SQLMON_REP = "12" (CHAR)
DEFINE SQLD360_CONF_AVG_ET_PERCTH = "90" (CHAR)
DEFINE SQLD360_CONF_INCL_OBJ_DEPT = "Y" (CHAR)
DEFINE SQLD360_CONF_INCL_OBJ_ASHBASED = "N" (CHAR)
DEFINE SQLD360_SQLTRACE_LEVEL = "0" (CHAR)
DEFINE SQLD360_CONF_DBID = "" (CHAR)
DEFINE SQLD360_CONF_AWR_TIMESCALE = "ms" (CHAR)
DEFINE SQLD360_CONF_TOOL_PAGE = "<a href="http://mauro-pagano.com/2015/02/16/sqld360-sql-diagnostics-collection-made-faster/" target="_blank">" (CHAR)
DEFINE SQLD360_CONF_ALL_PAGES_ICON = "<a href="http://mauro-pagano.com/2015/02/16/sqld360-sql-diagnostics-collection-made-faster/" target="_blank"><img src="SQLd360_img.jpg" alt="SQLd360" height="33" width="52"></a>" (CHAR)
DEFINE SQLD360_CONF_ALL_PAGES_LOGO = "" (CHAR)
DEFINE SQLD360_CONF_GOOGLE_CHARTS = "<script type="text/javascript" src="https://www.google.com/jsapi"></script>" (CHAR)
DEFINE SQLD360_VYYNN   = "v192" (CHAR)
DEFINE SQLD360_VRSN    = "v192 (2019-03-23)" (CHAR)
DEFINE SQLD360_PREFIX  = "sqld360" (CHAR)
DEFINE SQLD360_SQLID   = "d1bmu84pdu6gx" (CHAR)
DEFINE SQLD360_DBID    = "2109323688" (CHAR)
DEFINE SQLD360_DBMOD   = "323688" (CHAR)
DEFINE CONNECT_INSTANCE_NAME = "PRD1" (CHAR)
DEFINE SQLD360_DB_BLOCK_SIZE = "8192" (CHAR)
DEFINE SQLD360_DATE_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS" (CHAR)
DEFINE SQLD360_TIMESTAMP_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS.FF" (CHAR)
DEFINE SQLD360_TIMESTAMP_TZ_FORMAT = "YYYY-MM-DD"T"HH24:MI:SS.FFTZH:TZM" (CHAR)
DEFINE SQLD360_DATE_FROM = "2020-10-06T16:52:09" (CHAR)
DEFINE SQLD360_DATE_TO = "2020-11-06T16:52:09" (CHAR)
DEFINE SKIP_10G        = "" (CHAR)
DEFINE SKIP_11G        = "" (CHAR)
DEFINE SKIP_11R1       = "" (CHAR)
DEFINE SKIP_11R201     = "" (CHAR)
DEFINE SKIP_11R203     = "" (CHAR)
DEFINE SKIP_12C        = "--" (CHAR)
DEFINE SKIP_12R101     = "" (CHAR)
DEFINE SKIP_12R1       = "--" (CHAR)
DEFINE SKIP_18C        = "" (CHAR)
DEFINE SKIP_19C        = "" (CHAR)
DEFINE SQLD360_FILE_TIME = "20201106_1652" (CHAR)
DEFINE AS_OF_DATE      = ", as of Fri Nov 06 @04:52PM" (CHAR)
DEFINE SQLD360_ASHDISKFILTER =                   10 (NUMBER)
DEFINE SQLD360_ASHSAMPLE =                    1 (NUMBER)
DEFINE SQLD360_ASHTIMEVALUE =                   10 (NUMBER)
DEFINE SQLD360_REMOTE_EXEC = "--" (CHAR)
DEFINE SQLD360_LOCAL_EXEC = "" (CHAR)
DEFINE SQLD360_UDUMP_PATH = "/u02/app/oracle/product/12.1.0/dbhome_3/rdbms/log/" (CHAR)
DEFINE SQLD360_DIAGTRACE_PATH = "/u02/app/oracle/diag/rdbms/prd_iad3vt/PRD1/trace/" (CHAR)
DEFINE SQLD360_SPID    = "274417" (CHAR)
DEFINE SQLD360_SQLTXT  = "begin dbms_mview.REFRESH('MV_DIM_MEMBER_ADDR_TMPRL','C'); end;" (CHAR)
DEFINE SQLD360_IS_INSERT = "N" (CHAR)
DEFINE XPLAN_USER      = "THH_C4C" (CHAR)
DEFINE CURRENT_USER    = "SYS" (CHAR)
DEFINE XPLAN_SQL       = "begin dbms_mview.REFRESH('MV_DIM_MEMBER_ADDR_TMPRL','C'); end;" (CHAR)
DEFINE SQLD360_XPLAN_SQLID = "9babjv8yq8ru3" (CHAR)
DEFINE SKIP_FORCE_MATCH = "--" (CHAR)
DEFINE SQLD360_SKIP_HTML = "" (CHAR)
DEFINE SQLD360_SKIP_XML = "--" (CHAR)
DEFINE SQLD360_SKIP_TEXT = "--" (CHAR)
DEFINE SQLD360_SKIP_CSV = "--" (CHAR)
DEFINE SQLD360_SKIP_LINE = "" (CHAR)
DEFINE SQLD360_SKIP_PIE = "" (CHAR)
DEFINE SQLD360_SKIP_BAR = "" (CHAR)
DEFINE SQLD360_SKIP_TREE = "" (CHAR)
DEFINE SQLD360_SKIP_BUBBLE = "" (CHAR)
DEFINE SQLD360_SKIP_SCATT = "" (CHAR)
DEFINE SQLD360_SKIP_AWRRPT = "--" (CHAR)
DEFINE SQLD360_SKIP_ASHRPT = "--" (CHAR)
DEFINE SQLD360_SKIP_SQLMON = "" (CHAR)
DEFINE SQLD360_SKIP_STA = "" (CHAR)
DEFINE SQLD360_SKIP_EADAM = "" (CHAR)
DEFINE SQLD360_SKIP_RAWASH = "" (CHAR)
DEFINE SQLD360_SKIP_STATS_H = "" (CHAR)
DEFINE SQLD360_SKIP_FMATCH = "" (CHAR)
DEFINE SQLD360_SKIP_METADATA = "" (CHAR)
DEFINE SQLD360_SKIP_STATS = "" (CHAR)
DEFINE SQLD360_SKIP_TCB = "--" (CHAR)
DEFINE SQLD360_SKIP_CBOENV = "--" (CHAR)
DEFINE SQLD360_TCB_EXP_DATA = "FALSE" (CHAR)
DEFINE SQLD360_TCB_EXP_SAMPLE =                    0 (NUMBER)
DEFINE SQLD360_SKIP_OBJD = "" (CHAR)
DEFINE SQLD360_SKIP_OBJ_ASHBASED = "--" (CHAR)
DEFINE SQLD360_SKIP_LOWHIGH = "" (CHAR)
DEFINE SQLD360_HAS_PLSQL = "" (CHAR)
DEFINE SQLD360_NO_READ_STATS_H = "" (CHAR)
DEFINE SQLD360_AWR_TIMESCALE_D = "1e3" (CHAR)
DEFINE SQLD360_AWR_TIMESCALE_L = "ms" (CHAR)
DEFINE COMMON_SQLD360_PREFIX = "sqld360_323688_d1bmu84pdu6gx" (CHAR)
DEFINE SQLD360_MAIN_REPORT = "00001_sqld360_323688_d1bmu84pdu6gx_index" (CHAR)
DEFINE SQLD360_LOG     = "00002_sqld360_323688_d1bmu84pdu6gx_log" (CHAR)
DEFINE SQLD360_TKPROF  = "00003_sqld360_323688_d1bmu84pdu6gx_tkprof" (CHAR)
DEFINE SQLD360_MAIN_FILENAME = "sqld360_323688_d1bmu84pdu6gx_742967" (CHAR)
DEFINE SQLD360_LOG2    = "00004_sqld360_323688_d1bmu84pdu6gx_log2" (CHAR)
DEFINE SQLD360_TRACEFILE_IDENTIFIER = "sqld360_323688_d1bmu84pdu6gx" (CHAR)
DEFINE SQLD360_COPYRIGHT = " (c) 2015" (CHAR)
DEFINE NUM_PARTS       = "100" (CHAR)
DEFINE DEFAULT_DIR     = "SQLD360_DIR" (CHAR)
DEFINE SQLMON_DATE_MASK = "YYYYMMDDHH24MISS" (CHAR)
DEFINE SQLMON_TEXT     = "Y" (CHAR)
DEFINE SQLMON_ACTIVE   = "Y" (CHAR)
DEFINE SQLMON_HIST     = "Y" (CHAR)
DEFINE ASH_DATE_MASK   = "YYYYMMDDHH24MISS" (CHAR)
DEFINE ASH_TEXT        = "Y" (CHAR)
DEFINE ASH_HTML        = "Y" (CHAR)
DEFINE ASH_MEM         = "Y" (CHAR)
DEFINE ASH_AWR         = "Y" (CHAR)
DEFINE ASH_MAX_REPORTS = "12" (CHAR)
DEFINE WAIT_CLASS_COLORS_S = "CASE wait_class WHEN ''CPU'' THEN ''color: ''''#34CF27'''''' WHEN ''Scheduler'' THEN ''color: ''''#9FFA9D'''''' WHEN ''User I/O'' THEN ''color: ''''#0252D7'''''' WHEN ''System I/O'' THEN ''color: ''''#1E96DD'''''' " (CHAR)
DEFINE WAIT_CLASS_COLORS2_S = " WHEN ''Concurrency'' THEN ''color: ''''#871C12'''''' WHEN ''Application'' THEN ''color: ''''#C42A05'''''' WHEN ''Commit'' THEN ''color: ''''#EA6A05'''''' WHEN ''Configuration'' THEN ''color: ''''#594611''''''  " (CHAR)
DEFINE WAIT_CLASS_COLORS3_S = " WHEN ''Administrative'' THEN ''color: ''''#75763E''''''  WHEN ''Network'' THEN ''color: ''''#989779'''''' WHEN ''Other'' THEN ''color: ''''#F571A0'''''' " (CHAR)
DEFINE WAIT_CLASS_COLORS4_S = " WHEN ''Cluster'' THEN ''color: ''''#CEC3B5'''''' WHEN ''Queueing'' THEN ''color: ''''#C6BAA5'''''' END" (CHAR)
DEFINE SKIP_XML        = "" (CHAR)
DEFINE SKIP_TCH        = "Y" (CHAR)
DEFINE SKIP_UCH        = "Y" (CHAR)
DEFINE SKIP_SCH        = "Y" (CHAR)
DEFINE TREECOLOR       = "" (CHAR)
DEFINE BUBBLEMAXVALUE  = "" (CHAR)
DEFINE BUBBLESERIES    = "series: {'CPU': {color: '#34CF27'}, 'I/O': {color: '#0252D7'}, 'Concurrency': {color: '#871C12'}, 'Cluster': {color: '#CEC3B5'}, 'Other': {color: '#C6BAA5'}, 'Multiple': {color: '#CCFFFF'}}," (CHAR)
DEFINE BUBBLESDETAILS  = "" (CHAR)
DEFINE SQL_TEXT        = "" (CHAR)
DEFINE SQLD360_TIME_STAMP = "2020-11-06/16:53:18" (CHAR)
DEFINE NUM_PLANS       = "1" (CHAR)
DEFINE SQLD360_MAIN_REPORT_BCK = "00001_sqld360_323688_d1bmu84pdu6gx_index" (CHAR)
DEFINE NUM_BINDS       = "0" (CHAR)
DEFINE NUM_HISTOGRAMS  = "0" (CHAR)
DEFINE COLS_FROM_PART_TABLES = "0" (CHAR)
DEFINE PART_TABLES     = "0" (CHAR)
DEFINE TIT_01_AWR      = "0" (CHAR)
DEFINE TIT_02_AWR      = "" (CHAR)
DEFINE TIT_03_AWR      = "" (CHAR)
DEFINE TIT_04_AWR      = "" (CHAR)
DEFINE TIT_05_AWR      = "" (CHAR)
DEFINE TIT_06_AWR      = "" (CHAR)
DEFINE TIT_07_AWR      = "" (CHAR)
DEFINE TIT_08_AWR      = "" (CHAR)
DEFINE TIT_09_AWR      = "" (CHAR)
DEFINE TIT_10_AWR      = "" (CHAR)
DEFINE TIT_11_AWR      = "" (CHAR)
DEFINE TIT_12_AWR      = "" (CHAR)
DEFINE TIT_13_AWR      = "" (CHAR)
DEFINE TIT_14_AWR      = "" (CHAR)
DEFINE TIT_15_AWR      = "" (CHAR)
DEFINE PHV_01_AWR      =                    0 (NUMBER)
DEFINE PHV_02_AWR      =                   -1 (NUMBER)
DEFINE PHV_03_AWR      =                   -1 (NUMBER)
DEFINE PHV_04_AWR      =                   -1 (NUMBER)
DEFINE PHV_05_AWR      =                   -1 (NUMBER)
DEFINE PHV_06_AWR      =                   -1 (NUMBER)
DEFINE PHV_07_AWR      =                   -1 (NUMBER)
DEFINE PHV_08_AWR      =                   -1 (NUMBER)
DEFINE PHV_09_AWR      =                   -1 (NUMBER)
DEFINE PHV_10_AWR      =                   -1 (NUMBER)
DEFINE PHV_11_AWR      =                   -1 (NUMBER)
DEFINE PHV_12_AWR      =                   -1 (NUMBER)
DEFINE PHV_13_AWR      =                   -1 (NUMBER)
DEFINE PHV_14_AWR      =                   -1 (NUMBER)
DEFINE PHV_15_AWR      =                   -1 (NUMBER)
DEFINE PHV_01          =                    0 (NUMBER)
DEFINE PHV_02          =                   -1 (NUMBER)
DEFINE PHV_03          =                   -1 (NUMBER)
DEFINE PHV_04          =                   -1 (NUMBER)
DEFINE PHV_05          =                   -1 (NUMBER)
DEFINE PHV_06          =                   -1 (NUMBER)
DEFINE PHV_07          =                   -1 (NUMBER)
DEFINE PHV_08          =                   -1 (NUMBER)
DEFINE PHV_09          =                   -1 (NUMBER)
DEFINE PHV_10          =                   -1 (NUMBER)
DEFINE PHV_11          =                   -1 (NUMBER)
DEFINE PHV_12          =                   -1 (NUMBER)
DEFINE PHV_13          =                   -1 (NUMBER)
DEFINE PHV_14          =                   -1 (NUMBER)
DEFINE PHV_15          =                   -1 (NUMBER)
DEFINE 1               = "skip" (CHAR)
DEFINE 2               = "inst8sqld360_9a_pre_one.sql" (CHAR)
DEFINE 3               = "null" (CHAR)

end log
